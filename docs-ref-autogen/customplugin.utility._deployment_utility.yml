### YamlMime:ManagedReference
items:
  - uid: customplugin.utility._deployment_utility
    id: _deployment_utility
    parent: customplugin.utility
    children:
      - customplugin.utility._deployment_utility.build(String)
      - customplugin.utility._deployment_utility.clean(String)
      - 'customplugin.utility._deployment_utility.connect(IProject,String)'
      - 'customplugin.utility._deployment_utility.connect(String,String,String)'
      - customplugin.utility._deployment_utility.deploy(IProject)
      - customplugin.utility._deployment_utility.executeCommand(String)
      - 'customplugin.utility._deployment_utility.executeCommand(String,String)'
      - 'customplugin.utility._deployment_utility.executeCommand(String [])'
      - customplugin.utility._deployment_utility.getDeploymentProfileType(String)
      - customplugin.utility._deployment_utility.invokeWorkerThread(IRunnableWithProgress)
      - customplugin.utility._deployment_utility.rebuild(String)
      - customplugin.utility._deployment_utility.uninstall(IProject)
      - 'customplugin.utility._deployment_utility.writeToPluginConsole(String,String)'
    href: customplugin.utility._deployment_utility.yml
    langs:
      - java
    name: DeploymentUtility
    nameWithType: DeploymentUtility
    fullName: customplugin.utility.DeploymentUtility
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/DeploymentUtility.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/DeploymentUtility.java
      startLine: 26
    package: customplugin.utility
    summary: "<p>\r\n\r\n  <xref uid=\"customplugin.utility._utility\" data-throw-if-not-resolved=\"false\">Hilfsprogramm</xref> Klasse für die Bereitstellung Funktionen beziehen. </p>"
    syntax:
      content: public class DeploymentUtility
    inheritance:
      - java.lang.Object
  - uid: customplugin.utility._deployment_utility.build(String)
    id: build(String)
    parent: customplugin.utility._deployment_utility
    href: customplugin.utility._deployment_utility.yml
    langs:
      - java
    name: build(String projectDirPath)
    nameWithType: DeploymentUtility.build(String projectDirPath)
    fullName: static void customplugin.utility.DeploymentUtility.build(String projectDirPath)
    overload: customplugin.utility._deployment_utility.build*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/DeploymentUtility.java
      startLine: 122
    package: customplugin.utility
    summary: |-
      <p>Wenn Sie ein Projektverzeichnis an, diese mithilfe des Gradle erstellen</p>
      <p></p>
    syntax:
      content: public static void build(String projectDirPath)
      parameters:
        - id: projectDirPath
          type: '26831127'
  - uid: customplugin.utility._deployment_utility.clean(String)
    id: clean(String)
    parent: customplugin.utility._deployment_utility
    href: customplugin.utility._deployment_utility.yml
    langs:
      - java
    name: clean(String projectDirPath)
    nameWithType: DeploymentUtility.clean(String projectDirPath)
    fullName: static void customplugin.utility.DeploymentUtility.clean(String projectDirPath)
    overload: customplugin.utility._deployment_utility.clean*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/DeploymentUtility.java
      startLine: 131
    package: customplugin.utility
    summary: |-
      <p>Wenn Sie ein Projektverzeichnis ein, mit bereinigen</p>
      <p></p>
    syntax:
      content: public static void clean(String projectDirPath)
      parameters:
        - id: projectDirPath
          type: '26831127'
  - uid: 'customplugin.utility._deployment_utility.connect(IProject,String)'
    id: 'connect(IProject,String)'
    parent: customplugin.utility._deployment_utility
    href: customplugin.utility._deployment_utility.yml
    langs:
      - java
    name: 'connect(IProject project, String localOrCloudPublishProfileFilePath)'
    nameWithType: 'DeploymentUtility.connect(IProject project, String localOrCloudPublishProfileFilePath)'
    fullName: 'static void customplugin.utility.DeploymentUtility.connect(IProject project, String localOrCloudPublishProfileFilePath)'
    overload: customplugin.utility._deployment_utility.connect*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/DeploymentUtility.java
      startLine: 168
    package: customplugin.utility
    summary: |-
      <p>Wenn Sie einen Verweis auf eine Eclipse-Projekt und lokale und Cloud-Informationen, verbindet Lesevorgänge-Veröffentlichungsprofil Cluster.</p>
      <p></p>
    syntax:
      content: 'public static void connect(IProject project, String localOrCloudPublishProfileFilePath)'
      parameters:
        - id: project
          type: 1750ec8e
        - id: localOrCloudPublishProfileFilePath
          type: '26831127'
  - uid: 'customplugin.utility._deployment_utility.connect(String,String,String)'
    id: 'connect(String,String,String)'
    parent: customplugin.utility._deployment_utility
    href: customplugin.utility._deployment_utility.yml
    langs:
      - java
    name: 'connect(String scriptPath, String projDirPath, String localOrCloud)'
    nameWithType: 'DeploymentUtility.connect(String scriptPath, String projDirPath, String localOrCloud)'
    fullName: 'static void customplugin.utility.DeploymentUtility.connect(String scriptPath, String projDirPath, String localOrCloud)'
    overload: customplugin.utility._deployment_utility.connect*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/DeploymentUtility.java
      startLine: 228
    package: customplugin.utility
    summary: |-
      <p>Erhält eine Projektpfad, verbindet Informationen zu Skriptpfad und lokalen und Cloud Cluster</p>
      <p></p>
    syntax:
      content: 'public static void connect(String scriptPath, String projDirPath, String localOrCloud)'
      parameters:
        - id: scriptPath
          type: '26831127'
        - id: projDirPath
          type: '26831127'
        - id: localOrCloud
          type: '26831127'
  - uid: customplugin.utility._deployment_utility.deploy(IProject)
    id: deploy(IProject)
    parent: customplugin.utility._deployment_utility
    href: customplugin.utility._deployment_utility.yml
    langs:
      - java
    name: deploy(IProject project)
    nameWithType: DeploymentUtility.deploy(IProject project)
    fullName: static void customplugin.utility.DeploymentUtility.deploy(IProject project)
    overload: customplugin.utility._deployment_utility.deploy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/DeploymentUtility.java
      startLine: 263
    package: customplugin.utility
    summary: |-
      <p>Der angegebene einen Projektverweis stellt die Anwendung bereit</p>
      <p></p>
    syntax:
      content: public static void deploy(IProject project)
      parameters:
        - id: project
          type: 1750ec8e
  - uid: customplugin.utility._deployment_utility.executeCommand(String)
    id: executeCommand(String)
    parent: customplugin.utility._deployment_utility
    href: customplugin.utility._deployment_utility.yml
    langs:
      - java
    name: executeCommand(String command)
    nameWithType: DeploymentUtility.executeCommand(String command)
    fullName: static ShellOutput customplugin.utility.DeploymentUtility.executeCommand(String command)
    overload: customplugin.utility._deployment_utility.executeCommand*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/DeploymentUtility.java
      startLine: 56
    package: customplugin.utility
    summary: |-
      <p>Skript-Shellbefehl ausführen</p>
      <p></p>
    syntax:
      content: public static ShellOutput executeCommand(String command)
      parameters:
        - id: command
          type: '26831127'
          description: |-
            <p>

              <itemizedlist>

                <listitem>

                  <p>Zeichenfolge, die die Shellbefehl angibt. </p>

                </listitem>

              </itemizedlist>

            </p>
      return:
        type: customplugin.utility._shell_output
        description: "<p>\r\n\r\n  <xref uid=\"customplugin.utility._shell_output\" data-throw-if-not-resolved=\"false\">ShellOutput</xref>\r\n\r\n</p>"
  - uid: 'customplugin.utility._deployment_utility.executeCommand(String,String)'
    id: 'executeCommand(String,String)'
    parent: customplugin.utility._deployment_utility
    href: customplugin.utility._deployment_utility.yml
    langs:
      - java
    name: 'executeCommand(String command, String dirPath)'
    nameWithType: 'DeploymentUtility.executeCommand(String command, String dirPath)'
    fullName: 'static ShellOutput customplugin.utility.DeploymentUtility.executeCommand(String command, String dirPath)'
    overload: customplugin.utility._deployment_utility.executeCommand*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/DeploymentUtility.java
      startLine: 76
    package: customplugin.utility
    summary: |-
      <p>Führen Sie eine Shell-Skript-Befehl</p>
      <p></p>
    syntax:
      content: 'public static ShellOutput executeCommand(String command, String dirPath)'
      parameters:
        - id: command
          type: '26831127'
        - id: dirPath
          type: '26831127'
      return:
        type: customplugin.utility._shell_output
        description: "<p>\r\n\r\n  <xref uid=\"customplugin.utility._shell_output\" data-throw-if-not-resolved=\"false\">ShellOutput</xref>\r\n\r\n</p>"
  - uid: 'customplugin.utility._deployment_utility.executeCommand(String [])'
    id: 'executeCommand(String [])'
    parent: customplugin.utility._deployment_utility
    href: customplugin.utility._deployment_utility.yml
    langs:
      - java
    name: 'executeCommand(String[] commands)'
    nameWithType: 'DeploymentUtility.executeCommand(String[] commands)'
    fullName: 'static ShellOutput customplugin.utility.DeploymentUtility.executeCommand(String[] commands)'
    overload: customplugin.utility._deployment_utility.executeCommand*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/DeploymentUtility.java
      startLine: 36
    package: customplugin.utility
    summary: |-
      <p>Führen Sie die Liste der Shell-Befehle</p>
      <p></p>
    syntax:
      content: 'public static ShellOutput executeCommand(String[] commands)'
      parameters:
        - id: commands
          type: 1bb63ab0
          description: |-
            <p>

              <itemizedlist>

                <listitem>

                  <p>Liste von Zeichenfolgen, die die Liste der Befehle angeben </p>

                </listitem>

              </itemizedlist>

            </p>
      return:
        type: customplugin.utility._shell_output
        description: "<p>\r\n\r\n  <xref uid=\"customplugin.utility._shell_output\" data-throw-if-not-resolved=\"false\">ShellOutput</xref>\r\n\r\n</p>"
  - uid: customplugin.utility._deployment_utility.getDeploymentProfileType(String)
    id: getDeploymentProfileType(String)
    parent: customplugin.utility._deployment_utility
    href: customplugin.utility._deployment_utility.yml
    langs:
      - java
    name: getDeploymentProfileType(String targetProfile)
    nameWithType: DeploymentUtility.getDeploymentProfileType(String targetProfile)
    fullName: static DeploymentProfileType customplugin.utility.DeploymentUtility.getDeploymentProfileType(String targetProfile)
    overload: customplugin.utility._deployment_utility.getDeploymentProfileType*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/DeploymentUtility.java
      startLine: 316
    package: customplugin.utility
    summary: |-
      <p>Gibt zurück, wenn das Zielprofil der <xref uid="customplugin.utility._deployment_profile_type" data-throw-if-not-resolved="false">DeploymentProfileType</xref></p>
      <p></p>
    syntax:
      content: public static DeploymentProfileType getDeploymentProfileType(String targetProfile)
      parameters:
        - id: targetProfile
          type: '26831127'
      return:
        type: customplugin.utility._deployment_profile_type
        description: "<p>\r\n\r\n  <xref uid=\"customplugin.utility._deployment_profile_type\" data-throw-if-not-resolved=\"false\">DeploymentProfileType</xref>\r\n\r\n</p>"
  - uid: customplugin.utility._deployment_utility.invokeWorkerThread(IRunnableWithProgress)
    id: invokeWorkerThread(IRunnableWithProgress)
    parent: customplugin.utility._deployment_utility
    href: customplugin.utility._deployment_utility.yml
    langs:
      - java
    name: invokeWorkerThread(IRunnableWithProgress worker)
    nameWithType: DeploymentUtility.invokeWorkerThread(IRunnableWithProgress worker)
    fullName: static void customplugin.utility.DeploymentUtility.invokeWorkerThread(IRunnableWithProgress worker)
    overload: customplugin.utility._deployment_utility.invokeWorkerThread*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/DeploymentUtility.java
      startLine: 334
    package: customplugin.utility
    summary: |-
      <p>Ruft die Eingabe Arbeitsthread, die für den Build, bereitstellen usw..</p>
      <p></p>
    syntax:
      content: public static void invokeWorkerThread(IRunnableWithProgress worker)
      parameters:
        - id: worker
          type: da9a4aad
          description: <p>Thread. </p>
  - uid: customplugin.utility._deployment_utility.rebuild(String)
    id: rebuild(String)
    parent: customplugin.utility._deployment_utility
    href: customplugin.utility._deployment_utility.yml
    langs:
      - java
    name: rebuild(String projectDirPath)
    nameWithType: DeploymentUtility.rebuild(String projectDirPath)
    fullName: static void customplugin.utility.DeploymentUtility.rebuild(String projectDirPath)
    overload: customplugin.utility._deployment_utility.rebuild*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/DeploymentUtility.java
      startLine: 140
    package: customplugin.utility
    summary: |-
      <p>Wenn Sie ein Projektverzeichnis an, diese mithilfe des Gradle erstellen</p>
      <p></p>
    syntax:
      content: public static void rebuild(String projectDirPath)
      parameters:
        - id: projectDirPath
          type: '26831127'
  - uid: customplugin.utility._deployment_utility.uninstall(IProject)
    id: uninstall(IProject)
    parent: customplugin.utility._deployment_utility
    href: customplugin.utility._deployment_utility.yml
    langs:
      - java
    name: uninstall(IProject project)
    nameWithType: DeploymentUtility.uninstall(IProject project)
    fullName: static void customplugin.utility.DeploymentUtility.uninstall(IProject project)
    overload: customplugin.utility._deployment_utility.uninstall*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/DeploymentUtility.java
      startLine: 289
    package: customplugin.utility
    summary: |-
      <p>Der angegebene ein Projekt-Verweis deinstalliert die Anwendung</p>
      <p></p>
    syntax:
      content: public static void uninstall(IProject project)
      parameters:
        - id: project
          type: 1750ec8e
  - uid: 'customplugin.utility._deployment_utility.writeToPluginConsole(String,String)'
    id: 'writeToPluginConsole(String,String)'
    parent: customplugin.utility._deployment_utility
    href: customplugin.utility._deployment_utility.yml
    langs:
      - java
    name: 'writeToPluginConsole(String consoleName, String thingsToPrint)'
    nameWithType: 'DeploymentUtility.writeToPluginConsole(String consoleName, String thingsToPrint)'
    fullName: 'static void customplugin.utility.DeploymentUtility.writeToPluginConsole(String consoleName, String thingsToPrint)'
    overload: customplugin.utility._deployment_utility.writeToPluginConsole*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/eclipseplugin/customplugin/src/customplugin/utility/DeploymentUtility.java
      startLine: 110
    package: customplugin.utility
    summary: |-
      <p>Wenn eine Konsole und eine Zeichenfolge zu schreiben, wird es die Zeichenfolge in dieser Konsole geschrieben.</p>
      <p></p>
    syntax:
      content: 'public static void writeToPluginConsole(String consoleName, String thingsToPrint)'
      parameters:
        - id: consoleName
          type: '26831127'
          description: |-
            <p>

              <itemizedlist>

                <listitem>

                  <p>Gibt den Namen der Konsole </p>

                </listitem>

              </itemizedlist>

            </p>
        - id: thingsToPrint
          type: '26831127'
          description: |-
            <p>

              <itemizedlist>

                <listitem>

                  <p>Gibt das Element/Zeichenfolge, die gedruckt werden soll </p>

                </listitem>

              </itemizedlist>

            </p>
references:
  - uid: 1bb63ab0
    spec.java:
      - name: 'String []'
        fullName: 'String []'
  - uid: customplugin.utility._deployment_utility.executeCommand*
    name: executeCommand
    nameWithType: DeploymentUtility.executeCommand
    fullName: static ShellOutput customplugin.utility.DeploymentUtility.executeCommand
    package: customplugin.utility
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: customplugin.utility._deployment_utility.writeToPluginConsole*
    name: writeToPluginConsole
    nameWithType: DeploymentUtility.writeToPluginConsole
    fullName: static void customplugin.utility.DeploymentUtility.writeToPluginConsole
    package: customplugin.utility
  - uid: customplugin.utility._deployment_utility.build*
    name: build
    nameWithType: DeploymentUtility.build
    fullName: static void customplugin.utility.DeploymentUtility.build
    package: customplugin.utility
  - uid: customplugin.utility._deployment_utility.clean*
    name: clean
    nameWithType: DeploymentUtility.clean
    fullName: static void customplugin.utility.DeploymentUtility.clean
    package: customplugin.utility
  - uid: customplugin.utility._deployment_utility.rebuild*
    name: rebuild
    nameWithType: DeploymentUtility.rebuild
    fullName: static void customplugin.utility.DeploymentUtility.rebuild
    package: customplugin.utility
  - uid: 1750ec8e
    spec.java:
      - name: IProject
        fullName: IProject
  - uid: customplugin.utility._deployment_utility.connect*
    name: connect
    nameWithType: DeploymentUtility.connect
    fullName: static void customplugin.utility.DeploymentUtility.connect
    package: customplugin.utility
  - uid: customplugin.utility._deployment_utility.deploy*
    name: deploy
    nameWithType: DeploymentUtility.deploy
    fullName: static void customplugin.utility.DeploymentUtility.deploy
    package: customplugin.utility
  - uid: customplugin.utility._deployment_utility.uninstall*
    name: uninstall
    nameWithType: DeploymentUtility.uninstall
    fullName: static void customplugin.utility.DeploymentUtility.uninstall
    package: customplugin.utility
  - uid: customplugin.utility._deployment_utility.getDeploymentProfileType*
    name: getDeploymentProfileType
    nameWithType: DeploymentUtility.getDeploymentProfileType
    fullName: static DeploymentProfileType customplugin.utility.DeploymentUtility.getDeploymentProfileType
    package: customplugin.utility
  - uid: da9a4aad
    spec.java:
      - name: IRunnableWithProgress
        fullName: IRunnableWithProgress
  - uid: customplugin.utility._deployment_utility.invokeWorkerThread*
    name: invokeWorkerThread
    nameWithType: DeploymentUtility.invokeWorkerThread
    fullName: static void customplugin.utility.DeploymentUtility.invokeWorkerThread
    package: customplugin.utility
  - uid: customplugin.utility._shell_output
    parent: customplugin.utility
    href: customplugin.utility._shell_output.yml
    name: ShellOutput
    nameWithType: ShellOutput
    fullName: customplugin.utility.ShellOutput
    type: Class
    syntax:
      content: public class ShellOutput
  - uid: customplugin.utility._deployment_profile_type
    parent: customplugin.utility
    href: customplugin.utility._deployment_profile_type.yml
    name: DeploymentProfileType
    nameWithType: DeploymentProfileType
    fullName: customplugin.utility.DeploymentProfileType
    type: Enum
    syntax:
      content: public enum DeploymentProfileType
  - uid: customplugin.utility._utility
    parent: customplugin.utility
    href: customplugin.utility._utility.yml
    name: Utility
    nameWithType: Utility
    fullName: customplugin.utility.Utility
    type: Class
    summary: "<p>\r\n\r\n  <xref uid=\"customplugin.utility._utility\" data-throw-if-not-resolved=\"false\">Hilfsprogramm</xref> -Klasse Eclipse-Plug-in Hilfsprogrammmethoden beziehen.</p>\n\n<p></p>"
    syntax:
      content: public class Utility