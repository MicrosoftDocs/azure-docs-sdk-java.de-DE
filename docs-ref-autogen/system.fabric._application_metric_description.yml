### YamlMime:ManagedReference
items:
  - uid: system.fabric._application_metric_description
    id: _application_metric_description
    parent: system.fabric
    children:
      - system.fabric._application_metric_description.ApplicationMetricDescription()
      - system.fabric._application_metric_description.getMaximumNodeCapacity()
      - system.fabric._application_metric_description.getName()
      - system.fabric._application_metric_description.getNodeReservationCapacity()
      - system.fabric._application_metric_description.getTotalApplicationCapacity()
      - system.fabric._application_metric_description.setMaximumNodeCapacity(long)
      - system.fabric._application_metric_description.setName(String)
      - system.fabric._application_metric_description.setNodeReservationCapacity(long)
      - system.fabric._application_metric_description.setTotalApplicationCapacity(long)
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: ApplicationMetricDescription
    nameWithType: ApplicationMetricDescription
    fullName: system.fabric.ApplicationMetricDescription
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 8
    package: system.fabric
    summary: <p>Gibt die Anwendungskapazität für eine Metrik an. <xref uid="system.fabric._application_description" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref><xref uid="system.fabric._application_update_description" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription</xref></p>
    syntax: &ref_1
      content: public class ApplicationMetricDescription
    inheritance:
      - java.lang.Object
  - uid: system.fabric._application_metric_description.ApplicationMetricDescription()
    id: ApplicationMetricDescription()
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: ApplicationMetricDescription()
    nameWithType: ApplicationMetricDescription.ApplicationMetricDescription()
    fullName: system.fabric.ApplicationMetricDescription.ApplicationMetricDescription()
    overload: system.fabric._application_metric_description.ApplicationMetricDescription*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 18
    package: system.fabric
    syntax:
      content: public ApplicationMetricDescription()
  - uid: system.fabric._application_metric_description.getMaximumNodeCapacity()
    id: getMaximumNodeCapacity()
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: getMaximumNodeCapacity()
    nameWithType: ApplicationMetricDescription.getMaximumNodeCapacity()
    fullName: long system.fabric.ApplicationMetricDescription.getMaximumNodeCapacity()
    overload: system.fabric._application_metric_description.getMaximumNodeCapacity*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 116
    package: system.fabric
    summary: |-
      <p>Ruft die maximale Knotenkapazität für Service Fabric-Anwendung ab.</p>
      <p>
      Beim Erstellen einer neuen Anwendung mit der Anwendungskapazität definiert, des Produkts der <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> und dieser Wert muss immer kleiner als oder gleich <xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false"> system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>. </p>
      <p>Beim Aktualisieren der vorhandenen Anwendung mit Anwendungskapazität, das Produkt der <xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref> und dieser Wert muss immer kleiner als oder gleich <xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false"> system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>. </p>
    syntax: &ref_2
      content: public long getMaximumNodeCapacity()
      return:
        type: 0364520f
        description: '<p>Gibt die maximale Last für eine Instanz dieser Anwendung auf einem einzelnen Knoten. Auch wenn die Kapazität des Knotens größer als dieser Wert ist, wird Service Fabric die Gesamtlast der Dienste in der Anwendung auf jedem Knoten mit diesem Wert beschränkt. Wenn auf NULL gesetzt, Kapazität für die Metrik auf jedem Knoten unbegrenzt ist. </p>'
  - uid: system.fabric._application_metric_description.getName()
    id: getName()
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: getName()
    nameWithType: ApplicationMetricDescription.getName()
    fullName: String system.fabric.ApplicationMetricDescription.getName()
    overload: system.fabric._application_metric_description.getName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 41
    package: system.fabric
    summary: |-
      <p>Ruft den Namen der Metrik.</p>
      <p></p>
    syntax:
      content: public String getName()
      return:
        type: '26831127'
        description: <p>Der Name der Metrik. </p>
  - uid: system.fabric._application_metric_description.getNodeReservationCapacity()
    id: getNodeReservationCapacity()
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: getNodeReservationCapacity()
    nameWithType: ApplicationMetricDescription.getNodeReservationCapacity()
    fullName: long system.fabric.ApplicationMetricDescription.getNodeReservationCapacity()
    overload: system.fabric._application_metric_description.getNodeReservationCapacity*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 72
    package: system.fabric
    summary: |-
      <p>Ruft die Reservierung Knotenkapazität für Service Fabric-Anwendung ab.</p>
      <p>
      Beim Festlegen der Anwendungskapazität (<xref uid="system.fabric._application_description" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref>) oder beim Aktualisieren der Anwendungskapazität (( <xref uid="system.fabric._application_update_description" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription</xref>) dieser Wert muss kleiner sein. als oder gleich <xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref> für jede Metrik. </p>
    syntax:
      content: public long getNodeReservationCapacity()
      return:
        type: 0364520f
        description: '<p>Gibt die Menge der Metrik laden, wodurch die reserviert ist in Knoten, die Instanzen dieser Anwendung verfügen. Wenn <xref uid="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMinimumNodes()</xref> angegeben wird, wird das Produkt dieser Werte die Kapazität für die Anwendung im Cluster reserviert wird. Wenn auf NULL gesetzt, keine Kapazität für die Metrik reserviert ist. </p>'
  - uid: system.fabric._application_metric_description.getTotalApplicationCapacity()
    id: getTotalApplicationCapacity()
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: getTotalApplicationCapacity()
    nameWithType: ApplicationMetricDescription.getTotalApplicationCapacity()
    fullName: long system.fabric.ApplicationMetricDescription.getTotalApplicationCapacity()
    overload: system.fabric._application_metric_description.getTotalApplicationCapacity*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 164
    package: system.fabric
    summary: |-
      <p>Ruft die Metrik Gesamtkapazität für Service Fabric-Anwendung ab.</p>
      <p>
      Beim Erstellen einer neuen Anwendung mit der Anwendungskapazität definiert, des Produkts der <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> und <xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription# getMaximumNodeCapacity()</xref> muss immer kleiner oder gleich diesem Wert sein. </p>
      <p>Beim Erstellen einer neuen Anwendung mit der Anwendungskapazität definiert, des Produkts der <xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref> und <xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription# getMaximumNodeCapacity()</xref> muss immer kleiner oder gleich diesem Wert sein. </p>
    syntax: &ref_3
      content: public long getTotalApplicationCapacity()
      return:
        type: 0364520f
        description: '<p>Gibt die Gesamtkapazität Metrik für diese Anwendung im Cluster an. Service Fabric versucht, die die Summe der verschiedener Dienste in der Anwendung auf diesen Wert zu beschränken. </p>'
  - uid: system.fabric._application_metric_description.setMaximumNodeCapacity(long)
    id: setMaximumNodeCapacity(long)
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: setMaximumNodeCapacity(long maximumNodeCapacity)
    nameWithType: ApplicationMetricDescription.setMaximumNodeCapacity(long maximumNodeCapacity)
    fullName: void system.fabric.ApplicationMetricDescription.setMaximumNodeCapacity(long maximumNodeCapacity)
    overload: system.fabric._application_metric_description.setMaximumNodeCapacity*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 141
    package: system.fabric
    summary: |-
      <p>Legt die maximale Knotenkapazität für Service Fabric-Anwendung fest.</p>
      <p>
      Beim Erstellen einer neuen Anwendung mit der Anwendungskapazität definiert, des Produkts der <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> und dieser Wert muss immer kleiner als oder gleich <xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false"> system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>. </p>
      <p>Beim Aktualisieren der vorhandenen Anwendung mit Anwendungskapazität, das Produkt der <xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref> und dieser Wert muss immer kleiner als oder gleich <xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false"> system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>. </p>
    syntax:
      content: public void setMaximumNodeCapacity(long maximumNodeCapacity)
      parameters:
        - id: maximumNodeCapacity
          type: 0364520f
          description: '<p>Gibt die maximale Last für eine Instanz dieser Anwendung auf einem einzelnen Knoten. Auch wenn die Kapazität des Knotens größer als dieser Wert ist, wird Service Fabric die Gesamtlast der Dienste in der Anwendung auf jedem Knoten mit diesem Wert beschränkt. Wenn auf NULL gesetzt, Kapazität für die Metrik auf jedem Knoten unbegrenzt ist. </p>'
  - uid: system.fabric._application_metric_description.setName(String)
    id: setName(String)
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: setName(String name)
    nameWithType: ApplicationMetricDescription.setName(String name)
    fullName: void system.fabric.ApplicationMetricDescription.setName(String name)
    overload: system.fabric._application_metric_description.setName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 51
    package: system.fabric
    summary: |-
      <p>Legt den Namen der Metrik.</p>
      <p></p>
    syntax:
      content: public void setName(String name)
      parameters:
        - id: name
          type: '26831127'
          description: <p>Der Name der Metrik. </p>
  - uid: system.fabric._application_metric_description.setNodeReservationCapacity(long)
    id: setNodeReservationCapacity(long)
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: setNodeReservationCapacity(long nodeReservationCapacity)
    nameWithType: ApplicationMetricDescription.setNodeReservationCapacity(long nodeReservationCapacity)
    fullName: void system.fabric.ApplicationMetricDescription.setNodeReservationCapacity(long nodeReservationCapacity)
    overload: system.fabric._application_metric_description.setNodeReservationCapacity*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 92
    package: system.fabric
    summary: |-
      <p>Ruft die Reservierung Knotenkapazität für Service Fabric-Anwendung ab.</p>
      <p>
      Beim Festlegen der Anwendungskapazität (<xref uid="system.fabric._application_description" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref>) oder beim Aktualisieren der Anwendungskapazität (( <xref uid="system.fabric._application_update_description" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription</xref>) dieser Wert muss kleiner sein. als oder gleich <xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription#getMaximumNodeCapacity()</xref> für jede Metrik. </p>
    syntax:
      content: public void setNodeReservationCapacity(long nodeReservationCapacity)
      parameters:
        - id: nodeReservationCapacity
          type: 0364520f
          description: '<p>Gibt die Menge der Metrik laden, wodurch die reserviert ist in Knoten, die Instanzen dieser Anwendung verfügen. Wenn <xref uid="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMinimumNodes()</xref> angegeben wird, wird das Produkt dieser Werte die Kapazität für die Anwendung im Cluster reserviert wird. Wenn auf NULL gesetzt, keine Kapazität für die Metrik reserviert ist. </p>'
  - uid: system.fabric._application_metric_description.setTotalApplicationCapacity(long)
    id: setTotalApplicationCapacity(long)
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    langs:
      - java
    name: setTotalApplicationCapacity(long totalApplicationCapacity)
    nameWithType: ApplicationMetricDescription.setTotalApplicationCapacity(long totalApplicationCapacity)
    fullName: void system.fabric.ApplicationMetricDescription.setTotalApplicationCapacity(long totalApplicationCapacity)
    overload: system.fabric._application_metric_description.setTotalApplicationCapacity*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationMetricDescription.java
      startLine: 188
    package: system.fabric
    summary: |-
      <p>Legt die Gesamtkapazität metrische für Service Fabric-Anwendung fest.</p>
      <p>
      Beim Erstellen einer neuen Anwendung mit der Anwendungskapazität definiert, des Produkts der <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> und <xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription# getMaximumNodeCapacity()</xref> muss immer kleiner oder gleich diesem Wert sein. </p>
      <p>Beim Erstellen einer neuen Anwendung mit der Anwendungskapazität definiert, des Produkts der <xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref> und <xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription# getMaximumNodeCapacity()</xref> muss immer kleiner oder gleich diesem Wert sein. </p>
    syntax:
      content: public void setTotalApplicationCapacity(long totalApplicationCapacity)
      parameters:
        - id: totalApplicationCapacity
          type: 0364520f
          description: '<p>Gibt die Gesamtkapazität Metrik für diese Anwendung im Cluster an. Service Fabric versucht, die die Summe der verschiedener Dienste in der Anwendung auf diesen Wert zu beschränken. </p>'
references:
  - uid: system.fabric._application_metric_description.ApplicationMetricDescription*
    name: ApplicationMetricDescription
    nameWithType: ApplicationMetricDescription.ApplicationMetricDescription
    fullName: system.fabric.ApplicationMetricDescription.ApplicationMetricDescription
    package: system.fabric
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric._application_metric_description.getName*
    name: getName
    nameWithType: ApplicationMetricDescription.getName
    fullName: String system.fabric.ApplicationMetricDescription.getName
    package: system.fabric
  - uid: system.fabric._application_metric_description.setName*
    name: setName
    nameWithType: ApplicationMetricDescription.setName
    fullName: void system.fabric.ApplicationMetricDescription.setName
    package: system.fabric
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._application_metric_description.getNodeReservationCapacity*
    name: getNodeReservationCapacity
    nameWithType: ApplicationMetricDescription.getNodeReservationCapacity
    fullName: long system.fabric.ApplicationMetricDescription.getNodeReservationCapacity
    package: system.fabric
  - uid: system.fabric._application_metric_description.setNodeReservationCapacity*
    name: setNodeReservationCapacity
    nameWithType: ApplicationMetricDescription.setNodeReservationCapacity
    fullName: void system.fabric.ApplicationMetricDescription.setNodeReservationCapacity
    package: system.fabric
  - uid: system.fabric._application_metric_description.getMaximumNodeCapacity*
    name: getMaximumNodeCapacity
    nameWithType: ApplicationMetricDescription.getMaximumNodeCapacity
    fullName: long system.fabric.ApplicationMetricDescription.getMaximumNodeCapacity
    package: system.fabric
  - uid: system.fabric._application_metric_description.setMaximumNodeCapacity*
    name: setMaximumNodeCapacity
    nameWithType: ApplicationMetricDescription.setMaximumNodeCapacity
    fullName: void system.fabric.ApplicationMetricDescription.setMaximumNodeCapacity
    package: system.fabric
  - uid: system.fabric._application_metric_description.getTotalApplicationCapacity*
    name: getTotalApplicationCapacity
    nameWithType: ApplicationMetricDescription.getTotalApplicationCapacity
    fullName: long system.fabric.ApplicationMetricDescription.getTotalApplicationCapacity
    package: system.fabric
  - uid: system.fabric._application_metric_description.setTotalApplicationCapacity*
    name: setTotalApplicationCapacity
    nameWithType: ApplicationMetricDescription.setTotalApplicationCapacity
    fullName: void system.fabric.ApplicationMetricDescription.setTotalApplicationCapacity
    package: system.fabric
  - uid: system.fabric._application_metric_description
    parent: system.fabric
    href: system.fabric._application_metric_description.yml
    name: ApplicationMetricDescription
    nameWithType: ApplicationMetricDescription
    fullName: system.fabric.ApplicationMetricDescription
    type: Class
    summary: <p>Gibt die Anwendungskapazität für eine Metrik an. <xref uid="system.fabric._application_description" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref><xref uid="system.fabric._application_update_description" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription</xref></p>
    syntax: *ref_1
  - uid: system.fabric._application_description.getMinimumNodes()
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    name: getMinimumNodes()
    nameWithType: ApplicationDescription.getMinimumNodes()
    fullName: long system.fabric.ApplicationDescription.getMinimumNodes()
    type: Method
    summary: |-
      <p>Ruft die minimale Anzahl von Knoten, auf dem Service Fabric-Kapazität für diese Anwendung reserviert wird.</p>
      <p></p>
    syntax:
      content: public long getMinimumNodes()
      return:
        type: 0364520f
        description: '<p>Anzahl der Knoten, auf dem Service Fabric Kapazität im Cluster für diese Anwendung platziert werden reservieren. Beachten Sie, dass dies nicht bedeutet, dass die Anwendung unbedingt Replikate für alle diese Knoten verfügen. Wenn dieser Parameter auf NULL gesetzt wird, wird keine Kapazität reserviert werden. Wenn dieser Parameter ist größer als <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> ein <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref> ausgelöst, wenn <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false"> system.fabric.ApplicationManagementClient#createApplicationAsync(ApplicationDescription)</xref> aufgerufen wird. </p>'
  - uid: system.fabric._application_description
    parent: system.fabric
    href: system.fabric._application_description.yml
    name: ApplicationDescription
    nameWithType: ApplicationDescription
    fullName: system.fabric.ApplicationDescription
    type: Class
    summary: '<p>Beschreibt eine Anwendung mit <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#createApplicationAsync(system.fabric.ApplicationDescription)</xref></p>'
    syntax:
      content: public class ApplicationDescription
  - uid: system.fabric._application_update_description
    parent: system.fabric
    href: system.fabric._application_update_description.yml
    name: ApplicationUpdateDescription
    nameWithType: ApplicationUpdateDescription
    fullName: system.fabric.ApplicationUpdateDescription
    type: Class
    summary: '<p>Beschreibt ein Update der Anwendungskapazität, die aktualisiert werden <xref uid="system.fabric._application_management_client.updateApplicationAsync(ApplicationUpdateDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#updateApplicationAsync(ApplicationUpdateDescription)</xref></p>'
    syntax:
      content: public class ApplicationUpdateDescription
  - uid: system.fabric._application_metric_description.getMaximumNodeCapacity()
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    name: getMaximumNodeCapacity()
    nameWithType: ApplicationMetricDescription.getMaximumNodeCapacity()
    fullName: long system.fabric.ApplicationMetricDescription.getMaximumNodeCapacity()
    type: Method
    summary: |-
      <p>Ruft die maximale Knotenkapazität für Service Fabric-Anwendung ab.</p>
      <p>
      Beim Erstellen einer neuen Anwendung mit der Anwendungskapazität definiert, des Produkts der <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> und dieser Wert muss immer kleiner als oder gleich <xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false"> system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>. </p>
      <p>Beim Aktualisieren der vorhandenen Anwendung mit Anwendungskapazität, das Produkt der <xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref> und dieser Wert muss immer kleiner als oder gleich <xref uid="system.fabric._application_metric_description.getTotalApplicationCapacity()" data-throw-if-not-resolved="false"> system.fabric.ApplicationMetricDescription#getTotalApplicationCapacity()</xref>. </p>
    syntax: *ref_2
  - uid: system.fabric._application_description.getMaximumNodes()
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    name: getMaximumNodes()
    nameWithType: ApplicationDescription.getMaximumNodes()
    fullName: long system.fabric.ApplicationDescription.getMaximumNodes()
    type: Method
    summary: |-
      <p>Ruft die maximale Anzahl von Knoten, in denen diese Anwendung instanziiert werden kann.</p>
      <p></p>
    syntax:
      content: public long getMaximumNodes()
      return:
        type: 0364520f
        description: '<p>Anzahl der Knoten, die diese Anwendung zulässig ist, umfassen. Der Standardwert lautet null. Ist er 0 (null), kann die Anwendung eine beliebige Anzahl von Knoten im Cluster umfassen. Wenn dieser Parameter kleiner als <xref uid="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMinimumNodes()</xref> ein <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref> ausgelöst, wenn <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false"> system.fabric.ApplicationManagementClient#createApplicationAsync(ApplicationDescription)</xref> aufgerufen wird. </p>'
  - uid: system.fabric._application_metric_description.getTotalApplicationCapacity()
    parent: system.fabric._application_metric_description
    href: system.fabric._application_metric_description.yml
    name: getTotalApplicationCapacity()
    nameWithType: ApplicationMetricDescription.getTotalApplicationCapacity()
    fullName: long system.fabric.ApplicationMetricDescription.getTotalApplicationCapacity()
    type: Method
    summary: |-
      <p>Ruft die Metrik Gesamtkapazität für Service Fabric-Anwendung ab.</p>
      <p>
      Beim Erstellen einer neuen Anwendung mit der Anwendungskapazität definiert, des Produkts der <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> und <xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription# getMaximumNodeCapacity()</xref> muss immer kleiner oder gleich diesem Wert sein. </p>
      <p>Beim Erstellen einer neuen Anwendung mit der Anwendungskapazität definiert, des Produkts der <xref uid="system.fabric._application_update_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription#getMaximumNodes()</xref> und <xref uid="system.fabric._application_metric_description.getMaximumNodeCapacity()" data-throw-if-not-resolved="false">system.fabric.ApplicationMetricDescription# getMaximumNodeCapacity()</xref> muss immer kleiner oder gleich diesem Wert sein. </p>
    syntax: *ref_3
  - uid: system.fabric._application_update_description.getMaximumNodes()
    parent: system.fabric._application_update_description
    href: system.fabric._application_update_description.yml
    name: getMaximumNodes()
    nameWithType: ApplicationUpdateDescription.getMaximumNodes()
    fullName: Long system.fabric.ApplicationUpdateDescription.getMaximumNodes()
    type: Method
    summary: |-
      <p>Ruft die maximale Anzahl von Knoten, in denen diese Anwendung instanziiert werden kann.</p>
      <p>
      Ist er 0 (null), kann die Anwendung auf eine beliebige Anzahl von Knoten im Cluster befinden. </p>
      <p>Wenn dieser Parameter nicht angegeben wird, wenn eine Anwendung zu aktualisieren, bleibt die maximale Anzahl von Knoten unverändert. </p>
      <p>Wenn dieser Parameter kleiner als <xref uid="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMinimumNodes()</xref> ein <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref> ausgelöst, wenn <xref uid="system.fabric._application_management_client.updateApplicationAsync(ApplicationUpdateDescription)" data-throw-if-not-resolved="false"> system.fabric.ApplicationManagementClient#updateApplicationAsync(ApplicationUpdateDescription)</xref> aufgerufen wird. </p>
    syntax:
      content: public Long getMaximumNodes()
      return:
        type: 34f09483
        description: '<p>Anzahl der Knoten, die diese Anwendung zulässig ist, umfassen. Der Standardwert lautet null. </p>'
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection