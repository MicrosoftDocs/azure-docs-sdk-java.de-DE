### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.eventprocessorhost._lease_lost_exception
    id: _lease_lost_exception
    parent: com.microsoft.azure.eventprocessorhost
    children:
      - com.microsoft.azure.eventprocessorhost._lease_lost_exception.getPartitionId()
    href: com.microsoft.azure.eventprocessorhost._lease_lost_exception.yml
    langs:
      - java
    name: LeaseLostException
    nameWithType: LeaseLostException
    fullName: com.microsoft.azure.eventprocessorhost.LeaseLostException
    type: Class
    source:
      remote: &ref_0
        path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/LeaseLostException.java
        branch: master
        repo: 'https://github.com/Azure/azure-event-hubs-java'
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/LeaseLostException.java
      startLine: 7
    package: com.microsoft.azure.eventprocessorhost
    syntax:
      content: public class LeaseLostException
    inheritance:
      - java.lang.Object
      - Exception
  - uid: com.microsoft.azure.eventprocessorhost._lease_lost_exception.getPartitionId()
    id: getPartitionId()
    parent: com.microsoft.azure.eventprocessorhost._lease_lost_exception
    href: com.microsoft.azure.eventprocessorhost._lease_lost_exception.yml
    langs:
      - java
    name: getPartitionId()
    nameWithType: LeaseLostException.getPartitionId()
    fullName: String com.microsoft.azure.eventprocessorhost.LeaseLostException.getPartitionId()
    overload: com.microsoft.azure.eventprocessorhost._lease_lost_exception.getPartitionId*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/LeaseLostException.java
      startLine: 20
    package: com.microsoft.azure.eventprocessorhost
    syntax:
      content: public String getPartitionId()
      return:
        type: '26831127'
references:
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.eventprocessorhost._lease_lost_exception.getPartitionId*
    name: getPartitionId
    nameWithType: LeaseLostException.getPartitionId
    fullName: String com.microsoft.azure.eventprocessorhost.LeaseLostException.getPartitionId
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    name: Lease
    nameWithType: Lease
    fullName: com.microsoft.azure.eventprocessorhost.Lease
    type: Class
    summary: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> Klasse ist öffentlich, sodass, dass Sie fortgeschrittene Benutzer implementieren können ein <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>. Es sei denn, Sie implementieren <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> sollten keine Objekte dieser Klasse zu verarbeiten oder abgeleiteten Klassen direkt. </p>\n\n<p>Bei der Implementierung einer <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> es möglicherweise erforderlich sein, leiten Sie von dieser Klasse ausführen, um weitere Informationen und IsExpired zu überschreiben. Die Datenfelder wurde verlassen haben anstelle von privaten geschützt werden, da sie ein breites Spektrum aufweisen der Getter und Setter (mit Ausnahme der PartitionId, das unveränderlich ist) die bieten einen gleichwertigen Zugriff. Wenn AzureBlobLease zu implementieren, z. B. gab es keine Notwendigkeit mehr Zugriff als der Getter und Setter bereitstellen. </p>\n<p>Beachten Sie, dass eine <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> Objekt enthält nur Informationen zu einer Partition Lease. Die entsprechende Funktionalität zum Abrufen/erneuern/Freigabe eine Lease ist alles auf der <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>. </p>"
    syntax:
      content: public class Lease