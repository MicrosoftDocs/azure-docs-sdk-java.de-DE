### YamlMime:ManagedReference
items:
  - uid: system.fabric._state_replicator
    id: _state_replicator
    parent: system.fabric
    children:
      - system.fabric._state_replicator.getCopyStream()
      - system.fabric._state_replicator.getReplicationStream()
      - 'system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)'
      - system.fabric._state_replicator.updateReplicatorSettings(ReplicatorSettings)
    href: system.fabric._state_replicator.yml
    langs:
      - java
    name: StateReplicator
    nameWithType: StateReplicator
    fullName: system.fabric.StateReplicator
    type: Interface
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/StateReplicator.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/StateReplicator.java
      startLine: 7
    package: system.fabric
    summary: '<p><span data-ttu-id="c75b7-101">Macht replikationsbezogener-Funktionen von der <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref> Klasse, mit denen <xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">StateProvider</xref> zum Replizieren von Zustand, um hohe Verfügbarkeit sicherzustellen.</span><span class="sxs-lookup"><span data-stu-id="c75b7-101">Exposes replication related functions of the <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref> class that are used by <xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">StateProvider</xref> to replicate state to ensure high availability.</span></span> </p>'
    syntax:
      content: public interface StateReplicator
  - uid: system.fabric._state_replicator.getCopyStream()
    id: getCopyStream()
    parent: system.fabric._state_replicator
    href: system.fabric._state_replicator.yml
    langs:
      - java
    name: getCopyStream()
    nameWithType: StateReplicator.getCopyStream()
    fullName: OperationStream system.fabric.StateReplicator.getCopyStream()
    overload: system.fabric._state_replicator.getCopyStream*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StateReplicator.java
      startLine: 27
    package: system.fabric
    summary: <p><span data-ttu-id="c75b7-102">Ruft kopieren stream</span><span class="sxs-lookup"><span data-stu-id="c75b7-102">Gets copy stream</span></span> </p>
    syntax:
      content: public OperationStream getCopyStream()
      return:
        type: system.fabric._operation_stream
        description: '<p><span data-ttu-id="c75b7-103">Enthält die zurückgegebene CopyStream <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> Objekten implementiert, <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Vorgang</xref>.</span><span class="sxs-lookup"><span data-stu-id="c75b7-103">The returned CopyStream contains <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects that implement <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref>.</span></span> <span data-ttu-id="c75b7-104">Die <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> -Objekte werden abgerufen, von der CopyState <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">OperationDataStream</xref> , die das primäre Replikat zurückgibt <xref uid="system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)" data-throw-if-not-resolved="false">StateProvider #GetCopyState(SequenceNumber, OperationDataStream)</xref>.</span><span class="sxs-lookup"><span data-stu-id="c75b7-104">The <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects are obtained from the CopyState <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">OperationDataStream</xref> that the Primary replica returns from <xref uid="system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)" data-throw-if-not-resolved="false">StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref>.</span></span> <span data-ttu-id="c75b7-105">Wenn ein Replikat erstellt und auf den aktuellen Stand ist, erhalten die CopyStream und sollte beginnen zu senden, anwenden und bestätigen das Kopieren von Objekten, die implementieren <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Vorgang</xref>.</span><span class="sxs-lookup"><span data-stu-id="c75b7-105">When a replica is created and has to catch up, it should obtain the CopyStream and begin to send, apply, and acknowledge the Copy objects that implement <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref>.</span></span> <span data-ttu-id="c75b7-106">Parallel, reagiert das Replikat auf den entsprechenden <xref uid="system.fabric._state_provider.getCopyContext()" data-throw-if-not-resolved="false">StateProvider#getCopyContext()</xref> und <xref uid="" data-throw-if-not-resolved="false">OperationDataStream#getNextAsync(CancellationToken)</xref>aufrufen.</span><span class="sxs-lookup"><span data-stu-id="c75b7-106">In parallel, the replica responds to the corresponding <xref uid="system.fabric._state_provider.getCopyContext()" data-throw-if-not-resolved="false">StateProvider#getCopyContext()</xref> and <xref uid="" data-throw-if-not-resolved="false">OperationDataStream#getNextAsync(CancellationToken)</xref>calls.</span></span> <span data-ttu-id="c75b7-107">Der Datenstrom ist leer, wenn das zurückgegebene <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Vorgang</xref> Methode ist null.</span><span class="sxs-lookup"><span data-stu-id="c75b7-107">The stream is empty when the returned <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref> method is null.</span></span> </p>'
  - uid: system.fabric._state_replicator.getReplicationStream()
    id: getReplicationStream()
    parent: system.fabric._state_replicator
    href: system.fabric._state_replicator.yml
    langs:
      - java
    name: getReplicationStream()
    nameWithType: StateReplicator.getReplicationStream()
    fullName: OperationStream system.fabric.StateReplicator.getReplicationStream()
    overload: system.fabric._state_replicator.getReplicationStream*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StateReplicator.java
      startLine: 34
    package: system.fabric
    summary: <p><span data-ttu-id="c75b7-108">Ruft die replikationsdatenstrom ab.</span><span class="sxs-lookup"><span data-stu-id="c75b7-108">Gets replication stream.</span></span> </p>
    syntax:
      content: public OperationStream getReplicationStream()
      return:
        type: system.fabric._operation_stream
        description: '<p><span data-ttu-id="c75b7-109">Implementiert die ReplicationStream <xref uid="system.fabric._operation_stream" data-throw-if-not-resolved="false">OperationStream</xref>.</span><span class="sxs-lookup"><span data-stu-id="c75b7-109">The ReplicationStream implements <xref uid="system.fabric._operation_stream" data-throw-if-not-resolved="false">OperationStream</xref>.</span></span> <span data-ttu-id="c75b7-110">Enthält die ReplicationStream <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> Objekten implementiert, <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Vorgang</xref>.</span><span class="sxs-lookup"><span data-stu-id="c75b7-110">The ReplicationStream contains <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects that implement <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref>.</span></span> <span data-ttu-id="c75b7-111">Die Objekte werden vom primären Replikat über bereitgestellt <xref uid="system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)" data-throw-if-not-resolved="false">StateReplicator #ReplicateAsync(OperationData, SequenceNumber, CancellationToken)</xref>.</span><span class="sxs-lookup"><span data-stu-id="c75b7-111">The objects are provided by the Primary replica via <xref uid="system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)" data-throw-if-not-resolved="false">StateReplicator#replicateAsync(OperationData, SequenceNumber, CancellationToken)</xref>.</span></span> <span data-ttu-id="c75b7-112">Im Allgemeinen sollte ein sekundäres Replikat senden <xref uid="" data-throw-if-not-resolved="false">OperationStream#getOperationAsync(CancellationToken)</xref>.</span><span class="sxs-lookup"><span data-stu-id="c75b7-112">Generally a Secondary replica should send <xref uid="" data-throw-if-not-resolved="false">OperationStream#getOperationAsync(CancellationToken)</xref>.</span></span> <span data-ttu-id="c75b7-113">Service Fabric Services dazu nicht notwendig, in der Regel Dienste sollten alle übertragen <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> Objekten aus der Kopie zuerst zu streamen, übertragen und dann Vorgänge aus dem replikationsdatenstrom.</span><span class="sxs-lookup"><span data-stu-id="c75b7-113">Although Service Fabric does not require services to do so, generally services should transfer all <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects out of the copy stream first, and then transfer operations out of the replication stream.</span></span> <span data-ttu-id="c75b7-114">Die Übertragung von beide Kopien parallel wird unterstützt, aber erhöht die Komplexität des Anwendens der Zustand ordnungsgemäß aktualisiert und wird nur für erweiterte Dienste empfohlen.</span><span class="sxs-lookup"><span data-stu-id="c75b7-114">The transfer from both copies in parallel is supported but increases the complexity of applying state updates correctly and is recommended only for advanced services.</span></span> <span data-ttu-id="c75b7-115">Der Datenstrom ist leer, wenn das zurückgegebene <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Vorgang</xref> Methode ist null.</span><span class="sxs-lookup"><span data-stu-id="c75b7-115">The stream is empty when the returned <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref> method is null.</span></span> </p>'
  - uid: 'system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)'
    id: 'replicateAsync(OperationData,SequenceNumber,CancellationToken)'
    parent: system.fabric._state_replicator
    href: system.fabric._state_replicator.yml
    langs:
      - java
    name: 'replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)'
    nameWithType: 'StateReplicator.replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<SequenceNumber> system.fabric.StateReplicator.replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)'
    overload: system.fabric._state_replicator.replicateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StateReplicator.java
      startLine: 16
    package: system.fabric
    summary: '<p><span data-ttu-id="c75b7-116">Zustandsänderungen aus dem primären Replikat an die sekundären Replikate repliziert und empfängt eine Quorum-Bestätigung, dass diese Änderungen angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="c75b7-116">Replicates state changes from Primary replica to the Secondary replicas and receives a quorum acknowledgement that those state changes have been applied.</span></span> </p>'
    syntax: &ref_1
      content: 'public CompletableFuture<SequenceNumber> replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)'
      parameters:
        - id: operationData
          type: system.fabric._operation_data
          description: '<p><span data-ttu-id="c75b7-117">Stellt die Änderung des Zustands, die das primäre Replikat repliziert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="c75b7-117">Represents the state change that the Primary replica wants to replicate.</span></span> </p>'
        - id: sequenceNumber
          type: system.fabric._sequence_number
          description: '<p><span data-ttu-id="c75b7-118">Lange, die LSN des Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="c75b7-118">Long, the LSN of the operation.</span></span> <span data-ttu-id="c75b7-119">Beachten Sie, dass dies der gleiche Wert zurückgegeben, von der Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="c75b7-119">Note that this is the same value which is returned by the task.</span></span> <span data-ttu-id="c75b7-120">Bereitstellen als Out-Parameter ist nützlich für Dienste, die vorzubereitenden lokalen Schreibzugriffs auf übertragen, wenn die Aufgabe abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="c75b7-120">Providing it as an out parameter is useful for services which want to prepare the local write to commit when the task finishes.</span></span> </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: '<p><span data-ttu-id="c75b7-121">Ein Schreibvorgang Quorum der Replikate, die verloren gegangen sein.</span><span class="sxs-lookup"><span data-stu-id="c75b7-121">A write quorum of replicas that have been lost.</span></span> <span data-ttu-id="c75b7-122">Es kann verwendet werden, um eine Benachrichtigung zu senden, dass der Vorgang abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="c75b7-122">It can be used to send a notification that the operation should be canceled.</span></span> <span data-ttu-id="c75b7-123">Beachten Sie, dass der Abbruch advisory ist und weiterhin der Vorgang abgeschlossen werden kann, selbst wenn er abgebrochen wird.</span><span class="sxs-lookup"><span data-stu-id="c75b7-123">Note that cancellation is advisory and that the operation might still be completed even if it is canceled.</span></span> </p>'
      return:
        type: 9cdf14d0system.fabric._sequence_numbera08ddfce
        description: '<p><span data-ttu-id="c75b7-124">Gibt die completable Zukunft vom Typ long, die LSN des Vorgangs zurück.</span><span class="sxs-lookup"><span data-stu-id="c75b7-124">Returns completable future of type long, the LSN of the operation.</span></span> </p>'
  - uid: system.fabric._state_replicator.updateReplicatorSettings(ReplicatorSettings)
    id: updateReplicatorSettings(ReplicatorSettings)
    parent: system.fabric._state_replicator
    href: system.fabric._state_replicator.yml
    langs:
      - java
    name: updateReplicatorSettings(ReplicatorSettings settings)
    nameWithType: StateReplicator.updateReplicatorSettings(ReplicatorSettings settings)
    fullName: void system.fabric.StateReplicator.updateReplicatorSettings(ReplicatorSettings settings)
    overload: system.fabric._state_replicator.updateReplicatorSettings*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StateReplicator.java
      startLine: 40
    package: system.fabric
    summary: '<p><span data-ttu-id="c75b7-125">Ermöglicht die Änderung der Replikator Einstellungen während der Laufzeit.</span><span class="sxs-lookup"><span data-stu-id="c75b7-125">Enables modification of replicator settings during runtime.</span></span> <span data-ttu-id="c75b7-126">Die einzige Einstellung, die geändert werden kann, ist die Sicherheitsanmeldeinformationen.</span><span class="sxs-lookup"><span data-stu-id="c75b7-126">The only setting which can be modified is the security credentials.</span></span> </p>'
    syntax:
      content: public void updateReplicatorSettings(ReplicatorSettings settings)
      parameters:
        - id: settings
          type: system.fabric._replicator_settings
          description: <p><span data-ttu-id="c75b7-127">Die neue <xref uid="system.fabric._replicator_settings" data-throw-if-not-resolved="false">ReplicatorSettings</xref> mit Anmeldeinformationen aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="c75b7-127">The new <xref uid="system.fabric._replicator_settings" data-throw-if-not-resolved="false">ReplicatorSettings</xref> with updated credentials.</span></span> </p>
references:
  - uid: 9cdf14d0system.fabric._sequence_numbera08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric._sequence_number
        name: SequenceNumber
        fullName: system.fabric.SequenceNumber
        href: system.fabric._sequence_number.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._state_replicator.replicateAsync*
    name: replicateAsync
    nameWithType: StateReplicator.replicateAsync
    fullName: CompletableFuture<SequenceNumber> system.fabric.StateReplicator.replicateAsync
    package: system.fabric
  - uid: system.fabric._state_replicator.getCopyStream*
    name: getCopyStream
    nameWithType: StateReplicator.getCopyStream
    fullName: OperationStream system.fabric.StateReplicator.getCopyStream
    package: system.fabric
  - uid: system.fabric._state_replicator.getReplicationStream*
    name: getReplicationStream
    nameWithType: StateReplicator.getReplicationStream
    fullName: OperationStream system.fabric.StateReplicator.getReplicationStream
    package: system.fabric
  - uid: system.fabric._state_replicator.updateReplicatorSettings*
    name: updateReplicatorSettings
    nameWithType: StateReplicator.updateReplicatorSettings
    fullName: void system.fabric.StateReplicator.updateReplicatorSettings
    package: system.fabric
  - uid: system.fabric._state_replicator2
    parent: system.fabric
    href: system.fabric._state_replicator2.yml
    name: StateReplicator2
    nameWithType: StateReplicator2
    fullName: system.fabric.StateReplicator2
    type: Interface
    summary: '<p><span data-ttu-id="c75b7-128">Macht Funktionen im Zusammenhang mit Replikation, von der <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref> Klasse, mit denen <xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">system.fabric.StateProvider</xref> zum Replizieren von Zustand, um hohe Verfügbarkeit sicherzustellen.</span><span class="sxs-lookup"><span data-stu-id="c75b7-128">Exposes replication-related functions of the <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref> class that are used by <xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">system.fabric.StateProvider</xref> to replicate state to ensure high availability.</span></span> </p>'
    syntax:
      content: public interface StateReplicator2
  - uid: system.fabric._sequence_number
    parent: system.fabric
    href: system.fabric._sequence_number.yml
    name: SequenceNumber
    nameWithType: SequenceNumber
    fullName: system.fabric.SequenceNumber
    type: Class
    syntax:
      content: public class SequenceNumber
  - uid: system.fabric._operation_data
    parent: system.fabric
    href: system.fabric._operation_data.yml
    name: OperationData
    nameWithType: OperationData
    fullName: system.fabric.OperationData
    type: Class
    syntax:
      content: public class OperationData
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p><span data-ttu-id="c75b7-129">Ein <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> wird verwendet, um die Benachrichtigung verteilt wird, dass Vorgänge abgebrochen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="c75b7-129">A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> is used to propagate notification that operations should be canceled.</span></span> <span data-ttu-id="c75b7-130">Sie erstellen ein Abbruchtoken, das durch die Instanziierung einer <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> -Objekt, das Abbruchtoken verwaltet entnommen seine <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken() </xref> Methode.</span><span class="sxs-lookup"><span data-stu-id="c75b7-130">You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method.</span></span> <span data-ttu-id="c75b7-131">Übergeben Sie dann das Abbruchtoken, das auf eine beliebige Anzahl von Vorgängen, die Nachricht vom Abbruch erhalten soll.</span><span class="sxs-lookup"><span data-stu-id="c75b7-131">You then pass the cancellation token to any number of operations that should receive notice of cancellation.</span></span> <span data-ttu-id="c75b7-132">Das Token kann nicht verwendet werden, um den Abbruch zu initiieren.</span><span class="sxs-lookup"><span data-stu-id="c75b7-132">The token cannot be used to initiate cancellation.</span></span> <span data-ttu-id="c75b7-133">Wenn das besitzende Objekt aufruft <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, auf das Abbruchtoken, das die abgebrochene Eigenschaft festgelegt ist auf "true".</span><span class="sxs-lookup"><span data-stu-id="c75b7-133">When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true.</span></span> <span data-ttu-id="c75b7-134">Die Objekte, die die Benachrichtigung empfangen können Antworten Verfolgungsinformationen geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="c75b7-134">The objects that receive the notification can respond in whatever manner is appropriate.</span></span> </p>'
    syntax:
      content: public class CancellationToken
  - uid: system.fabric._operation_stream
    parent: system.fabric
    href: system.fabric._operation_stream.yml
    name: OperationStream
    nameWithType: OperationStream
    fullName: system.fabric.OperationStream
    type: Interface
    syntax:
      content: public interface OperationStream
  - uid: system.fabric._operation
    parent: system.fabric
    href: system.fabric._operation.yml
    name: Operation
    nameWithType: Operation
    fullName: system.fabric.Operation
    type: Interface
    summary: "<p><span data-ttu-id=\"c75b7-135\">\r\n\r\n  <b>Hinweise:</b>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> ist die Basisschnittstelle, die Änderungen beschreibt, die an ein sekundäres Replikat übermittelt werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-135\">\r\n\r\n  <b>Remarks:</b>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> is the base interface that describes state changes that are delivered to a Secondary replica.</span></span> <span data-ttu-id=\"c75b7-136\">Sie enthalten die <xref uid=\"system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#replicateAsync (OperationData SequenceNumber, system.fabric.CancellationToken)</xref> und identifizieren Sie die Sequenznummer und andere Informationen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-136\">They contain the <xref uid=\"system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#replicateAsync(OperationData, SequenceNumber, system.fabric.CancellationToken)</xref> and the sequence number and other identifying information.</span></span> </p>"
    syntax:
      content: public interface Operation
  - uid: system.fabric._operation_data_stream
    parent: system.fabric
    href: system.fabric._operation_data_stream.yml
    name: OperationDataStream
    nameWithType: OperationDataStream
    fullName: system.fabric.OperationDataStream
    type: Interface
    syntax:
      content: public interface OperationDataStream
  - uid: 'system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)'
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    name: 'getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    nameWithType: 'StateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    fullName: 'OperationDataStream system.fabric.StateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    type: Method
    summary: "<p><span data-ttu-id=\"c75b7-137\">Ruft die Status für ein primäres Replikat, das erforderlich sind, um ein sekundäres Replikat zu erstellen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-137\">Obtains state on a Primary replica that is required to build a Secondary replica.</span></span></p>\n<p><span data-ttu-id=\"c75b7-138\">\r\n\r\n  <b>Hinweise:</b>genauso <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> ermöglicht das sekundäre Replikat das primäre Replikat über Kontext an ein <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>, <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState (SequenceNumber, OperationDataStream)</xref> ermöglicht das primäre Replikat antwortet ein <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-138\">\r\n\r\n  <b>Remarks:</b>Just as <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> enables the Secondary replica to send context to the Primary replica via an <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>, <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> enables the Primary replica to respond with an <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>.</span></span> <span data-ttu-id=\"c75b7-139\">Der Datenstrom enthält Objekte, die an das sekundäre Replikat über übermittelt werden die <xref uid=\"system.fabric._state_replicator.getCopyStream()\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#getCopyStream()</xref> Methode der <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> Klasse.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-139\">The stream contains objects that are delivered to the Secondary replica via the <xref uid=\"system.fabric._state_replicator.getCopyStream()\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#getCopyStream()</xref> method of the <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> class.</span></span> <span data-ttu-id=\"c75b7-140\">Implementieren Sie die Objekte <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> und die angegebenen Daten enthalten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-140\">The objects implement <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> and contain the specified data.</span></span> <span data-ttu-id=\"c75b7-141\">Wenn das primäre Replikat dieser Aufruf empfängt, sollte er erstellen und Zurückgeben einer anderen <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref> enthält <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-141\">When the Primary replica receives this call, it should create and return another <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref> that contains <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref>.</span></span> <span data-ttu-id=\"c75b7-142\"><xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> des datensynchronisierungsstatus darstellt, die das sekundäre Replikat</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-142\"><xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> represents the data/state that the Secondary replica</span></span> </p>"
    syntax:
      content: 'public OperationDataStream getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
      parameters:
        - id: upToSequenceNumber
          type: system.fabric._sequence_number
          description: '<p><span data-ttu-id="c75b7-143">Die maximale letzte Sequenznummer (LSN), die im Stream über Kopiervorgang platziert werden, sollten die <xref uid="system.fabric._state_replicator.getCopyStream()" data-throw-if-not-resolved="false">system.fabric.StateReplicator#getCopyStream()</xref> Methode.</span><span class="sxs-lookup"><span data-stu-id="c75b7-143">The maximum last sequence number (LSN) that should be placed in the copy stream via the <xref uid="system.fabric._state_replicator.getCopyStream()" data-throw-if-not-resolved="false">system.fabric.StateReplicator#getCopyStream()</xref> method.</span></span> <span data-ttu-id="c75b7-144">LSNs, die größer als diese Zahl werden an das sekundäre Replikat als Teil der replikationsdatenstrom über übermittelt die <xref uid="system.fabric._state_replicator.getReplicationStream()" data-throw-if-not-resolved="false">system.fabric.StateReplicator#getReplicationStream()</xref> Methode.</span><span class="sxs-lookup"><span data-stu-id="c75b7-144">LSNs greater than this number are delivered to the Secondary replica as a part of the replication stream via the <xref uid="system.fabric._state_replicator.getReplicationStream()" data-throw-if-not-resolved="false">system.fabric.StateReplicator#getReplicationStream()</xref> method.</span></span> </p>'
        - id: copyContext
          type: system.fabric._operation_data_stream
          description: '<p><span data-ttu-id="c75b7-145">Ein <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref> , enthält die <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">system.fabric.OperationData</xref> Objekte, die vom sekundären Replikat erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="c75b7-145">An <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref> that contains the <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">system.fabric.OperationData</xref> objects that are created by the Secondary replica.</span></span> <span data-ttu-id="c75b7-146">erfordert die Stand</span><span class="sxs-lookup"><span data-stu-id="c75b7-146">requires to catch up to the provided</span></span> </p>'
      return:
        type: system.fabric._operation_data_stream
        description: <p><span data-ttu-id="c75b7-147">Gibt <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref>.</span><span class="sxs-lookup"><span data-stu-id="c75b7-147">Returns <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref>.</span></span> </p>
  - uid: system.fabric._state_provider.getCopyContext()
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    name: getCopyContext()
    nameWithType: StateProvider.getCopyContext()
    fullName: OperationDataStream system.fabric.StateProvider.getCopyContext()
    type: Method
    summary: "<p><span data-ttu-id=\"c75b7-148\">Kontext auf einem sekundären Replikat erhält, nachdem es erstellt und geöffnet, um den Kontext mit dem primären Replikat zu senden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-148\">Obtains context on a Secondary replica after it is created and opened to send context to the Primary replica.</span></span></p>\n<p><span data-ttu-id=\"c75b7-149\">\r\n\r\n  <b>Hinweise:</b>das primäre Replikat analysiert den Kontext und zurücksendet Status über <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState (SequenceNumber, OperationDataStream)</xref> .</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-149\">\r\n\r\n  <b>Remarks:</b>The Primary replica analyzes the context and sends back state via <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> .</span></span> <span data-ttu-id=\"c75b7-150\"><xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> für neu erstellte im Leerlauf sekundären Replikate aufgerufen wird, und bietet einen Mechanismus zum asynchron eine bidirektionale Konversation mit dem primären Replikat hergestellt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-150\"><xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> is called on newly created, idle Secondary replicas and provides a mechanism to asynchronously establish a bidirectional conversation with the Primary replica.</span></span> <span data-ttu-id=\"c75b7-151\">Das sekundäre Replikat sendet <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> Objekte, die mit dem das primäre Replikat den Status des Sammelns von Kontext auf dem sekundären Replikat bestimmen kann.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-151\">The Secondary replica sends <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> objects with which the Primary replica can determine the progress of collecting context on the Secondary replica.</span></span> <span data-ttu-id=\"c75b7-152\">Das primäre Replikat sendet seinerseits den erforderlichen Zustand zurück.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-152\">The Primary replica responds by sending the required state back.</span></span> <span data-ttu-id=\"c75b7-153\">Finden Sie unter <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState (SequenceNumber, OperationDataStream)</xref> an das primäre Replikat für die andere Hälfte des Austausches.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-153\">See <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> at the Primary replica for the other half of the exchange.</span></span> <span data-ttu-id=\"c75b7-154\">Für InMemory-Dienste die <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> Methode wird nicht aufgerufen, da der Status der sekundären Replikate bekannt ist (sie sind leer und benötigen alle Status).</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-154\">For in-memory services, the <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> method is not called, as the state of the Secondary replicas is known (they are empty and will require all of the state).</span></span> </p>"
    syntax:
      content: public OperationDataStream getCopyContext()
      return:
        type: system.fabric._operation_data_stream
        description: <p><span data-ttu-id="c75b7-155">Gibt <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref>.</span><span class="sxs-lookup"><span data-stu-id="c75b7-155">Returns <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref>.</span></span> </p>
  - uid: 'system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)'
    parent: system.fabric._state_replicator
    href: system.fabric._state_replicator.yml
    name: 'replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)'
    nameWithType: 'StateReplicator.replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<SequenceNumber> system.fabric.StateReplicator.replicateAsync(OperationData operationData, SequenceNumber sequenceNumber, CancellationToken cancellationToken)'
    type: Method
    summary: '<p><span data-ttu-id="c75b7-156">Zustandsänderungen aus dem primären Replikat an die sekundären Replikate repliziert und empfängt eine Quorum-Bestätigung, dass diese Änderungen angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="c75b7-156">Replicates state changes from Primary replica to the Secondary replicas and receives a quorum acknowledgement that those state changes have been applied.</span></span> </p>'
    syntax: *ref_1
  - uid: system.fabric._replicator_settings
    parent: system.fabric
    href: system.fabric._replicator_settings.yml
    name: ReplicatorSettings
    nameWithType: ReplicatorSettings
    fullName: system.fabric.ReplicatorSettings
    type: Class
    syntax:
      content: public class ReplicatorSettings
  - uid: system.fabric._fabric_replicator
    parent: system.fabric
    href: system.fabric._fabric_replicator.yml
    name: FabricReplicator
    nameWithType: FabricReplicator
    fullName: system.fabric.FabricReplicator
    type: Class
    summary: "<p><span data-ttu-id=\"c75b7-157\">Repliziert den Status für hohe Verfügbarkeit und Zuverlässigkeit.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-157\">Replicates state for high availability and reliability.</span></span> </p>\n<p><span data-ttu-id=\"c75b7-158\">\r\n\r\n  <b>Hinweise:</b>stellt die Standardimplementierung von der <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>, <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator</xref>, und <xref uid=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.PrimaryReplicator </xref> Schnittstellen, die Benutzerdienste werden, zusammen mit ihrer Implementierung von verwendet können der <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref> Schnittstelle.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-158\">\r\n\r\n  <b>Remarks:</b>Provides the default implementation of the <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>, <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator</xref>, and <xref uid=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.PrimaryReplicator</xref> interfaces, which user services can use, along with their implementation of the <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref> interface.</span></span> <span data-ttu-id=\"c75b7-159\">Eine Instanz von der <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> Klasse abgerufen wird, über die <xref uid=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServicePartition#createReplicator (system.fabric.StateProvider, system.fabric.ReplicatorSettings) </xref> -Methode, die in umgewandelt werden kann <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> für die Verwendung.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c75b7-159\">An instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> class is obtained via the <xref uid=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServicePartition#createReplicator( system.fabric.StateProvider, system.fabric.ReplicatorSettings)</xref> method, which can be cast to <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> for use.</span></span> </p>"
    syntax:
      content: public class FabricReplicator implements Replicator
  - uid: system.fabric._state_provider
    parent: system.fabric
    href: system.fabric._state_provider.yml
    name: StateProvider
    nameWithType: StateProvider
    fullName: system.fabric.StateProvider
    type: Interface
    summary: '<p><span data-ttu-id="c75b7-160">Definiert das Verhalten, das ein Dienst implementieren muss, um die Interaktion mit der <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>.</span><span class="sxs-lookup"><span data-stu-id="c75b7-160">Defines the behavior that a service must implement to interact with the <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>.</span></span> </p>'
    syntax:
      content: public interface StateProvider