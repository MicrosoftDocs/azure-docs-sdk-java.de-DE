### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.datalake.store._utils
    id: _utils
    parent: com.microsoft.azure.datalake.store
    children:
      - 'com.microsoft.azure.datalake.store._utils.upload(String,byte [],IfExists)'
      - 'com.microsoft.azure.datalake.store._utils.upload(String,InputStream,IfExists)'
      - 'com.microsoft.azure.datalake.store._utils.upload(String,String,IfExists)'
    href: com.microsoft.azure.datalake.store._utils.yml
    langs:
      - java
    name: Utils
    nameWithType: Utils
    fullName: com.microsoft.azure.datalake.store.Utils
    type: Class
    source:
      remote: &ref_0
        path: src/main/java/com/microsoft/azure/datalake/store/Utils.java
        branch: master
        repo: 'https://github.com/azure/azure-data-lake-store-java'
      path: src/main/java/com/microsoft/azure/datalake/store/Utils.java
      startLine: 19
    package: com.microsoft.azure.datalake.store
    summary: |-
      <p><span data-ttu-id="a1670-101">Hilfsmethoden Einzeiler für einfache Funktionen zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="a1670-101">Utility methods to enable one-liners for simple functionality.</span></span></p>
      <p><span data-ttu-id="a1670-102">Die Methoden basieren auf Aufrufen der SDK-Methoden, diese sind nur Hilfsmethoden für allgemeine Aufgaben.</span><span class="sxs-lookup"><span data-stu-id="a1670-102">The methods are all based on calls to the SDK methods, these are just convenience methods for common tasks.</span></span> </p>
    syntax:
      content: public class Utils
    inheritance:
      - java.lang.Object
  - uid: 'com.microsoft.azure.datalake.store._utils.upload(String,byte [],IfExists)'
    id: 'upload(String,byte [],IfExists)'
    parent: com.microsoft.azure.datalake.store._utils
    href: com.microsoft.azure.datalake.store._utils.yml
    langs:
      - java
    name: 'upload(String filename, byte[] contents, IfExists mode)'
    nameWithType: 'Utils.upload(String filename, byte[] contents, IfExists mode)'
    fullName: 'void com.microsoft.azure.datalake.store.Utils.upload(String filename, byte[] contents, IfExists mode)'
    overload: com.microsoft.azure.datalake.store._utils.upload*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/Utils.java
      startLine: 81
    package: com.microsoft.azure.datalake.store
    summary: |-
      <p><span data-ttu-id="a1670-103">Lädt den Inhalt des Bytearrays in einer Azure Data Lake-Datei hoch.</span><span class="sxs-lookup"><span data-stu-id="a1670-103">Uploads the contents of byte array to an Azure Data Lake file.</span></span></p>
      <p></p>
    syntax:
      content: 'public void upload(String filename, byte[] contents, IfExists mode)'
      parameters:
        - id: filename
          type: '26831127'
          description: <p><span data-ttu-id="a1670-104">Pfad der Datei zum Hochladen auf</span><span class="sxs-lookup"><span data-stu-id="a1670-104">path of file to upload to</span></span> </p>
        - id: contents
          type: ccd9418d
          description: '<p><span data-ttu-id="a1670-105">Byte-Array mit den Bytes, hochladen</span><span class="sxs-lookup"><span data-stu-id="a1670-105">byte array containing the bytes to upload</span></span> </p>'
        - id: mode
          type: com.microsoft.azure.datalake.store._if_exists
          description: "<p><span data-ttu-id=\"a1670-106\">\r\n\r\n  <xref uid=\"com.microsoft.azure.datalake.store._if_exists\" data-throw-if-not-resolved=\"false\">IfExists</xref> \r\n\r\n  <code>enum \r\n\r\n    </code> angeben, ob Speicherschlüssel oder löst eine Ausnahme aus, wenn die Datei bereits vorhanden ist.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a1670-106\">\r\n\r\n  <xref uid=\"com.microsoft.azure.datalake.store._if_exists\" data-throw-if-not-resolved=\"false\">IfExists</xref>\r\n\r\n  <code>enum \r\n\r\n    </code> specifying whether to overwite or throw an exception if the file already exists</span></span> </p>"
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="a1670-107">Bei einem Fehler ausgelöst</span><span class="sxs-lookup"><span data-stu-id="a1670-107">thrown on error</span></span> </p>
  - uid: 'com.microsoft.azure.datalake.store._utils.upload(String,InputStream,IfExists)'
    id: 'upload(String,InputStream,IfExists)'
    parent: com.microsoft.azure.datalake.store._utils
    href: com.microsoft.azure.datalake.store._utils.yml
    langs:
      - java
    name: 'upload(String filename, InputStream in, IfExists mode)'
    nameWithType: 'Utils.upload(String filename, InputStream in, IfExists mode)'
    fullName: 'void com.microsoft.azure.datalake.store.Utils.upload(String filename, InputStream in, IfExists mode)'
    overload: com.microsoft.azure.datalake.store._utils.upload*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/Utils.java
      startLine: 54
    package: com.microsoft.azure.datalake.store
    summary: |-
      <p><span data-ttu-id="a1670-108">Hochladen einer <xref uid="" data-throw-if-not-resolved="false">InputStream</xref> in einer Azure Data Lake-Datei.</span><span class="sxs-lookup"><span data-stu-id="a1670-108">Uploads an <xref uid="" data-throw-if-not-resolved="false">InputStream</xref> to an Azure Data Lake file.</span></span></p>
      <p></p>
    syntax:
      content: 'public void upload(String filename, InputStream in, IfExists mode)'
      parameters:
        - id: filename
          type: '26831127'
          description: <p><span data-ttu-id="a1670-109">Pfad der Datei zum Hochladen auf</span><span class="sxs-lookup"><span data-stu-id="a1670-109">path of file to upload to</span></span> </p>
        - id: in
          type: 76fcb9b7
          description: "<p><span data-ttu-id=\"a1670-110\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">InputStream</xref> , deren Inhalt hochgeladen werden</span><span class=\"sxs-lookup\"><span data-stu-id=\"a1670-110\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">InputStream</xref> whose contents will be uploaded</span></span> </p>"
        - id: mode
          type: com.microsoft.azure.datalake.store._if_exists
          description: "<p><span data-ttu-id=\"a1670-111\">\r\n\r\n  <xref uid=\"com.microsoft.azure.datalake.store._if_exists\" data-throw-if-not-resolved=\"false\">IfExists</xref> \r\n\r\n  <code>enum \r\n\r\n    </code> angeben, ob Speicherschlüssel oder löst eine Ausnahme aus, wenn die Datei bereits vorhanden ist.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a1670-111\">\r\n\r\n  <xref uid=\"com.microsoft.azure.datalake.store._if_exists\" data-throw-if-not-resolved=\"false\">IfExists</xref>\r\n\r\n  <code>enum \r\n\r\n    </code> specifying whether to overwite or throw an exception if the file already exists</span></span> </p>"
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="a1670-112">Bei einem Fehler ausgelöst</span><span class="sxs-lookup"><span data-stu-id="a1670-112">thrown on error</span></span> </p>
  - uid: 'com.microsoft.azure.datalake.store._utils.upload(String,String,IfExists)'
    id: 'upload(String,String,IfExists)'
    parent: com.microsoft.azure.datalake.store._utils
    href: com.microsoft.azure.datalake.store._utils.yml
    langs:
      - java
    name: 'upload(String filename, String localFilename, IfExists mode)'
    nameWithType: 'Utils.upload(String filename, String localFilename, IfExists mode)'
    fullName: 'void com.microsoft.azure.datalake.store.Utils.upload(String filename, String localFilename, IfExists mode)'
    overload: com.microsoft.azure.datalake.store._utils.upload*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/Utils.java
      startLine: 36
    package: com.microsoft.azure.datalake.store
    summary: |-
      <p><span data-ttu-id="a1670-113">Lädt den Inhalt einer lokalen Datei in eine Azure Data Lake-Datei hoch.</span><span class="sxs-lookup"><span data-stu-id="a1670-113">Uploads the contents of a local file to an Azure Data Lake file.</span></span></p>
      <p></p>
    syntax:
      content: 'public void upload(String filename, String localFilename, IfExists mode)'
      parameters:
        - id: filename
          type: '26831127'
          description: <p><span data-ttu-id="a1670-114">Pfad der Datei zum Hochladen auf</span><span class="sxs-lookup"><span data-stu-id="a1670-114">path of file to upload to</span></span> </p>
        - id: localFilename
          type: '26831127'
          description: <p><span data-ttu-id="a1670-115">Pfad einer lokalen Datei</span><span class="sxs-lookup"><span data-stu-id="a1670-115">path to local file</span></span> </p>
        - id: mode
          type: com.microsoft.azure.datalake.store._if_exists
          description: "<p><span data-ttu-id=\"a1670-116\">\r\n\r\n  <xref uid=\"com.microsoft.azure.datalake.store._if_exists\" data-throw-if-not-resolved=\"false\">IfExists</xref> \r\n\r\n  <code>enum \r\n\r\n    </code> angeben, ob Speicherschlüssel oder löst eine Ausnahme aus, wenn die Datei bereits vorhanden ist.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a1670-116\">\r\n\r\n  <xref uid=\"com.microsoft.azure.datalake.store._if_exists\" data-throw-if-not-resolved=\"false\">IfExists</xref>\r\n\r\n  <code>enum \r\n\r\n    </code> specifying whether to overwite or throw an exception if the file already exists</span></span> </p>"
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="a1670-117">Bei einem Fehler ausgelöst</span><span class="sxs-lookup"><span data-stu-id="a1670-117">thrown on error</span></span> </p>
references:
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.datalake.store._utils.upload*
    name: upload
    nameWithType: Utils.upload
    fullName: void com.microsoft.azure.datalake.store.Utils.upload
    package: com.microsoft.azure.datalake.store
  - uid: 76fcb9b7
    spec.java:
      - name: InputStream
        fullName: InputStream
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: com.microsoft.azure.datalake.store._a_d_l_store_client
    parent: com.microsoft.azure.datalake.store
    href: com.microsoft.azure.datalake.store._a_d_l_store_client.yml
    name: ADLStoreClient
    nameWithType: ADLStoreClient
    fullName: com.microsoft.azure.datalake.store.ADLStoreClient
    type: Class
    summary: "<p><span data-ttu-id=\"a1670-118\">\r\n\r\n  <code>ADLStoreClient \r\n\r\n    </code>Klasse stellt einen Client für Azure Data Lake dar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a1670-118\">\r\n\r\n  <code>ADLStoreClient \r\n\r\n    </code> class represents a client to Azure Data Lake.</span></span> <span data-ttu-id=\"a1670-119\">Es kann zum Ausführen von Operationen für Dateien und Verzeichnisse verwendet werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"a1670-119\">It can be used to perform operations on files and directories.</span></span> </p>"
    syntax:
      content: public class ADLStoreClient
  - uid: com.microsoft.azure.datalake.store._if_exists
    parent: com.microsoft.azure.datalake.store
    href: com.microsoft.azure.datalake.store._if_exists.yml
    name: IfExists
    nameWithType: IfExists
    fullName: com.microsoft.azure.datalake.store.IfExists
    type: Enum
    summary: '<p><span data-ttu-id="a1670-120">Enum angeben Aktionen an, wenn bei dem Versuch, eine Datei erstellen, die bereits vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="a1670-120">Enum specifying actions to take if attempting to create a file that already exists.</span></span> </p>'
    syntax:
      content: public enum IfExists