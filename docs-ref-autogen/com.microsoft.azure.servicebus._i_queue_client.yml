### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.servicebus._i_queue_client
    id: _i_queue_client
    parent: com.microsoft.azure.servicebus
    children:
      - com.microsoft.azure.servicebus._i_queue_client.getQueueName()
      - com.microsoft.azure.servicebus._i_queue_client.getReceiveMode()
    href: com.microsoft.azure.servicebus._i_queue_client.yml
    langs:
      - java
    name: IQueueClient
    nameWithType: IQueueClient
    fullName: com.microsoft.azure.servicebus.IQueueClient
    type: Interface
    source:
      remote: &ref_0
        path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IQueueClient.java
        branch: master
        repo: 'https://github.com/Azure/azure-service-bus-java'
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IQueueClient.java
      startLine: 8
    package: com.microsoft.azure.servicebus
    summary: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._queue_client\" data-throw-if-not-resolved=\"false\">QueueClient</xref> für alle grundlegenden Interaktionen mit Service Bus-Warteschlange verwendet werden kann. </p>"
    syntax:
      content: 'public interface IQueueClient extends IMessageSender,IMessageEntityClient'
    inheritedMembers:
      - com.microsoft.azure.servicebus._i_message_and_session_pump.abandon(UUID)
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.abandon(UUID,Map<String, Object>)'
      - com.microsoft.azure.servicebus._i_message_and_session_pump.abandonAsync(UUID)
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.abandonAsync(UUID,Map<String, Object>)'
      - com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessage(long)
      - com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessageAsync(long)
      - com.microsoft.azure.servicebus._i_closeable.close()
      - com.microsoft.azure.servicebus._i_closeable.closeAsync()
      - com.microsoft.azure.servicebus._i_message_and_session_pump.complete(UUID)
      - com.microsoft.azure.servicebus._i_message_and_session_pump.completeAsync(UUID)
      - com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetter(UUID)
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetter(UUID,Map<String, Object>)'
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetter(UUID,String,String)'
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetter(UUID,String,String,Map<String, Object>)'
      - com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetterAsync(UUID)
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetterAsync(UUID,Map<String, Object>)'
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetterAsync(UUID,String,String)'
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetterAsync(UUID,String,String,Map<String, Object>)'
      - com.microsoft.azure.servicebus._i_message_entity_client.getEntityPath()
      - com.microsoft.azure.servicebus._i_message_and_session_pump.getPrefetchCount()
      - com.microsoft.azure.servicebus._i_message_and_session_pump.registerMessageHandler(IMessageHandler)
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.registerMessageHandler(IMessageHandler,MessageHandlerOptions)'
      - com.microsoft.azure.servicebus._i_message_and_session_pump.registerSessionHandler(ISessionHandler)
      - 'com.microsoft.azure.servicebus._i_message_and_session_pump.registerSessionHandler(ISessionHandler,SessionHandlerOptions)'
      - 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessage(IMessage,Instant)'
      - 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessageAsync(IMessage,Instant)'
      - com.microsoft.azure.servicebus._i_message_sender.send(IMessage)
      - com.microsoft.azure.servicebus._i_message_sender.sendAsync(IMessage)
      - com.microsoft.azure.servicebus._i_message_sender.sendBatch(Collection<? extends IMessage>)
      - com.microsoft.azure.servicebus._i_message_sender.sendBatchAsync(Collection<? extends IMessage>)
      - com.microsoft.azure.servicebus._i_message_and_session_pump.setPrefetchCount(int)
  - uid: com.microsoft.azure.servicebus._i_queue_client.getQueueName()
    id: getQueueName()
    parent: com.microsoft.azure.servicebus._i_queue_client
    href: com.microsoft.azure.servicebus._i_queue_client.yml
    langs:
      - java
    name: getQueueName()
    nameWithType: IQueueClient.getQueueName()
    fullName: String com.microsoft.azure.servicebus.IQueueClient.getQueueName()
    overload: com.microsoft.azure.servicebus._i_queue_client.getQueueName*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IQueueClient.java
      startLine: 22
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Ruft den Namen der Warteschlange ab.</p>
      <p></p>
    syntax:
      content: public String getQueueName()
      return:
        type: '26831127'
        description: <p>Der Name der Warteschlange. </p>
  - uid: com.microsoft.azure.servicebus._i_queue_client.getReceiveMode()
    id: getReceiveMode()
    parent: com.microsoft.azure.servicebus._i_queue_client
    href: com.microsoft.azure.servicebus._i_queue_client.yml
    langs:
      - java
    name: getReceiveMode()
    nameWithType: IQueueClient.getReceiveMode()
    fullName: ReceiveMode com.microsoft.azure.servicebus.IQueueClient.getReceiveMode()
    overload: com.microsoft.azure.servicebus._i_queue_client.getReceiveMode*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IQueueClient.java
      startLine: 15
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Ruft die <xref uid="com.microsoft.azure.servicebus._receive_mode" data-throw-if-not-resolved="false">ReceiveMode</xref> des aktuellen Empfängers</p>
      <p></p>
    syntax:
      content: public ReceiveMode getReceiveMode()
      return:
        type: com.microsoft.azure.servicebus._receive_mode
        description: <p>Der Receive-Modus. </p>
references:
  - uid: com.microsoft.azure.servicebus._i_queue_client.getReceiveMode*
    name: getReceiveMode
    nameWithType: IQueueClient.getReceiveMode
    fullName: ReceiveMode com.microsoft.azure.servicebus.IQueueClient.getReceiveMode
    package: com.microsoft.azure.servicebus
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.servicebus._i_queue_client.getQueueName*
    name: getQueueName
    nameWithType: IQueueClient.getQueueName
    fullName: String com.microsoft.azure.servicebus.IQueueClient.getQueueName
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.abandon(UUID)
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.abandon(UUID,Map<String, Object>)'
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.abandonAsync(UUID)
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.abandonAsync(UUID,Map<String, Object>)'
  - uid: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessage(long)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: cancelScheduledMessage(long sequenceNumber)
    nameWithType: IMessageSender.cancelScheduledMessage(long sequenceNumber)
    fullName: void com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessage(long sequenceNumber)
    type: Method
    summary: |-
      <p>Bricht das Einreihen einer bereits gesendeten geplante Nachricht ab, wenn es nicht bereits in die Warteschlange eingereihten war. Diese Methode blockiert, bis die Nachricht, auf die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: public void cancelScheduledMessage(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p>Sequenznummer der Nachricht geplante </p>
  - uid: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessageAsync(long)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: cancelScheduledMessageAsync(long sequenceNumber)
    nameWithType: IMessageSender.cancelScheduledMessageAsync(long sequenceNumber)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessageAsync(long sequenceNumber)
    type: Method
    summary: |-
      <p>Bricht das Einreihen einer bereits gesendeten geplante Nachricht ab, wenn es nicht bereits in die Warteschlange eingereihten war. Dies ist eine asynchrone Methode, die Rückgabe einer CompletableFuture die abgeschlossen wird, wenn die Nachricht abgebrochen wird.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> cancelScheduledMessageAsync(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p>Sequenznummer der Nachricht geplante </p>
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die den ausstehenden Abbruch darstellt. </p>'
  - uid: com.microsoft.azure.servicebus._i_closeable.close()
    parent: com.microsoft.azure.servicebus._i_closeable
    href: com.microsoft.azure.servicebus._i_closeable.yml
    name: close()
    nameWithType: ICloseable.close()
    fullName: void com.microsoft.azure.servicebus.ICloseable.close()
    type: Method
    summary: '<p>Synchron wird geschlossen, und gibt diesem Objekt zugeordneten Ressourcen frei. Beim Aufrufen dieser Methode entspricht der aufrufen. Diese Methode blockiert, bis diese wird das Objekt geschlossen. </p>'
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.servicebus._i_closeable.closeAsync()
    parent: com.microsoft.azure.servicebus._i_closeable
    href: com.microsoft.azure.servicebus._i_closeable.yml
    name: closeAsync()
    nameWithType: ICloseable.closeAsync()
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.ICloseable.closeAsync()
    type: Method
    summary: '<p>Wird geschlossen, und gibt diesem Objekt zugeordneten Ressourcen frei. Ein Objekt kann nicht verwendet werden, nachdem sie geschlossen wurde. Dies ist eine asynchrone Methode, die eine CompletableFuture wird sofort zurückgegeben. Dieses Objekt wird vollständig beendet, wenn die zurückgegebene CompletableFuture abgeschlossen ist. </p>'
    syntax:
      content: public CompletableFuture<Void> closeAsync()
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die das Schließen des dieses Objekt darstellt. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.complete(UUID)
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.completeAsync(UUID)
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetter(UUID)
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetter(UUID,Map<String, Object>)'
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetter(UUID,String,String)'
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetter(UUID,String,String,Map<String, Object>)'
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetterAsync(UUID)
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetterAsync(UUID,Map<String, Object>)'
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetterAsync(UUID,String,String)'
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.deadLetterAsync(UUID,String,String,Map<String, Object>)'
  - uid: com.microsoft.azure.servicebus._i_message_entity_client.getEntityPath()
    parent: com.microsoft.azure.servicebus._i_message_entity_client
    href: com.microsoft.azure.servicebus._i_message_entity_client.yml
    name: getEntityPath()
    nameWithType: IMessageEntityClient.getEntityPath()
    fullName: String com.microsoft.azure.servicebus.IMessageEntityClient.getEntityPath()
    type: Method
    summary: |-
      <p>Ruft den Pfad der Entität, die dieser Client wird ab, Senden von Nachrichten an oder Empfang von Nachrichten aus.</p>
      <p></p>
    syntax:
      content: public String getEntityPath()
      return:
        type: '26831127'
        description: '<p>Pfad der Entität, der diesem Client eine Verbindung herstellt </p>'
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.getPrefetchCount()
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.registerMessageHandler(IMessageHandler)
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.registerMessageHandler(IMessageHandler,MessageHandlerOptions)'
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.registerSessionHandler(ISessionHandler)
  - uid: 'com.microsoft.azure.servicebus._i_message_and_session_pump.registerSessionHandler(ISessionHandler,SessionHandlerOptions)'
  - uid: 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessage(IMessage,Instant)'
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: 'scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    nameWithType: 'IMessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    fullName: 'long com.microsoft.azure.servicebus.IMessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    type: Method
    summary: |-
      <p>Sendet eine geplante Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Eine geplante Nachricht in die Warteschlange eingereiht und an Empfänger nur zum Zeitpunkt geplanten Enqueue zur Verfügung gestellt. Diese Methode blockiert, bis die Nachricht, auf die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: 'public long scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
        - id: scheduledEnqueueTimeUtc
          type: 328f8254
          description: '<p>Zeitpunkt, an dem die Nachricht in der Entität in die Warteschlange eingereiht werden sollen </p>'
      return:
        type: 0364520f
        description: <p>Sequenznummer der Nachricht geplante </p>
  - uid: 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessageAsync(IMessage,Instant)'
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: 'scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    nameWithType: 'IMessageSender.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    fullName: 'CompletableFuture<Long> com.microsoft.azure.servicebus.IMessageSender.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    type: Method
    summary: |-
      <p>Sendet eine geplante Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Eine geplante Nachricht in die Warteschlange eingereiht und an Empfänger nur zum Zeitpunkt geplanten Enqueue zur Verfügung gestellt. Dies ist eine asynchrone Methode, die eine CompletableFuture die abgeschlossen wird, wenn die Nachricht, auf die Entität gesendet wird zurückgibt. Die CompletableFuture nach Abschluss gibt die Sequenznummer der geplanten Nachricht die verwendet werden kann, um die Planung der Nachricht abzubrechen.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Long> scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
        - id: scheduledEnqueueTimeUtc
          type: 328f8254
          description: '<p>Zeitpunkt, an dem die Nachricht in der Entität in die Warteschlange eingereiht werden sollen </p>'
      return:
        type: 30822cb1
        description: '<p>eine CompletableFuture, die die ausstehenden senden, das die Sequenznummer der geplanten Nachricht zurückgibt darstellt. Diese Sequenznummer kann verwendet werden, um die Planung der Nachricht abzubrechen. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_sender.send(IMessage)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: send(IMessage message)
    nameWithType: IMessageSender.send(IMessage message)
    fullName: void com.microsoft.azure.servicebus.IMessageSender.send(IMessage message)
    type: Method
    summary: |-
      <p>Sendet eine Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Diese Methode blockiert, bis die Nachricht, auf die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: public void send(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
  - uid: com.microsoft.azure.servicebus._i_message_sender.sendAsync(IMessage)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: sendAsync(IMessage message)
    nameWithType: IMessageSender.sendAsync(IMessage message)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSender.sendAsync(IMessage message)
    type: Method
    summary: |-
      <p>Sendet eine Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Dies ist eine asynchrone Methode, die eine CompletableFuture die abgeschlossen wird, wenn die Nachricht, auf die Entität gesendet wird zurückgibt.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> sendAsync(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden senden darstellt. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_sender.sendBatch(Collection<? extends IMessage>)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: sendBatch(Collection<? extends IMessage> messages)
    nameWithType: IMessageSender.sendBatch(Collection<? extends IMessage> messages)
    fullName: void com.microsoft.azure.servicebus.IMessageSender.sendBatch(Collection<? extends IMessage> messages)
    type: Method
    summary: |-
      <p>Sendet einen Nachrichtenbatch für die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Diese Methode blockiert, bis der Batch an die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: public void sendBatch(Collection<? extends IMessage> messages)
      parameters:
        - id: messages
          type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
          description: <p>Auflistung von Nachrichten an die Entität gesendet werden </p>
  - uid: com.microsoft.azure.servicebus._i_message_sender.sendBatchAsync(Collection<? extends IMessage>)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: sendBatchAsync(Collection<? extends IMessage> messages)
    nameWithType: IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages)
    type: Method
    summary: |-
      <p>Sendet einen Nachrichtenbatch für die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Dies ist eine asynchrone Methode, die eine CompletableFuture die abgeschlossen wird, wenn der Batch, auf die Entität gesendet wird zurückgibt.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> sendBatchAsync(Collection<? extends IMessage> messages)
      parameters:
        - id: messages
          type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
          description: <p>Auflistung von Nachrichten an die Entität gesendet werden </p>
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden senden darstellt. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_and_session_pump.setPrefetchCount(int)
  - uid: com.microsoft.azure.servicebus._i_message_sender
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: IMessageSender
    nameWithType: IMessageSender
    fullName: com.microsoft.azure.servicebus.IMessageSender
    type: Interface
    summary: |-
      <p>Stellt den Absender einer Nachricht, die Nachrichten an Azure Service Bus sendet.</p>
      <p></p>
    syntax:
      content: public interface IMessageSender extends IMessageEntityClient
  - uid: com.microsoft.azure.servicebus._i_message_entity_client
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_entity_client.yml
    name: IMessageEntityClient
    nameWithType: IMessageEntityClient
    fullName: com.microsoft.azure.servicebus.IMessageEntityClient
    type: Interface
    summary: |-
      <p>Stellt einen messaging-Client mit einer Azure Service Bus-Entität dar.</p>
      <p></p>
    syntax:
      content: public interface IMessageEntityClient extends ICloseable
  - uid: com.microsoft.azure.servicebus._queue_client
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._queue_client.yml
    name: QueueClient
    nameWithType: QueueClient
    fullName: com.microsoft.azure.servicebus.QueueClient
    type: Class
    syntax:
      content: public class QueueClient
  - uid: com.microsoft.azure.servicebus._receive_mode
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._receive_mode.yml
    name: ReceiveMode
    nameWithType: ReceiveMode
    fullName: com.microsoft.azure.servicebus.ReceiveMode
    type: Enum
    summary: |-
      <p>Enumeration zur Darstellung der beiden empfangsmodi, Azure Service Bus unterstützt.</p>
      <p></p>
    syntax:
      content: public enum ReceiveMode
  - uid: com.microsoft.azure.servicebus._queue_client.getReceiveMode()
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    name: getReceiveMode()
    nameWithType: QueueClient.getReceiveMode()
    fullName: ReceiveMode com.microsoft.azure.servicebus.QueueClient.getReceiveMode()
    type: Method
    summary: |-
      <p>Ruft die <xref uid="com.microsoft.azure.servicebus._receive_mode" data-throw-if-not-resolved="false">ReceiveMode</xref> des aktuellen Empfängers</p>
      <p></p>
    syntax:
      content: public ReceiveMode getReceiveMode()
      return:
        type: com.microsoft.azure.servicebus._receive_mode
        description: <p>Der Receive-Modus. </p>
  - uid: com.microsoft.azure.servicebus._queue_client.getQueueName()
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    name: getQueueName()
    nameWithType: QueueClient.getQueueName()
    fullName: String com.microsoft.azure.servicebus.QueueClient.getQueueName()
    type: Method
    summary: |-
      <p>Ruft den Namen der Warteschlange ab.</p>
      <p></p>
    syntax:
      content: public String getQueueName()
      return:
        type: '26831127'
        description: <p>Der Name der Warteschlange. </p>