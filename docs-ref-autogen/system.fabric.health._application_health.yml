### YamlMime:ManagedReference
items:
  - uid: system.fabric.health._application_health
    id: _application_health
    parent: system.fabric.health
    children:
      - system.fabric.health._application_health.getApplicationName()
      - system.fabric.health._application_health.getDeployedApplicationHealthState()
      - system.fabric.health._application_health.getServiceHealthState()
    href: system.fabric.health._application_health.yml
    langs:
      - java
    name: ApplicationHealth
    nameWithType: ApplicationHealth
    fullName: system.fabric.health.ApplicationHealth
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealth.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealth.java
      startLine: 10
    package: system.fabric.health
    summary: '<p>Die Integrität einer Anwendung beschrieben, wie Sie zurückgegeben<xref href="system.fabric._health_client.getApplicationHealthAsync(URI)" data-throw-if-not-resolved="false"></xref></p>'
    syntax:
      content: public class ApplicationHealth extends EntityHealth
    inheritance:
      - java.lang.Object
      - system.fabric.health._entity_health
    inheritedMembers:
      - 'system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)'
      - system.fabric.health._entity_health.getAggregatedHealthState()
      - system.fabric.health._entity_health.getHealthEvents()
      - system.fabric.health._entity_health.getUnhealthyEvaluations()
  - uid: system.fabric.health._application_health.getApplicationName()
    id: getApplicationName()
    parent: system.fabric.health._application_health
    href: system.fabric.health._application_health.yml
    langs:
      - java
    name: getApplicationName()
    nameWithType: ApplicationHealth.getApplicationName()
    fullName: URI system.fabric.health.ApplicationHealth.getApplicationName()
    overload: system.fabric.health._application_health.getApplicationName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealth.java
      startLine: 44
    package: system.fabric.health
    summary: |-
      <p>Ruft den Anwendungsnamen, der die Anwendung eindeutig identifiziert.</p>
      <p></p>
    syntax:
      content: public URI getApplicationName()
      return:
        type: '62304784'
        description: <p>Anwendungsname URI </p>
  - uid: system.fabric.health._application_health.getDeployedApplicationHealthState()
    id: getDeployedApplicationHealthState()
    parent: system.fabric.health._application_health
    href: system.fabric.health._application_health.yml
    langs:
      - java
    name: getDeployedApplicationHealthState()
    nameWithType: ApplicationHealth.getDeployedApplicationHealthState()
    fullName: List<DeployedApplicationHealthState> system.fabric.health.ApplicationHealth.getDeployedApplicationHealthState()
    overload: system.fabric.health._application_health.getDeployedApplicationHealthState*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealth.java
      startLine: 79
    package: system.fabric.health
    summary: |-
      <p>Ruft den Integritätsstatus der bereitgestellten Anwendung für die aktuelle Anwendung, die im Health Store. </p>
      <p>bereitgestellten Anwendungen für die aktuelle Anwendung im Health Store gefunden. Nur Anwendungen bereitgestellt, die berücksichtigen die <xref href="system.fabric._application_health_query_description.getDeployedApplicationHealthStatesFilter()" data-throw-if-not-resolved="false"></xref> (falls angegeben) werden zurückgegeben. Wenn der Filter nicht angegeben ist, werden alle bereitgestellte Anwendungen zurückgegeben. </p>
      <p>Alle bereitgestellte Anwendungen werden ausgewertet, um zu bestimmen, die Anwendungsintegrität aggregiert. </p>
      <p></p>
    syntax:
      content: public List<DeployedApplicationHealthState> getDeployedApplicationHealthState()
      return:
        type: 5618da2dsystem.fabric.health._deployed_application_health_statea08ddfce
        description: <p>Liste der Integritätsstatus der bereitgestellten Anwendungen. </p>
  - uid: system.fabric.health._application_health.getServiceHealthState()
    id: getServiceHealthState()
    parent: system.fabric.health._application_health
    href: system.fabric.health._application_health.yml
    langs:
      - java
    name: getServiceHealthState()
    nameWithType: ApplicationHealth.getServiceHealthState()
    fullName: List<ServiceHealthState> system.fabric.health.ApplicationHealth.getServiceHealthState()
    overload: system.fabric.health._application_health.getServiceHealthState*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ApplicationHealth.java
      startLine: 59
    package: system.fabric.health
    summary: |-
      <p>Ruft die dienstintegritätszustände für die aktuelle Anwendung, die im Health Store. </p>
      <p>Dienste nur dieser Hinsicht mit der <xref href="system.fabric._application_health_query_description.getServiceHealthStatesFilter()" data-throw-if-not-resolved="false"></xref> (falls angegeben) werden zurückgegeben. Wenn der Filter nicht angegeben ist, werden alle Dienste zurückgegeben. Alle Dienste werden ausgewertet, um zu bestimmen, die Anwendungsintegrität aggregiert. </p>
      <p></p>
    syntax:
      content: public List<ServiceHealthState> getServiceHealthState()
      return:
        type: 5618da2dsystem.fabric.health._service_health_statea08ddfce
        description: <p>Liste der Dienste-Integritätsstatus </p>
references:
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: system.fabric.health._application_health.getApplicationName*
    name: getApplicationName
    nameWithType: ApplicationHealth.getApplicationName
    fullName: URI system.fabric.health.ApplicationHealth.getApplicationName
    package: system.fabric.health
  - uid: 5618da2dsystem.fabric.health._service_health_statea08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: system.fabric.health._service_health_state
        name: ServiceHealthState
        fullName: system.fabric.health.ServiceHealthState
        href: system.fabric.health._service_health_state.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric.health._application_health.getServiceHealthState*
    name: getServiceHealthState
    nameWithType: ApplicationHealth.getServiceHealthState
    fullName: List<ServiceHealthState> system.fabric.health.ApplicationHealth.getServiceHealthState
    package: system.fabric.health
  - uid: 5618da2dsystem.fabric.health._deployed_application_health_statea08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: system.fabric.health._deployed_application_health_state
        name: DeployedApplicationHealthState
        fullName: system.fabric.health.DeployedApplicationHealthState
        href: system.fabric.health._deployed_application_health_state.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric.health._application_health.getDeployedApplicationHealthState*
    name: getDeployedApplicationHealthState
    nameWithType: ApplicationHealth.getDeployedApplicationHealthState
    fullName: List<DeployedApplicationHealthState> system.fabric.health.ApplicationHealth.getDeployedApplicationHealthState
    package: system.fabric.health
  - uid: 'system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)'
    parent: system.fabric.health._entity_health
    href: system.fabric.health._entity_health.yml
    name: 'EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)'
    nameWithType: 'EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)'
    fullName: 'system.fabric.health.EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)'
    type: Constructor
    syntax:
      content: 'protected EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)'
      parameters:
        - id: aggregatedHealthState
          type: f75371fa
        - id: healthEvents
          type: 5618da2dsystem.fabric.health._health_eventa08ddfce
        - id: unhealthyEvaluations
          type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
  - uid: system.fabric.health._entity_health.getAggregatedHealthState()
    parent: system.fabric.health._entity_health
    href: system.fabric.health._entity_health.yml
    name: getAggregatedHealthState()
    nameWithType: EntityHealth.getAggregatedHealthState()
    fullName: HealthState system.fabric.health.EntityHealth.getAggregatedHealthState()
    type: Method
    summary: |-
      <p>Ruft den Zustand der Entität, die aggregiert.</p>
      <p></p>
    syntax:
      content: public HealthState getAggregatedHealthState()
      return:
        type: system.fabric.health._health_state
        description: "<p>\r\n\r\n  <xref href=\"system.fabric.health._health_state\" data-throw-if-not-resolved=\"false\"></xref>der aggregierte Integritätszustand berechnet vom Health Manager basierend auf darstellt Ereignisse auf die Entität und seine untergeordneten Elemente gemeldet, (sofern vorhanden) und des gewünschten Integritätsrichtlinie. </p>"
  - uid: system.fabric.health._entity_health.getHealthEvents()
    parent: system.fabric.health._entity_health
    href: system.fabric.health._entity_health.yml
    name: getHealthEvents()
    nameWithType: EntityHealth.getHealthEvents()
    fullName: List<HealthEvent> system.fabric.health.EntityHealth.getHealthEvents()
    type: Method
    summary: "<p>Ruft die integritätsereignisse für die Entität gemeldet.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>die integritätsereignisse werden basierend auf Integritätsberichte gesendet in Health Store erstellt. Diese enthalten zusätzliche Metadaten, die vom Health Store hinzugefügt. </p>"
    syntax:
      content: public List<HealthEvent> getHealthEvents()
      return:
        type: 5618da2dsystem.fabric.health._health_eventa08ddfce
        description: <p>Die integritätsereignisse bei der Entität gemeldet wird. </p>
  - uid: system.fabric.health._entity_health.getUnhealthyEvaluations()
    parent: system.fabric.health._entity_health
    href: system.fabric.health._entity_health.yml
    name: getUnhealthyEvaluations()
    nameWithType: EntityHealth.getUnhealthyEvaluations()
    fullName: List<HealthEvaluation> system.fabric.health.EntityHealth.getUnhealthyEvaluations()
    type: Method
    summary: |-
      <p>Ruft die fehlerhaften auswertungen, die zeigen, warum der aktuellen aggregierte Integritätsstatus vom Integritätsdienst zurückgegeben wurde.</p>
      <p></p>
    syntax:
      content: public List<HealthEvaluation> getUnhealthyEvaluations()
      return:
        type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
        description: '<p>Die fehlerhaften auswertungen, die beschreiben, warum der aktuellen aggregierte Integritätsstatus vom Integritätsdienst zurückgegeben wurde. </p>'
  - uid: system.fabric.health._entity_health
    parent: system.fabric.health
    href: system.fabric.health._entity_health.yml
    name: EntityHealth
    nameWithType: EntityHealth
    fullName: system.fabric.health.EntityHealth
    type: Class
    summary: <p>Stellt die Basisklasse für alle Entitätsintegrität verknüpften Klassen. </p>
    syntax:
      content: public class EntityHealth
  - uid: system.fabric.health._service_health_state
    parent: system.fabric.health
    href: system.fabric.health._service_health_state.yml
    name: ServiceHealthState
    nameWithType: ServiceHealthState
    fullName: system.fabric.health.ServiceHealthState
    type: Class
    summary: '<p>Stellt den Integritätsstatus eines Diensts, die die Dienst-ID und der aggregierte Integritätszustand enthält. </p>'
    syntax:
      content: public class ServiceHealthState
  - uid: system.fabric.health._deployed_application_health_state
    parent: system.fabric.health
    href: system.fabric.health._deployed_application_health_state.yml
    name: DeployedApplicationHealthState
    nameWithType: DeployedApplicationHealthState
    fullName: system.fabric.health.DeployedApplicationHealthState
    type: Class
    summary: '<p>Stellt den Zustand einer bereitgestellten Anwendung, die die ID der Entität enthält und der aggregierte Integritätszustand dar. </p>'
    syntax:
      content: public class DeployedApplicationHealthState
  - uid: system.fabric.health._health_event
    parent: system.fabric.health
    href: system.fabric.health._health_event.yml
    name: HealthEvent
    nameWithType: HealthEvent
    fullName: system.fabric.health.HealthEvent
    type: Class
    summary: '<p>Ein <xref href="system.fabric.health._health_event" data-throw-if-not-resolved="false"></xref> Objekt ist eine Struktur, die die Zustandsinformationen enthält, die verwendet wird, beim Melden der Integrität für eine Entität über ReportHealth-API </p>'
    syntax:
      content: public class HealthEvent
  - uid: system.fabric.health._health_evaluation
    parent: system.fabric.health
    href: system.fabric.health._health_evaluation.yml
    name: HealthEvaluation
    nameWithType: HealthEvaluation
    fullName: system.fabric.health.HealthEvaluation
    type: Class
    summary: '<p>Stellt eine integritätsauswertung, die die Daten und den Algorithmus, die vom Health Store verwendet werden, um den Zustand einer Entität auszuwerten beschreibt. </p>'
    syntax:
      content: public class HealthEvaluation
  - uid: system.fabric._application_health_query_description.getServiceHealthStatesFilter()
    parent: system.fabric._application_health_query_description
    href: system.fabric._application_health_query_description.yml
    name: getServiceHealthStatesFilter()
    nameWithType: ApplicationHealthQueryDescription.getServiceHealthStatesFilter()
    fullName: ServiceHealthStatesFilter system.fabric.ApplicationHealthQueryDescription.getServiceHealthStatesFilter()
    type: Method
    summary: "<p>Ruft den Filter für <xref href=\"system.fabric.health._service_health_state\" data-throw-if-not-resolved=\"false\"></xref> untergeordneten Elemente. Nur untergeordnete Elemente, die dem Filter entsprechen, werden zurückgegeben. Alle untergeordneten Elemente dienen zum Auswerten des integritätszustands der Anwendung aggregiert.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold> nur untergeordnete Elemente, die dem Filter entsprechen zurückgegeben werden. Alle untergeordneten Elemente dienen zum Auswerten des integritätszustands der Anwendung aggregiert. Wenn der Filter nicht angegeben ist, werden alle untergeordneten Objekte Dienst die Anwendung zurückgegeben. </p>"
    syntax:
      content: public ServiceHealthStatesFilter getServiceHealthStatesFilter()
      return:
        type: system.fabric._service_health_states_filter
        description: <p>Der Filter für <xref href="system.fabric.health._service_health_state" data-throw-if-not-resolved="false"></xref> untergeordneten Elemente. </p>
  - uid: system.fabric._application_health_query_description.getDeployedApplicationHealthStatesFilter()
    parent: system.fabric._application_health_query_description
    href: system.fabric._application_health_query_description.yml
    name: getDeployedApplicationHealthStatesFilter()
    nameWithType: ApplicationHealthQueryDescription.getDeployedApplicationHealthStatesFilter()
    fullName: DeployedApplicationHealthStatesFilter system.fabric.ApplicationHealthQueryDescription.getDeployedApplicationHealthStatesFilter()
    type: Method
    summary: "<p>Ruft den Filter für <xref href=\"system.fabric.health._deployed_application_health_state\" data-throw-if-not-resolved=\"false\"></xref> untergeordneten Elemente. Nur untergeordnete Elemente, die dem Filter entsprechen, werden zurückgegeben. Alle untergeordneten Elemente dienen zum Auswerten des integritätszustands der Anwendung aggregiert.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold> nur untergeordnete Elemente, die dem Filter entsprechen zurückgegeben werden. Alle untergeordneten Elemente dienen zum Auswerten des integritätszustands der Anwendung aggregiert. Wenn der Filter nicht angegeben ist, werden alle bereitgestellten Anwendung untergeordneten Elemente der Anwendung zurückgegeben. </p>"
    syntax:
      content: public DeployedApplicationHealthStatesFilter getDeployedApplicationHealthStatesFilter()
      return:
        type: system.fabric._deployed_application_health_states_filter
        description: <p>Der Filter für <xref href="system.fabric._deployed_application_health_states_filter" data-throw-if-not-resolved="false"></xref> untergeordneten Elemente. </p>
  - uid: system.fabric._health_client.getApplicationHealthAsync(URI)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    name: getApplicationHealthAsync(URI applicationName)
    nameWithType: HealthClient.getApplicationHealthAsync(URI applicationName)
    fullName: CompletableFuture<ApplicationHealth> system.fabric.HealthClient.getApplicationHealthAsync(URI applicationName)
    type: Method
    summary: |-
      <p>Ruft asynchron die Integrität der angegebenen Service Fabric-Anwendung ab.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<ApplicationHealth> getApplicationHealthAsync(URI applicationName)
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p>Der URI der Service Fabric-Anwendung. </p>
      return:
        type: 9cdf14d0system.fabric.health._application_healtha08ddfce
        description: <p>Die Integrität der angegebenen Service Fabric-Anwendung. </p>