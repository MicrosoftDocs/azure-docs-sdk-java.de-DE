### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    id: _amqps_transport
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps
    children:
      - 'com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.addMessage(Message,IotHubEventCallback,Object)'
      - 'com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.addMessage(Message,IotHubResponseCallback,Object)'
      - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.AMQPS_APP_PROPERTY_PREFIX()
      - 'com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.AmqpsTransport(final DeviceClientConfig,Boolean)'
      - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.close()
      - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.connectionEstablished()
      - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.connectionLost()
      - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.handleMessage()
      - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.invokeCallbacks()
      - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.isEmpty()
      - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.messageReceived(AmqpsMessage)
      - 'com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.messageSent(Integer,Boolean)'
      - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.open()
      - 'com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
      - com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.sendMessages()
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    langs:
      - java
    name: AmqpsTransport
    nameWithType: AmqpsTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport
    type: Class
    source:
      remote: &ref_0
        path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      startLine: 35
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
    summary: |-
      <p>Ein AMQPS-Transport. Enthält Funktionen zum Hinzufügen von Nachrichten und Senden von Nachrichten an einen IoT Hub. Puffer nicht gesendete Nachrichten, bis sie durch einen IoT Hub empfangen werden. Ein Transport bei der Erstellung gebunden ist, den folgenden Parametern: IoT Hub-Namen, Geräte-ID und Geräteschlüssel. </p>
      <p>Der Transport empfängt Nachrichten vom IoT Hub auch und ruft einen benutzerdefinierte Meldung Rückruf auf, wenn eine Nachricht und Rückruf gefunden werden. </p>
    syntax:
      content: 'public class AmqpsTransport implements IotHubTransport,ServerListener'
    inheritance:
      - java.lang.Object
      - Closeable
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    inheritedMembers:
      - 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubEventCallback,Object)'
      - 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubResponseCallback,Object)'
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.addMessage(Message,IotHubEventCallback,Object)'
    id: 'addMessage(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    langs:
      - java
    name: 'addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    nameWithType: 'AmqpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.addMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      startLine: 184
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
    summary: |-
      <p>Fügt eine Nachricht an die Warteschlange Transport.</p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: e78f2a4c
          description: <p>Die zu sendende Meldung. </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: '<p>der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird. </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p>der Kontext übergeben werden, wenn der Rückruf aufgerufen wird.</p>'
    exceptions:
      - type: 12fe80de
        description: <p>Wenn der Transport geschlossen ist. </p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.addMessage(Message,IotHubResponseCallback,Object)'
    id: 'addMessage(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    langs:
      - java
    name: 'addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'AmqpsTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.addMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      startLine: 208
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
    summary: |-
      <p>Fügt eine Nachricht an die Warteschlange Transport. !!! Diese Funktionalität ist noch nicht unterstützt, Bitte verwenden Sie fehlerhaft sind.</p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: e78f2a4c
          description: <p>Die zu sendende Meldung. </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: '<p>der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird. </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p>der Kontext übergeben werden, wenn der Rückruf aufgerufen wird.</p>'
    exceptions:
      - type: b1c38b44
        description: <p>immer. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.AMQPS_APP_PROPERTY_PREFIX()
    id: AMQPS_APP_PROPERTY_PREFIX()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    langs:
      - java
    name: AMQPS_APP_PROPERTY_PREFIX
    nameWithType: AmqpsTransport.AMQPS_APP_PROPERTY_PREFIX
    fullName: final String com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.AMQPS_APP_PROPERTY_PREFIX
    type: Field
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      startLine: 65
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
    syntax:
      content: public static final String AMQPS_APP_PROPERTY_PREFIX= "iothub-app-"
      return:
        type: 3d93591e
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.AmqpsTransport(final DeviceClientConfig,Boolean)'
    id: 'AmqpsTransport(final DeviceClientConfig,Boolean)'
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    langs:
      - java
    name: 'AmqpsTransport(final DeviceClientConfig config, Boolean useWebSockets)'
    nameWithType: 'AmqpsTransport.AmqpsTransport(final DeviceClientConfig config, Boolean useWebSockets)'
    fullName: 'com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.AmqpsTransport(final DeviceClientConfig config, Boolean useWebSockets)'
    overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.AmqpsTransport*
    type: Constructor
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      startLine: 75
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
    summary: |-
      <p>Erstellt eine Instanz aus der angegebenen <xref href="com.microsoft.azure.sdk.iot.device._device_client_config" data-throw-if-not-resolved="false"></xref> Objekt.</p>
      <p></p>
    syntax:
      content: 'public AmqpsTransport(final DeviceClientConfig config, Boolean useWebSockets)'
      parameters:
        - id: config
          type: 93de0ef9com.microsoft.azure.sdk.iot.device._device_client_config
          description: <p>Konfigurationsparameter für eine AMQPS-Sitzung mit IoT Hub </p>
        - id: useWebSockets
          type: 866c2227
          description: '<p>Gibt an, ob der Transport WebSockets oder nicht verwendet werden soll </p>'
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.close()
    id: close()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    langs:
      - java
    name: close()
    nameWithType: AmqpsTransport.close()
    fullName: synchronized void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.close()
    overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.close*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      startLine: 127
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
    summary: |-
      <p>Schließt alle Ressourcen, die zur Kommunikation mit IoT Hub verwendet. Einmal<programlisting><codeline><highlight class="normal">close()<sp> </sp> </highlight> </codeline> </programlisting> wird aufgerufen, der Transport ist nicht mehr verwendbar. Wenn der Transport bereits geschlossen ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>
      <p></p>
    syntax:
      content: public synchronized void close()
      return:
        type: 5c0b90ca
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close()
    exceptions:
      - type: cbf33bbe
        description: '<p>Wenn ein Fehler auftritt, schließen Sie den Transport. </p>'
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.connectionEstablished()
    id: connectionEstablished()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    langs:
      - java
    name: connectionEstablished()
    nameWithType: AmqpsTransport.connectionEstablished()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.connectionEstablished()
    overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.connectionEstablished*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      startLine: 423
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
    summary: '<p>Müssen Sie alle Listener ein Hinweis, dass die Verbindung hergestellt wurde. </p>'
    syntax:
      content: public void connectionEstablished()
    overridden: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.connectionEstablished()
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.connectionLost()
    id: connectionLost()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    langs:
      - java
    name: connectionLost()
    nameWithType: AmqpsTransport.connectionLost()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.connectionLost()
    overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.connectionLost*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      startLine: 401
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
    summary: '<p>Wenn die Verbindung unterbrochen wird, werden alle Nachrichten in Bearbeitung gepuffert, um erneut gesendet werden. </p>'
    syntax:
      content: public void connectionLost()
    overridden: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.connectionLost()
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.handleMessage()
    id: handleMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    langs:
      - java
    name: handleMessage()
    nameWithType: AmqpsTransport.handleMessage()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.handleMessage()
    overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.handleMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      startLine: 325
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
    summary: |-
      <p>Ruft die Nachrichtenrückruf auf, wenn eine Nachricht gefunden wird, und antwortet mit dem IoT Hub auf wie die verarbeitete Nachricht durch den IoT Hub behandelt werden sollen. </p>
      <p>Wenn keine Nachrichtenrückruf festgelegt ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>
      <p></p>
    syntax:
      content: public void handleMessage()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage()
    exceptions:
      - type: 12fe80de
        description: <p>Wenn der Transport geschlossen ist. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.invokeCallbacks()
    id: invokeCallbacks()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    langs:
      - java
    name: invokeCallbacks()
    nameWithType: AmqpsTransport.invokeCallbacks()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.invokeCallbacks()
    overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.invokeCallbacks*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      startLine: 292
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
    summary: |-
      <p>Ruft die Rückrufe für alle abgeschlossenen Anforderungen.</p>
      <p></p>
    syntax:
      content: public void invokeCallbacks()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks()
    exceptions:
      - type: 12fe80de
        description: <p>Wenn der Transport geschlossen ist. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.isEmpty()
    id: isEmpty()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    langs:
      - java
    name: isEmpty()
    nameWithType: AmqpsTransport.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.isEmpty()
    overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.isEmpty*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      startLine: 451
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
    summary: |-
      <p>Gibt<programlisting><codeline><highlight class="normal">"true"<sp> </sp> </highlight> </codeline> </programlisting> verfügt der Transport keine weiteren Nachrichten mehr verarbeiten, und<programlisting><codeline><highlight class="normal">"false"<sp> </sp> </highlight> </codeline> </programlisting> andernfalls.</p>
      <p></p>
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: "<p>\r\n\r\n  <programlisting>\r\n\r\n    <codeline>\r\n\r\n      <highlight class=\"normal\">\"true\"<sp> </sp> </highlight> \r\n\r\n    </codeline> \r\n\r\n  </programlisting> verfügt der Transport keine weiteren Nachrichten mehr verarbeiten, und<programlisting><codeline><highlight class=\"normal\">\"false\"<sp> </sp> </highlight> </codeline> </programlisting> andernfalls. </p>"
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty()
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.messageReceived(AmqpsMessage)
    id: messageReceived(AmqpsMessage)
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    langs:
      - java
    name: messageReceived(AmqpsMessage message)
    nameWithType: AmqpsTransport.messageReceived(AmqpsMessage message)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.messageReceived(AmqpsMessage message)
    overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.messageReceived*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      startLine: 437
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
    summary: '<p>Wenn eine Nachricht empfangen wird, wird die Liste der zu verarbeitenden Nachrichten hinzugefügt. </p>'
    syntax:
      content: public void messageReceived(AmqpsMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message
          description: <p>Die empfangene Nachricht. </p>
    overridden: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.messageReceived(AmqpsMessage)
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.messageSent(Integer,Boolean)'
    id: 'messageSent(Integer,Boolean)'
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    langs:
      - java
    name: 'messageSent(Integer messageHash, Boolean deliveryState)'
    nameWithType: 'AmqpsTransport.messageSent(Integer messageHash, Boolean deliveryState)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.messageSent(Integer messageHash, Boolean deliveryState)'
    overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.messageSent*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      startLine: 376
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
    summary: '<p>Wenn eine Nachricht vom IoTHub bestätigt wird, wird Sie aus der Liste der in statusmeldungen entfernt und zugehörige Rückruf wird hinzugefügt, um die Liste der Rückrufe, die ausgeführt werden. Wenn die Nachricht nicht erfolgreich übermittelt wurde, wird es gepuffert, um die erneut gesendet werden. </p>'
    syntax:
      content: 'public void messageSent(Integer messageHash, Boolean deliveryState)'
      parameters:
        - id: messageHash
          type: 08effaa0
          description: <p>Der Hash der Nachricht. </p>
        - id: deliveryState
          type: 866c2227
          description: <p>Der Status der Übermittlung. </p>
    overridden: 'com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.messageSent(Integer,Boolean)'
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.open()
    id: open()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    langs:
      - java
    name: open()
    nameWithType: AmqpsTransport.open()
    fullName: synchronized void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.open()
    overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.open*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      startLine: 92
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
    summary: |-
      <p>Stellt einen Kommunikationskanal mit IoT Hub her. Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>
      <p></p>
    syntax:
      content: public synchronized void open()
      return:
        type: 5c0b90ca
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open()
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn ein Kommunikationskanal hergestellt werden kann. </p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    id: 'registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    langs:
      - java
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'AmqpsTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.registerConnectionStateCallback*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      startLine: 466
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
    summary: |-
      <p>Registriert einen Rückruf ausgeführt werden, wenn die Verbindung Amqps verloren geht oder hergestellt wird.</p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p>der Rückruf aufgerufen werden. </p>
        - id: callbackContext
          type: '79317049'
          description: '<p>Ein Kontext, der an den Rückruf übergeben werden. Kann <programlisting> <codeline> <highlight class="normal">null<sp> </sp> </highlight> </codeline> </programlisting> Wenn kein Rückruf bereitgestellt wird. </p>'
    overridden: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.sendMessages()
    id: sendMessages()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    langs:
      - java
    name: sendMessages()
    nameWithType: AmqpsTransport.sendMessages()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.sendMessages()
    overload: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.sendMessages*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsTransport.java
      startLine: 225
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
    summary: |-
      <p>Sendet alle Nachrichten aus der Liste jeweils einzeln warten. Wenn eine vorherige Sendeversuch Fehler ist aufgetreten, versucht die Funktion, die Nachrichten in der vorherigen Versuch erneut zu senden. </p>
      <p></p>
    syntax:
      content: public void sendMessages()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages()
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn der Server nicht erreicht werden konnte. </p>
      - type: 12fe80de
        description: <p>Wenn der Transport nicht geöffnet wurde oder bereits geschlossen wird. </p>
references:
  - uid: 3d93591e
    spec.java:
      - name: final String
        fullName: final String
  - uid: 93de0ef9com.microsoft.azure.sdk.iot.device._device_client_config
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.sdk.iot.device._device_client_config
        name: DeviceClientConfig
        fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
        href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
  - uid: 866c2227
    spec.java:
      - name: Boolean
        fullName: Boolean
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.AmqpsTransport*
    name: AmqpsTransport
    nameWithType: AmqpsTransport.AmqpsTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.AmqpsTransport
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: 5c0b90ca
    spec.java:
      - name: synchronized void
        fullName: synchronized void
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.open*
    name: open
    nameWithType: AmqpsTransport.open
    fullName: synchronized void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.open
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.close*
    name: close
    nameWithType: AmqpsTransport.close
    fullName: synchronized void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.close
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
  - uid: 12fe80de
    spec.java:
      - name: IllegalStateException
        fullName: IllegalStateException
  - uid: e78f2a4c
    spec.java:
      - name: Message
        fullName: Message
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.addMessage*
    name: addMessage
    nameWithType: AmqpsTransport.addMessage
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.addMessage
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
  - uid: b1c38b44
    spec.java:
      - name: UnsupportedOperationException
        fullName: UnsupportedOperationException
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.sendMessages*
    name: sendMessages
    nameWithType: AmqpsTransport.sendMessages
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.sendMessages
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.invokeCallbacks*
    name: invokeCallbacks
    nameWithType: AmqpsTransport.invokeCallbacks
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.invokeCallbacks
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.handleMessage*
    name: handleMessage
    nameWithType: AmqpsTransport.handleMessage
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.handleMessage
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
  - uid: 08effaa0
    spec.java:
      - name: Integer
        fullName: Integer
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.messageSent*
    name: messageSent
    nameWithType: AmqpsTransport.messageSent
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.messageSent
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.connectionLost*
    name: connectionLost
    nameWithType: AmqpsTransport.connectionLost
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.connectionLost
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.connectionEstablished*
    name: connectionEstablished
    nameWithType: AmqpsTransport.connectionEstablished
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.connectionEstablished
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.messageReceived*
    name: messageReceived
    nameWithType: AmqpsTransport.messageReceived
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.messageReceived
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.isEmpty*
    name: isEmpty
    nameWithType: AmqpsTransport.isEmpty
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.isEmpty
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.registerConnectionStateCallback*
    name: registerConnectionStateCallback
    nameWithType: AmqpsTransport.registerConnectionStateCallback
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.registerConnectionStateCallback
    package: com.microsoft.azure.sdk.iot.device.transport.amqps
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: 'addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p>Fügt eine Nachricht an die Warteschlange Transport.</p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p>Die zu sendende Meldung. </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: '<p>der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird. </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p>der Kontext übergeben werden, wenn der Rückruf aufgerufen wird. </p>'
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: 'addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p>Fügt eine Nachricht an die Warteschlange Transport.</p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p>Die zu sendende Meldung. </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: '<p>der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird. </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p>der Kontext übergeben werden, wenn der Rückruf aufgerufen wird. </p>'
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: IotHubTransport
    nameWithType: IotHubTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
    type: Interface
    summary: <p>Eine Schnittstelle für einen IoT Hub-Transport. </p>
    syntax:
      content: public interface IotHubTransport
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.yml
    name: ServerListener
    nameWithType: ServerListener
    fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.ServerListener
    type: Interface
    summary: '<p>Definiert Methoden, die durch Interaktionen mit dem IoTHub ausgelöst werden. </p>'
    syntax:
      content: public interface ServerListener
  - uid: com.microsoft.azure.sdk.iot.device.transport._state
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._state.yml
    name: State
    nameWithType: State
    fullName: com.microsoft.azure.sdk.iot.device.transport.State
    type: Enum
    syntax:
      content: public enum State
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_iot_hub_connection.yml
    name: AmqpsIotHubConnection
    nameWithType: AmqpsIotHubConnection
    fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection
    type: Class
    summary: '<p>Eine AMQPS IotHub-Verbindung zwischen einem Gerät und eine IoTHub. Diese Klasse enthält die Funktionalität zum Senden/Empfangen einer Nachricht und Logik zum Herstellen einer Verbindung mit dem IoTHub erneut für den Fall, dass es verloren geht. </p>'
    syntax:
      content: public class AmqpsIotHubConnection
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.yml
    name: IotHubOutboundPacket
    nameWithType: IotHubOutboundPacket
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket
    type: Class
    summary: <p>Ein Paket mit den Daten für einen IoT Hub-Transport zum Senden einer Nachricht erforderlich sind. </p>
    syntax:
      content: public class IotHubOutboundPacket
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message.yml
    name: AmqpsMessage
    nameWithType: AmqpsMessage
    fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsMessage
    type: Class
    summary: '<p>Erweiterung der QPID-Proton-J MessageImpl Klasse implementiert die <xref href="com.microsoft.azure.sdk.iot.device._message" data-throw-if-not-resolved="false"></xref> Schnittstelle. Fügt ein Objekt für die Übermittlung als eine Private Membervariable hinzu und fügt ein neues <xref href="com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message._a_c_k___t_y_p_e" data-throw-if-not-resolved="false"></xref> Enum. Fügt die Möglichkeit, eine einzelne Nachricht problemlos zu bestätigen. </p>'
    syntax:
      content: public class AmqpsMessage
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_callback_packet
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_callback_packet.yml
    name: IotHubCallbackPacket
    nameWithType: IotHubCallbackPacket
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubCallbackPacket
    type: Class
    summary: '<p>Ein Paket mit der erforderlichen Daten für einen IoT Hub-Transport, einen Rückruf aufzurufen. </p>'
    syntax:
      content: public class IotHubCallbackPacket
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback.yml
    name: IotHubConnectionStateCallback
    nameWithType: IotHubConnectionStateCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
    type: Interface
    summary: |-
      <p>Eine Schnittstelle für ein IoT Hub-Verbindung-Status-Rückruf.</p>
      <p>Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <ref refid="" kindref="compound">IotHubConnectionStateCallback #Execute(IotHubConnectionState, Object)</ref> übergibt den Verbindungsstatus (nach unten, Erfolg usw.). </p>
    syntax:
      content: public interface IotHubConnectionStateCallback
  - uid: com.microsoft.azure.sdk.iot.device._device_client_config
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
    name: DeviceClientConfig
    nameWithType: DeviceClientConfig
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
    type: Class
    summary: <p>Konfigurationseinstellungen für einen IoT Hub-Client. Überprüft alle benutzerdefinierten Einstellungen an. </p>
    syntax:
      content: public class DeviceClientConfig
  - uid: com.microsoft.azure.sdk.iot.device._custom_logger
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._custom_logger.yml
    name: CustomLogger
    nameWithType: CustomLogger
    fullName: com.microsoft.azure.sdk.iot.device.CustomLogger
    type: Class
    syntax:
      content: public class CustomLogger
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: open()
    nameWithType: IotHubTransport.open()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open()
    type: Method
    summary: |-
      <p>Stellt einen Kommunikationskanal mit IoT Hub her. Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>
      <p></p>
    syntax:
      content: public void open()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: close()
    nameWithType: IotHubTransport.close()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close()
    type: Method
    summary: |-
      <p>Schließt alle Ressourcen, die zur Kommunikation mit IoT Hub verwendet. Einmal<programlisting><codeline><highlight class="normal">close()<sp> </sp> </highlight> </codeline> </programlisting> wird aufgerufen, der Transport ist nicht mehr verwendbar. Wenn der Transport bereits geschlossen ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>
      <p></p>
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.yml
    name: IotHubEventCallback
    nameWithType: IotHubEventCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
    type: Interface
    summary: |-
      <p>Eine Schnittstelle für einen Ereignisrückruf IoT Hub.</p>
      <p>Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref href="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false"></xref> beim Empfang einer Antwort von einem IoT Hub. </p>
    syntax:
      content: public interface IotHubEventCallback
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.yml
    name: IotHubResponseCallback
    nameWithType: IotHubResponseCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubResponseCallback
    type: Interface
    summary: |-
      <p>Eine Schnittstelle für ein IoT Hub-Antwort-Rückruf.</p>
      <p>Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref href="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.execute(ResponseMessage,Object)" data-throw-if-not-resolved="false"></xref> beim Empfang einer Antwort von einem IoT Hub. </p>
    syntax:
      content: public interface IotHubResponseCallback
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: sendMessages()
    nameWithType: IotHubTransport.sendMessages()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages()
    type: Method
    summary: |-
      <p>Sendet alle Nachrichten in der Warteschlange Transport. Wenn eine vorherige Sendeversuch Fehler ist aufgetreten, versucht die Funktion, die Nachrichten in der vorherigen Versuch erneut zu senden.</p>
      <p></p>
    syntax:
      content: public void sendMessages()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: invokeCallbacks()
    nameWithType: IotHubTransport.invokeCallbacks()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks()
    type: Method
    summary: <p>Ruft die Rückrufe für alle abgeschlossenen Anforderungen. </p>
    syntax:
      content: public void invokeCallbacks()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: handleMessage()
    nameWithType: IotHubTransport.handleMessage()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage()
    type: Method
    summary: |-
      <p>Ruft die Nachrichtenrückruf auf, wenn eine Nachricht gefunden wird, und antwortet mit dem IoT Hub auf wie die verarbeitete Nachricht durch den IoT Hub behandelt werden sollen. </p>
      <p>Wenn keine Nachrichtenrückruf festgelegt ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>
      <p></p>
    syntax:
      content: public void handleMessage()
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.messageSent(Integer,Boolean)'
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.yml
    name: 'messageSent(Integer messageHash, Boolean deliveryState)'
    nameWithType: 'ServerListener.messageSent(Integer messageHash, Boolean deliveryState)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.amqps.ServerListener.messageSent(Integer messageHash, Boolean deliveryState)'
    type: Method
    summary: '<p>Die Methode ausgeführt wird, wenn eine Nachricht vom IoTHub bestätigt wurde. </p>'
    syntax:
      content: 'public void messageSent(Integer messageHash, Boolean deliveryState)'
      parameters:
        - id: messageHash
          type: 08effaa0
          description: <p>Der Hash der Nachricht. </p>
        - id: deliveryState
          type: 866c2227
          description: <p>Der Status der Übermittlung. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.connectionLost()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.yml
    name: connectionLost()
    nameWithType: ServerListener.connectionLost()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.ServerListener.connectionLost()
    type: Method
    summary: '<p>Die Methode ausgeführt wird, wenn die Verbindung mit dem IoTHub unterbrochen wird. </p>'
    syntax:
      content: public void connectionLost()
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.connectionEstablished()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.yml
    name: connectionEstablished()
    nameWithType: ServerListener.connectionEstablished()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.ServerListener.connectionEstablished()
    type: Method
    summary: '<p>Methode, die ausgeführt wird, beim Herstellen der Verbindung mit dem IoTHub. </p>'
    syntax:
      content: public void connectionEstablished()
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.messageReceived(AmqpsMessage)
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._server_listener.yml
    name: messageReceived(AmqpsMessage message)
    nameWithType: ServerListener.messageReceived(AmqpsMessage message)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.ServerListener.messageReceived(AmqpsMessage message)
    type: Method
    summary: '<p>Die Methode ausgeführt wird, wenn eine Nachricht vom IoTHub empfangen wurde. </p>'
    syntax:
      content: public void messageReceived(AmqpsMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_message
          description: <p>Die empfangene Nachricht. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: isEmpty()
    nameWithType: IotHubTransport.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty()
    type: Method
    summary: |-
      <p>Gibt<programlisting><codeline><highlight class="normal">"true"<sp> </sp> </highlight> </codeline> </programlisting> verfügt der Transport keine weiteren Nachrichten mehr verarbeiten, und<programlisting><codeline><highlight class="normal">"false"<sp> </sp> </highlight> </codeline> </programlisting> andernfalls.</p>
      <p></p>
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: "<p>\r\n\r\n  <programlisting>\r\n\r\n    <codeline>\r\n\r\n      <highlight class=\"normal\">\"true\"<sp> </sp> </highlight> \r\n\r\n    </codeline> \r\n\r\n  </programlisting> verfügt der Transport keine weiteren Nachrichten mehr verarbeiten, und<programlisting><codeline><highlight class=\"normal\">\"false\"<sp> </sp> </highlight> </codeline> </programlisting> andernfalls. </p>"
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p>Registriert einen Rückruf ausgeführt werden, wenn die Verbindung mit dem IoT Hub verloren geht oder hergestellt wird.</p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p>der Rückruf aufgerufen werden. </p>
        - id: callbackContext
          type: '79317049'
          description: '<p>Ein Kontext, der an den Rückruf übergeben werden. Kann <programlisting> <codeline> <highlight class="normal">null<sp> </sp> </highlight> </codeline> </programlisting> Wenn kein Rückruf bereitgestellt wird. </p>'
  - uid: com.microsoft.azure.sdk.iot.device._message
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._message.yml
    name: Message
    nameWithType: Message
    fullName: com.microsoft.azure.sdk.iot.device.Message
    type: Class
    syntax:
      content: public class Message