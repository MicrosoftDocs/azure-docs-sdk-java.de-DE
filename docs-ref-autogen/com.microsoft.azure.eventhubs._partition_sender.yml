### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.eventhubs._partition_sender
    id: _partition_sender
    parent: com.microsoft.azure.eventhubs
    children:
      - com.microsoft.azure.eventhubs._partition_sender.createBatch()
      - com.microsoft.azure.eventhubs._partition_sender.createBatch(BatchOptions)
      - com.microsoft.azure.eventhubs._partition_sender.onClose()
      - com.microsoft.azure.eventhubs._partition_sender.send(EventData)
      - com.microsoft.azure.eventhubs._partition_sender.send(EventDataBatch)
      - com.microsoft.azure.eventhubs._partition_sender.send(Iterable<EventData>)
      - com.microsoft.azure.eventhubs._partition_sender.sendSync(final EventData)
      - com.microsoft.azure.eventhubs._partition_sender.sendSync(final EventDataBatch)
      - com.microsoft.azure.eventhubs._partition_sender.sendSync(final Iterable<EventData>)
    href: com.microsoft.azure.eventhubs._partition_sender.yml
    langs:
      - java
    name: PartitionSender
    nameWithType: PartitionSender
    fullName: com.microsoft.azure.eventhubs.PartitionSender
    type: Class
    source:
      remote: &ref_0
        path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionSender.java
        branch: master
        repo: 'https://github.com/Azure/azure-event-hubs-java'
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionSender.java
      startLine: 18
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Diese Klasse ist eine logische Darstellung zum Senden von Ereignissen an einer bestimmten Event Hub-Partition. Verwenden Sie diese Klasse nicht, wenn keine übertragbaren Senden von Ereignissen an bestimmte Partitionen. Verwenden Sie stattdessen <xref uid="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false">EventHubClient #send</xref> Methode.</p>
      <p></p>
    syntax: &ref_1
      content: public class PartitionSender extends ClientEntity
    see:
      - type: com.microsoft.azure.eventhubs._event_hub_client.createPartitionSender(final String)
        description: 'EventHubClient::createPartitionSender(String)'
      - type: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)
        description: 'EventHubClient::createFromConnectionString(String)'
    inheritance:
      - java.lang.Object
      - com.microsoft.azure.eventhubs._client_entity
    inheritedMembers:
      - 'com.microsoft.azure.eventhubs._client_entity.ClientEntity(final String,final ClientEntity)'
      - com.microsoft.azure.eventhubs._client_entity.close()
      - com.microsoft.azure.eventhubs._client_entity.closeSync()
      - com.microsoft.azure.eventhubs._client_entity.getClientId()
      - com.microsoft.azure.eventhubs._client_entity.getLastKnownError()
      - com.microsoft.azure.eventhubs._client_entity.setClosed()
      - com.microsoft.azure.eventhubs._client_entity.throwIfClosed()
  - uid: com.microsoft.azure.eventhubs._partition_sender.createBatch()
    id: createBatch()
    parent: com.microsoft.azure.eventhubs._partition_sender
    href: com.microsoft.azure.eventhubs._partition_sender.yml
    langs:
      - java
    name: createBatch()
    nameWithType: PartitionSender.createBatch()
    fullName: final EventDataBatch com.microsoft.azure.eventhubs.PartitionSender.createBatch()
    overload: com.microsoft.azure.eventhubs._partition_sender.createBatch*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionSender.java
      startLine: 89
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Erstellt eine leere Auflistung von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. Die gleichen PartitionKey muss verwendet werden, während des Sendens dieser Ereignisse mit <xref uid="com.microsoft.azure.eventhubs._partition_sender.send(EventDataBatch)" data-throw-if-not-resolved="false">PartitionSender#send(EventDataBatch)</xref>.</p>
      <p></p>
    syntax:
      content: public final EventDataBatch createBatch()
      return:
        type: 93de0ef9com.microsoft.azure.eventhubs._event_data_batch
        description: '<p>die leere <xref uid="com.microsoft.azure.eventhubs._event_data_batch" data-throw-if-not-resolved="false">EventDataBatch</xref>, nach der maximalen Nachrichtengröße mit EventHubs Dienst aushandeln </p>'
  - uid: com.microsoft.azure.eventhubs._partition_sender.createBatch(BatchOptions)
    id: createBatch(BatchOptions)
    parent: com.microsoft.azure.eventhubs._partition_sender
    href: com.microsoft.azure.eventhubs._partition_sender.yml
    langs:
      - java
    name: createBatch(BatchOptions options)
    nameWithType: PartitionSender.createBatch(BatchOptions options)
    fullName: EventDataBatch com.microsoft.azure.eventhubs.PartitionSender.createBatch(BatchOptions options)
    overload: com.microsoft.azure.eventhubs._partition_sender.createBatch*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionSender.java
      startLine: 63
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Erstellt eine leere Auflistung von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. Die gleichen PartitionKey muss verwendet werden, während des Sendens dieser Ereignisse mit <xref uid="com.microsoft.azure.eventhubs._partition_sender.send(EventDataBatch)" data-throw-if-not-resolved="false">PartitionSender#send(EventDataBatch)</xref>.</p>
      <p></p>
    syntax:
      content: public EventDataBatch createBatch(BatchOptions options)
      parameters:
        - id: options
          type: com.microsoft.azure.eventhubs._batch_options
          description: <p>finden Sie unter <xref uid="com.microsoft.azure.eventhubs._batch_options" data-throw-if-not-resolved="false">BatchOptions</xref> für weitere Nutzungsdetails </p>
      return:
        type: com.microsoft.azure.eventhubs._event_data_batch
        description: '<p>die leere <xref uid="com.microsoft.azure.eventhubs._event_data_batch" data-throw-if-not-resolved="false">EventDataBatch</xref>, nach der maximalen Nachrichtengröße mit EventHubs Dienst aushandeln </p>'
  - uid: com.microsoft.azure.eventhubs._partition_sender.onClose()
    id: onClose()
    parent: com.microsoft.azure.eventhubs._partition_sender
    href: com.microsoft.azure.eventhubs._partition_sender.yml
    langs:
      - java
    name: onClose()
    nameWithType: PartitionSender.onClose()
    fullName: CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionSender.onClose()
    overload: com.microsoft.azure.eventhubs._partition_sender.onClose*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionSender.java
      startLine: 281
    package: com.microsoft.azure.eventhubs
    syntax:
      content: public CompletableFuture<Void> onClose()
      return:
        type: db03ee24
  - uid: com.microsoft.azure.eventhubs._partition_sender.send(EventData)
    id: send(EventData)
    parent: com.microsoft.azure.eventhubs._partition_sender
    href: com.microsoft.azure.eventhubs._partition_sender.yml
    langs:
      - java
    name: send(EventData data)
    nameWithType: PartitionSender.send(EventData data)
    fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionSender.send(EventData data)
    overload: com.microsoft.azure.eventhubs._partition_sender.send*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionSender.java
      startLine: 141
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Senden von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> zu einer bestimmten Event Hub-Partition. Die Zielpartition vorbestimmten Wenn dies <xref uid="com.microsoft.azure.eventhubs._partition_sender" data-throw-if-not-resolved="false">PartitionSender</xref> erstellt wurde. Dieses Muster senden hervorheben Korrelation der Daten über die allgemeine Verfügbarkeit und die Latenz. </p>
      <p>Es gibt 3 Arten EventHubs an, die jeweils als eine Methode (zusammen mit der Überladung SendBatch) verfügbar gemacht: <pre>
      i.   <xref uid="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false">EventHubClient#send(EventData)</xref>, <xref uid="" data-throw-if-not-resolved="false">EventHubClient#send(Iterable)</xref>, <xref uid="com.microsoft.azure.eventhubs._event_hub_client.send(final EventDataBatch)" data-throw-if-not-resolved="false">EventHubClient#send(EventDataBatch)</xref>
      ii.  <xref uid="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)" data-throw-if-not-resolved="false">EventHubClient#send(EventData, String)</xref> or <xref uid="" data-throw-if-not-resolved="false">EventHubClient#send(Iterable, String)</xref>
      iii. <xref uid="com.microsoft.azure.eventhubs._partition_sender.send(EventData)" data-throw-if-not-resolved="false">PartitionSender#send(EventData)</xref>, <xref uid="" data-throw-if-not-resolved="false">PartitionSender#send(Iterable)</xref>, or <xref uid="com.microsoft.azure.eventhubs._partition_sender.send(EventDataBatch)" data-throw-if-not-resolved="false">PartitionSender#send(EventDataBatch)</xref></pre></p>
      <p>Verwenden Sie diesen senden, wenn: <pre>
      i. The client wants to take direct control of distribution of data across partitions. In this case client is responsible for making sure there is at least one sender per event hub partition.
      ii. User cannot use partition key as a mean to direct events to specific partition, yet there is a need for data correlation with partitioning scheme.
      </pre></p>
      <p></p>
    syntax: &ref_3
      content: public final CompletableFuture<Void> send(EventData data)
      parameters:
        - id: data
          type: com.microsoft.azure.eventhubs._event_data
          description: <p>die <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> gesendet werden. </p>
      return:
        type: fc984e6f
        description: '<p>eine CompletableFuture, die abgeschlossen werden, kann die Send-Vorgänge wird nach Abschluss... </p>'
  - uid: com.microsoft.azure.eventhubs._partition_sender.send(EventDataBatch)
    id: send(EventDataBatch)
    parent: com.microsoft.azure.eventhubs._partition_sender
    href: com.microsoft.azure.eventhubs._partition_sender.yml
    langs:
      - java
    name: send(EventDataBatch eventDatas)
    nameWithType: PartitionSender.send(EventDataBatch eventDatas)
    fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionSender.send(EventDataBatch eventDatas)
    overload: com.microsoft.azure.eventhubs._partition_sender.send*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionSender.java
      startLine: 266
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Senden von <xref uid="com.microsoft.azure.eventhubs._event_data_batch" data-throw-if-not-resolved="false">EventDataBatch</xref> zu einer bestimmten Event Hub-Partition. Die eingerichteten Partition vorbestimmten Wenn dies <xref uid="com.microsoft.azure.eventhubs._partition_sender" data-throw-if-not-resolved="false">PartitionSender</xref> erstellt wurde. Eine PartitionKey kann nicht festgelegt werden, wenn mit <xref uid="com.microsoft.azure.eventhubs._event_data_batch" data-throw-if-not-resolved="false">EventDataBatch</xref> mit einem <xref uid="com.microsoft.azure.eventhubs._partition_sender" data-throw-if-not-resolved="false">PartitionSender</xref>. </p>
      <p>Es gibt 3 Arten an EventHubs, senden, um diesen speziellen Typ des Sendeports zu verstehen, finden Sie in der Überladung <xref uid="com.microsoft.azure.eventhubs._partition_sender.send(EventData)" data-throw-if-not-resolved="false">send(EventData)</xref>, die vom selben Typ des Sendeports und wird verwendet, um die einzelnen senden <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
      <p>Senden eines <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des ist in den folgenden Fällen nützlich: <pre>
      i.  Efficient send - sending a batch of <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> maximizes the overall throughput by optimally using the number of sessions created to EventHubs' service.
      ii. Send multiple <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>'s in a Transaction. To achieve ACID properties, the Gateway Service will forward all <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>'s in the batch to a single EventHubs' partition.
      </pre></p>
      <p></p>
    syntax: &ref_2
      content: public final CompletableFuture<Void> send(EventDataBatch eventDatas)
      parameters:
        - id: eventDatas
          type: com.microsoft.azure.eventhubs._event_data_batch
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.eventhubs._event_data_batch\" data-throw-if-not-resolved=\"false\">EventDataBatch</xref> EventHub an </p>"
      return:
        type: fc984e6f
        description: '<p>eine CompletableFuture, die abgeschlossen werden kann, wenn der Sendevorgang abgeschlossen ist... </p>'
    exceptions:
      - type: com.microsoft.azure.eventhubs._event_hub_exception
        description: <p>Service Bus-Dienst während des Vorgangs Probleme aufgetreten. </p>
    see:
      - type: com.microsoft.azure.eventhubs._event_data_batch
        description: EventDataBatch
  - uid: com.microsoft.azure.eventhubs._partition_sender.send(Iterable<EventData>)
    id: send(Iterable<EventData>)
    parent: com.microsoft.azure.eventhubs._partition_sender
    href: com.microsoft.azure.eventhubs._partition_sender.yml
    langs:
      - java
    name: send(Iterable<EventData> eventDatas)
    nameWithType: PartitionSender.send(Iterable<EventData> eventDatas)
    fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionSender.send(Iterable<EventData> eventDatas)
    overload: com.microsoft.azure.eventhubs._partition_sender.send*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionSender.java
      startLine: 213
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Senden von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> zu einer bestimmten Event Hub-Partition. Die eingerichteten Partition vorbestimmten Wenn dies <xref uid="com.microsoft.azure.eventhubs._partition_sender" data-throw-if-not-resolved="false">PartitionSender</xref> erstellt wurde. </p>
      <p>Es gibt 3 Arten an EventHubs, senden, um diesen speziellen Typ des Sendeports zu verstehen, finden Sie in der Überladung <xref uid="com.microsoft.azure.eventhubs._partition_sender.send(EventData)" data-throw-if-not-resolved="false">send(EventData)</xref>, die vom selben Typ des Sendeports und wird verwendet, um die einzelnen senden <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
      <p>Senden eines <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des ist in den folgenden Fällen nützlich: <pre>
      i.  Efficient send - sending a batch of <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> maximizes the overall throughput by optimally using the number of sessions created to EventHubs' service.
      ii. Send multiple <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>'s in a Transaction. To achieve ACID properties, the Gateway Service will forward all <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>'s in the batch to a single EventHubs' partition.
      </pre></p>
      <p>Beispielcode (Beispiel verwendet die Synchronisierungsversion der api jedoch Konzept identisch sind): <pre>
      Gson gson = new GsonBuilder().create();
      <xref uid="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false">EventHubClient</xref> client = <xref uid="com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync(final String)" data-throw-if-not-resolved="false">EventHubClient.createFromConnectionStringSync</xref>("__connection__");
      <xref uid="com.microsoft.azure.eventhubs._partition_sender" data-throw-if-not-resolved="false">PartitionSender</xref> senderToPartitionOne = client.createPartitionSenderSync("1");</pre></p>
      <p>

        <pre>while (true)

      {

          LinkedList{&lt;}<xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>{&gt;} events = new LinkedList{&lt;}<xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>{&gt;}();

          for (int count = 1; count {&lt;} 11; count++)

          {

              PayloadEvent payload = new PayloadEvent(count);

              byte[] payloadBytes = gson.toJson(payload).getBytes(Charset.defaultCharset());

              <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> sendEvent = new EventData(payloadBytes);

              Map{&lt;}String, String{&gt;} applicationProperties = new HashMap{&lt;}String, String{&gt;}();

              applicationProperties.put("from", "javaClient");

              sendEvent.setProperties(applicationProperties);

              events.add(sendEvent);

          }</pre>

      </p>
      <p>

        <pre>    senderToPartitionOne.sendSync(events);

          System.out.println(String.format("Sent Batch... Size: %s", events.size()));

      }
      </pre>
      </p>
      <p></p>
    syntax:
      content: public final CompletableFuture<Void> send(Iterable<EventData> eventDatas)
      parameters:
        - id: eventDatas
          type: 2a13b5a5com.microsoft.azure.eventhubs._event_dataa08ddfce
          description: <p>Batch von Ereignissen an Event Hub senden. </p>
      return:
        type: fc984e6f
        description: '<p>eine CompletableFuture, die abgeschlossen werden, kann die Send-Vorgänge wird nach Abschluss... </p>'
    exceptions:
      - type: com.microsoft.azure.eventhubs._payload_size_exceeded_exception
        description: '<p>Wenn die Gesamtgröße der <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> überschreitet eine vordefinierte Grenze, die vom Dienst festgelegt. Standardwert ist 256 KB. </p>'
      - type: com.microsoft.azure.eventhubs._event_hub_exception
        description: <p>Service Bus-Dienst während des Vorgangs Probleme aufgetreten. </p>
  - uid: com.microsoft.azure.eventhubs._partition_sender.sendSync(final EventData)
    id: sendSync(final EventData)
    parent: com.microsoft.azure.eventhubs._partition_sender
    href: com.microsoft.azure.eventhubs._partition_sender.yml
    langs:
      - java
    name: sendSync(final EventData data)
    nameWithType: PartitionSender.sendSync(final EventData data)
    fullName: final void com.microsoft.azure.eventhubs.PartitionSender.sendSync(final EventData data)
    overload: com.microsoft.azure.eventhubs._partition_sender.sendSync*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionSender.java
      startLine: 100
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Die synchrone Version von <xref uid="com.microsoft.azure.eventhubs._partition_sender.send(EventData)" data-throw-if-not-resolved="false">send(EventData)</xref> Api.</p>
      <p></p>
    syntax:
      content: public final void sendSync(final EventData data)
      parameters:
        - id: data
          type: 93de0ef9com.microsoft.azure.eventhubs._event_data
          description: <p>die <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> gesendet werden. </p>
      return:
        type: 3f6357ce
    exceptions:
      - type: com.microsoft.azure.eventhubs._payload_size_exceeded_exception
        description: '<p>Wenn die Gesamtgröße der <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> überschreitet eine vordefinierte Grenze, die vom Dienst festgelegt. Standardwert ist 256 KB. </p>'
      - type: com.microsoft.azure.eventhubs._event_hub_exception
        description: <p>Service Bus-Dienst während des Vorgangs Probleme aufgetreten. </p>
  - uid: com.microsoft.azure.eventhubs._partition_sender.sendSync(final EventDataBatch)
    id: sendSync(final EventDataBatch)
    parent: com.microsoft.azure.eventhubs._partition_sender
    href: com.microsoft.azure.eventhubs._partition_sender.yml
    langs:
      - java
    name: sendSync(final EventDataBatch eventDatas)
    nameWithType: PartitionSender.sendSync(final EventDataBatch eventDatas)
    fullName: final void com.microsoft.azure.eventhubs.PartitionSender.sendSync(final EventDataBatch eventDatas)
    overload: com.microsoft.azure.eventhubs._partition_sender.sendSync*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionSender.java
      startLine: 228
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Die synchrone Version von <xref uid="com.microsoft.azure.eventhubs._partition_sender.send(EventDataBatch)" data-throw-if-not-resolved="false">send(EventDataBatch)</xref></p>
      <p></p>
    syntax:
      content: public final void sendSync(final EventDataBatch eventDatas)
      parameters:
        - id: eventDatas
          type: 93de0ef9com.microsoft.azure.eventhubs._event_data_batch
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.eventhubs._event_data_batch\" data-throw-if-not-resolved=\"false\">EventDataBatch</xref> EventHub an </p>"
      return:
        type: 3f6357ce
    exceptions:
      - type: com.microsoft.azure.eventhubs._event_hub_exception
        description: <p>Service Bus-Dienst während des Vorgangs Probleme aufgetreten. </p>
  - uid: com.microsoft.azure.eventhubs._partition_sender.sendSync(final Iterable<EventData>)
    id: sendSync(final Iterable<EventData>)
    parent: com.microsoft.azure.eventhubs._partition_sender
    href: com.microsoft.azure.eventhubs._partition_sender.yml
    langs:
      - java
    name: sendSync(final Iterable<EventData> eventDatas)
    nameWithType: PartitionSender.sendSync(final Iterable<EventData> eventDatas)
    fullName: final void com.microsoft.azure.eventhubs.PartitionSender.sendSync(final Iterable<EventData> eventDatas)
    overload: com.microsoft.azure.eventhubs._partition_sender.sendSync*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionSender.java
      startLine: 151
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Die synchrone Version von <xref uid="" data-throw-if-not-resolved="false">send(Iterable)</xref> .</p>
      <p></p>
    syntax:
      content: public final void sendSync(final Iterable<EventData> eventDatas)
      parameters:
        - id: eventDatas
          type: f42d2527com.microsoft.azure.eventhubs._event_dataa08ddfce
          description: <p>Batch von Ereignissen an Event Hub senden. </p>
      return:
        type: 3f6357ce
    exceptions:
      - type: com.microsoft.azure.eventhubs._event_hub_exception
        description: <p>Service Bus-Dienst während des Vorgangs Probleme aufgetreten. </p>
references:
  - uid: com.microsoft.azure.eventhubs._partition_sender.createBatch*
    name: createBatch
    nameWithType: PartitionSender.createBatch
    fullName: EventDataBatch com.microsoft.azure.eventhubs.PartitionSender.createBatch
    package: com.microsoft.azure.eventhubs
  - uid: 93de0ef9com.microsoft.azure.eventhubs._event_data_batch
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.eventhubs._event_data_batch
        name: EventDataBatch
        fullName: com.microsoft.azure.eventhubs.EventDataBatch
        href: com.microsoft.azure.eventhubs._event_data_batch.yml
  - uid: 93de0ef9com.microsoft.azure.eventhubs._event_data
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.eventhubs._event_data
        name: EventData
        fullName: com.microsoft.azure.eventhubs.EventData
        href: com.microsoft.azure.eventhubs._event_data.yml
  - uid: 3f6357ce
    spec.java:
      - name: final void
        fullName: final void
  - uid: com.microsoft.azure.eventhubs._partition_sender.sendSync*
    name: sendSync
    nameWithType: PartitionSender.sendSync
    fullName: final void com.microsoft.azure.eventhubs.PartitionSender.sendSync
    package: com.microsoft.azure.eventhubs
  - uid: fc984e6f
    spec.java:
      - name: final CompletableFuture<Void>
        fullName: final CompletableFuture<Void>
  - uid: com.microsoft.azure.eventhubs._partition_sender.send*
    name: send
    nameWithType: PartitionSender.send
    fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionSender.send
    package: com.microsoft.azure.eventhubs
  - uid: f42d2527com.microsoft.azure.eventhubs._event_dataa08ddfce
    spec.java:
      - name: final Iterable<
        fullName: final Iterable<
      - uid: com.microsoft.azure.eventhubs._event_data
        name: EventData
        fullName: com.microsoft.azure.eventhubs.EventData
        href: com.microsoft.azure.eventhubs._event_data.yml
      - name: '>'
        fullName: '>'
  - uid: 2a13b5a5com.microsoft.azure.eventhubs._event_dataa08ddfce
    spec.java:
      - name: Iterable<
        fullName: Iterable<
      - uid: com.microsoft.azure.eventhubs._event_data
        name: EventData
        fullName: com.microsoft.azure.eventhubs.EventData
        href: com.microsoft.azure.eventhubs._event_data.yml
      - name: '>'
        fullName: '>'
  - uid: db03ee24
    spec.java:
      - name: CompletableFuture<Void>
        fullName: CompletableFuture<Void>
  - uid: com.microsoft.azure.eventhubs._partition_sender.onClose*
    name: onClose
    nameWithType: PartitionSender.onClose
    fullName: CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionSender.onClose
    package: com.microsoft.azure.eventhubs
  - uid: 'com.microsoft.azure.eventhubs._client_entity.ClientEntity(final String,final ClientEntity)'
    parent: com.microsoft.azure.eventhubs._client_entity
    href: com.microsoft.azure.eventhubs._client_entity.yml
    name: 'ClientEntity(final String clientId, final ClientEntity parent)'
    nameWithType: 'ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)'
    fullName: 'com.microsoft.azure.eventhubs.ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)'
    type: Constructor
    syntax:
      content: 'protected ClientEntity(final String clientId, final ClientEntity parent)'
      parameters:
        - id: clientId
          type: 3d93591e
        - id: parent
          type: 93de0ef9com.microsoft.azure.eventhubs._client_entity
  - uid: com.microsoft.azure.eventhubs._client_entity.close()
    parent: com.microsoft.azure.eventhubs._client_entity
    href: com.microsoft.azure.eventhubs._client_entity.yml
    name: close()
    nameWithType: ClientEntity.close()
    fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.ClientEntity.close()
    type: Method
    syntax:
      content: public final CompletableFuture<Void> close()
      return:
        type: fc984e6f
  - uid: com.microsoft.azure.eventhubs._client_entity.closeSync()
    parent: com.microsoft.azure.eventhubs._client_entity
    href: com.microsoft.azure.eventhubs._client_entity.yml
    name: closeSync()
    nameWithType: ClientEntity.closeSync()
    fullName: final void com.microsoft.azure.eventhubs.ClientEntity.closeSync()
    type: Method
    syntax:
      content: public final void closeSync()
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.eventhubs._client_entity.getClientId()
    parent: com.microsoft.azure.eventhubs._client_entity
    href: com.microsoft.azure.eventhubs._client_entity.yml
    name: getClientId()
    nameWithType: ClientEntity.getClientId()
    fullName: String com.microsoft.azure.eventhubs.ClientEntity.getClientId()
    type: Method
    syntax:
      content: public String getClientId()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventhubs._client_entity.getLastKnownError()
    parent: com.microsoft.azure.eventhubs._client_entity
    href: com.microsoft.azure.eventhubs._client_entity.yml
    name: getLastKnownError()
    nameWithType: ClientEntity.getLastKnownError()
    fullName: Exception com.microsoft.azure.eventhubs.ClientEntity.getLastKnownError()
    type: Method
    syntax:
      content: protected Exception getLastKnownError()
      return:
        type: 8a99d4b0
  - uid: com.microsoft.azure.eventhubs._client_entity.setClosed()
    parent: com.microsoft.azure.eventhubs._client_entity
    href: com.microsoft.azure.eventhubs._client_entity.yml
    name: setClosed()
    nameWithType: ClientEntity.setClosed()
    fullName: final void com.microsoft.azure.eventhubs.ClientEntity.setClosed()
    type: Method
    syntax:
      content: protected final void setClosed()
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.eventhubs._client_entity.throwIfClosed()
    parent: com.microsoft.azure.eventhubs._client_entity
    href: com.microsoft.azure.eventhubs._client_entity.yml
    name: throwIfClosed()
    nameWithType: ClientEntity.throwIfClosed()
    fullName: final void com.microsoft.azure.eventhubs.ClientEntity.throwIfClosed()
    type: Method
    syntax:
      content: protected final void throwIfClosed()
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.eventhubs._client_entity
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._client_entity.yml
    name: ClientEntity
    nameWithType: ClientEntity
    fullName: com.microsoft.azure.eventhubs.ClientEntity
    type: Class
    summary: '<p>Vertrag für alle Client-Entitäten mit Open-schließen/Abort Zustand m/c Main Zwecke: CloseAll clusterentitäten intern-Klasse </p>'
    syntax:
      content: public class ClientEntity
  - uid: com.microsoft.azure.eventhubs._messaging_factory
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._messaging_factory.yml
    name: MessagingFactory
    nameWithType: MessagingFactory
    fullName: com.microsoft.azure.eventhubs.MessagingFactory
    type: Class
    summary: <p>Abstrahiert alle Amqp bezogene details und macht AmqpConnection Objekt-Management-verbindungslebenszyklus </p>
    syntax:
      content: 'public class MessagingFactory extends ClientEntity implements IAmqpConnection,ISessionProvider'
  - uid: com.microsoft.azure.eventhubs._message_sender
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._message_sender.yml
    name: MessageSender
    nameWithType: MessageSender
    fullName: com.microsoft.azure.eventhubs.MessageSender
    type: Class
    summary: <p>Abstrahiert alle Amqp bezogene Informationen übersetzt Reaktor ereignisgesteuerten Modell in asynchronen Senden Api </p>
    syntax:
      content: public class MessageSender extends ClientEntity implements IAmqpSender
  - uid: com.microsoft.azure.eventhubs._event_hub_exception
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._event_hub_exception.yml
    name: EventHubException
    nameWithType: EventHubException
    fullName: com.microsoft.azure.eventhubs.EventHubException
    type: Class
    summary: '<p>Dies ist die Basis-Ausnahme, die für alle Fehlerfälle Servicebus Sequenzelement erzeugt. </p>'
    syntax:
      content: public class EventHubException
  - uid: com.microsoft.azure.eventhubs._partition_sender
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._partition_sender.yml
    name: PartitionSender
    nameWithType: PartitionSender
    fullName: com.microsoft.azure.eventhubs.PartitionSender
    type: Class
    summary: |-
      <p>Diese Klasse ist eine logische Darstellung zum Senden von Ereignissen an einer bestimmten Event Hub-Partition. Verwenden Sie diese Klasse nicht, wenn keine übertragbaren Senden von Ereignissen an bestimmte Partitionen. Verwenden Sie stattdessen <xref uid="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false">EventHubClient #send</xref> Methode.</p>
      <p></p>
    syntax: *ref_1
  - uid: com.microsoft.azure.eventhubs._event_data_batch
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._event_data_batch.yml
    name: EventDataBatch
    nameWithType: EventDataBatch
    fullName: com.microsoft.azure.eventhubs.EventDataBatch
    type: Class
    summary: '<p>Hilfsklasse zum Erstellen einer Batch/die Auflistung von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> Objekte, die beim Senden an EventHubs verwendet werden </p>'
    syntax:
      content: public class EventDataBatch
  - uid: com.microsoft.azure.eventhubs._batch_options
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._batch_options.yml
    name: BatchOptions
    nameWithType: BatchOptions
    fullName: com.microsoft.azure.eventhubs.BatchOptions
    type: Class
    summary: "<p>\r\n  <xref uid=\"com.microsoft.azure.eventhubs._batch_options\" data-throw-if-not-resolved=\"false\">BatchOptions</xref> dient zum Erstellen <xref uid=\"com.microsoft.azure.eventhubs._event_data_batch\" data-throw-if-not-resolved=\"false\">EventDataBatch</xref>es.</p>\n<p>Wenn Sie erstellen <xref uid=\"com.microsoft.azure.eventhubs._event_data_batch\" data-throw-if-not-resolved=\"false\">EventDataBatch</xref>es mit <xref uid=\"com.microsoft.azure.eventhubs._event_hub_client\" data-throw-if-not-resolved=\"false\">EventHubClient</xref>, können Sie eine PartitionKey und mithilfe der Methode .with() MaxMessageSize festlegen. Alternativ können Sie einfach erstellen, wenn Sie die Standardeinstellungen verwenden möchten, <xref uid=\"com.microsoft.azure.eventhubs._batch_options\" data-throw-if-not-resolved=\"false\">BatchOptions</xref> mit dem void-Konstruktor. Standardeinstellungen:<itemizedlist><listitem><p>PartitionKey ist null.</p></listitem><listitem><p>MaxMessageSize ist die maximal zulässige Größe</p></listitem></itemizedlist></p>\n<p>Wenn Sie erstellen <xref uid=\"com.microsoft.azure.eventhubs._event_data_batch\" data-throw-if-not-resolved=\"false\">EventDataBatch</xref>es mit <xref uid=\"com.microsoft.azure.eventhubs._partition_sender\" data-throw-if-not-resolved=\"false\">PartitionSender</xref>, können Sie nur eine MaxMessageSize mithilfe der Methode .with() festlegen. Alternativ können Sie einfach erstellen, wenn Sie die Standardeinstellungen verwenden möchten, <xref uid=\"com.microsoft.azure.eventhubs._batch_options\" data-throw-if-not-resolved=\"false\">BatchOptions</xref> mit dem void-Konstruktor. Standardeinstellungen:<itemizedlist><listitem><p>MaxMessageSize ist die maximal zulässige Größe</p></listitem><listitem><p>Hinweis: Wenn Sie festlegen, dass einen Partitionsschlüssel eine <xref uid=\"\" data-throw-if-not-resolved=\"false\">IllegalArgumentException</xref> ausgelöst.</p></listitem></itemizedlist></p>\n<p>Um einen Typ eines Batch zu erstellen, erstellen Sie eine <xref uid=\"com.microsoft.azure.eventhubs._batch_options\" data-throw-if-not-resolved=\"false\">BatchOptions</xref> Objekt, und übergeben Sie ihn an die entsprechenden CreateBatch-Methode. Wenn <xref uid=\"com.microsoft.azure.eventhubs._partition_sender\" data-throw-if-not-resolved=\"false\">PartitionSender</xref>, verwenden Sie dann (<xref uid=\"com.microsoft.azure.eventhubs._partition_sender.createBatch(BatchOptions)\" data-throw-if-not-resolved=\"false\">PartitionSender#createBatch(BatchOptions)</xref>. Wenn <xref uid=\"com.microsoft.azure.eventhubs._event_hub_client\" data-throw-if-not-resolved=\"false\">EventHubClient</xref>, verwenden Sie dann <xref uid=\"com.microsoft.azure.eventhubs._event_hub_client.createBatch(BatchOptions)\" data-throw-if-not-resolved=\"false\">EventHubClient#createBatch(BatchOptions)</xref>.</p>\n<p>\n  <pre>\n    <code>// Note: For all examples, 'client' is an instance of EventHubClient. The usage is the same for PartitionSender,\n    however, you can NOT set a partition key when using PartitionSender\n    \n    // Create EventDataBatch with defaults\n    EventDataBatch edb1 = client.createBatch();\n    \n    // Create EventDataBatch with custom partitionKey\n    BatchOptions options = new BatchOptions().with( options -&gt; options.partitionKey = \"foo\");\n    EventDataBatch edb2 = client.createBatch(options);\n    \n    // Create EventDataBatch with custom partitionKey and maxMessageSize\n    BatchOptions options = new BatchOptions().with ( options -&gt; {\n        options.partitionKey = \"foo\";\n        options.maxMessageSize = 100 * 1024;\n    };\n    EventDataBatch edb3 = client.createBatch(options);\n    </code>\n  </pre>\n</p>"
    syntax:
      content: public class BatchOptions
  - uid: com.microsoft.azure.eventhubs._event_data
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._event_data.yml
    name: EventData
    nameWithType: EventData
    fullName: com.microsoft.azure.eventhubs.EventData
    type: Class
    summary: |-
      <p>Die Datenstruktur, die das Ereignis wird gesendet an und Empfangen von EventHubs kapseln. Jede Partition EventHubs visualisiert werden kann, als Datenstrom von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
      <p>Serialisieren eines empfangenen <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> mit AMQP-Abschnitten als ApplicationProperties (mit primitiven Java-Typen) und Daten der Abschnitt wird nicht unterstützt. </p>
      <p>So sieht wie AMQP-Nachricht-Abschnitten zugeordnet <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. Hier wird der Verweis, der für AMQP 1.0-Spezifikation verwendet: <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</ulink><pre>
      i.   <xref uid="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false">getProperties()</xref> - AMQPMessage.ApplicationProperties section
      ii.  <xref uid="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false">getBytes()</xref> - if AMQPMessage.Body has Data section
      iii. <xref uid="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false">getObject()</xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections
      </pre> Bei der Verwendung von Clientbibliotheken, die von Microsoft Azure EventHubs veröffentlicht wurden, sind die Abschnitte (i) und (Ii) allein ausreichend. Abschnitt (Iii) wird verwendet, für erweiterte Szenarien, in denen die sendende Anwendung eines Drittanbieters AMQP-Bibliothek zum Senden der Nachricht an EventHubs verwendet und die empfangende Anwendung verwendet diese Clientbibliothek zum Empfangen von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
    syntax:
      content: public class EventData
  - uid: com.microsoft.azure.eventhubs._partition_sender.send(EventDataBatch)
    parent: com.microsoft.azure.eventhubs._partition_sender
    href: com.microsoft.azure.eventhubs._partition_sender.yml
    name: send(EventDataBatch eventDatas)
    nameWithType: PartitionSender.send(EventDataBatch eventDatas)
    fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionSender.send(EventDataBatch eventDatas)
    type: Method
    summary: |-
      <p>Senden von <xref uid="com.microsoft.azure.eventhubs._event_data_batch" data-throw-if-not-resolved="false">EventDataBatch</xref> zu einer bestimmten Event Hub-Partition. Die eingerichteten Partition vorbestimmten Wenn dies <xref uid="com.microsoft.azure.eventhubs._partition_sender" data-throw-if-not-resolved="false">PartitionSender</xref> erstellt wurde. Eine PartitionKey kann nicht festgelegt werden, wenn mit <xref uid="com.microsoft.azure.eventhubs._event_data_batch" data-throw-if-not-resolved="false">EventDataBatch</xref> mit einem <xref uid="com.microsoft.azure.eventhubs._partition_sender" data-throw-if-not-resolved="false">PartitionSender</xref>. </p>
      <p>Es gibt 3 Arten an EventHubs, senden, um diesen speziellen Typ des Sendeports zu verstehen, finden Sie in der Überladung <xref uid="com.microsoft.azure.eventhubs._partition_sender.send(EventData)" data-throw-if-not-resolved="false">send(EventData)</xref>, die vom selben Typ des Sendeports und wird verwendet, um die einzelnen senden <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
      <p>Senden eines <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des ist in den folgenden Fällen nützlich: <pre>
      i.  Efficient send - sending a batch of <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> maximizes the overall throughput by optimally using the number of sessions created to EventHubs' service.
      ii. Send multiple <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>'s in a Transaction. To achieve ACID properties, the Gateway Service will forward all <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>'s in the batch to a single EventHubs' partition.
      </pre></p>
      <p></p>
    syntax: *ref_2
  - uid: com.microsoft.azure.eventhubs._partition_sender.send(EventData)
    parent: com.microsoft.azure.eventhubs._partition_sender
    href: com.microsoft.azure.eventhubs._partition_sender.yml
    name: send(EventData data)
    nameWithType: PartitionSender.send(EventData data)
    fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionSender.send(EventData data)
    type: Method
    summary: |-
      <p>Senden von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> zu einer bestimmten Event Hub-Partition. Die Zielpartition vorbestimmten Wenn dies <xref uid="com.microsoft.azure.eventhubs._partition_sender" data-throw-if-not-resolved="false">PartitionSender</xref> erstellt wurde. Dieses Muster senden hervorheben Korrelation der Daten über die allgemeine Verfügbarkeit und die Latenz. </p>
      <p>Es gibt 3 Arten EventHubs an, die jeweils als eine Methode (zusammen mit der Überladung SendBatch) verfügbar gemacht: <pre>
      i.   <xref uid="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false">EventHubClient#send(EventData)</xref>, <xref uid="" data-throw-if-not-resolved="false">EventHubClient#send(Iterable)</xref>, <xref uid="com.microsoft.azure.eventhubs._event_hub_client.send(final EventDataBatch)" data-throw-if-not-resolved="false">EventHubClient#send(EventDataBatch)</xref>
      ii.  <xref uid="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)" data-throw-if-not-resolved="false">EventHubClient#send(EventData, String)</xref> or <xref uid="" data-throw-if-not-resolved="false">EventHubClient#send(Iterable, String)</xref>
      iii. <xref uid="com.microsoft.azure.eventhubs._partition_sender.send(EventData)" data-throw-if-not-resolved="false">PartitionSender#send(EventData)</xref>, <xref uid="" data-throw-if-not-resolved="false">PartitionSender#send(Iterable)</xref>, or <xref uid="com.microsoft.azure.eventhubs._partition_sender.send(EventDataBatch)" data-throw-if-not-resolved="false">PartitionSender#send(EventDataBatch)</xref></pre></p>
      <p>Verwenden Sie diesen senden, wenn: <pre>
      i. The client wants to take direct control of distribution of data across partitions. In this case client is responsible for making sure there is at least one sender per event hub partition.
      ii. User cannot use partition key as a mean to direct events to specific partition, yet there is a need for data correlation with partitioning scheme.
      </pre></p>
      <p></p>
    syntax: *ref_3
  - uid: com.microsoft.azure.eventhubs._payload_size_exceeded_exception
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._payload_size_exceeded_exception.yml
    name: PayloadSizeExceededException
    nameWithType: PayloadSizeExceededException
    fullName: com.microsoft.azure.eventhubs.PayloadSizeExceededException
    type: Class
    summary: |-
      <p>Diese Ausnahme wird ausgelöst, wenn der Benutzer versucht, Daten oder vermittelte Nachrichten, die die zulässige Nutzlastgröße gemäß der Definition durch den Dienst Zustellversuchen senden. Beachten Sie, die in einem Batch Szenario den Grenzwert senden kann mögliche Batch Aufwand einschließen.</p>
      <p></p>
    syntax:
      content: public class PayloadSizeExceededException
  - uid: com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)
    parent: com.microsoft.azure.eventhubs._event_hub_client
    href: com.microsoft.azure.eventhubs._event_hub_client.yml
    name: send(final EventData data)
    nameWithType: EventHubClient.send(final EventData data)
    fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.EventHubClient.send(final EventData data)
    type: Method
    summary: "<p>Senden von <xref uid=\"com.microsoft.azure.eventhubs._event_data\" data-throw-if-not-resolved=\"false\">EventData</xref> an Event Hub. Die gesendeten <xref uid=\"com.microsoft.azure.eventhubs._event_data\" data-throw-if-not-resolved=\"false\">EventData</xref> werden auf der nach dem Zufallsprinzip ausgewählte EventHubs Partition aufgenommen. </p>\n<p>Es gibt 3 Arten EventHubs an, die jeweils als eine Methode (zusammen mit der Überladung SendBatch) verfügbar gemacht:<itemizedlist><listitem><p><xref uid=\"com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)\" data-throw-if-not-resolved=\"false\">Send(EventData)</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">send(Iterable)</xref>, oder <xref uid=\"com.microsoft.azure.eventhubs._event_hub_client.send(final EventDataBatch)\" data-throw-if-not-resolved=\"false\">send(EventDataBatch)</xref></p></listitem><listitem><p><xref uid=\"com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)\" data-throw-if-not-resolved=\"false\">Senden (EventData Zeichenfolge)</xref> oder <xref uid=\"\" data-throw-if-not-resolved=\"false\">senden (Iterable, String)</xref></p></listitem><listitem><p><xref uid=\"com.microsoft.azure.eventhubs._partition_sender.send(EventData)\" data-throw-if-not-resolved=\"false\">PartitionSender#send(EventData)</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">PartitionSender#send(Iterable)</xref>, oder <xref uid=\"com.microsoft.azure.eventhubs._partition_sender.send(EventDataBatch)\" data-throw-if-not-resolved=\"false\">PartitionSender#send(EventDataBatch)</xref></p></listitem></itemizedlist></p>\n<p>Verwenden Sie diese Methode zu senden, wenn: <pre>\na)  the send(<xref uid=\"com.microsoft.azure.eventhubs._event_data\" data-throw-if-not-resolved=\"false\">EventData</xref>) operation should be highly available and\nb)  the data needs to be evenly distributed among all partitions; exception being, when a subset of partitions are unavailable\n</pre></p>\n<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)\" data-throw-if-not-resolved=\"false\">Send(EventData)</xref> des Sendeports die <xref uid=\"com.microsoft.azure.eventhubs._event_data\" data-throw-if-not-resolved=\"false\">EventData</xref> zu einem Dienst-Gateway, die wiederum leitet die <xref uid=\"com.microsoft.azure.eventhubs._event_data\" data-throw-if-not-resolved=\"false\">EventData</xref> in eines der EventHubs Partitionen. Hier wird der Algorithmus für die nachrichtenweiterleitung aus: <pre>\n\ni.  Forward the <xref uid=\"com.microsoft.azure.eventhubs._event_data\" data-throw-if-not-resolved=\"false\">EventData</xref>'s to EventHub partitions, by equally distributing the data among all partitions (ex: Round-robin the <xref uid=\"com.microsoft.azure.eventhubs._event_data\" data-throw-if-not-resolved=\"false\">EventData</xref>'s to all EventHubs' partitions)\nii. If one of the EventHub partitions is unavailable for a moment, the Service Gateway will automatically detect it and forward the message to another available partition - making the Send operation highly-available.\n</pre></p>\n<p></p>"
    syntax:
      content: public final CompletableFuture<Void> send(final EventData data)
      parameters:
        - id: data
          type: 93de0ef9com.microsoft.azure.eventhubs._event_data
          description: <p>die <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> gesendet werden. </p>
      return:
        type: fc984e6f
        description: '<p>eine CompletableFuture, die abgeschlossen werden, kann die Send-Vorgänge wird nach Abschluss... </p>'
  - uid: com.microsoft.azure.eventhubs._event_hub_client.send(final EventDataBatch)
    parent: com.microsoft.azure.eventhubs._event_hub_client
    href: com.microsoft.azure.eventhubs._event_hub_client.yml
    name: send(final EventDataBatch eventDatas)
    nameWithType: EventHubClient.send(final EventDataBatch eventDatas)
    fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.EventHubClient.send(final EventDataBatch eventDatas)
    type: Method
    summary: |-
      <p>Senden von <xref uid="com.microsoft.azure.eventhubs._event_data_batch" data-throw-if-not-resolved="false">EventDataBatch</xref> an Event Hub. Die gesendeten <xref uid="com.microsoft.azure.eventhubs._event_data_batch" data-throw-if-not-resolved="false">EventDataBatch</xref> gelangen entsprechend der Partition Schlüsselsatzes in den <xref uid="com.microsoft.azure.eventhubs._event_data_batch" data-throw-if-not-resolved="false">EventDataBatch</xref>. Wenn Partitionsschlüssel ist nicht festgelegt, Round-Robin-Prinzip wird die <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des auf allen EventHubs Partitionen.</p>
      <p></p>
    syntax:
      content: public final CompletableFuture<Void> send(final EventDataBatch eventDatas)
      parameters:
        - id: eventDatas
          type: 93de0ef9com.microsoft.azure.eventhubs._event_data_batch
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.eventhubs._event_data_batch\" data-throw-if-not-resolved=\"false\">EventDataBatch</xref> EventHub an </p>"
      return:
        type: fc984e6f
        description: '<p>eine CompleteableFuture, die abgeschlossen werden kann, wenn die Send-Vorgänge abgeschlossen sind </p>'
  - uid: 'com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)'
    parent: com.microsoft.azure.eventhubs._event_hub_client
    href: com.microsoft.azure.eventhubs._event_hub_client.yml
    name: 'send(final EventData eventData, final String partitionKey)'
    nameWithType: 'EventHubClient.send(final EventData eventData, final String partitionKey)'
    fullName: 'final CompletableFuture<Void> com.microsoft.azure.eventhubs.EventHubClient.send(final EventData eventData, final String partitionKey)'
    type: Method
    summary: |-
      <p>Senden einer "<xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> mit einem PartitionKey" an Event Hub. Alle <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des mit einem PartitionKey ist sichergestellt, dass auf die gleiche Partition aufgenommen. Dieses Muster senden hervorheben Korrelation der Daten über die allgemeine Verfügbarkeit und die Latenz. </p>
      <p>Es gibt 3 Arten EventHubs an, die jeweils als eine Methode (zusammen mit der Überladung SendBatch) verfügbar gemacht: <pre>
      i.   <xref uid="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false">send(EventData)</xref> or <xref uid="" data-throw-if-not-resolved="false">send(Iterable)</xref>
      ii.  <xref uid="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)" data-throw-if-not-resolved="false">send(EventData, String)</xref> or <xref uid="" data-throw-if-not-resolved="false">send(Iterable, String)</xref>
      iii. <xref uid="com.microsoft.azure.eventhubs._partition_sender.send(EventData)" data-throw-if-not-resolved="false">PartitionSender#send(EventData)</xref> or <xref uid="" data-throw-if-not-resolved="false">PartitionSender#send(Iterable)</xref></pre></p>
      <p>Verwenden Sie diesen senden, wenn: <pre>
      i.  There is a need for correlation of events based on Sender instance; The sender can generate a UniqueId and set it as partitionKey - which on the received Message can be used for correlation
      ii. The client wants to take control of distribution of data across partitions.
      </pre></p>
      <p>Mehrere PartitionKey könnte zu einer einzigen Partition zugeordnet werden. EventHubs-Dienst verwendet einen proprietären Hash-Algorithmus eine PartitionId PartitionKey zuzuordnen. Mit diesem Typ des Sendeports (mit einem bestimmten PartitionKey senden), kann in einigen Fällen dazu führen Partitionen, die nicht gleichmäßig verteilt sind.</p>
      <p></p>
    syntax:
      content: 'public final CompletableFuture<Void> send(final EventData eventData, final String partitionKey)'
      parameters:
        - id: eventData
          type: 93de0ef9com.microsoft.azure.eventhubs._event_data
          description: <p>die <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> gesendet werden. </p>
        - id: partitionKey
          type: 3d93591e
          description: '<p>der partitionkey-Werte werden hash''ed, um zu bestimmen, die PartitionId die EventData zu senden. Für die empfangene Nachricht dies möglich, die am <xref uid="" data-throw-if-not-resolved="false">EventData.SystemProperties#getPartitionKey()</xref></p>'
      return:
        type: fc984e6f
        description: '<p>eine CompletableFuture, die abgeschlossen werden, kann die Send-Vorgänge wird nach Abschluss... </p>'
  - uid: com.microsoft.azure.eventhubs._event_hub_client
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._event_hub_client.yml
    name: EventHubClient
    nameWithType: EventHubClient
    fullName: com.microsoft.azure.eventhubs.EventHubClient
    type: Class
    summary: |-
      <p>Verankern Sie die Klasse – alle EventHub Clientvorgänge beginnt hier.</p>
      <p></p>
    syntax:
      content: public class EventHubClient extends ClientEntity implements IEventHubClient
  - uid: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync(final String)
    parent: com.microsoft.azure.eventhubs._event_hub_client
    href: com.microsoft.azure.eventhubs._event_hub_client.yml
    name: createFromConnectionStringSync(final String connectionString)
    nameWithType: EventHubClient.createFromConnectionStringSync(final String connectionString)
    fullName: static EventHubClient com.microsoft.azure.eventhubs.EventHubClient.createFromConnectionStringSync(final String connectionString)
    type: Method
    summary: |-
      <p>Die synchrone Version von <xref uid="com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)" data-throw-if-not-resolved="false">createFromConnectionString(String)</xref>.</p>
      <p></p>
    syntax:
      content: public static EventHubClient createFromConnectionStringSync(final String connectionString)
      parameters:
        - id: connectionString
          type: 3d93591e
          description: <p>Die Verbindungszeichenfolge verwendet werden. Finden Sie unter <xref uid="com.microsoft.azure.eventhubs._connection_string_builder" data-throw-if-not-resolved="false">ConnectionStringBuilder</xref> So erstellen Sie eine "ConnectionString". </p>
      return:
        type: com.microsoft.azure.eventhubs._event_hub_client
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.eventhubs._event_hub_client\" data-throw-if-not-resolved=\"false\">EventHubClient</xref> der können verwendet werden, um die Absendern und Empfängern an Event Hub erstellen </p>"
  - uid: com.microsoft.azure.eventhubs._event_hub_client.createPartitionSender(final String)
    parent: com.microsoft.azure.eventhubs._event_hub_client
    href: com.microsoft.azure.eventhubs._event_hub_client.yml
    name: createPartitionSender(final String partitionId)
    nameWithType: EventHubClient.createPartitionSender(final String partitionId)
    fullName: final CompletableFuture<PartitionSender> com.microsoft.azure.eventhubs.EventHubClient.createPartitionSender(final String partitionId)
    type: Method
    summary: |-
      <p>Erstellen einer <xref uid="com.microsoft.azure.eventhubs._partition_sender" data-throw-if-not-resolved="false">PartitionSender</xref> die veröffentlichen können <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des direkt zu einer bestimmten Event Hub-Partition (Absender Typ Iii. in der folgenden Liste). </p>
      <p>Es gibt 3 Muster/Möglichkeiten EventHubs an: <pre>
      i.   <xref uid="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false">send(EventData)</xref> or <xref uid="" data-throw-if-not-resolved="false">send(Iterable)</xref>
      ii.  <xref uid="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData,final String)" data-throw-if-not-resolved="false">send(EventData, String)</xref> or <xref uid="" data-throw-if-not-resolved="false">send(Iterable, String)</xref>
      iii. <xref uid="com.microsoft.azure.eventhubs._partition_sender.send(EventData)" data-throw-if-not-resolved="false">PartitionSender#send(EventData)</xref> or <xref uid="" data-throw-if-not-resolved="false">PartitionSender#send(Iterable)</xref></pre></p>
      <p></p>
    syntax:
      content: public final CompletableFuture<PartitionSender> createPartitionSender(final String partitionId)
      parameters:
        - id: partitionId
          type: 3d93591e
          description: <p>PartitionId von EventHub zum Senden der <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des an </p>
      return:
        type: 9971d449com.microsoft.azure.eventhubs._partition_sendera08ddfce
        description: '<p>eine CompletableFuture, die zur Folge hätte eine <xref uid="com.microsoft.azure.eventhubs._partition_sender" data-throw-if-not-resolved="false">PartitionSender</xref> abgeschlossen ist. </p>'
  - uid: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)
    parent: com.microsoft.azure.eventhubs._event_hub_client
    href: com.microsoft.azure.eventhubs._event_hub_client.yml
    name: createFromConnectionString(final String connectionString)
    nameWithType: EventHubClient.createFromConnectionString(final String connectionString)
    fullName: static CompletableFuture<EventHubClient> com.microsoft.azure.eventhubs.EventHubClient.createFromConnectionString(final String connectionString)
    type: Method
    summary: |-
      <p>Factorymethode zum Erstellen einer Instanz des <xref uid="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false">EventHubClient</xref> unter Verwendung der angegebenen Verbindungszeichenfolge. In einem normalen Szenario (wenn umzuleiten, nicht aktiviert ist) – eine <xref uid="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false">EventHubClient</xref> Instanz zugeordnet wird, um eine Verbindung mit der Azure Service Bus EventHubs-Dienst. </p>
      <p>Die <xref uid="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false">EventHubClient</xref> erstellt, die von dieser Methode erstellt eine Instanz der Absender intern die wird von der <xref uid="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false">send(EventData)</xref> Methoden.</p>
      <p></p>
    syntax:
      content: public static CompletableFuture<EventHubClient> createFromConnectionString(final String connectionString)
      parameters:
        - id: connectionString
          type: 3d93591e
          description: <p>Die Verbindungszeichenfolge verwendet werden. Finden Sie unter <xref uid="com.microsoft.azure.eventhubs._connection_string_builder" data-throw-if-not-resolved="false">ConnectionStringBuilder</xref> So erstellen Sie eine "ConnectionString". </p>
      return:
        type: 9cdf14d0com.microsoft.azure.eventhubs._event_hub_clienta08ddfce
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.eventhubs._event_hub_client\" data-throw-if-not-resolved=\"false\">EventHubClient</xref> der können verwendet werden, um die Absendern und Empfängern an Event Hub erstellen </p>"