### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.eventhubs._partition_receive_handler
    id: _partition_receive_handler
    parent: com.microsoft.azure.eventhubs
    children:
      - com.microsoft.azure.eventhubs._partition_receive_handler.onError(Throwable)
      - com.microsoft.azure.eventhubs._partition_receive_handler.onReceive(Iterable<EventData>)
      - com.microsoft.azure.eventhubs._partition_receive_handler.PartitionReceiveHandler(final int)
      - com.microsoft.azure.eventhubs._partition_receive_handler.setMaxEventCount(final int)
    href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
    langs:
      - java
    name: PartitionReceiveHandler
    nameWithType: PartitionReceiveHandler
    fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler
    type: Class
    source:
      remote: &ref_0
        path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiveHandler.java
        branch: master
        repo: 'https://github.com/Azure/azure-event-hubs-java'
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiveHandler.java
      startLine: 12
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Eine für den Empfangsvorgang Handler-Klasse. Verwenden Sie Implementierung dieser abstrakten Klasse Handlung des Benutzers an, wenn mit <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>des setReceiveHandler().</p>
      <p></p>
    syntax: &ref_2
      content: public class PartitionReceiveHandler
    see:
      - type: com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler(final PartitionReceiveHandler)
        description: 'PartitionReceiver::setReceiveHandler'
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.eventhubs._partition_receive_handler.onError(Throwable)
    id: onError(Throwable)
    parent: com.microsoft.azure.eventhubs._partition_receive_handler
    href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
    langs:
      - java
    name: onError(Throwable error)
    nameWithType: PartitionReceiveHandler.onError(Throwable error)
    fullName: abstract void com.microsoft.azure.eventhubs.PartitionReceiveHandler.onError(Throwable error)
    overload: com.microsoft.azure.eventhubs._partition_receive_handler.onError*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiveHandler.java
      startLine: 46
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Implementieren Sie diese Methode zur Überwachung auf Fehler, die bis zum Abschluss der führen die <xref uid="com.microsoft.azure.eventhubs._partition_receive_handler" data-throw-if-not-resolved="false">PartitionReceiveHandler</xref> Datapump.</p>
      <p></p>
    syntax:
      content: public abstract void onError(Throwable error)
      parameters:
        - id: error
          type: a04fafd7
          description: <p>Schwerwiegender Fehler während der Ausführung der <xref uid="com.microsoft.azure.eventhubs._partition_receive_handler" data-throw-if-not-resolved="false">PartitionReceiveHandler</xref> Datapump </p>
      return:
        type: 5beb11ad
  - uid: com.microsoft.azure.eventhubs._partition_receive_handler.onReceive(Iterable<EventData>)
    id: onReceive(Iterable<EventData>)
    parent: com.microsoft.azure.eventhubs._partition_receive_handler
    href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
    langs:
      - java
    name: onReceive(Iterable<EventData> events)
    nameWithType: PartitionReceiveHandler.onReceive(Iterable<EventData> events)
    fullName: abstract void com.microsoft.azure.eventhubs.PartitionReceiveHandler.onReceive(Iterable<EventData> events)
    overload: com.microsoft.azure.eventhubs._partition_receive_handler.onReceive*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiveHandler.java
      startLine: 39
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Benutzer sollten implementieren Sie diese Methode, um die Aktion anzugeben, für die empfangenen Ereignisse ausgeführt werden soll.</p>
      <p></p>
    syntax: &ref_1
      content: public abstract void onReceive(Iterable<EventData> events)
      parameters:
        - id: events
          type: 2a13b5a5com.microsoft.azure.eventhubs._event_dataa08ddfce
          description: <p>die Liste der abgerufenen Ereignisse aus der entsprechenden <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>. </p>
      return:
        type: 5beb11ad
    see:
      - type: com.microsoft.azure.eventhubs._partition_receiver.receive(final int)
        description: 'PartitionReceiver::receive'
  - uid: com.microsoft.azure.eventhubs._partition_receive_handler.PartitionReceiveHandler(final int)
    id: PartitionReceiveHandler(final int)
    parent: com.microsoft.azure.eventhubs._partition_receive_handler
    href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
    langs:
      - java
    name: PartitionReceiveHandler(final int maxEventCount)
    nameWithType: PartitionReceiveHandler.PartitionReceiveHandler(final int maxEventCount)
    fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler.PartitionReceiveHandler(final int maxEventCount)
    overload: com.microsoft.azure.eventhubs._partition_receive_handler.PartitionReceiveHandler*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiveHandler.java
      startLine: 15
    package: com.microsoft.azure.eventhubs
    syntax:
      content: protected PartitionReceiveHandler(final int maxEventCount)
      parameters:
        - id: maxEventCount
          type: cd225469
  - uid: com.microsoft.azure.eventhubs._partition_receive_handler.setMaxEventCount(final int)
    id: setMaxEventCount(final int)
    parent: com.microsoft.azure.eventhubs._partition_receive_handler
    href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
    langs:
      - java
    name: setMaxEventCount(final int value)
    nameWithType: PartitionReceiveHandler.setMaxEventCount(final int value)
    fullName: final void com.microsoft.azure.eventhubs.PartitionReceiveHandler.setMaxEventCount(final int value)
    overload: com.microsoft.azure.eventhubs._partition_receive_handler.setMaxEventCount*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiveHandler.java
      startLine: 29
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Implementierer der <xref uid="com.microsoft.azure.eventhubs._partition_receive_handler.onReceive(Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false">PartitionReceiveHandler #onReceive</xref> können dies zur Festlegung der maximalen auf maximal <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des, die empfangen werden können, durch das nächste <xref uid="com.microsoft.azure.eventhubs._partition_receive_handler.onReceive(Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false">PartitionReceiveHandler #onReceive</xref> aufrufen</p>
      <p></p>
    syntax:
      content: protected final void setMaxEventCount(final int value)
      parameters:
        - id: value
          type: cd225469
          description: '<p>maximale <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des in der nächsten empfangen werden <xref uid="com.microsoft.azure.eventhubs._partition_receive_handler.onReceive(Iterable&lt;EventData&gt;)" data-throw-if-not-resolved="false">PartitionReceiveHandler #onReceive</xref> aufrufen </p>'
      return:
        type: 3f6357ce
references:
  - uid: cd225469
    spec.java:
      - name: final int
        fullName: final int
  - uid: com.microsoft.azure.eventhubs._partition_receive_handler.PartitionReceiveHandler*
    name: PartitionReceiveHandler
    nameWithType: PartitionReceiveHandler.PartitionReceiveHandler
    fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler.PartitionReceiveHandler
    package: com.microsoft.azure.eventhubs
  - uid: 3f6357ce
    spec.java:
      - name: final void
        fullName: final void
  - uid: com.microsoft.azure.eventhubs._partition_receive_handler.setMaxEventCount*
    name: setMaxEventCount
    nameWithType: PartitionReceiveHandler.setMaxEventCount
    fullName: final void com.microsoft.azure.eventhubs.PartitionReceiveHandler.setMaxEventCount
    package: com.microsoft.azure.eventhubs
  - uid: 2a13b5a5com.microsoft.azure.eventhubs._event_dataa08ddfce
    spec.java:
      - name: Iterable<
        fullName: Iterable<
      - uid: com.microsoft.azure.eventhubs._event_data
        name: EventData
        fullName: com.microsoft.azure.eventhubs.EventData
        href: com.microsoft.azure.eventhubs._event_data.yml
      - name: '>'
        fullName: '>'
  - uid: 5beb11ad
    spec.java:
      - name: abstract void
        fullName: abstract void
  - uid: com.microsoft.azure.eventhubs._partition_receive_handler.onReceive*
    name: onReceive
    nameWithType: PartitionReceiveHandler.onReceive
    fullName: abstract void com.microsoft.azure.eventhubs.PartitionReceiveHandler.onReceive
    package: com.microsoft.azure.eventhubs
  - uid: a04fafd7
    spec.java:
      - name: Throwable
        fullName: Throwable
  - uid: com.microsoft.azure.eventhubs._partition_receive_handler.onError*
    name: onError
    nameWithType: PartitionReceiveHandler.onError
    fullName: abstract void com.microsoft.azure.eventhubs.PartitionReceiveHandler.onError
    package: com.microsoft.azure.eventhubs
  - uid: com.microsoft.azure.eventhubs._partition_receive_handler.onReceive(Iterable<EventData>)
    parent: com.microsoft.azure.eventhubs._partition_receive_handler
    href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
    name: onReceive(Iterable<EventData> events)
    nameWithType: PartitionReceiveHandler.onReceive(Iterable<EventData> events)
    fullName: abstract void com.microsoft.azure.eventhubs.PartitionReceiveHandler.onReceive(Iterable<EventData> events)
    type: Method
    summary: |-
      <p>Benutzer sollten implementieren Sie diese Methode, um die Aktion anzugeben, für die empfangenen Ereignisse ausgeführt werden soll.</p>
      <p></p>
    syntax: *ref_1
  - uid: com.microsoft.azure.eventhubs._event_data
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._event_data.yml
    name: EventData
    nameWithType: EventData
    fullName: com.microsoft.azure.eventhubs.EventData
    type: Class
    summary: |-
      <p>Die Datenstruktur, die das Ereignis wird gesendet an und Empfangen von EventHubs kapseln. Jede Partition EventHubs visualisiert werden kann, als Datenstrom von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
      <p>Serialisieren eines empfangenen <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> mit AMQP-Abschnitten als ApplicationProperties (mit primitiven Java-Typen) und Daten der Abschnitt wird nicht unterstützt. </p>
      <p>So sieht wie AMQP-Nachricht-Abschnitten zugeordnet <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. Hier wird der Verweis, der für AMQP 1.0-Spezifikation verwendet: <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</ulink><pre>
      i.   <xref uid="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false">getProperties()</xref> - AMQPMessage.ApplicationProperties section
      ii.  <xref uid="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false">getBytes()</xref> - if AMQPMessage.Body has Data section
      iii. <xref uid="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false">getObject()</xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections
      </pre> Bei der Verwendung von Clientbibliotheken, die von Microsoft Azure EventHubs veröffentlicht wurden, sind die Abschnitte (i) und (Ii) allein ausreichend. Abschnitt (Iii) wird verwendet, für erweiterte Szenarien, in denen die sendende Anwendung eines Drittanbieters AMQP-Bibliothek zum Senden der Nachricht an EventHubs verwendet und die empfangende Anwendung verwendet diese Clientbibliothek zum Empfangen von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
    syntax:
      content: public class EventData
  - uid: com.microsoft.azure.eventhubs._partition_receiver
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    name: PartitionReceiver
    nameWithType: PartitionReceiver
    fullName: com.microsoft.azure.eventhubs.PartitionReceiver
    type: Class
    summary: |-
      <p>Dies ist eine logische Darstellung des Empfangs aus einen Event Hub-Partition. </p>
      <p>Ein <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> ist an eine ConsumerGroup + EventHub Partition gebunden Kombination. <itemizedlist><listitem><p>Wenn Sie eine Epoche basiert <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> (d. h. <xref uid="com.microsoft.azure.eventhubs._partition_receiver.getEpoch()" data-throw-if-not-resolved="false">PartitionReceiver.getEpoch</xref> ! = 0) wird erstellt, EventHubs Dienst auch dafür nur 1 aktive Empfänger pro ConsumerGroup + Partition vorhanden ist Kombinationsfeld. Dies ist die empfohlene Vorgehensweise zum Erstellen einer <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>. </p></listitem><listitem><p>Mehrere Empfänger pro ConsumerGroup + Partition kann Kombinationsfeld mit nicht-Epoche Empfänger erstellt werden. </p></listitem></itemizedlist></p>
      <p></p>
    syntax:
      content: public class PartitionReceiver
  - uid: com.microsoft.azure.eventhubs._partition_receiver.receive(final int)
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    name: receive(final int maxEventCount)
    nameWithType: PartitionReceiver.receive(final int maxEventCount)
    fullName: CompletableFuture<Iterable<EventData>> com.microsoft.azure.eventhubs.PartitionReceiver.receive(final int maxEventCount)
    type: Method
    summary: |-
      <p>Empfangen ein Batches von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des aus einem EventHub partitionieren </p>
      <p>Beispielcode (Beispiel verwendet die Synchronisierungsversion der api jedoch Konzept identisch sind): <pre><xref uid="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false">EventHubClient</xref> client = <xref uid="com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync(final String)" data-throw-if-not-resolved="false">EventHubClient.createFromConnectionStringSync</xref>("__connection__");
      <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> receiver = client.createPartitionReceiverSync("ConsumerGroup1", "1");
      Iterable{&lt;}<xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>{&gt;} receivedEvents = receiver.receiveSync();</pre></p>
      <p>

        <pre>while (true)

      {

          int batchSize = 0;

          if (receivedEvents != null)

          {

              for(EventData receivedEvent: receivedEvents)

              {

                  System.out.println(String.format("Message Payload: %s", new String(receivedEvent.getBytes(), Charset.defaultCharset())));

                  System.out.println(String.format("Offset: %s, SeqNo: %s, EnqueueTime: %s",

                      receivedEvent.getSystemProperties().getOffset(),

                      receivedEvent.getSystemProperties().getSequenceNumber(),

                      receivedEvent.getSystemProperties().getEnqueuedTime()));

                  batchSize++;

              }

          }</pre>

      </p>
      <p>

        <pre>    System.out.println(String.format("ReceivedBatch Size: %s", batchSize));

          receivedEvents = receiver.receiveSync();

      }
      </pre>
      </p>
      <p></p>
    syntax:
      content: public CompletableFuture<Iterable<EventData>> receive(final int maxEventCount)
      parameters:
        - id: maxEventCount
          type: cd225469
          description: '<p>maximale Anzahl von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des, die dieser Aufruf sollte zurückgeben. </p>'
      return:
        type: 5ae8a14ccom.microsoft.azure.eventhubs._event_datae7daa122
        description: '<p>Eine, die einen Batch von gedachten CompletableFuture <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des aus der Partition, für die dieser Empfänger erstellt wird. Gibt "null" zurück, wenn kein <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> vorhanden ist. </p>'
  - uid: com.microsoft.azure.eventhubs._partition_receive_handler
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
    name: PartitionReceiveHandler
    nameWithType: PartitionReceiveHandler
    fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler
    type: Class
    summary: |-
      <p>Eine für den Empfangsvorgang Handler-Klasse. Verwenden Sie Implementierung dieser abstrakten Klasse Handlung des Benutzers an, wenn mit <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>des setReceiveHandler().</p>
      <p></p>
    syntax: *ref_2
  - uid: com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler(final PartitionReceiveHandler)
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    name: setReceiveHandler(final PartitionReceiveHandler receiveHandler)
    nameWithType: PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler)
    fullName: CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler)
    type: Method
    summary: |-
      <p>Registrieren Sie einen Empfangshandler, der aufgerufen wird, wenn ein Ereignis verfügbar ist. Ein <xref uid="com.microsoft.azure.eventhubs._partition_receive_handler" data-throw-if-not-resolved="false">PartitionReceiveHandler</xref> wird ein Handler, der Benutzer einen Rückruf für die Verarbeitung von Ereignissen und Fehlerbehandlung in einem Receive Datapump Modell angeben kann.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> setReceiveHandler(final PartitionReceiveHandler receiveHandler)
      parameters:
        - id: receiveHandler
          type: 93de0ef9com.microsoft.azure.eventhubs._partition_receive_handler
          description: <p>Eine Implementierung der <xref uid="com.microsoft.azure.eventhubs._partition_receive_handler" data-throw-if-not-resolved="false">PartitionReceiveHandler</xref>. Wenn dieser Handler auf <code>null</code> hält die Receive-Datapump. </p>
      return:
        type: db03ee24
        description: <p>Eine CompletableFuture die ReceiveHandler festlegt. </p>