### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._actor_type_information
    id: _actor_type_information
    parent: microsoft.servicefabric.actors
    children:
      - microsoft.servicefabric.actors._actor_type_information.ActorTypeInformation()
      - microsoft.servicefabric.actors._actor_type_information.get(Class<?>)
      - microsoft.servicefabric.actors._actor_type_information.getEventInterfaceTypes()
      - microsoft.servicefabric.actors._actor_type_information.getImplementationType()
      - microsoft.servicefabric.actors._actor_type_information.getInterfaceTypes()
      - microsoft.servicefabric.actors._actor_type_information.getServiceName()
      - microsoft.servicefabric.actors._actor_type_information.getStatePersistence()
      - microsoft.servicefabric.actors._actor_type_information.isAbstract()
      - microsoft.servicefabric.actors._actor_type_information.isRemindable()
    href: microsoft.servicefabric.actors._actor_type_information.yml
    langs:
      - java
    name: ActorTypeInformation
    nameWithType: ActorTypeInformation
    fullName: microsoft.servicefabric.actors.ActorTypeInformation
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorTypeInformation.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorTypeInformation.java
      startLine: 8
    package: microsoft.servicefabric.actors
    summary: <p><span data-ttu-id="77417-101">Enthält Informationen zum Implementieren von eines Akteurs Typ an.</span><span class="sxs-lookup"><span data-stu-id="77417-101">Contains information about the type implementing an actor.</span></span> </p>
    syntax: &ref_1
      content: public class ActorTypeInformation
    inheritance:
      - java.lang.Object
  - uid: microsoft.servicefabric.actors._actor_type_information.ActorTypeInformation()
    id: ActorTypeInformation()
    parent: microsoft.servicefabric.actors._actor_type_information
    href: microsoft.servicefabric.actors._actor_type_information.yml
    langs:
      - java
    name: ActorTypeInformation()
    nameWithType: ActorTypeInformation.ActorTypeInformation()
    fullName: microsoft.servicefabric.actors.ActorTypeInformation.ActorTypeInformation()
    overload: microsoft.servicefabric.actors._actor_type_information.ActorTypeInformation*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorTypeInformation.java
      startLine: 81
    package: microsoft.servicefabric.actors
    summary: <p><span data-ttu-id="77417-102">Initialisiert eine neue Instanz der dem <xref uid="microsoft.servicefabric.actors._actor_type_information" data-throw-if-not-resolved="false">ActorTypeInformation</xref> Klasse.</span><span class="sxs-lookup"><span data-stu-id="77417-102">Initializes a new instance of the <xref uid="microsoft.servicefabric.actors._actor_type_information" data-throw-if-not-resolved="false">ActorTypeInformation</xref> class.</span></span> </p>
    syntax:
      content: public ActorTypeInformation()
  - uid: microsoft.servicefabric.actors._actor_type_information.get(Class<?>)
    id: get(Class<?>)
    parent: microsoft.servicefabric.actors._actor_type_information
    href: microsoft.servicefabric.actors._actor_type_information.yml
    langs:
      - java
    name: get(Class<?> actorClass)
    nameWithType: ActorTypeInformation.get(Class<?> actorClass)
    fullName: static ActorTypeInformation microsoft.servicefabric.actors.ActorTypeInformation.get(Class<?> actorClass)
    overload: microsoft.servicefabric.actors._actor_type_information.get*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorTypeInformation.java
      startLine: 102
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="77417-103">Erstellt <xref uid="microsoft.servicefabric.actors._actor_type_information" data-throw-if-not-resolved="false">ActorTypeInformation</xref> aus ActorType.</span><span class="sxs-lookup"><span data-stu-id="77417-103">Creates <xref uid="microsoft.servicefabric.actors._actor_type_information" data-throw-if-not-resolved="false">ActorTypeInformation</xref> from actorType.</span></span></p>
      <p>
      <span data-ttu-id="77417-104">Wenn der Basistyp für ActorType ist nicht vom Typ <xref uid="microsoft.servicefabric.actors._actor_base" data-throw-if-not-resolved="false">ActorBase</xref>.</span><span class="sxs-lookup"><span data-stu-id="77417-104">When base type for actorType is not of type <xref uid="microsoft.servicefabric.actors._actor_base" data-throw-if-not-resolved="false">ActorBase</xref>.</span></span> </p>
      <p><span data-ttu-id="77417-105">Wenn ActorType keine Schnittstelle ableiten von implementiert <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Akteur</xref> und ist nicht als abstrakt gekennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="77417-105">When actorType does not implement an interface deriving from <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> and is not marked as abstract.</span></span> </p>
      <p><span data-ttu-id="77417-106">Wenn ActorType implementiert mehrere Schnittstellen abgeleitet von <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Akteur</xref> jedoch keine <xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref>.</span><span class="sxs-lookup"><span data-stu-id="77417-106">When actorType implements more than one interface which derives from <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> but doesn't have <xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref>.</span></span> </p>
    syntax:
      content: public static ActorTypeInformation get(Class<?> actorClass)
      parameters:
        - id: actorClass
          type: a19781f8
          description: '<p><span data-ttu-id="77417-107">Der Typ der Klasse, die den Akteur zum Erstellen von ActorTypeInforamtion für implementiert.</span><span class="sxs-lookup"><span data-stu-id="77417-107">Type of class implementing the actor to create ActorTypeInforamtion for.</span></span> </p>'
      return:
        type: microsoft.servicefabric.actors._actor_type_information
        description: "<p><span data-ttu-id=\"77417-108\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_type_information\" data-throw-if-not-resolved=\"false\">ActorTypeInformation</xref> aus ActorType erstellt wurde.</span><span class=\"sxs-lookup\"><span data-stu-id=\"77417-108\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_type_information\" data-throw-if-not-resolved=\"false\">ActorTypeInformation</xref> created from actorType.</span></span> </p>"
    exceptions:
      - type: 3c87bd19
  - uid: microsoft.servicefabric.actors._actor_type_information.getEventInterfaceTypes()
    id: getEventInterfaceTypes()
    parent: microsoft.servicefabric.actors._actor_type_information
    href: microsoft.servicefabric.actors._actor_type_information.yml
    langs:
      - java
    name: getEventInterfaceTypes()
    nameWithType: ActorTypeInformation.getEventInterfaceTypes()
    fullName: List<Class<?>> microsoft.servicefabric.actors.ActorTypeInformation.getEventInterfaceTypes()
    overload: microsoft.servicefabric.actors._actor_type_information.getEventInterfaceTypes*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorTypeInformation.java
      startLine: 49
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="77417-109">Ruft die Akteur Ereignisschnittstelle, die die Akteurklasse implementiert.</span><span class="sxs-lookup"><span data-stu-id="77417-109">Gets actor event interface which the actor class implements.</span></span></p>
      <p></p>
    syntax:
      content: public List<Class<?>> getEventInterfaceTypes()
      return:
        type: 0e0b5418
        description: '<p><span data-ttu-id="77417-110">Ein Enumerator Hat kann verwendet werden, um Ereignisschnittstelle Akteur durchlaufen, die die Akteurklasse implementiert.</span><span class="sxs-lookup"><span data-stu-id="77417-110">An enumerator hat can be used to iterate through the actor event interface which the actor class implements.</span></span> </p>'
  - uid: microsoft.servicefabric.actors._actor_type_information.getImplementationType()
    id: getImplementationType()
    parent: microsoft.servicefabric.actors._actor_type_information
    href: microsoft.servicefabric.actors._actor_type_information.yml
    langs:
      - java
    name: getImplementationType()
    nameWithType: ActorTypeInformation.getImplementationType()
    fullName: Class<?> microsoft.servicefabric.actors.ActorTypeInformation.getImplementationType()
    overload: microsoft.servicefabric.actors._actor_type_information.getImplementationType*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorTypeInformation.java
      startLine: 29
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="77417-111">Ruft den Klassentyp den Akteur implementieren.</span><span class="sxs-lookup"><span data-stu-id="77417-111">Gets type of the class implementing the actor.</span></span></p>
      <p></p>
    syntax:
      content: public Class<?> getImplementationType()
      return:
        type: a19781f8
        description: "<p><span data-ttu-id=\"77417-112\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.Class</xref> Typ der Klasse, die den Akteur implementieren.</span><span class=\"sxs-lookup\"><span data-stu-id=\"77417-112\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.Class</xref> type of the class implementing the actor.</span></span> </p>"
  - uid: microsoft.servicefabric.actors._actor_type_information.getInterfaceTypes()
    id: getInterfaceTypes()
    parent: microsoft.servicefabric.actors._actor_type_information
    href: microsoft.servicefabric.actors._actor_type_information.yml
    langs:
      - java
    name: getInterfaceTypes()
    nameWithType: ActorTypeInformation.getInterfaceTypes()
    fullName: List<Class<?>> microsoft.servicefabric.actors.ActorTypeInformation.getInterfaceTypes()
    overload: microsoft.servicefabric.actors._actor_type_information.getInterfaceTypes*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorTypeInformation.java
      startLine: 39
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="77417-113">Ruft den Akteur Schnittstellentypen die Ableitung <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Akteur</xref> und vom Akteurklasse implementiert werden.</span><span class="sxs-lookup"><span data-stu-id="77417-113">Gets the actor interface types which derive from <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Actor</xref> and implemented by actor class.</span></span></p>
      <p></p>
    syntax:
      content: public List<Class<?>> getInterfaceTypes()
      return:
        type: 0e0b5418
        description: '<p><span data-ttu-id="77417-114">Ein Enumerator, der zum Durchlaufen des Akteur Schnittstellentyps verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="77417-114">An enumerator that can be used to iterate through the actor interface type.</span></span> </p>'
  - uid: microsoft.servicefabric.actors._actor_type_information.getServiceName()
    id: getServiceName()
    parent: microsoft.servicefabric.actors._actor_type_information
    href: microsoft.servicefabric.actors._actor_type_information.yml
    langs:
      - java
    name: getServiceName()
    nameWithType: ActorTypeInformation.getServiceName()
    fullName: String microsoft.servicefabric.actors.ActorTypeInformation.getServiceName()
    overload: microsoft.servicefabric.actors._actor_type_information.getServiceName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorTypeInformation.java
      startLine: 59
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="77417-115">Ruft Dienstname angegeben mit <xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref> für Akteurklasse.</span><span class="sxs-lookup"><span data-stu-id="77417-115">Gets service name if specified using <xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref> for actor class.</span></span></p>
      <p></p>
    syntax:
      content: public String getServiceName()
      return:
        type: '26831127'
        description: '<p><span data-ttu-id="77417-116">Dienstname angegeben mit <xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref> für Akteurklasse, null, wenn das Attribut nicht verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="77417-116">Service name if specified using <xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref> for actor class, null if attribute is not used.</span></span> </p>'
  - uid: microsoft.servicefabric.actors._actor_type_information.getStatePersistence()
    id: getStatePersistence()
    parent: microsoft.servicefabric.actors._actor_type_information
    href: microsoft.servicefabric.actors._actor_type_information.yml
    langs:
      - java
    name: getStatePersistence()
    nameWithType: ActorTypeInformation.getStatePersistence()
    fullName: StatePersistence microsoft.servicefabric.actors.ActorTypeInformation.getStatePersistence()
    overload: microsoft.servicefabric.actors._actor_type_information.getStatePersistence*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorTypeInformation.java
      startLine: 76
    package: microsoft.servicefabric.actors
    syntax:
      content: public StatePersistence getStatePersistence()
      return:
        type: microsoft.servicefabric.actors._state_persistence
  - uid: microsoft.servicefabric.actors._actor_type_information.isAbstract()
    id: isAbstract()
    parent: microsoft.servicefabric.actors._actor_type_information
    href: microsoft.servicefabric.actors._actor_type_information.yml
    langs:
      - java
    name: isAbstract()
    nameWithType: ActorTypeInformation.isAbstract()
    fullName: boolean microsoft.servicefabric.actors.ActorTypeInformation.isAbstract()
    overload: microsoft.servicefabric.actors._actor_type_information.isAbstract*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorTypeInformation.java
      startLine: 68
    package: microsoft.servicefabric.actors
    summary: |-
      <p><span data-ttu-id="77417-117">Ruft ab, ob implementierende Akteur Klasse abstrakt ist.</span><span class="sxs-lookup"><span data-stu-id="77417-117">Gets if class implementing actor is abstract.</span></span></p>
      <p></p>
    syntax:
      content: public boolean isAbstract()
      return:
        type: 4fc6e284
        description: '<p><span data-ttu-id="77417-118">"true", wenn implementierende Akteur Klasse abstrakt, andernfalls "false ist".</span><span class="sxs-lookup"><span data-stu-id="77417-118">true if class implementing actor is abstract, otherwise false.</span></span> </p>'
  - uid: microsoft.servicefabric.actors._actor_type_information.isRemindable()
    id: isRemindable()
    parent: microsoft.servicefabric.actors._actor_type_information
    href: microsoft.servicefabric.actors._actor_type_information.yml
    langs:
      - java
    name: isRemindable()
    nameWithType: ActorTypeInformation.isRemindable()
    fullName: boolean microsoft.servicefabric.actors.ActorTypeInformation.isRemindable()
    overload: microsoft.servicefabric.actors._actor_type_information.isRemindable*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorTypeInformation.java
      startLine: 72
    package: microsoft.servicefabric.actors
    syntax:
      content: public boolean isRemindable()
      return:
        type: 4fc6e284
references:
  - uid: a19781f8
    spec.java:
      - name: Class<?>
        fullName: Class<?>
  - uid: microsoft.servicefabric.actors._actor_type_information.getImplementationType*
    name: getImplementationType
    nameWithType: ActorTypeInformation.getImplementationType
    fullName: Class<?> microsoft.servicefabric.actors.ActorTypeInformation.getImplementationType
    package: microsoft.servicefabric.actors
  - uid: 0e0b5418
    spec.java:
      - name: List<Class<?>>
        fullName: List<Class<?>>
  - uid: microsoft.servicefabric.actors._actor_type_information.getInterfaceTypes*
    name: getInterfaceTypes
    nameWithType: ActorTypeInformation.getInterfaceTypes
    fullName: List<Class<?>> microsoft.servicefabric.actors.ActorTypeInformation.getInterfaceTypes
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_type_information.getEventInterfaceTypes*
    name: getEventInterfaceTypes
    nameWithType: ActorTypeInformation.getEventInterfaceTypes
    fullName: List<Class<?>> microsoft.servicefabric.actors.ActorTypeInformation.getEventInterfaceTypes
    package: microsoft.servicefabric.actors
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: microsoft.servicefabric.actors._actor_type_information.getServiceName*
    name: getServiceName
    nameWithType: ActorTypeInformation.getServiceName
    fullName: String microsoft.servicefabric.actors.ActorTypeInformation.getServiceName
    package: microsoft.servicefabric.actors
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: microsoft.servicefabric.actors._actor_type_information.isAbstract*
    name: isAbstract
    nameWithType: ActorTypeInformation.isAbstract
    fullName: boolean microsoft.servicefabric.actors.ActorTypeInformation.isAbstract
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_type_information.isRemindable*
    name: isRemindable
    nameWithType: ActorTypeInformation.isRemindable
    fullName: boolean microsoft.servicefabric.actors.ActorTypeInformation.isRemindable
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_type_information.getStatePersistence*
    name: getStatePersistence
    nameWithType: ActorTypeInformation.getStatePersistence
    fullName: StatePersistence microsoft.servicefabric.actors.ActorTypeInformation.getStatePersistence
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_type_information.ActorTypeInformation*
    name: ActorTypeInformation
    nameWithType: ActorTypeInformation.ActorTypeInformation
    fullName: microsoft.servicefabric.actors.ActorTypeInformation.ActorTypeInformation
    package: microsoft.servicefabric.actors
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: microsoft.servicefabric.actors._actor_type_information.get*
    name: get
    nameWithType: ActorTypeInformation.get
    fullName: static ActorTypeInformation microsoft.servicefabric.actors.ActorTypeInformation.get
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._state_persistence
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._state_persistence.yml
    name: StatePersistence
    nameWithType: StatePersistence
    fullName: microsoft.servicefabric.actors.StatePersistence
    type: Enum
    summary: '<p><span data-ttu-id="77417-119">Gibt an, wie actorzustands für einen Akteur-Dienst gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="77417-119">Indicates how actor state is stored for an actor service.</span></span> </p>'
    syntax:
      content: public enum StatePersistence
  - uid: microsoft.servicefabric.actors._actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor.yml
    name: Actor
    nameWithType: Actor
    fullName: microsoft.servicefabric.actors.Actor
    type: Interface
    summary: <p><span data-ttu-id="77417-120">Die Basisschnittstelle für das zuverlässige Akteur Schnittstellen erben.</span><span class="sxs-lookup"><span data-stu-id="77417-120">Base interface for inheriting reliable actor interfaces.</span></span> </p>
    syntax:
      content: public interface Actor
  - uid: microsoft.servicefabric.actors._actor_service_attribute
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_service_attribute.yml
    name: ActorServiceAttribute
    nameWithType: ActorServiceAttribute
    fullName: microsoft.servicefabric.actors.ActorServiceAttribute
    type: Interface
    summary: <p><span data-ttu-id="77417-121">Diese Attribute ermöglicht das Konfigurieren der Eigenschaften des Diensts Akteur.</span><span class="sxs-lookup"><span data-stu-id="77417-121">This attributes allows configuring the properties of the actor service.</span></span> <span data-ttu-id="77417-122">Das Attribut wird auf dem Akteurtyp angewendet.</span><span class="sxs-lookup"><span data-stu-id="77417-122">The attribute is applied on the actor type.</span></span> </p>
    syntax:
      content: public interface ActorServiceAttribute
  - uid: microsoft.servicefabric.actors._actor_type_information
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_type_information.yml
    name: ActorTypeInformation
    nameWithType: ActorTypeInformation
    fullName: microsoft.servicefabric.actors.ActorTypeInformation
    type: Class
    summary: <p><span data-ttu-id="77417-123">Enthält Informationen zum Implementieren von eines Akteurs Typ an.</span><span class="sxs-lookup"><span data-stu-id="77417-123">Contains information about the type implementing an actor.</span></span> </p>
    syntax: *ref_1
  - uid: microsoft.servicefabric.actors._actor_base
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_base.yml
    name: ActorBase
    nameWithType: ActorBase
    fullName: microsoft.servicefabric.actors.ActorBase
    type: Class
    summary: "<p><span data-ttu-id=\"77417-124\">Stellt die Basisklasse für Akteure.</span><span class=\"sxs-lookup\"><span data-stu-id=\"77417-124\">Represents base class for actors.</span></span> <span data-ttu-id=\"77417-125\"><xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Akteur</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"77417-125\"><xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref></span></span></p>\n<p><span data-ttu-id=\"77417-126\">\r\n\r\n  <b>Hinweise:</b>Dies ist ein Basistyp für Akteur, bietet die Funktionalität, die durch Ableiten von Akteur implementiert Akteure gemeinsam ist <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Akteur</xref> der Zustand in den Garbage Collections der Akteur und Fail-Failover beibehalten wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"77417-126\">\r\n\r\n  <b>Remarks:</b>This is a base type for actor, it provides the functionality that is common across actors implemented by actor deriving from <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> The state is preserved across actor garbage collections and fail-overs.</span></span> <span data-ttu-id=\"77417-127\">Speichern und Abrufen des Zustands wird von der Akteur-State-Anbieter bereitgestellt <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"77417-127\">The storage and retrieval of the state is provided by the actor state provider <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>.</span></span> </p>"
    syntax:
      content: public class ActorBase