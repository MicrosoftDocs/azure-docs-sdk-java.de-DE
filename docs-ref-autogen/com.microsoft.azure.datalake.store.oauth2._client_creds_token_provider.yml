### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.datalake.store.oauth2._client_creds_token_provider
    id: _client_creds_token_provider
    parent: com.microsoft.azure.datalake.store.oauth2
    children:
      - 'com.microsoft.azure.datalake.store.oauth2._client_creds_token_provider.ClientCredsTokenProvider(String,String,String)'
      - com.microsoft.azure.datalake.store.oauth2._client_creds_token_provider.refreshToken()
    href: com.microsoft.azure.datalake.store.oauth2._client_creds_token_provider.yml
    langs:
      - java
    name: ClientCredsTokenProvider
    nameWithType: ClientCredsTokenProvider
    fullName: com.microsoft.azure.datalake.store.oauth2.ClientCredsTokenProvider
    type: Class
    source:
      remote: &ref_0
        path: src/main/java/com/microsoft/azure/datalake/store/oauth2/ClientCredsTokenProvider.java
        branch: master
        repo: 'https://github.com/azure/azure-data-lake-store-java'
      path: src/main/java/com/microsoft/azure/datalake/store/oauth2/ClientCredsTokenProvider.java
      startLine: 16
    package: com.microsoft.azure.datalake.store.oauth2
    summary: <p>Token basierend auf Anmeldeinformationen des Clients enthält </p>
    syntax:
      content: public class ClientCredsTokenProvider extends AccessTokenProvider
    inheritance:
      - java.lang.Object
      - com.microsoft.azure.datalake.store.oauth2._access_token_provider
    inheritedMembers:
      - com.microsoft.azure.datalake.store.oauth2._access_token_provider.getToken()
      - com.microsoft.azure.datalake.store.oauth2._access_token_provider.token()
  - uid: 'com.microsoft.azure.datalake.store.oauth2._client_creds_token_provider.ClientCredsTokenProvider(String,String,String)'
    id: 'ClientCredsTokenProvider(String,String,String)'
    parent: com.microsoft.azure.datalake.store.oauth2._client_creds_token_provider
    href: com.microsoft.azure.datalake.store.oauth2._client_creds_token_provider.yml
    langs:
      - java
    name: 'ClientCredsTokenProvider(String authEndpoint, String clientId, String clientSecret)'
    nameWithType: 'ClientCredsTokenProvider.ClientCredsTokenProvider(String authEndpoint, String clientId, String clientSecret)'
    fullName: 'com.microsoft.azure.datalake.store.oauth2.ClientCredsTokenProvider.ClientCredsTokenProvider(String authEndpoint, String clientId, String clientSecret)'
    overload: com.microsoft.azure.datalake.store.oauth2._client_creds_token_provider.ClientCredsTokenProvider*
    type: Constructor
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/oauth2/ClientCredsTokenProvider.java
      startLine: 29
    package: com.microsoft.azure.datalake.store.oauth2
    summary: |-
      <p>erstellt einen Tokenanbieter basierend auf den angegebenen Anmeldeinformationen.</p>
      <p></p>
    syntax:
      content: 'public ClientCredsTokenProvider(String authEndpoint, String clientId, String clientSecret)'
      parameters:
        - id: authEndpoint
          type: '26831127'
          description: <p>die OAuth 2.0-tokenendpunkt zugeordneten Verzeichnis des Benutzers (Abrufen von Active Directory-Konfiguration) </p>
        - id: clientId
          type: '26831127'
          description: '<p>der Client-ID (GUID) der Client-Web-app, die von Azure Active Directory-Konfiguration abgerufen </p>'
        - id: clientSecret
          type: '26831127'
          description: <p>Der geheime Schlüssel der Client-Web-app </p>
  - uid: com.microsoft.azure.datalake.store.oauth2._client_creds_token_provider.refreshToken()
    id: refreshToken()
    parent: com.microsoft.azure.datalake.store.oauth2._client_creds_token_provider
    href: com.microsoft.azure.datalake.store.oauth2._client_creds_token_provider.yml
    langs:
      - java
    name: refreshToken()
    nameWithType: ClientCredsTokenProvider.refreshToken()
    fullName: AzureADToken com.microsoft.azure.datalake.store.oauth2.ClientCredsTokenProvider.refreshToken()
    overload: com.microsoft.azure.datalake.store.oauth2._client_creds_token_provider.refreshToken*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/oauth2/ClientCredsTokenProvider.java
      startLine: 36
    package: com.microsoft.azure.datalake.store.oauth2
    syntax:
      content: protected AzureADToken refreshToken()
      return:
        type: com.microsoft.azure.datalake.store.oauth2._azure_a_d_token
references:
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.datalake.store.oauth2._client_creds_token_provider.ClientCredsTokenProvider*
    name: ClientCredsTokenProvider
    nameWithType: ClientCredsTokenProvider.ClientCredsTokenProvider
    fullName: com.microsoft.azure.datalake.store.oauth2.ClientCredsTokenProvider.ClientCredsTokenProvider
    package: com.microsoft.azure.datalake.store.oauth2
  - uid: com.microsoft.azure.datalake.store.oauth2._client_creds_token_provider.refreshToken*
    name: refreshToken
    nameWithType: ClientCredsTokenProvider.refreshToken
    fullName: AzureADToken com.microsoft.azure.datalake.store.oauth2.ClientCredsTokenProvider.refreshToken
    package: com.microsoft.azure.datalake.store.oauth2
  - uid: com.microsoft.azure.datalake.store.oauth2._access_token_provider.getToken()
    parent: com.microsoft.azure.datalake.store.oauth2._access_token_provider
    href: com.microsoft.azure.datalake.store.oauth2._access_token_provider.yml
    name: getToken()
    nameWithType: AccessTokenProvider.getToken()
    fullName: synchronized AzureADToken com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.getToken()
    type: Method
    summary: |-
      <p>Gibt die <xref href="com.microsoft.azure.datalake.store.oauth2._azure_a_d_token" data-throw-if-not-resolved="false"></xref> zwischengespeichert (oder abzurufenden), von dieser Instanz.</p>
      <p></p>
    syntax:
      content: public synchronized AzureADToken getToken()
      return:
        type: cffad4f2com.microsoft.azure.datalake.store.oauth2._azure_a_d_token
        description: "<p>\r\n\r\n  <xref href=\"com.microsoft.azure.datalake.store.oauth2._azure_a_d_token\" data-throw-if-not-resolved=\"false\"></xref>das Zugriffstoken enthält </p>"
  - uid: com.microsoft.azure.datalake.store.oauth2._access_token_provider.token()
    parent: com.microsoft.azure.datalake.store.oauth2._access_token_provider
    href: com.microsoft.azure.datalake.store.oauth2._access_token_provider.yml
    name: token
    nameWithType: AccessTokenProvider.token
    fullName: AzureADToken com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider.token
    type: Field
    syntax:
      content: protected AzureADToken token
      return:
        type: com.microsoft.azure.datalake.store.oauth2._azure_a_d_token
  - uid: com.microsoft.azure.datalake.store.oauth2._access_token_provider
    parent: com.microsoft.azure.datalake.store.oauth2
    href: com.microsoft.azure.datalake.store.oauth2._access_token_provider.yml
    name: AccessTokenProvider
    nameWithType: AccessTokenProvider
    fullName: com.microsoft.azure.datalake.store.oauth2.AccessTokenProvider
    type: Class
    summary: |-
      <p>Ein Azure Active Directory-Token bei der Anforderung zurück. Der Anbieter kann das Token zwischenspeichern, wenn sie bereits abgerufen wurde. Wenn dies der Fall ist, ist der Anbieter für Ablauf überprüfen und aktualisieren nach Bedarf zuständig. </p>
      <p>In anderen Worten: Dies ist einem Tokencache, der Token angefordert, abruft, wenn die im Cache gespeicherten Token abgelaufen ist. </p>
    syntax:
      content: public class AccessTokenProvider
  - uid: com.microsoft.azure.datalake.store.oauth2._azure_a_d_token
    parent: com.microsoft.azure.datalake.store.oauth2
    href: com.microsoft.azure.datalake.store.oauth2._azure_a_d_token.yml
    name: AzureADToken
    nameWithType: AzureADToken
    fullName: com.microsoft.azure.datalake.store.oauth2.AzureADToken
    type: Class
    summary: <p>-Objekt Represnting das AAD-Zugriffstoken zu verwendende HTTP-Anforderungen an Azure Data Lake-Speicher vornehmen. </p>
    syntax:
      content: public class AzureADToken