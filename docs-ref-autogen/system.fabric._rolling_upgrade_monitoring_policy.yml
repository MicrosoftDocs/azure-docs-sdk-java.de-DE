### YamlMime:ManagedReference
items:
  - uid: system.fabric._rolling_upgrade_monitoring_policy
    id: _rolling_upgrade_monitoring_policy
    parent: system.fabric
    children:
      - system.fabric._rolling_upgrade_monitoring_policy.fabricInfiniteDuration
      - system.fabric._rolling_upgrade_monitoring_policy.getFailureAction()
      - system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckRetryTimeout()
      - system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckStableDuration()
      - system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckWaitDuration()
      - system.fabric._rolling_upgrade_monitoring_policy.getUpgradeDomainTimeout()
      - system.fabric._rolling_upgrade_monitoring_policy.getUpgradeTimeout()
      - system.fabric._rolling_upgrade_monitoring_policy.RollingUpgradeMonitoringPolicy()
      - system.fabric._rolling_upgrade_monitoring_policy.setFailureAction(UpgradeFailureAction)
      - system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckRetryTimeout(Duration)
      - system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckStableDuration(Duration)
      - system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckWaitDuration(Duration)
      - system.fabric._rolling_upgrade_monitoring_policy.setUpgradeDomainTimeout(Duration)
      - system.fabric._rolling_upgrade_monitoring_policy.setUpgradeTimeout(Duration)
      - system.fabric._rolling_upgrade_monitoring_policy.toNative(PinCollection)
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    langs:
      - java
    name: RollingUpgradeMonitoringPolicy
    nameWithType: RollingUpgradeMonitoringPolicy
    fullName: system.fabric.RollingUpgradeMonitoringPolicy
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      startLine: 5
    package: system.fabric
    summary: '<p><span data-ttu-id="5b93f-101">Stellt eine Klasse, ein paralleles Upgrade Überwachen der Richtlinie zu kapseln.</span><span class="sxs-lookup"><span data-stu-id="5b93f-101">Represents a class to encapsulate a rolling upgrade monitoring policy.</span></span> </p>'
    syntax: &ref_1
      content: public class RollingUpgradeMonitoringPolicy
    inheritance:
      - java.lang.Object
  - uid: system.fabric._rolling_upgrade_monitoring_policy.fabricInfiniteDuration
    id: fabricInfiniteDuration
    parent: system.fabric._rolling_upgrade_monitoring_policy
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    langs:
      - java
    name: fabricInfiniteDuration
    nameWithType: RollingUpgradeMonitoringPolicy.fabricInfiniteDuration
    fullName: final long system.fabric.RollingUpgradeMonitoringPolicy.fabricInfiniteDuration
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      startLine: 7
    package: system.fabric
    syntax:
      content: public static final long fabricInfiniteDuration= 0xffffffff
      return:
        type: 4c60ae65
  - uid: system.fabric._rolling_upgrade_monitoring_policy.getFailureAction()
    id: getFailureAction()
    parent: system.fabric._rolling_upgrade_monitoring_policy
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    langs:
      - java
    name: getFailureAction()
    nameWithType: RollingUpgradeMonitoringPolicy.getFailureAction()
    fullName: UpgradeFailureAction system.fabric.RollingUpgradeMonitoringPolicy.getFailureAction()
    overload: system.fabric._rolling_upgrade_monitoring_policy.getFailureAction*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      startLine: 75
    package: system.fabric
    summary: "<p><span data-ttu-id=\"5b93f-102\">Ruft die Aktion an, wenn ein Upgradevorgang ein Fehler auftritt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5b93f-102\">Gets the action to take if an upgrade process fails.</span></span> <span data-ttu-id=\"5b93f-103\">Die Standardeinstellung ist <xref uid=\"system.fabric._upgrade_failure_action.Invalid\" data-throw-if-not-resolved=\"false\">system.fabric.UpgradeFailureAction#Invalid</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5b93f-103\">The default is <xref uid=\"system.fabric._upgrade_failure_action.Invalid\" data-throw-if-not-resolved=\"false\">system.fabric.UpgradeFailureAction#Invalid</xref>.</span></span></p>\n<p><span data-ttu-id=\"5b93f-104\">\r\n\r\n  <b>Hinweise:</b>FailureAction-Eigenschaft muss geändert werden, von der Standardeinstellung <xref uid=\"system.fabric._upgrade_failure_action.Invalid\" data-throw-if-not-resolved=\"false\">system.fabric.UpgradeFailureAction#Invalid</xref> oder ein <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref> ausgelöst vor Beginn des Upgrades.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5b93f-104\">\r\n\r\n  <b>Remarks:</b>The FailureAction property must be changed from the default of <xref uid=\"system.fabric._upgrade_failure_action.Invalid\" data-throw-if-not-resolved=\"false\">system.fabric.UpgradeFailureAction#Invalid</xref> or a <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref> will be thrown before the upgrade begins.</span></span> </p>"
    syntax:
      content: public UpgradeFailureAction getFailureAction()
      return:
        type: system.fabric._upgrade_failure_action
        description: '<p><span data-ttu-id="5b93f-105">Die Aktion an, wenn ein Upgradevorgang ein Fehler auftritt.</span><span class="sxs-lookup"><span data-stu-id="5b93f-105">The action to take if an upgrade process fails.</span></span> </p>'
  - uid: system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckRetryTimeout()
    id: getHealthCheckRetryTimeout()
    parent: system.fabric._rolling_upgrade_monitoring_policy
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    langs:
      - java
    name: getHealthCheckRetryTimeout()
    nameWithType: RollingUpgradeMonitoringPolicy.getHealthCheckRetryTimeout()
    fullName: Duration system.fabric.RollingUpgradeMonitoringPolicy.getHealthCheckRetryTimeout()
    overload: system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckRetryTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      startLine: 146
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="5b93f-106">Ruft die Länge der Zeit zwischen den versuchen, eine integritätsprüfung ausführen, wenn die Anwendung oder der Cluster nicht fehlerfrei ist.</span><span class="sxs-lookup"><span data-stu-id="5b93f-106">Gets the length of time between attempts to perform a health check if the application or cluster is not healthy.</span></span></p>
      <p></p>
    syntax:
      content: public Duration getHealthCheckRetryTimeout()
      return:
        type: e02a2de0
        description: '<p><span data-ttu-id="5b93f-107">Die Länge der Zeit zwischen den versuchen, eine integritätsprüfungen auszuführen wird überprüft, ob die Anwendung oder der Cluster nicht fehlerfrei ist.</span><span class="sxs-lookup"><span data-stu-id="5b93f-107">The length of time between attempts to perform a health checks if the application or cluster is not healthy.</span></span> </p>'
  - uid: system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckStableDuration()
    id: getHealthCheckStableDuration()
    parent: system.fabric._rolling_upgrade_monitoring_policy
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    langs:
      - java
    name: getHealthCheckStableDuration()
    nameWithType: RollingUpgradeMonitoringPolicy.getHealthCheckStableDuration()
    fullName: Duration system.fabric.RollingUpgradeMonitoringPolicy.getHealthCheckStableDuration()
    overload: system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckStableDuration*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      startLine: 124
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="5b93f-108">Ruft der Zeitspanne ab, die die Anwendung oder ein Cluster muss fehlerfrei, bevor die integritätsprüfung erfolgreich ist, und das Upgrade durchgeführt, um die nächste Domäne aktualisieren wird.</span><span class="sxs-lookup"><span data-stu-id="5b93f-108">Gets the length of time that the application or cluster must remain healthy before the health check passes and the upgrade proceeds to the next Upgrade Domain.</span></span></p>
      <p></p>
    syntax:
      content: public Duration getHealthCheckStableDuration()
      return:
        type: e02a2de0
        description: '<p><span data-ttu-id="5b93f-109">Die Zeitdauer, dass die Anwendung oder der Cluster fehlerfrei bleiben muss.</span><span class="sxs-lookup"><span data-stu-id="5b93f-109">The length of time that the application or cluster must remain healthy.</span></span> </p>'
  - uid: system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckWaitDuration()
    id: getHealthCheckWaitDuration()
    parent: system.fabric._rolling_upgrade_monitoring_policy
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    langs:
      - java
    name: getHealthCheckWaitDuration()
    nameWithType: RollingUpgradeMonitoringPolicy.getHealthCheckWaitDuration()
    fullName: Duration system.fabric.RollingUpgradeMonitoringPolicy.getHealthCheckWaitDuration()
    overload: system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckWaitDuration*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      startLine: 102
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="5b93f-110">Ruft die Länge der Wartezeit nach Abschluss einer upgradedomäne vor dem Starten des Health Check-Prozesses.</span><span class="sxs-lookup"><span data-stu-id="5b93f-110">Gets the length of time to wait after completing an upgrade domain before starting the health check process.</span></span></p>
      <p></p>
    syntax:
      content: public Duration getHealthCheckWaitDuration()
      return:
        type: e02a2de0
        description: '<p><span data-ttu-id="5b93f-111">Die Länge der Wartezeit nach Abschluss einer upgradedomäne, bevor der Prozess starten die Integrität überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="5b93f-111">The length of time to wait after completing an upgrade domain before starting the health checks process.</span></span> </p>'
  - uid: system.fabric._rolling_upgrade_monitoring_policy.getUpgradeDomainTimeout()
    id: getUpgradeDomainTimeout()
    parent: system.fabric._rolling_upgrade_monitoring_policy
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    langs:
      - java
    name: getUpgradeDomainTimeout()
    nameWithType: RollingUpgradeMonitoringPolicy.getUpgradeDomainTimeout()
    fullName: Duration system.fabric.RollingUpgradeMonitoringPolicy.getUpgradeDomainTimeout()
    overload: system.fabric._rolling_upgrade_monitoring_policy.getUpgradeDomainTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      startLine: 195
    package: system.fabric
    summary: "<p><span data-ttu-id=\"5b93f-112\">Ruft das Timeout für die upgradedomäne an.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5b93f-112\">Gets the timeout for the upgrade domain.</span></span></p>\n<p><span data-ttu-id=\"5b93f-113\">\r\n\r\n  <b>Beschreibung:</b>die Standardeinstellung ist TimeSpan.FromSeconds (\"uint\". \"MaxValue\").</span><span class=\"sxs-lookup\"><span data-stu-id=\"5b93f-113\">\r\n\r\n  <b>Remarks:</b>The default is TimeSpan.FromSeconds(uint.MaxValue).</span></span> </p>"
    syntax:
      content: public Duration getUpgradeDomainTimeout()
      return:
        type: e02a2de0
        description: <p><span data-ttu-id="5b93f-114">Das Timeout für die upgradedomäne.</span><span class="sxs-lookup"><span data-stu-id="5b93f-114">The timeout for the upgrade domain.</span></span> </p>
  - uid: system.fabric._rolling_upgrade_monitoring_policy.getUpgradeTimeout()
    id: getUpgradeTimeout()
    parent: system.fabric._rolling_upgrade_monitoring_policy
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    langs:
      - java
    name: getUpgradeTimeout()
    nameWithType: RollingUpgradeMonitoringPolicy.getUpgradeTimeout()
    fullName: Duration system.fabric.RollingUpgradeMonitoringPolicy.getUpgradeTimeout()
    overload: system.fabric._rolling_upgrade_monitoring_policy.getUpgradeTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      startLine: 170
    package: system.fabric
    summary: "<p><span data-ttu-id=\"5b93f-115\">Ruft das upgradetimeout ab.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5b93f-115\">Gets the upgrade timeout.</span></span></p>\n<p><span data-ttu-id=\"5b93f-116\">\r\n\r\n  <b>Beschreibung:</b>die Standardeinstellung ist TimeSpan.FromSeconds (\"uint\". \"MaxValue\").</span><span class=\"sxs-lookup\"><span data-stu-id=\"5b93f-116\">\r\n\r\n  <b>Remarks:</b>The default is TimeSpan.FromSeconds(uint.MaxValue).</span></span> </p>"
    syntax:
      content: public Duration getUpgradeTimeout()
      return:
        type: e02a2de0
        description: <p><span data-ttu-id="5b93f-117">Der timeoutgesamtwert für das Upgrade.</span><span class="sxs-lookup"><span data-stu-id="5b93f-117">The upgrade timeout.</span></span> </p>
  - uid: system.fabric._rolling_upgrade_monitoring_policy.RollingUpgradeMonitoringPolicy()
    id: RollingUpgradeMonitoringPolicy()
    parent: system.fabric._rolling_upgrade_monitoring_policy
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    langs:
      - java
    name: RollingUpgradeMonitoringPolicy()
    nameWithType: RollingUpgradeMonitoringPolicy.RollingUpgradeMonitoringPolicy()
    fullName: system.fabric.RollingUpgradeMonitoringPolicy.RollingUpgradeMonitoringPolicy()
    overload: system.fabric._rolling_upgrade_monitoring_policy.RollingUpgradeMonitoringPolicy*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      startLine: 29
    package: system.fabric
    syntax:
      content: public RollingUpgradeMonitoringPolicy()
  - uid: system.fabric._rolling_upgrade_monitoring_policy.setFailureAction(UpgradeFailureAction)
    id: setFailureAction(UpgradeFailureAction)
    parent: system.fabric._rolling_upgrade_monitoring_policy
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    langs:
      - java
    name: setFailureAction(UpgradeFailureAction failureAction)
    nameWithType: RollingUpgradeMonitoringPolicy.setFailureAction(UpgradeFailureAction failureAction)
    fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setFailureAction(UpgradeFailureAction failureAction)
    overload: system.fabric._rolling_upgrade_monitoring_policy.setFailureAction*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      startLine: 91
    package: system.fabric
    summary: "<p><span data-ttu-id=\"5b93f-118\">Legt die Aktion an, wenn ein Upgradevorgang ein Fehler auftritt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5b93f-118\">Sets the action to take if an upgrade process fails.</span></span> <span data-ttu-id=\"5b93f-119\">Die Standardeinstellung ist <xref uid=\"system.fabric._upgrade_failure_action.Invalid\" data-throw-if-not-resolved=\"false\">system.fabric.UpgradeFailureAction#Invalid</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5b93f-119\">The default is <xref uid=\"system.fabric._upgrade_failure_action.Invalid\" data-throw-if-not-resolved=\"false\">system.fabric.UpgradeFailureAction#Invalid</xref>.</span></span></p>\n<p><span data-ttu-id=\"5b93f-120\">\r\n\r\n  <b>\"Hinweise\":</b>der FailureAction}-Eigenschaft muss geändert werden, von der Standardeinstellung <xref uid=\"system.fabric._upgrade_failure_action.Invalid\" data-throw-if-not-resolved=\"false\">system.fabric.UpgradeFailureAction#Invalid</xref> oder ein <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref> werden wird ausgelöst, bevor das Upgrade beginnt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5b93f-120\">\r\n\r\n  <b>Remarks:</b>The FailureAction} property must be changed from the default of <xref uid=\"system.fabric._upgrade_failure_action.Invalid\" data-throw-if-not-resolved=\"false\">system.fabric.UpgradeFailureAction#Invalid</xref> or a <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.IllegalArgumentException</xref> will be thrown before the upgrade begins.</span></span> </p>"
    syntax:
      content: public void setFailureAction(UpgradeFailureAction failureAction)
      parameters:
        - id: failureAction
          type: system.fabric._upgrade_failure_action
          description: '<p><span data-ttu-id="5b93f-121">Die Aktion an, wenn ein Upgradevorgang ein Fehler auftritt.</span><span class="sxs-lookup"><span data-stu-id="5b93f-121">The action to take if an upgrade process fails.</span></span> </p>'
  - uid: system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckRetryTimeout(Duration)
    id: setHealthCheckRetryTimeout(Duration)
    parent: system.fabric._rolling_upgrade_monitoring_policy
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    langs:
      - java
    name: setHealthCheckRetryTimeout(Duration healthCheckRetryTimeout)
    nameWithType: RollingUpgradeMonitoringPolicy.setHealthCheckRetryTimeout(Duration healthCheckRetryTimeout)
    fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setHealthCheckRetryTimeout(Duration healthCheckRetryTimeout)
    overload: system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckRetryTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      startLine: 158
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="5b93f-122">Legt die Zeitspanne zwischen versucht, eine integritätsprüfung ausführen, wenn die Anwendung oder der Cluster nicht fehlerfrei ist.</span><span class="sxs-lookup"><span data-stu-id="5b93f-122">Sets the length of time between attempts to perform a health check if the application or cluster is not healthy.</span></span></p>
      <p></p>
    syntax:
      content: public void setHealthCheckRetryTimeout(Duration healthCheckRetryTimeout)
      parameters:
        - id: healthCheckRetryTimeout
          type: e02a2de0
          description: '<p><span data-ttu-id="5b93f-123">Die Länge der Zeit zwischen den versuchen, eine integritätsprüfungen auszuführen wird überprüft, ob die Anwendung oder der Cluster nicht fehlerfrei ist.</span><span class="sxs-lookup"><span data-stu-id="5b93f-123">The length of time between attempts to perform a health checks if the application or cluster is not healthy.</span></span> </p>'
  - uid: system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckStableDuration(Duration)
    id: setHealthCheckStableDuration(Duration)
    parent: system.fabric._rolling_upgrade_monitoring_policy
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    langs:
      - java
    name: setHealthCheckStableDuration(Duration healthCheckStableDuration)
    nameWithType: RollingUpgradeMonitoringPolicy.setHealthCheckStableDuration(Duration healthCheckStableDuration)
    fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setHealthCheckStableDuration(Duration healthCheckStableDuration)
    overload: system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckStableDuration*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      startLine: 135
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="5b93f-124">Legt der Zeitspanne fest, die die Anwendung oder ein Cluster muss fehlerfrei, bevor die integritätsprüfung erfolgreich ist, und das Upgrade durchgeführt, um die nächste Domäne aktualisieren wird.</span><span class="sxs-lookup"><span data-stu-id="5b93f-124">Sets the length of time that the application or cluster must remain healthy before the health check passes and the upgrade proceeds to the next Upgrade Domain.</span></span></p>
      <p></p>
    syntax:
      content: public void setHealthCheckStableDuration(Duration healthCheckStableDuration)
      parameters:
        - id: healthCheckStableDuration
          type: e02a2de0
          description: '<p><span data-ttu-id="5b93f-125">Die Zeitdauer, dass die Anwendung oder der Cluster fehlerfrei bleiben muss.</span><span class="sxs-lookup"><span data-stu-id="5b93f-125">The length of time that the application or cluster must remain healthy.</span></span> </p>'
  - uid: system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckWaitDuration(Duration)
    id: setHealthCheckWaitDuration(Duration)
    parent: system.fabric._rolling_upgrade_monitoring_policy
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    langs:
      - java
    name: setHealthCheckWaitDuration(Duration healthCheckWaitDuration)
    nameWithType: RollingUpgradeMonitoringPolicy.setHealthCheckWaitDuration(Duration healthCheckWaitDuration)
    fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setHealthCheckWaitDuration(Duration healthCheckWaitDuration)
    overload: system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckWaitDuration*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      startLine: 114
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="5b93f-126">Ruft die Länge der Wartezeit nach Abschluss einer upgradedomäne vor dem Starten des Health Check-Prozesses.</span><span class="sxs-lookup"><span data-stu-id="5b93f-126">Gets the length of time to wait after completing an upgrade domain before starting the health check process.</span></span></p>
      <p></p>
    syntax:
      content: public void setHealthCheckWaitDuration(Duration healthCheckWaitDuration)
      parameters:
        - id: healthCheckWaitDuration
          type: e02a2de0
          description: '<p><span data-ttu-id="5b93f-127">Die Länge der Wartezeit nach Abschluss einer upgradedomäne, bevor der Prozess starten die Integrität überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="5b93f-127">The length of time to wait after completing an upgrade domain before starting the health checks process.</span></span> </p>'
  - uid: system.fabric._rolling_upgrade_monitoring_policy.setUpgradeDomainTimeout(Duration)
    id: setUpgradeDomainTimeout(Duration)
    parent: system.fabric._rolling_upgrade_monitoring_policy
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    langs:
      - java
    name: setUpgradeDomainTimeout(Duration upgradeDomainTimeout)
    nameWithType: RollingUpgradeMonitoringPolicy.setUpgradeDomainTimeout(Duration upgradeDomainTimeout)
    fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setUpgradeDomainTimeout(Duration upgradeDomainTimeout)
    overload: system.fabric._rolling_upgrade_monitoring_policy.setUpgradeDomainTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      startLine: 208
    package: system.fabric
    summary: "<p><span data-ttu-id=\"5b93f-128\">Legt das Timeout für die upgradedomäne an.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5b93f-128\">Sets the timeout for the upgrade domain.</span></span></p>\n<p><span data-ttu-id=\"5b93f-129\">\r\n\r\n  <b>Beschreibung:</b>die Standardeinstellung ist TimeSpan.FromSeconds (\"uint\". \"MaxValue\").</span><span class=\"sxs-lookup\"><span data-stu-id=\"5b93f-129\">\r\n\r\n  <b>Remarks:</b>The default is TimeSpan.FromSeconds(uint.MaxValue).</span></span> </p>"
    syntax:
      content: public void setUpgradeDomainTimeout(Duration upgradeDomainTimeout)
      parameters:
        - id: upgradeDomainTimeout
          type: e02a2de0
          description: <p><span data-ttu-id="5b93f-130">Das Timeout für die upgradedomäne.</span><span class="sxs-lookup"><span data-stu-id="5b93f-130">The timeout for the upgrade domain.</span></span> </p>
  - uid: system.fabric._rolling_upgrade_monitoring_policy.setUpgradeTimeout(Duration)
    id: setUpgradeTimeout(Duration)
    parent: system.fabric._rolling_upgrade_monitoring_policy
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    langs:
      - java
    name: setUpgradeTimeout(Duration upgradeTimeout)
    nameWithType: RollingUpgradeMonitoringPolicy.setUpgradeTimeout(Duration upgradeTimeout)
    fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setUpgradeTimeout(Duration upgradeTimeout)
    overload: system.fabric._rolling_upgrade_monitoring_policy.setUpgradeTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      startLine: 183
    package: system.fabric
    summary: "<p><span data-ttu-id=\"5b93f-131\">Legt die timeoutgesamtwert für das Upgrade an.</span><span class=\"sxs-lookup\"><span data-stu-id=\"5b93f-131\">Sets the upgrade timeout.</span></span></p>\n<p><span data-ttu-id=\"5b93f-132\">\r\n\r\n  <b>Beschreibung:</b>die Standardeinstellung ist TimeSpan.FromSeconds (\"uint\". \"MaxValue\").</span><span class=\"sxs-lookup\"><span data-stu-id=\"5b93f-132\">\r\n\r\n  <b>Remarks:</b>The default is TimeSpan.FromSeconds(uint.MaxValue).</span></span> </p>"
    syntax:
      content: public void setUpgradeTimeout(Duration upgradeTimeout)
      parameters:
        - id: upgradeTimeout
          type: e02a2de0
          description: <p><span data-ttu-id="5b93f-133">Der timeoutgesamtwert für das Upgrade.</span><span class="sxs-lookup"><span data-stu-id="5b93f-133">The upgrade timeout.</span></span> </p>
  - uid: system.fabric._rolling_upgrade_monitoring_policy.toNative(PinCollection)
    id: toNative(PinCollection)
    parent: system.fabric._rolling_upgrade_monitoring_policy
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    langs:
      - java
    name: toNative(PinCollection pinCollection)
    nameWithType: RollingUpgradeMonitoringPolicy.toNative(PinCollection pinCollection)
    fullName: long system.fabric.RollingUpgradeMonitoringPolicy.toNative(PinCollection pinCollection)
    overload: system.fabric._rolling_upgrade_monitoring_policy.toNative*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/RollingUpgradeMonitoringPolicy.java
      startLine: 239
    package: system.fabric
    syntax:
      content: public long toNative(PinCollection pinCollection)
      parameters:
        - id: pinCollection
          type: system.fabric._pin_collection
      return:
        type: 0364520f
references:
  - uid: 4c60ae65
    spec.java:
      - name: final long
        fullName: final long
  - uid: system.fabric._rolling_upgrade_monitoring_policy.RollingUpgradeMonitoringPolicy*
    name: RollingUpgradeMonitoringPolicy
    nameWithType: RollingUpgradeMonitoringPolicy.RollingUpgradeMonitoringPolicy
    fullName: system.fabric.RollingUpgradeMonitoringPolicy.RollingUpgradeMonitoringPolicy
    package: system.fabric
  - uid: system.fabric._rolling_upgrade_monitoring_policy.getFailureAction*
    name: getFailureAction
    nameWithType: RollingUpgradeMonitoringPolicy.getFailureAction
    fullName: UpgradeFailureAction system.fabric.RollingUpgradeMonitoringPolicy.getFailureAction
    package: system.fabric
  - uid: system.fabric._rolling_upgrade_monitoring_policy.setFailureAction*
    name: setFailureAction
    nameWithType: RollingUpgradeMonitoringPolicy.setFailureAction
    fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setFailureAction
    package: system.fabric
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckWaitDuration*
    name: getHealthCheckWaitDuration
    nameWithType: RollingUpgradeMonitoringPolicy.getHealthCheckWaitDuration
    fullName: Duration system.fabric.RollingUpgradeMonitoringPolicy.getHealthCheckWaitDuration
    package: system.fabric
  - uid: system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckWaitDuration*
    name: setHealthCheckWaitDuration
    nameWithType: RollingUpgradeMonitoringPolicy.setHealthCheckWaitDuration
    fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setHealthCheckWaitDuration
    package: system.fabric
  - uid: system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckStableDuration*
    name: getHealthCheckStableDuration
    nameWithType: RollingUpgradeMonitoringPolicy.getHealthCheckStableDuration
    fullName: Duration system.fabric.RollingUpgradeMonitoringPolicy.getHealthCheckStableDuration
    package: system.fabric
  - uid: system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckStableDuration*
    name: setHealthCheckStableDuration
    nameWithType: RollingUpgradeMonitoringPolicy.setHealthCheckStableDuration
    fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setHealthCheckStableDuration
    package: system.fabric
  - uid: system.fabric._rolling_upgrade_monitoring_policy.getHealthCheckRetryTimeout*
    name: getHealthCheckRetryTimeout
    nameWithType: RollingUpgradeMonitoringPolicy.getHealthCheckRetryTimeout
    fullName: Duration system.fabric.RollingUpgradeMonitoringPolicy.getHealthCheckRetryTimeout
    package: system.fabric
  - uid: system.fabric._rolling_upgrade_monitoring_policy.setHealthCheckRetryTimeout*
    name: setHealthCheckRetryTimeout
    nameWithType: RollingUpgradeMonitoringPolicy.setHealthCheckRetryTimeout
    fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setHealthCheckRetryTimeout
    package: system.fabric
  - uid: system.fabric._rolling_upgrade_monitoring_policy.getUpgradeTimeout*
    name: getUpgradeTimeout
    nameWithType: RollingUpgradeMonitoringPolicy.getUpgradeTimeout
    fullName: Duration system.fabric.RollingUpgradeMonitoringPolicy.getUpgradeTimeout
    package: system.fabric
  - uid: system.fabric._rolling_upgrade_monitoring_policy.setUpgradeTimeout*
    name: setUpgradeTimeout
    nameWithType: RollingUpgradeMonitoringPolicy.setUpgradeTimeout
    fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setUpgradeTimeout
    package: system.fabric
  - uid: system.fabric._rolling_upgrade_monitoring_policy.getUpgradeDomainTimeout*
    name: getUpgradeDomainTimeout
    nameWithType: RollingUpgradeMonitoringPolicy.getUpgradeDomainTimeout
    fullName: Duration system.fabric.RollingUpgradeMonitoringPolicy.getUpgradeDomainTimeout
    package: system.fabric
  - uid: system.fabric._rolling_upgrade_monitoring_policy.setUpgradeDomainTimeout*
    name: setUpgradeDomainTimeout
    nameWithType: RollingUpgradeMonitoringPolicy.setUpgradeDomainTimeout
    fullName: void system.fabric.RollingUpgradeMonitoringPolicy.setUpgradeDomainTimeout
    package: system.fabric
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._rolling_upgrade_monitoring_policy.toNative*
    name: toNative
    nameWithType: RollingUpgradeMonitoringPolicy.toNative
    fullName: long system.fabric.RollingUpgradeMonitoringPolicy.toNative
    package: system.fabric
  - uid: system.fabric._upgrade_failure_action
    parent: system.fabric
    href: system.fabric._upgrade_failure_action.yml
    name: UpgradeFailureAction
    nameWithType: UpgradeFailureAction
    fullName: system.fabric.UpgradeFailureAction
    type: Enum
    summary: '<p><span data-ttu-id="5b93f-134">Listet die Aktionen für Service Fabric an, wenn das Upgrade fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="5b93f-134">Enumerates the actions for Service Fabric to take if the upgrade fails.</span></span> </p>'
    syntax:
      content: public enum UpgradeFailureAction
  - uid: system.fabric._rolling_upgrade_monitoring_policy
    parent: system.fabric
    href: system.fabric._rolling_upgrade_monitoring_policy.yml
    name: RollingUpgradeMonitoringPolicy
    nameWithType: RollingUpgradeMonitoringPolicy
    fullName: system.fabric.RollingUpgradeMonitoringPolicy
    type: Class
    summary: '<p><span data-ttu-id="5b93f-135">Stellt eine Klasse, ein paralleles Upgrade Überwachen der Richtlinie zu kapseln.</span><span class="sxs-lookup"><span data-stu-id="5b93f-135">Represents a class to encapsulate a rolling upgrade monitoring policy.</span></span> </p>'
    syntax: *ref_1
  - uid: system.fabric._upgrade_failure_action.Invalid
    parent: system.fabric._upgrade_failure_action
    href: system.fabric._upgrade_failure_action.yml
    name: Invalid
    nameWithType: UpgradeFailureAction.Invalid
    fullName: system.fabric.UpgradeFailureAction.Invalid
    type: Field
    summary: '<p><span data-ttu-id="5b93f-136">Gibt an, dass dieses Upgrade ungültig ist.</span><span class="sxs-lookup"><span data-stu-id="5b93f-136">Indicates that this upgrade is not valid.</span></span> <span data-ttu-id="5b93f-137">Alle Service Fabric-Enumerationen wurde ein ungültiger Typ.</span><span class="sxs-lookup"><span data-stu-id="5b93f-137">All Service Fabric enumerations have the invalid type.</span></span> </p>'
    syntax:
      content: public Invalid=(0x0000)
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection