### YamlMime:ManagedReference
items:
  - uid: system.fabric._fabric_runtime
    id: _fabric_runtime
    parent: system.fabric
    children:
      - system.fabric._fabric_runtime.close()
      - system.fabric._fabric_runtime.create()
      - system.fabric._fabric_runtime.createAsync(Duration)
      - 'system.fabric._fabric_runtime.createAsync(Runnable,Duration)'
      - system.fabric._fabric_runtime.getActivationContext()
      - system.fabric._fabric_runtime.getActivationContextAsync(Duration)
      - system.fabric._fabric_runtime.getNodeContext()
      - system.fabric._fabric_runtime.getNodeContextAsync(Duration)
      - 'system.fabric._fabric_runtime.registerServiceType(String,Class<?>)'
      - 'system.fabric._fabric_runtime.registerServiceTypeAsync(String,Class<?>,Duration)'
      - 'system.fabric._fabric_runtime.registerStatefulServiceFactory(String,StatefulServiceFactory)'
      - 'system.fabric._fabric_runtime.registerStatefulServiceFactoryAsync(String,StatefulServiceFactory,Duration)'
      - 'system.fabric._fabric_runtime.registerStatelessServiceFactory(String,StatelessServiceFactory)'
      - 'system.fabric._fabric_runtime.registerStatelessServiceFactoryAsync(String,StatelessServiceFactory,Duration)'
    href: system.fabric._fabric_runtime.yml
    langs:
      - java
    name: FabricRuntime
    nameWithType: FabricRuntime
    fullName: system.fabric.FabricRuntime
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/FabricRuntime.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricRuntime.java
      startLine: 27
    package: system.fabric
    summary: '<p><span data-ttu-id="8729c-101">Können benutzerdefinierte Hosts erhalten ihre <xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>, auch auf den erforderlichen Dienst Factorys registrieren [ <xref uid="system.fabric._stateless_service_factory" data-throw-if-not-resolved="false">system.fabric.StatelessServiceFactory</xref>, <xref uid="system.fabric._stateful_service_factory" data-throw-if-not-resolved="false">system.fabric.StatefulServiceFactory</xref> ] oder direkt Diensttypen.</span><span class="sxs-lookup"><span data-stu-id="8729c-101">Allows user created hosts to obtain their <xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>, well as to register the necessary service factories [ <xref uid="system.fabric._stateless_service_factory" data-throw-if-not-resolved="false">system.fabric.StatelessServiceFactory</xref>, <xref uid="system.fabric._stateful_service_factory" data-throw-if-not-resolved="false">system.fabric.StatefulServiceFactory</xref> ] or service types directly.</span></span> </p>'
    syntax: &ref_1
      content: public class FabricRuntime
    inheritance:
      - java.lang.Object
      - AutoCloseable
  - uid: system.fabric._fabric_runtime.close()
    id: close()
    parent: system.fabric._fabric_runtime
    href: system.fabric._fabric_runtime.yml
    langs:
      - java
    name: close()
    nameWithType: FabricRuntime.close()
    fullName: void system.fabric.FabricRuntime.close()
    overload: system.fabric._fabric_runtime.close*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricRuntime.java
      startLine: 404
    package: system.fabric
    syntax:
      content: public void close()
  - uid: system.fabric._fabric_runtime.create()
    id: create()
    parent: system.fabric._fabric_runtime
    href: system.fabric._fabric_runtime.yml
    langs:
      - java
    name: create()
    nameWithType: FabricRuntime.create()
    fullName: static FabricRuntime system.fabric.FabricRuntime.create()
    overload: system.fabric._fabric_runtime.create*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricRuntime.java
      startLine: 116
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="8729c-102">Erstellt die <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime</xref> Objekt.</span><span class="sxs-lookup"><span data-stu-id="8729c-102">Creates the <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime</xref> object.</span></span></p>
      <p></p>
    syntax:
      content: public static FabricRuntime create()
      return:
        type: system.fabric._fabric_runtime
        description: <p><span data-ttu-id="8729c-103">Ein neu erstelltes <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime</xref> Objekt.</span><span class="sxs-lookup"><span data-stu-id="8729c-103">A newly created <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime</xref> object.</span></span> </p>
  - uid: system.fabric._fabric_runtime.createAsync(Duration)
    id: createAsync(Duration)
    parent: system.fabric._fabric_runtime
    href: system.fabric._fabric_runtime.yml
    langs:
      - java
    name: createAsync(Duration timeout)
    nameWithType: FabricRuntime.createAsync(Duration timeout)
    fullName: static CompletableFuture<FabricRuntime> system.fabric.FabricRuntime.createAsync(Duration timeout)
    overload: system.fabric._fabric_runtime.createAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricRuntime.java
      startLine: 130
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="8729c-104">Erstellt die <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime</xref> Objekt asynchron mit dem angegebenen Timeout-Parameter.</span><span class="sxs-lookup"><span data-stu-id="8729c-104">Creates the <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime</xref> object asynchronously with the specified timeout parameter.</span></span></p>
      <p></p>
    syntax:
      content: public static CompletableFuture<FabricRuntime> createAsync(Duration timeout)
      parameters:
        - id: timeout
          type: e02a2de0
          description: '<p><span data-ttu-id="8729c-105">Die maximale Zeitdauer Service Fabric können diesen Vorgang, um den Vorgang fortzusetzen, vor der Rückgabe einer TimeoutException.</span><span class="sxs-lookup"><span data-stu-id="8729c-105">The maximum amount of time Service Fabric will allow this operation to continue before returning a TimeoutException.</span></span> </p>'
      return:
        type: 9cdf14d0system.fabric._fabric_runtimea08ddfce
        description: '<p><span data-ttu-id="8729c-106">Die Aufgabe, die den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="8729c-106">The task representing the asynchronous operation.</span></span> </p>'
  - uid: 'system.fabric._fabric_runtime.createAsync(Runnable,Duration)'
    id: 'createAsync(Runnable,Duration)'
    parent: system.fabric._fabric_runtime
    href: system.fabric._fabric_runtime.yml
    langs:
      - java
    name: 'createAsync(Runnable fabricExitCallback, Duration timeout)'
    nameWithType: 'FabricRuntime.createAsync(Runnable fabricExitCallback, Duration timeout)'
    fullName: 'static CompletableFuture<FabricRuntime> system.fabric.FabricRuntime.createAsync(Runnable fabricExitCallback, Duration timeout)'
    overload: system.fabric._fabric_runtime.createAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricRuntime.java
      startLine: 146
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="8729c-107">Erstellt die <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime</xref> Objekt asynchron mit dem festgelegten Rückruffunktion der ausgeführt wird, wenn die zugrunde liegenden Laufzeit beendet wird oder aus irgendeinem Grund beendet wird.</span><span class="sxs-lookup"><span data-stu-id="8729c-107">Creates the <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime</xref> object asynchronously with the specified callback function which will be executed if the underlying runtime terminates or exits for any reason.</span></span></p>
      <p></p>
    syntax:
      content: 'public static CompletableFuture<FabricRuntime> createAsync(Runnable fabricExitCallback, Duration timeout)'
      parameters:
        - id: fabricExitCallback
          type: 2b8852ea
          description: '<p><span data-ttu-id="8729c-108">Die Aktion, die ausgeführt werden, wenn die Laufzeit beendet wird oder beendet wird.</span><span class="sxs-lookup"><span data-stu-id="8729c-108">The Action to be executed when the runtime exits or terminates.</span></span> </p>'
        - id: timeout
          type: e02a2de0
          description: '<p><span data-ttu-id="8729c-109">Die maximale Zeitdauer Service Fabric können diesen Vorgang, um den Vorgang fortzusetzen, vor der Rückgabe einer TimeoutException.</span><span class="sxs-lookup"><span data-stu-id="8729c-109">The maximum amount of time Service Fabric will allow this operation to continue before returning a TimeoutException.</span></span> </p>'
      return:
        type: 9cdf14d0system.fabric._fabric_runtimea08ddfce
        description: '<p><span data-ttu-id="8729c-110">Die Aufgabe, die den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="8729c-110">The task representing the asynchronous operation.</span></span> </p>'
  - uid: system.fabric._fabric_runtime.getActivationContext()
    id: getActivationContext()
    parent: system.fabric._fabric_runtime
    href: system.fabric._fabric_runtime.yml
    langs:
      - java
    name: getActivationContext()
    nameWithType: FabricRuntime.getActivationContext()
    fullName: static FabricCodePackageActivationContext system.fabric.FabricRuntime.getActivationContext()
    overload: system.fabric._fabric_runtime.getActivationContext*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricRuntime.java
      startLine: 156
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="8729c-111">Ruft ab den aktuellen <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime</xref>des <xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>.</span><span class="sxs-lookup"><span data-stu-id="8729c-111">Retrieves the current <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime</xref>'s <xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>.</span></span></p>
      <p></p>
    syntax:
      content: public static FabricCodePackageActivationContext getActivationContext()
      return:
        type: system.fabric._fabric_code_package_activation_context
        description: <p><span data-ttu-id="8729c-112">Der Aktivierungskontext.</span><span class="sxs-lookup"><span data-stu-id="8729c-112">The activation context.</span></span> </p>
  - uid: system.fabric._fabric_runtime.getActivationContextAsync(Duration)
    id: getActivationContextAsync(Duration)
    parent: system.fabric._fabric_runtime
    href: system.fabric._fabric_runtime.yml
    langs:
      - java
    name: getActivationContextAsync(Duration timeout)
    nameWithType: FabricRuntime.getActivationContextAsync(Duration timeout)
    fullName: static CompletableFuture<FabricCodePackageActivationContext> system.fabric.FabricRuntime.getActivationContextAsync(Duration timeout)
    overload: system.fabric._fabric_runtime.getActivationContextAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricRuntime.java
      startLine: 170
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="8729c-113">Ruft ab den aktuellen <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime</xref>Â €™ s <xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref> asynchron mit dem angegebenen Parameter.</span><span class="sxs-lookup"><span data-stu-id="8729c-113">Retrieves the current <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime</xref>â€™s <xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref> asynchronously with the specified parameter.</span></span></p>
      <p></p>
    syntax:
      content: public static CompletableFuture<FabricCodePackageActivationContext> getActivationContextAsync(Duration timeout)
      parameters:
        - id: timeout
          type: e02a2de0
          description: '<p><span data-ttu-id="8729c-114">Die maximale Zeitdauer wird Service Fabric, diesen Vorgang, um den Vorgang fortzusetzen, vor der Rückgabe einer TimeoutException zulassen</span><span class="sxs-lookup"><span data-stu-id="8729c-114">The maximum amount of time Service Fabric will allow this operation to continue before returning a TimeoutException</span></span> </p>'
      return:
        type: 9cdf14d0system.fabric._fabric_code_package_activation_contexta08ddfce
        description: '<p><span data-ttu-id="8729c-115">Die Aufgabe, die den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="8729c-115">The task representing the asynchronous operation.</span></span> </p>'
  - uid: system.fabric._fabric_runtime.getNodeContext()
    id: getNodeContext()
    parent: system.fabric._fabric_runtime
    href: system.fabric._fabric_runtime.yml
    langs:
      - java
    name: getNodeContext()
    nameWithType: FabricRuntime.getNodeContext()
    fullName: static NodeContext system.fabric.FabricRuntime.getNodeContext()
    overload: system.fabric._fabric_runtime.getNodeContext*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricRuntime.java
      startLine: 184
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="8729c-116">Ruft die Knoten Context-Objekt, das Informationen zu Fabric-Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="8729c-116">Gets the Node Context object that contains information about Fabric Node.</span></span></p>
      <p></p>
    syntax:
      content: public static NodeContext getNodeContext()
      return:
        type: system.fabric._node_context
        description: <p><span data-ttu-id="8729c-117">Der Knotenkontext.</span><span class="sxs-lookup"><span data-stu-id="8729c-117">The node context.</span></span> </p>
  - uid: system.fabric._fabric_runtime.getNodeContextAsync(Duration)
    id: getNodeContextAsync(Duration)
    parent: system.fabric._fabric_runtime
    href: system.fabric._fabric_runtime.yml
    langs:
      - java
    name: getNodeContextAsync(Duration timeout)
    nameWithType: FabricRuntime.getNodeContextAsync(Duration timeout)
    fullName: static CompletableFuture<NodeContext> system.fabric.FabricRuntime.getNodeContextAsync(Duration timeout)
    overload: system.fabric._fabric_runtime.getNodeContextAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricRuntime.java
      startLine: 196
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="8729c-118">Ruft Knotenkontext von Fabric-Knoten asynchron mit Timeout und ein Abbruch token.</span><span class="sxs-lookup"><span data-stu-id="8729c-118">Gets Node Context from Fabric Node asynchronously with timeout and cancellation token.</span></span></p>
      <p></p>
    syntax:
      content: public static CompletableFuture<NodeContext> getNodeContextAsync(Duration timeout)
      parameters:
        - id: timeout
          type: e02a2de0
          description: '<p><span data-ttu-id="8729c-119">Die maximale Zeitdauer wird Service Fabric, diesen Vorgang, um den Vorgang fortzusetzen, vor der Rückgabe einer TimeoutException zulassen</span><span class="sxs-lookup"><span data-stu-id="8729c-119">The maximum amount of time Service Fabric will allow this operation to continue before returning a TimeoutException</span></span> </p>'
      return:
        type: 9cdf14d0system.fabric._node_contexta08ddfce
        description: '<p><span data-ttu-id="8729c-120">Die Aufgabe, die den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="8729c-120">The task representing the asynchronous operation.</span></span> </p>'
  - uid: 'system.fabric._fabric_runtime.registerServiceType(String,Class<?>)'
    id: 'registerServiceType(String,Class<?>)'
    parent: system.fabric._fabric_runtime
    href: system.fabric._fabric_runtime.yml
    langs:
      - java
    name: 'registerServiceType(String serviceTypeName, Class<?> serviceTypeImplementation)'
    nameWithType: 'FabricRuntime.registerServiceType(String serviceTypeName, Class<?> serviceTypeImplementation)'
    fullName: 'void system.fabric.FabricRuntime.registerServiceType(String serviceTypeName, Class<?> serviceTypeImplementation)'
    overload: system.fabric._fabric_runtime.registerServiceType*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricRuntime.java
      startLine: 280
    package: system.fabric
    summary: "<p><span data-ttu-id=\"8729c-121\">Ordnet die angegebene ServiceTypeName mit dem tatsächlichen verwalteten Typ, die ihn implementiert.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8729c-121\">Associates the specified serviceTypeName with the actual managed Type that implements it.</span></span></p>\n<p><span data-ttu-id=\"8729c-122\">\r\n\r\n  <b>Hinweise:</b>Beachten Sie, dass dieser Mechanismus für die Registrierung der Service-Typ nicht über eine benutzerdefinierte erfordert <xref uid=\"system.fabric._stateless_service_factory\" data-throw-if-not-resolved=\"false\">system.fabric.StatelessServiceFactory</xref> oder <xref uid=\"system.fabric._stateful_service_factory\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServiceFactory</xref> zum Zeitpunkt der Registrierung bereitgestellt werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8729c-122\">\r\n\r\n  <b>Remarks:</b>Note that this mechanism for service type registration does not require a custom <xref uid=\"system.fabric._stateless_service_factory\" data-throw-if-not-resolved=\"false\">system.fabric.StatelessServiceFactory</xref> or <xref uid=\"system.fabric._stateful_service_factory\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServiceFactory</xref> to be provided at registration time.</span></span> <span data-ttu-id=\"8729c-123\">Service Fabric eine zur Laufzeit generiert und automatisch zu verwenden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8729c-123\">Service Fabric will generate one at runtime and utilize it automatically.</span></span> <span data-ttu-id=\"8729c-124\">Wenn für eine benutzerdefinierte Implementierung der Factory erforderlich ist, können Sie implementieren <xref uid=\"system.fabric._stateless_service_factory\" data-throw-if-not-resolved=\"false\">system.fabric.StatelessServiceFactory</xref> oder <xref uid=\"system.fabric._stateful_service_factory\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServiceFactory</xref> , und geben Sie diese über die entsprechende Registrierung-Factorymethoden ( <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricRuntime#registerStatelessServiceFactoryAsync (java.lang.String, system.fabric.StatelessServiceFactory, java.time.Duration)</xref> oder <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricRuntime#registerStatefulServiceFactoryAsync (java.lang.String, system.fabric.StatefulServiceFactory, java.time.Duration)</xref> )</span><span class=\"sxs-lookup\"><span data-stu-id=\"8729c-124\">If there is a need for a custom implementation of the factory, you can implement <xref uid=\"system.fabric._stateless_service_factory\" data-throw-if-not-resolved=\"false\">system.fabric.StatelessServiceFactory</xref> or <xref uid=\"system.fabric._stateful_service_factory\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServiceFactory</xref> and then provide those via the corresponding factory registration methods ( <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricRuntime#registerStatelessServiceFactoryAsync(java.lang.String, system.fabric.StatelessServiceFactory, java.time.Duration)</xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricRuntime#registerStatefulServiceFactoryAsync(java.lang.String, system.fabric.StatefulServiceFactory, java.time.Duration)</xref> )</span></span> </p>"
    syntax:
      content: 'public void registerServiceType(String serviceTypeName, Class<?> serviceTypeImplementation)'
      parameters:
        - id: serviceTypeName
          type: '26831127'
          description: <p><span data-ttu-id="8729c-125">Der Typname des Diensttyps (als Zeichenfolge).</span><span class="sxs-lookup"><span data-stu-id="8729c-125">The type name of the service type (as a string).</span></span> <span data-ttu-id="8729c-126">Dies sollte den Typ des Diensttyps Gruppe entsprechend den Angaben in den Manifesten und/oder Befehls CreateService übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="8729c-126">This should match the type of the service group type as specified in the manifests and/or the CreateService command.</span></span> </p>
        - id: serviceTypeImplementation
          type: a19781f8
          description: '<p><span data-ttu-id="8729c-127">Der Dienst qualifizierten Typ, der angegebenen ServiceTypeName implementiert.</span><span class="sxs-lookup"><span data-stu-id="8729c-127">The qualified service Type that implements the specified serviceTypeName.</span></span> </p>'
  - uid: 'system.fabric._fabric_runtime.registerServiceTypeAsync(String,Class<?>,Duration)'
    id: 'registerServiceTypeAsync(String,Class<?>,Duration)'
    parent: system.fabric._fabric_runtime
    href: system.fabric._fabric_runtime.yml
    langs:
      - java
    name: 'registerServiceTypeAsync(String serviceTypeName, Class<?> serviceTypeImplementation, Duration timeout)'
    nameWithType: 'FabricRuntime.registerServiceTypeAsync(String serviceTypeName, Class<?> serviceTypeImplementation, Duration timeout)'
    fullName: 'CompletableFuture<?> system.fabric.FabricRuntime.registerServiceTypeAsync(String serviceTypeName, Class<?> serviceTypeImplementation, Duration timeout)'
    overload: system.fabric._fabric_runtime.registerServiceTypeAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricRuntime.java
      startLine: 312
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="8729c-128">Ordnet asynchron mit dem tatsächlichen verwalteten Typ, die sie mit dem angegebenen Timeout implementiert der angegebenen serviceTypeName</span><span class="sxs-lookup"><span data-stu-id="8729c-128">Asynchronously associates the specified serviceTypeName with the actual managed Type that implements it, with the specified timeout</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> registerServiceTypeAsync(String serviceTypeName, Class<?> serviceTypeImplementation, Duration timeout)'
      parameters:
        - id: serviceTypeName
          type: '26831127'
          description: <p><span data-ttu-id="8729c-129">Der Typname des Diensttyps (als Zeichenfolge).</span><span class="sxs-lookup"><span data-stu-id="8729c-129">The type name of the service type (as a string).</span></span> <span data-ttu-id="8729c-130">Dies sollte den Typ des Diensttyps Gruppe entsprechend den Angaben in den Manifesten und/oder Befehls CreateService übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="8729c-130">This should match the type of the service group type as specified in the manifests and/or the CreateService command.</span></span> </p>
        - id: serviceTypeImplementation
          type: a19781f8
          description: '<p><span data-ttu-id="8729c-131">Der Dienst qualifizierten Typ, der angegebenen ServiceTypeName implementiert.</span><span class="sxs-lookup"><span data-stu-id="8729c-131">The qualified service Type that implements the specified serviceTypeName.</span></span> </p>'
        - id: timeout
          type: e02a2de0
          description: '<p><span data-ttu-id="8729c-132">Die maximale Zeitdauer Service Fabric können diesen Vorgang, um den Vorgang fortzusetzen, vor der Rückgabe einer TimeoutException.</span><span class="sxs-lookup"><span data-stu-id="8729c-132">The maximum amount of time Service Fabric will allow this operation to continue before returning a TimeoutException.</span></span> </p>'
      return:
        type: 16409f84
        description: '<p><span data-ttu-id="8729c-133">Die Aufgabe, die den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="8729c-133">The task representing the asynchronous operation.</span></span> </p>'
  - uid: 'system.fabric._fabric_runtime.registerStatefulServiceFactory(String,StatefulServiceFactory)'
    id: 'registerStatefulServiceFactory(String,StatefulServiceFactory)'
    parent: system.fabric._fabric_runtime
    href: system.fabric._fabric_runtime.yml
    langs:
      - java
    name: 'registerStatefulServiceFactory(String serviceTypeName, StatefulServiceFactory factory)'
    nameWithType: 'FabricRuntime.registerStatefulServiceFactory(String serviceTypeName, StatefulServiceFactory factory)'
    fullName: 'void system.fabric.FabricRuntime.registerStatefulServiceFactory(String serviceTypeName, StatefulServiceFactory factory)'
    overload: system.fabric._fabric_runtime.registerStatefulServiceFactory*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricRuntime.java
      startLine: 242
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="8729c-134">Registriert das angegebene <xref uid="system.fabric._stateful_service_factory" data-throw-if-not-resolved="false">system.fabric.StatefulServiceFactory</xref> für den angegebenen Diensttyp.</span><span class="sxs-lookup"><span data-stu-id="8729c-134">Registers the specified <xref uid="system.fabric._stateful_service_factory" data-throw-if-not-resolved="false">system.fabric.StatefulServiceFactory</xref> for the specified service type.</span></span></p>
      <p></p>
    syntax:
      content: 'public void registerStatefulServiceFactory(String serviceTypeName, StatefulServiceFactory factory)'
      parameters:
        - id: serviceTypeName
          type: '26831127'
          description: <p><span data-ttu-id="8729c-135">Der Typname des Diensttyps (als Zeichenfolge).</span><span class="sxs-lookup"><span data-stu-id="8729c-135">The type name of the service type (as a string).</span></span> <span data-ttu-id="8729c-136">Dies sollte den Typ des Diensttyps Gruppe entsprechend den Angaben in den Manifesten und/oder Befehls CreateService übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="8729c-136">This should match the type of the service group type as specified in the manifests and/or the CreateService command.</span></span> </p>
        - id: factory
          type: system.fabric._stateful_service_factory
          description: <p><span data-ttu-id="8729c-137">Die <xref uid="system.fabric._stateful_service_factory" data-throw-if-not-resolved="false">system.fabric.StatefulServiceFactory</xref> können die den angegebenen Typ erstellt.</span><span class="sxs-lookup"><span data-stu-id="8729c-137">The <xref uid="system.fabric._stateful_service_factory" data-throw-if-not-resolved="false">system.fabric.StatefulServiceFactory</xref> which can create the specified service type.</span></span> </p>
  - uid: 'system.fabric._fabric_runtime.registerStatefulServiceFactoryAsync(String,StatefulServiceFactory,Duration)'
    id: 'registerStatefulServiceFactoryAsync(String,StatefulServiceFactory,Duration)'
    parent: system.fabric._fabric_runtime
    href: system.fabric._fabric_runtime.yml
    langs:
      - java
    name: 'registerStatefulServiceFactoryAsync(String serviceTypeName, StatefulServiceFactory factory, Duration timeout)'
    nameWithType: 'FabricRuntime.registerStatefulServiceFactoryAsync(String serviceTypeName, StatefulServiceFactory factory, Duration timeout)'
    fullName: 'CompletableFuture<?> system.fabric.FabricRuntime.registerStatefulServiceFactoryAsync(String serviceTypeName, StatefulServiceFactory factory, Duration timeout)'
    overload: system.fabric._fabric_runtime.registerStatefulServiceFactoryAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricRuntime.java
      startLine: 383
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="8729c-138">Registriert das angegebene <xref uid="system.fabric._stateful_service_factory" data-throw-if-not-resolved="false">system.fabric.StatefulServiceFactory</xref> für den angegebenen Typ mit dem angegebenen Timeout und CancellationToken.</span><span class="sxs-lookup"><span data-stu-id="8729c-138">Registers the specified <xref uid="system.fabric._stateful_service_factory" data-throw-if-not-resolved="false">system.fabric.StatefulServiceFactory</xref> for the specified service type with the specified timeout and cancellationToken.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> registerStatefulServiceFactoryAsync(String serviceTypeName, StatefulServiceFactory factory, Duration timeout)'
      parameters:
        - id: serviceTypeName
          type: '26831127'
          description: <p><span data-ttu-id="8729c-139">Der Typname des Diensttyps (als Zeichenfolge).</span><span class="sxs-lookup"><span data-stu-id="8729c-139">The type name of the service type (as a string).</span></span> <span data-ttu-id="8729c-140">Dies sollte den Typ des Diensttyps Gruppe entsprechend den Angaben in den Manifesten und/oder Befehls CreateService übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="8729c-140">This should match the type of the service group type as specified in the manifests and/or the CreateService command.</span></span> </p>
        - id: factory
          type: system.fabric._stateful_service_factory
          description: <p><span data-ttu-id="8729c-141">Die <xref uid="system.fabric._stateful_service_factory" data-throw-if-not-resolved="false">system.fabric.StatefulServiceFactory</xref> können die den angegebenen Typ erstellt.</span><span class="sxs-lookup"><span data-stu-id="8729c-141">The <xref uid="system.fabric._stateful_service_factory" data-throw-if-not-resolved="false">system.fabric.StatefulServiceFactory</xref> which can create the specified service type.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: '<p><span data-ttu-id="8729c-142">Die maximale Zeitdauer Service Fabric können diesen Vorgang, um den Vorgang fortzusetzen, vor der Rückgabe einer TimeoutException.</span><span class="sxs-lookup"><span data-stu-id="8729c-142">The maximum amount of time Service Fabric will allow this operation to continue before returning a TimeoutException.</span></span> </p>'
      return:
        type: 16409f84
        description: <p><span data-ttu-id="8729c-143">Die den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="8729c-143">The representing the asynchronous operation.</span></span> </p>
  - uid: 'system.fabric._fabric_runtime.registerStatelessServiceFactory(String,StatelessServiceFactory)'
    id: 'registerStatelessServiceFactory(String,StatelessServiceFactory)'
    parent: system.fabric._fabric_runtime
    href: system.fabric._fabric_runtime.yml
    langs:
      - java
    name: 'registerStatelessServiceFactory(String serviceTypeName, StatelessServiceFactory factory)'
    nameWithType: 'FabricRuntime.registerStatelessServiceFactory(String serviceTypeName, StatelessServiceFactory factory)'
    fullName: 'void system.fabric.FabricRuntime.registerStatelessServiceFactory(String serviceTypeName, StatelessServiceFactory factory)'
    overload: system.fabric._fabric_runtime.registerStatelessServiceFactory*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricRuntime.java
      startLine: 216
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="8729c-144">Registriert das angegebene <xref uid="system.fabric._stateless_service_factory" data-throw-if-not-resolved="false">system.fabric.StatelessServiceFactory</xref> für den angegebenen Diensttyp.</span><span class="sxs-lookup"><span data-stu-id="8729c-144">Registers the specified <xref uid="system.fabric._stateless_service_factory" data-throw-if-not-resolved="false">system.fabric.StatelessServiceFactory</xref> for the specified service type.</span></span></p>
      <p></p>
    syntax:
      content: 'public void registerStatelessServiceFactory(String serviceTypeName, StatelessServiceFactory factory)'
      parameters:
        - id: serviceTypeName
          type: '26831127'
          description: <p><span data-ttu-id="8729c-145">Der Typname des Diensttyps (als Zeichenfolge).</span><span class="sxs-lookup"><span data-stu-id="8729c-145">The type name of the service type (as a string).</span></span> <span data-ttu-id="8729c-146">Dies sollte den Typ des Diensttyps Gruppe entsprechend den Angaben in den Manifesten und/oder Befehls CreateService übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="8729c-146">This should match the type of the service group type as specified in the manifests and/or the CreateService command.</span></span> </p>
        - id: factory
          type: system.fabric._stateless_service_factory
          description: <p><span data-ttu-id="8729c-147">Die <xref uid="system.fabric._stateless_service_factory" data-throw-if-not-resolved="false">system.fabric.StatelessServiceFactory</xref> können die den angegebenen Typ erstellt.</span><span class="sxs-lookup"><span data-stu-id="8729c-147">The <xref uid="system.fabric._stateless_service_factory" data-throw-if-not-resolved="false">system.fabric.StatelessServiceFactory</xref> which can create the specified service type.</span></span> </p>
  - uid: 'system.fabric._fabric_runtime.registerStatelessServiceFactoryAsync(String,StatelessServiceFactory,Duration)'
    id: 'registerStatelessServiceFactoryAsync(String,StatelessServiceFactory,Duration)'
    parent: system.fabric._fabric_runtime
    href: system.fabric._fabric_runtime.yml
    langs:
      - java
    name: 'registerStatelessServiceFactoryAsync(String serviceTypeName, StatelessServiceFactory factory, Duration timeout)'
    nameWithType: 'FabricRuntime.registerStatelessServiceFactoryAsync(String serviceTypeName, StatelessServiceFactory factory, Duration timeout)'
    fullName: 'CompletableFuture<?> system.fabric.FabricRuntime.registerStatelessServiceFactoryAsync(String serviceTypeName, StatelessServiceFactory factory, Duration timeout)'
    overload: system.fabric._fabric_runtime.registerStatelessServiceFactoryAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricRuntime.java
      startLine: 348
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="8729c-148">Asynchron registriert das angegebene <xref uid="system.fabric._stateless_service_factory" data-throw-if-not-resolved="false">system.fabric.StatelessServiceFactory</xref> für den angegebenen Diensttyp, mit dem angegebenen Timeout und CancellationToken</span><span class="sxs-lookup"><span data-stu-id="8729c-148">Asynchronously registers the specified <xref uid="system.fabric._stateless_service_factory" data-throw-if-not-resolved="false">system.fabric.StatelessServiceFactory</xref> for the specified service type, with the specified timeout and cancellationToken</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> registerStatelessServiceFactoryAsync(String serviceTypeName, StatelessServiceFactory factory, Duration timeout)'
      parameters:
        - id: serviceTypeName
          type: '26831127'
          description: <p><span data-ttu-id="8729c-149">Der Typname des Diensttyps (als Zeichenfolge).</span><span class="sxs-lookup"><span data-stu-id="8729c-149">The type name of the service type (as a string).</span></span> <span data-ttu-id="8729c-150">Dies sollte den Typ des Diensttyps Gruppe entsprechend den Angaben in den Manifesten und/oder Befehls CreateService übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="8729c-150">This should match the type of the service group type as specified in the manifests and/or the CreateService command.</span></span> </p>
        - id: factory
          type: system.fabric._stateless_service_factory
          description: <p><span data-ttu-id="8729c-151">Die <xref uid="system.fabric._stateless_service_factory" data-throw-if-not-resolved="false">system.fabric.StatelessServiceFactory</xref> können die den angegebenen Typ erstellt.</span><span class="sxs-lookup"><span data-stu-id="8729c-151">The <xref uid="system.fabric._stateless_service_factory" data-throw-if-not-resolved="false">system.fabric.StatelessServiceFactory</xref> which can create the specified service type.</span></span> </p>
        - id: timeout
          type: e02a2de0
          description: '<p><span data-ttu-id="8729c-152">Die maximale Zeitdauer Service Fabric können diesen Vorgang, um den Vorgang fortzusetzen, vor der Rückgabe einer TimeoutException.</span><span class="sxs-lookup"><span data-stu-id="8729c-152">The maximum amount of time Service Fabric will allow this operation to continue before returning a TimeoutException.</span></span> </p>'
      return:
        type: 16409f84
        description: '<p><span data-ttu-id="8729c-153">Die Aufgabe, die den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="8729c-153">The task representing the asynchronous operation.</span></span> </p>'
references:
  - uid: system.fabric._fabric_runtime.create*
    name: create
    nameWithType: FabricRuntime.create
    fullName: static FabricRuntime system.fabric.FabricRuntime.create
    package: system.fabric
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: 9cdf14d0system.fabric._fabric_runtimea08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric._fabric_runtime
        name: FabricRuntime
        fullName: system.fabric.FabricRuntime
        href: system.fabric._fabric_runtime.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._fabric_runtime.createAsync*
    name: createAsync
    nameWithType: FabricRuntime.createAsync
    fullName: static CompletableFuture<FabricRuntime> system.fabric.FabricRuntime.createAsync
    package: system.fabric
  - uid: 2b8852ea
    spec.java:
      - name: Runnable
        fullName: Runnable
  - uid: system.fabric._fabric_runtime.getActivationContext*
    name: getActivationContext
    nameWithType: FabricRuntime.getActivationContext
    fullName: static FabricCodePackageActivationContext system.fabric.FabricRuntime.getActivationContext
    package: system.fabric
  - uid: 9cdf14d0system.fabric._fabric_code_package_activation_contexta08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric._fabric_code_package_activation_context
        name: FabricCodePackageActivationContext
        fullName: system.fabric.FabricCodePackageActivationContext
        href: system.fabric._fabric_code_package_activation_context.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._fabric_runtime.getActivationContextAsync*
    name: getActivationContextAsync
    nameWithType: FabricRuntime.getActivationContextAsync
    fullName: static CompletableFuture<FabricCodePackageActivationContext> system.fabric.FabricRuntime.getActivationContextAsync
    package: system.fabric
  - uid: system.fabric._fabric_runtime.getNodeContext*
    name: getNodeContext
    nameWithType: FabricRuntime.getNodeContext
    fullName: static NodeContext system.fabric.FabricRuntime.getNodeContext
    package: system.fabric
  - uid: 9cdf14d0system.fabric._node_contexta08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric._node_context
        name: NodeContext
        fullName: system.fabric.NodeContext
        href: system.fabric._node_context.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._fabric_runtime.getNodeContextAsync*
    name: getNodeContextAsync
    nameWithType: FabricRuntime.getNodeContextAsync
    fullName: static CompletableFuture<NodeContext> system.fabric.FabricRuntime.getNodeContextAsync
    package: system.fabric
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric._fabric_runtime.registerStatelessServiceFactory*
    name: registerStatelessServiceFactory
    nameWithType: FabricRuntime.registerStatelessServiceFactory
    fullName: void system.fabric.FabricRuntime.registerStatelessServiceFactory
    package: system.fabric
  - uid: system.fabric._fabric_runtime.registerStatefulServiceFactory*
    name: registerStatefulServiceFactory
    nameWithType: FabricRuntime.registerStatefulServiceFactory
    fullName: void system.fabric.FabricRuntime.registerStatefulServiceFactory
    package: system.fabric
  - uid: a19781f8
    spec.java:
      - name: Class<?>
        fullName: Class<?>
  - uid: system.fabric._fabric_runtime.registerServiceType*
    name: registerServiceType
    nameWithType: FabricRuntime.registerServiceType
    fullName: void system.fabric.FabricRuntime.registerServiceType
    package: system.fabric
  - uid: 16409f84
    spec.java:
      - name: CompletableFuture<?>
        fullName: CompletableFuture<?>
  - uid: system.fabric._fabric_runtime.registerServiceTypeAsync*
    name: registerServiceTypeAsync
    nameWithType: FabricRuntime.registerServiceTypeAsync
    fullName: CompletableFuture<?> system.fabric.FabricRuntime.registerServiceTypeAsync
    package: system.fabric
  - uid: system.fabric._fabric_runtime.registerStatelessServiceFactoryAsync*
    name: registerStatelessServiceFactoryAsync
    nameWithType: FabricRuntime.registerStatelessServiceFactoryAsync
    fullName: CompletableFuture<?> system.fabric.FabricRuntime.registerStatelessServiceFactoryAsync
    package: system.fabric
  - uid: system.fabric._fabric_runtime.registerStatefulServiceFactoryAsync*
    name: registerStatefulServiceFactoryAsync
    nameWithType: FabricRuntime.registerStatefulServiceFactoryAsync
    fullName: CompletableFuture<?> system.fabric.FabricRuntime.registerStatefulServiceFactoryAsync
    package: system.fabric
  - uid: system.fabric._fabric_runtime.close*
    name: close
    nameWithType: FabricRuntime.close
    fullName: void system.fabric.FabricRuntime.close
    package: system.fabric
  - uid: system.fabric._fabric_code_package_activation_context
    parent: system.fabric
    href: system.fabric._fabric_code_package_activation_context.yml
    name: FabricCodePackageActivationContext
    nameWithType: FabricCodePackageActivationContext
    fullName: system.fabric.FabricCodePackageActivationContext
    type: Class
    summary: '<p><span data-ttu-id="8729c-154">Stellt Aktivierungskontext für die Service Fabric-Dienst dar.</span><span class="sxs-lookup"><span data-stu-id="8729c-154">Represents activation context for the Service Fabric service.</span></span> <span data-ttu-id="8729c-155">Dies gilt für nur aktiviert, fabricdienst.</span><span class="sxs-lookup"><span data-stu-id="8729c-155">This is valid for fabric activated service only.</span></span> </p>'
    syntax:
      content: public class FabricCodePackageActivationContext implements CodePackageActivationContext
  - uid: system.fabric._node_context
    parent: system.fabric
    href: system.fabric._node_context.yml
    name: NodeContext
    nameWithType: NodeContext
    fullName: system.fabric.NodeContext
    type: Class
    summary: '<p><span data-ttu-id="8729c-156">Klasse, um einen Knotenkontext zu kapseln.</span><span class="sxs-lookup"><span data-stu-id="8729c-156">Class to encapsulate a node context.</span></span> </p>'
    syntax:
      content: public class NodeContext
  - uid: system.fabric.interop._native_async_callback
    parent: system.fabric.interop
    href: system.fabric.interop._native_async_callback.yml
    name: NativeAsyncCallback
    nameWithType: NativeAsyncCallback
    fullName: system.fabric.interop.NativeAsyncCallback
    type: Interface
    syntax:
      content: public interface NativeAsyncCallback
  - uid: system.fabric._fabric_runtime
    parent: system.fabric
    href: system.fabric._fabric_runtime.yml
    name: FabricRuntime
    nameWithType: FabricRuntime
    fullName: system.fabric.FabricRuntime
    type: Class
    summary: '<p><span data-ttu-id="8729c-157">Können benutzerdefinierte Hosts erhalten ihre <xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>, auch auf den erforderlichen Dienst Factorys registrieren [ <xref uid="system.fabric._stateless_service_factory" data-throw-if-not-resolved="false">system.fabric.StatelessServiceFactory</xref>, <xref uid="system.fabric._stateful_service_factory" data-throw-if-not-resolved="false">system.fabric.StatefulServiceFactory</xref> ] oder direkt Diensttypen.</span><span class="sxs-lookup"><span data-stu-id="8729c-157">Allows user created hosts to obtain their <xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>, well as to register the necessary service factories [ <xref uid="system.fabric._stateless_service_factory" data-throw-if-not-resolved="false">system.fabric.StatelessServiceFactory</xref>, <xref uid="system.fabric._stateful_service_factory" data-throw-if-not-resolved="false">system.fabric.StatefulServiceFactory</xref> ] or service types directly.</span></span> </p>'
    syntax: *ref_1
  - uid: system.fabric._code_package_activation_context
    parent: system.fabric
    href: system.fabric._code_package_activation_context.yml
    name: CodePackageActivationContext
    nameWithType: CodePackageActivationContext
    fullName: system.fabric.CodePackageActivationContext
    type: Interface
    summary: '<p><span data-ttu-id="8729c-158">Stellt Aktivierungskontext für die Service Fabric-Dienst dar.</span><span class="sxs-lookup"><span data-stu-id="8729c-158">Represents activation context for the Service Fabric service.</span></span> <span data-ttu-id="8729c-159">Dies gilt für nur aktiviert, fabricdienst.</span><span class="sxs-lookup"><span data-stu-id="8729c-159">This is valid for fabric activated service only.</span></span> </p>'
    syntax:
      content: public interface CodePackageActivationContext
  - uid: system.fabric._stateless_service_factory
    parent: system.fabric
    href: system.fabric._stateless_service_factory.yml
    name: StatelessServiceFactory
    nameWithType: StatelessServiceFactory
    fullName: system.fabric.StatelessServiceFactory
    type: Interface
    summary: "<p><span data-ttu-id=\"8729c-160\">Stellt eine zustandslosen Diensts-Factory, die zum Erstellen von Instanzen eines bestimmten Typs von zustandslosen Diensts zuständig ist.</span><span class=\"sxs-lookup\"><span data-stu-id=\"8729c-160\">Represents a stateless service factory that is responsible for creating instances of a specific type of stateless service.</span></span> </p>\n<p><span data-ttu-id=\"8729c-161\">\r\n\r\n  <b>Hinweise:</b>zustandslosen Diensts Factorys registriert werden, die <xref uid=\"system.fabric._fabric_runtime\" data-throw-if-not-resolved=\"false\">system.fabric.FabricRuntime</xref> von Diensthosts über <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricRuntime#registerStatelessServiceFactory ( java.lang.String,system.fabric.StatelessServiceFactory)</xref> oder <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricRuntime#registerStatelessServiceFactoryAsync (java.lang.String,system.fabric.StatelessServiceFactory, java.time.Duration)</xref></span><span class=\"sxs-lookup\"><span data-stu-id=\"8729c-161\">\r\n\r\n  <b>Remarks:</b>Stateless service factories are registered with the <xref uid=\"system.fabric._fabric_runtime\" data-throw-if-not-resolved=\"false\">system.fabric.FabricRuntime</xref> by service hosts via <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricRuntime#registerStatelessServiceFactory(java.lang.String,system.fabric.StatelessServiceFactory)</xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricRuntime#registerStatelessServiceFactoryAsync(java.lang.String,system.fabric.StatelessServiceFactory,java.time.Duration)</xref></span></span></p>"
    syntax:
      content: public interface StatelessServiceFactory
  - uid: system.fabric._stateful_service_factory
    parent: system.fabric
    href: system.fabric._stateful_service_factory.yml
    name: StatefulServiceFactory
    nameWithType: StatefulServiceFactory
    fullName: system.fabric.StatefulServiceFactory
    type: Interface
    summary: '<p><span data-ttu-id="8729c-162">Stellt eine zustandsbehaftete dienstfactory, die für das Erstellen von Replikaten, der einen bestimmten Typ von einem zustandsbehafteten Dienst zuständig ist.</span><span class="sxs-lookup"><span data-stu-id="8729c-162">Represents a stateful service factory that is responsible for creating replicas of a specific type of stateful service.</span></span> <span data-ttu-id="8729c-163">Mit einem zustandsbehafteten Dienst Factorys registriert sind die <xref uid="system.fabric._fabric_runtime" data-throw-if-not-resolved="false">system.fabric.FabricRuntime</xref> von Diensthosts über <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime#registerStatefulServiceFactory (java.lang.String, system.fabric.StatefulServiceFactory)</xref> oder <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime#registerStatefulServiceFactoryAsync(java.lang.String,system.fabric.StatefulServiceFactory,java.time.Duration)</xref></span><span class="sxs-lookup"><span data-stu-id="8729c-163">Stateful service factories are registered with the <xref uid="system.fabric._fabric_runtime" data-throw-if-not-resolved="false">system.fabric.FabricRuntime</xref> by service hosts via <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime#registerStatefulServiceFactory(java.lang.String,system.fabric.StatefulServiceFactory)</xref> or <xref uid="" data-throw-if-not-resolved="false">system.fabric.FabricRuntime#registerStatefulServiceFactoryAsync(java.lang.String,system.fabric.StatefulServiceFactory,java.time.Duration)</xref></span></span></p>'
    syntax:
      content: public interface StatefulServiceFactory