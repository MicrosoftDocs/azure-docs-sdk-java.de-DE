### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.servicebus._i_message_receiver
    id: _i_message_receiver
    parent: com.microsoft.azure.servicebus
    children:
      - com.microsoft.azure.servicebus._i_message_receiver.abandon(UUID)
      - 'com.microsoft.azure.servicebus._i_message_receiver.abandon(UUID,Map<String, Object>)'
      - com.microsoft.azure.servicebus._i_message_receiver.abandonAsync(UUID)
      - 'com.microsoft.azure.servicebus._i_message_receiver.abandonAsync(UUID,Map<String, Object>)'
      - com.microsoft.azure.servicebus._i_message_receiver.complete(UUID)
      - com.microsoft.azure.servicebus._i_message_receiver.completeAsync(UUID)
      - com.microsoft.azure.servicebus._i_message_receiver.deadLetter(UUID)
      - 'com.microsoft.azure.servicebus._i_message_receiver.deadLetter(UUID,Map<String, Object>)'
      - 'com.microsoft.azure.servicebus._i_message_receiver.deadLetter(UUID,String,String)'
      - 'com.microsoft.azure.servicebus._i_message_receiver.deadLetter(UUID,String,String,Map<String, Object>)'
      - com.microsoft.azure.servicebus._i_message_receiver.deadLetterAsync(UUID)
      - 'com.microsoft.azure.servicebus._i_message_receiver.deadLetterAsync(UUID,Map<String, Object>)'
      - 'com.microsoft.azure.servicebus._i_message_receiver.deadLetterAsync(UUID,String,String)'
      - 'com.microsoft.azure.servicebus._i_message_receiver.deadLetterAsync(UUID,String,String,Map<String, Object>)'
      - com.microsoft.azure.servicebus._i_message_receiver.defer(UUID)
      - 'com.microsoft.azure.servicebus._i_message_receiver.defer(UUID,Map<String, Object>)'
      - com.microsoft.azure.servicebus._i_message_receiver.deferAsync(UUID)
      - 'com.microsoft.azure.servicebus._i_message_receiver.deferAsync(UUID,Map<String, Object>)'
      - com.microsoft.azure.servicebus._i_message_receiver.getPrefetchCount()
      - com.microsoft.azure.servicebus._i_message_receiver.getReceiveMode()
      - com.microsoft.azure.servicebus._i_message_receiver.receive()
      - com.microsoft.azure.servicebus._i_message_receiver.receive(Duration)
      - com.microsoft.azure.servicebus._i_message_receiver.receiveAsync()
      - com.microsoft.azure.servicebus._i_message_receiver.receiveAsync(Duration)
      - com.microsoft.azure.servicebus._i_message_receiver.receiveBatch(int)
      - 'com.microsoft.azure.servicebus._i_message_receiver.receiveBatch(int,Duration)'
      - com.microsoft.azure.servicebus._i_message_receiver.receiveBatchAsync(int)
      - 'com.microsoft.azure.servicebus._i_message_receiver.receiveBatchAsync(int,Duration)'
      - com.microsoft.azure.servicebus._i_message_receiver.receiveDeferredMessage(long)
      - com.microsoft.azure.servicebus._i_message_receiver.receiveDeferredMessageAsync(long)
      - com.microsoft.azure.servicebus._i_message_receiver.receiveDeferredMessageBatch(Collection<Long>)
      - com.microsoft.azure.servicebus._i_message_receiver.receiveDeferredMessageBatchAsync(Collection<Long>)
      - com.microsoft.azure.servicebus._i_message_receiver.renewMessageLock(IMessage)
      - com.microsoft.azure.servicebus._i_message_receiver.renewMessageLockAsync(IMessage)
      - com.microsoft.azure.servicebus._i_message_receiver.setPrefetchCount(int)
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: IMessageReceiver
    nameWithType: IMessageReceiver
    fullName: com.microsoft.azure.servicebus.IMessageReceiver
    type: Interface
    source:
      remote: &ref_0
        path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
        branch: master
        repo: 'https://github.com/Azure/azure-service-bus-java'
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 17
    package: com.microsoft.azure.servicebus
    summary: '<p>Definiert die Nachricht Empfänger-Schnittstelle. Die MessageReceiver kann zum Empfangen von Nachrichten aus Warteschlangen und Abonnements, und bestätigen sie verwendet werden. </p>'
    syntax:
      content: 'public interface IMessageReceiver extends IMessageEntityClient,IMessageBrowser'
    inheritedMembers:
      - com.microsoft.azure.servicebus._i_closeable.close()
      - com.microsoft.azure.servicebus._i_closeable.closeAsync()
      - com.microsoft.azure.servicebus._i_message_entity_client.getEntityPath()
      - com.microsoft.azure.servicebus._i_message_browser.peek()
      - com.microsoft.azure.servicebus._i_message_browser.peek(long)
      - com.microsoft.azure.servicebus._i_message_browser.peekAsync()
      - com.microsoft.azure.servicebus._i_message_browser.peekAsync(long)
      - com.microsoft.azure.servicebus._i_message_browser.peekBatch(int)
      - 'com.microsoft.azure.servicebus._i_message_browser.peekBatch(long,int)'
      - com.microsoft.azure.servicebus._i_message_browser.peekBatchAsync(int)
      - 'com.microsoft.azure.servicebus._i_message_browser.peekBatchAsync(long,int)'
  - uid: com.microsoft.azure.servicebus._i_message_receiver.abandon(UUID)
    id: abandon(UUID)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: abandon(UUID lockToken)
    nameWithType: IMessageReceiver.abandon(UUID lockToken)
    fullName: void com.microsoft.azure.servicebus.IMessageReceiver.abandon(UUID lockToken)
    overload: com.microsoft.azure.servicebus._i_message_receiver.abandon*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 33
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Verwerfen <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mit Sperrtoken. Dadurch wird die Nachricht erneut für die Verarbeitung zur Verfügung. Aufgeben einer Nachricht erhöht die Übermittlungsanzahl der Nachricht</p>
      <p></p>
    syntax:
      content: public void abandon(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Abandon fehlgeschlagen ist. </p>
  - uid: 'com.microsoft.azure.servicebus._i_message_receiver.abandon(UUID,Map<String, Object>)'
    id: 'abandon(UUID,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: 'abandon(UUID lockToken, Map<String, Object> propertiesToModify)'
    nameWithType: 'IMessageReceiver.abandon(UUID lockToken, Map<String, Object> propertiesToModify)'
    fullName: 'void com.microsoft.azure.servicebus.IMessageReceiver.abandon(UUID lockToken, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._i_message_receiver.abandon*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 43
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Verwerfen <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mit Lock-token und aktualisierte Message-Eigenschaft. Dadurch wird die Nachricht erneut für die Verarbeitung zur Verfügung. Aufgeben einer Nachricht erhöht die Übermittlungsanzahl der Nachricht</p>
      <p></p>
    syntax:
      content: 'public void abandon(UUID lockToken, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
        - id: propertiesToModify
          type: e7b06046
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Eigenschaften zu ändern. </p>"
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Abandon fehlgeschlagen ist. </p>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.abandonAsync(UUID)
    id: abandonAsync(UUID)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: abandonAsync(UUID lockToken)
    nameWithType: IMessageReceiver.abandonAsync(UUID lockToken)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageReceiver.abandonAsync(UUID lockToken)
    overload: com.microsoft.azure.servicebus._i_message_receiver.abandonAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 51
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Verwerfen Sie asynchron <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mit Sperrtoken. Dadurch wird die Nachricht erneut für die Verarbeitung zur Verfügung. Aufgeben einer Nachricht, erhöhen Sie die Übermittlungsanzahl der Nachricht.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> abandonAsync(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden Abandon darstellt. </p>'
  - uid: 'com.microsoft.azure.servicebus._i_message_receiver.abandonAsync(UUID,Map<String, Object>)'
    id: 'abandonAsync(UUID,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: 'abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    nameWithType: 'IMessageReceiver.abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    fullName: 'CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageReceiver.abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._i_message_receiver.abandonAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 60
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Verwerfen Sie asynchron <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mit Lock-token und aktualisierte Message-Eigenschaft. Dadurch wird die Nachricht erneut für die Verarbeitung zur Verfügung. Aufgeben einer Nachricht, erhöhen Sie die Übermittlungsanzahl der Nachricht.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Void> abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
        - id: propertiesToModify
          type: e7b06046
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Eigenschaften zu ändern. </p>"
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden Abandon darstellt. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_receiver.complete(UUID)
    id: complete(UUID)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: complete(UUID lockToken)
    nameWithType: IMessageReceiver.complete(UUID lockToken)
    fullName: void com.microsoft.azure.servicebus.IMessageReceiver.complete(UUID lockToken)
    overload: com.microsoft.azure.servicebus._i_message_receiver.complete*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 69
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Schließt eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mit dem Sperrtoken. Hierdurch wird die Nachricht vom Dienst gelöscht.</p>
      <p></p>
    syntax:
      content: public void complete(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Abandon fehlgeschlagen ist. </p>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.completeAsync(UUID)
    id: completeAsync(UUID)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: completeAsync(UUID lockToken)
    nameWithType: IMessageReceiver.completeAsync(UUID lockToken)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageReceiver.completeAsync(UUID lockToken)
    overload: com.microsoft.azure.servicebus._i_message_receiver.completeAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 79
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Asynchron abgeschlossen ist ein <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mit dem Sperrtoken. Hierdurch wird die Nachricht vom Dienst gelöscht.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> completeAsync(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
      return:
        type: db03ee24
        description: '<p>ein CompletableFuture, die ausstehend. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_receiver.deadLetter(UUID)
    id: deadLetter(UUID)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: deadLetter(UUID lockToken)
    nameWithType: IMessageReceiver.deadLetter(UUID lockToken)
    fullName: void com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID lockToken)
    overload: com.microsoft.azure.servicebus._i_message_receiver.deadLetter*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 126
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Verschiebt eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> auf die Unterwarteschlange für unzustellbare Nachrichten.</p>
      <p></p>
    syntax:
      content: public void deadLetter(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn die Warteschlange für unzustellbare Nachrichten ist fehlgeschlagen. </p>
  - uid: 'com.microsoft.azure.servicebus._i_message_receiver.deadLetter(UUID,Map<String, Object>)'
    id: 'deadLetter(UUID,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: 'deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)'
    nameWithType: 'IMessageReceiver.deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)'
    fullName: 'void com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._i_message_receiver.deadLetter*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 136
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Verschiebt eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> an die Warteschlange für unzustellbare Nachrichten untergeordnete, mit geänderten Nachrichteneigenschaften.</p>
      <p></p>
    syntax:
      content: 'public void deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
        - id: propertiesToModify
          type: e7b06046
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Eigenschaften zu ändern. </p>"
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn die Warteschlange für unzustellbare Nachrichten ist fehlgeschlagen. </p>
  - uid: 'com.microsoft.azure.servicebus._i_message_receiver.deadLetter(UUID,String,String)'
    id: 'deadLetter(UUID,String,String)'
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: 'deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    nameWithType: 'IMessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    fullName: 'void com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    overload: com.microsoft.azure.servicebus._i_message_receiver.deadLetter*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 147
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Verschiebt eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mit in der Warteschlange für unzustellbare Nachrichten untergeordnete Warteschlange für unzustellbare Nachrichten Beschreibung der Ursache und Fehler.</p>
      <p></p>
    syntax:
      content: 'public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
        - id: deadLetterReason
          type: '26831127'
          description: <p>Der Grund für die Warteschlange für unzustellbare Nachrichten. </p>
        - id: deadLetterErrorDescription
          type: '26831127'
          description: <p>Die fehlerbeschreibung für unzustellbare Nachrichten. </p>
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn die Warteschlange für unzustellbare Nachrichten ist fehlgeschlagen. </p>
  - uid: 'com.microsoft.azure.servicebus._i_message_receiver.deadLetter(UUID,String,String,Map<String, Object>)'
    id: 'deadLetter(UUID,String,String,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: 'deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    nameWithType: 'IMessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    fullName: 'void com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._i_message_receiver.deadLetter*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 159
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Verschiebt eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mit in der Warteschlange für unzustellbare Nachrichten untergeordnete Warteschlange für unzustellbare Nachrichten Grund und Fehler Beschreibung und die geänderten Eigenschaften.</p>
      <p></p>
    syntax:
      content: 'public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
        - id: deadLetterReason
          type: '26831127'
          description: <p>Der Grund für die Warteschlange für unzustellbare Nachrichten. </p>
        - id: deadLetterErrorDescription
          type: '26831127'
          description: <p>Die fehlerbeschreibung für unzustellbare Nachrichten. </p>
        - id: propertiesToModify
          type: e7b06046
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Eigenschaften zu ändern. </p>"
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn die Warteschlange für unzustellbare Nachrichten ist fehlgeschlagen. </p>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.deadLetterAsync(UUID)
    id: deadLetterAsync(UUID)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: deadLetterAsync(UUID lockToken)
    nameWithType: IMessageReceiver.deadLetterAsync(UUID lockToken)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageReceiver.deadLetterAsync(UUID lockToken)
    overload: com.microsoft.azure.servicebus._i_message_receiver.deadLetterAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 167
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Wechselt asynchron eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mit in der Warteschlange für unzustellbare Nachrichten untergeordnete Warteschlange für unzustellbare Nachrichten.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> deadLetterAsync(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden Warteschlange für unzustellbare Nachrichten darstellt. </p>'
  - uid: 'com.microsoft.azure.servicebus._i_message_receiver.deadLetterAsync(UUID,Map<String, Object>)'
    id: 'deadLetterAsync(UUID,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: 'deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    nameWithType: 'IMessageReceiver.deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    fullName: 'CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageReceiver.deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._i_message_receiver.deadLetterAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 176
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Wechselt asynchron eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> an die Warteschlange für unzustellbare Nachrichten untergeordnete, mit der geänderten Eigenschaften.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Void> deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
        - id: propertiesToModify
          type: e7b06046
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Eigenschaften zu ändern. </p>"
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden Warteschlange für unzustellbare Nachrichten darstellt. </p>'
  - uid: 'com.microsoft.azure.servicebus._i_message_receiver.deadLetterAsync(UUID,String,String)'
    id: 'deadLetterAsync(UUID,String,String)'
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: 'deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    nameWithType: 'IMessageReceiver.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    fullName: 'CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageReceiver.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    overload: com.microsoft.azure.servicebus._i_message_receiver.deadLetterAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 186
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Wechselt asynchron eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mit in der Warteschlange für unzustellbare Nachrichten untergeordnete Warteschlange für unzustellbare Nachrichten Beschreibung der Ursache und Fehler.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
        - id: deadLetterReason
          type: '26831127'
          description: <p>Der Grund für die Warteschlange für unzustellbare Nachrichten. </p>
        - id: deadLetterErrorDescription
          type: '26831127'
          description: <p>Die fehlerbeschreibung für unzustellbare Nachrichten. </p>
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden Warteschlange für unzustellbare Nachrichten darstellt. </p>'
  - uid: 'com.microsoft.azure.servicebus._i_message_receiver.deadLetterAsync(UUID,String,String,Map<String, Object>)'
    id: 'deadLetterAsync(UUID,String,String,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: 'deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    nameWithType: 'IMessageReceiver.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    fullName: 'CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageReceiver.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._i_message_receiver.deadLetterAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 197
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Wechselt asynchron eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mit in der Warteschlange für unzustellbare Nachrichten untergeordnete Warteschlange für unzustellbare Nachrichten Grund und Fehler Beschreibung und die geänderten Eigenschaften.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
        - id: deadLetterReason
          type: '26831127'
          description: <p>Der Grund für die Warteschlange für unzustellbare Nachrichten. </p>
        - id: deadLetterErrorDescription
          type: '26831127'
          description: <p>Die fehlerbeschreibung für unzustellbare Nachrichten. </p>
        - id: propertiesToModify
          type: e7b06046
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Eigenschaften zu ändern. </p>"
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden Warteschlange für unzustellbare Nachrichten darstellt. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_receiver.defer(UUID)
    id: defer(UUID)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: defer(UUID lockToken)
    nameWithType: IMessageReceiver.defer(UUID lockToken)
    fullName: void com.microsoft.azure.servicebus.IMessageReceiver.defer(UUID lockToken)
    overload: com.microsoft.azure.servicebus._i_message_receiver.defer*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 90
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Orientiert sich eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mit dem Sperrtoken. Dies wird in die Unterwarteschlange für verzögerte Nachricht verschoben.</p>
      <p></p>
    syntax:
      content: public void defer(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn zurückstellen fehlgeschlagen </p>
  - uid: 'com.microsoft.azure.servicebus._i_message_receiver.defer(UUID,Map<String, Object>)'
    id: 'defer(UUID,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: 'defer(UUID lockToken, Map<String, Object> propertiesToModify)'
    nameWithType: 'IMessageReceiver.defer(UUID lockToken, Map<String, Object> propertiesToModify)'
    fullName: 'void com.microsoft.azure.servicebus.IMessageReceiver.defer(UUID lockToken, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._i_message_receiver.defer*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 100
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Orientiert sich eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mithilfe seiner Sperrtoken mit Message-Eigenschaft geändert. Dies wird in die Unterwarteschlange für verzögerte Nachricht verschoben.</p>
      <p></p>
    syntax:
      content: 'public void defer(UUID lockToken, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
        - id: propertiesToModify
          type: e7b06046
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Eigenschaften zu ändern. </p>"
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn zurückstellen fehlgeschlagen </p>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.deferAsync(UUID)
    id: deferAsync(UUID)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: deferAsync(UUID lockToken)
    nameWithType: IMessageReceiver.deferAsync(UUID lockToken)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageReceiver.deferAsync(UUID lockToken)
    overload: com.microsoft.azure.servicebus._i_message_receiver.deferAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 108
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Verzögert asynchron eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mit dem Sperrtoken. Dies wird in die Unterwarteschlange für verzögerte Nachricht verschoben.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> deferAsync(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden Defer darstellt. </p>'
  - uid: 'com.microsoft.azure.servicebus._i_message_receiver.deferAsync(UUID,Map<String, Object>)'
    id: 'deferAsync(UUID,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: 'deferAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    nameWithType: 'IMessageReceiver.deferAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    fullName: 'CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageReceiver.deferAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._i_message_receiver.deferAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 117
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Verzögert asynchron eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mithilfe seiner Sperrtoken mit Nachricht-Eigenschaft geändert. Dies wird in die Unterwarteschlange für verzögerte Nachricht verschoben.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Void> deferAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Sperrtoken <xref uid=\"com.microsoft.azure.servicebus._message.getLockToken()\" data-throw-if-not-resolved=\"false\">Message#getLockToken()</xref></p>"
        - id: propertiesToModify
          type: e7b06046
          description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> Eigenschaften zu ändern. </p>"
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden Defer darstellt. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_receiver.getPrefetchCount()
    id: getPrefetchCount()
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: getPrefetchCount()
    nameWithType: IMessageReceiver.getPrefetchCount()
    fullName: int com.microsoft.azure.servicebus.IMessageReceiver.getPrefetchCount()
    overload: com.microsoft.azure.servicebus._i_message_receiver.getPrefetchCount*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 338
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Abrufen der Prefetch-festgelegte Wert.</p>
      <p></p>
    syntax:
      content: public int getPrefetchCount()
      return:
        type: f75371fa
        description: <p>Der Satz Prefetch Count-Wert. </p>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.getReceiveMode()
    id: getReceiveMode()
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: getReceiveMode()
    nameWithType: IMessageReceiver.getReceiveMode()
    fullName: ReceiveMode com.microsoft.azure.servicebus.IMessageReceiver.getReceiveMode()
    overload: com.microsoft.azure.servicebus._i_message_receiver.getReceiveMode*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 24
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Abrufen des aktuellen Empfängers <xref uid="com.microsoft.azure.servicebus._receive_mode" data-throw-if-not-resolved="false">ReceiveMode</xref>.</p>
      <p></p>
    syntax:
      content: public ReceiveMode getReceiveMode()
      return:
        type: com.microsoft.azure.servicebus._receive_mode
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._receive_mode\" data-throw-if-not-resolved=\"false\">ReceiveMode</xref>\r\n\r\n</p>"
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receive()
    id: receive()
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: receive()
    nameWithType: IMessageReceiver.receive()
    fullName: IMessage com.microsoft.azure.servicebus.IMessageReceiver.receive()
    overload: com.microsoft.azure.servicebus._i_message_receiver.receive*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 206
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Empfängt eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mit Standardserver Wartezeit.</p>
      <p></p>
    syntax:
      content: public IMessage receive()
      return:
        type: com.microsoft.azure.servicebus._i_message
        description: '<p>Die empfangenen Daten <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> oder null, wenn keine Meldung vorhanden ist. </p>'
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Fehler beim Empfang </p>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receive(Duration)
    id: receive(Duration)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: receive(Duration serverWaitTime)
    nameWithType: IMessageReceiver.receive(Duration serverWaitTime)
    fullName: IMessage com.microsoft.azure.servicebus.IMessageReceiver.receive(Duration serverWaitTime)
    overload: com.microsoft.azure.servicebus._i_message_receiver.receive*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 216
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Empfängt eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> mit dem angegebenen Server Wartezeit.</p>
      <p></p>
    syntax:
      content: public IMessage receive(Duration serverWaitTime)
      parameters:
        - id: serverWaitTime
          type: e02a2de0
          description: <p>Die Server-Wartezeit </p>
      return:
        type: com.microsoft.azure.servicebus._i_message
        description: '<p>Die empfangenen Daten <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> oder null, wenn keine Meldung vorhanden ist. </p>'
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Fehler beim Empfang </p>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receiveAsync()
    id: receiveAsync()
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: receiveAsync()
    nameWithType: IMessageReceiver.receiveAsync()
    fullName: CompletableFuture<IMessage> com.microsoft.azure.servicebus.IMessageReceiver.receiveAsync()
    overload: com.microsoft.azure.servicebus._i_message_receiver.receiveAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 264
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Empfängt eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> von Azure-Servicebus.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<IMessage> receiveAsync()
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_messagea08ddfce
        description: '<p>Die empfangene Nachricht. Gibt null, wenn keine Nachricht gefunden wird </p>'
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receiveAsync(Duration)
    id: receiveAsync(Duration)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: receiveAsync(Duration serverWaitTime)
    nameWithType: IMessageReceiver.receiveAsync(Duration serverWaitTime)
    fullName: CompletableFuture<IMessage> com.microsoft.azure.servicebus.IMessageReceiver.receiveAsync(Duration serverWaitTime)
    overload: com.microsoft.azure.servicebus._i_message_receiver.receiveAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 272
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Empfängt eine <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> von Azure Service Bus mit Server-Wartezeit.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<IMessage> receiveAsync(Duration serverWaitTime)
      parameters:
        - id: serverWaitTime
          type: e02a2de0
          description: '<p>Die Wartezeit, bis der Client für den Empfang einer Nachricht, bevor ein Timeout eintritt. </p>'
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_messagea08ddfce
        description: '<p>Die empfangene Nachricht. Gibt null, wenn keine Nachricht gefunden wird </p>'
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receiveBatch(int)
    id: receiveBatch(int)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: receiveBatch(int maxMessageCount)
    nameWithType: IMessageReceiver.receiveBatch(int maxMessageCount)
    fullName: Collection<IMessage> com.microsoft.azure.servicebus.IMessageReceiver.receiveBatch(int maxMessageCount)
    overload: com.microsoft.azure.servicebus._i_message_receiver.receiveBatch*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 236
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Empfängt ein Maximum von MaxMessageCount <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> von Azure Service Bus.</p>
      <p></p>
    syntax:
      content: public Collection<IMessage> receiveBatch(int maxMessageCount)
      parameters:
        - id: maxMessageCount
          type: f75371fa
          description: '<p>Die maximale Anzahl von Nachrichten, die empfangen werden. </p>'
      return:
        type: 12ebb11acom.microsoft.azure.servicebus._i_messagea08ddfce
        description: '<p>Liste der Nachrichten empfangen. Gibt null zurück, wenn keine Nachricht gefunden wird. </p>'
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Fehler beim Empfang </p>
  - uid: 'com.microsoft.azure.servicebus._i_message_receiver.receiveBatch(int,Duration)'
    id: 'receiveBatch(int,Duration)'
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: 'receiveBatch(int maxMessageCount, Duration serverWaitTime)'
    nameWithType: 'IMessageReceiver.receiveBatch(int maxMessageCount, Duration serverWaitTime)'
    fullName: 'Collection<IMessage> com.microsoft.azure.servicebus.IMessageReceiver.receiveBatch(int maxMessageCount, Duration serverWaitTime)'
    overload: com.microsoft.azure.servicebus._i_message_receiver.receiveBatch*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 247
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Empfängt ein Maximum von MaxMessageCount <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> von Azure Service Bus mit Server-Wartezeit.</p>
      <p></p>
    syntax:
      content: 'public Collection<IMessage> receiveBatch(int maxMessageCount, Duration serverWaitTime)'
      parameters:
        - id: maxMessageCount
          type: f75371fa
          description: '<p>Die maximale Anzahl von Nachrichten, die empfangen werden. </p>'
        - id: serverWaitTime
          type: e02a2de0
          description: '<p>Die Wartezeit, bis der Client für den Empfang einer Nachricht, bevor ein Timeout eintritt. </p>'
      return:
        type: 12ebb11acom.microsoft.azure.servicebus._i_messagea08ddfce
        description: '<p>Liste der Nachrichten empfangen. Gibt null zurück, wenn keine Nachricht gefunden wird. </p>'
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Fehler beim Empfang </p>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receiveBatchAsync(int)
    id: receiveBatchAsync(int)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: receiveBatchAsync(int maxMessageCount)
    nameWithType: IMessageReceiver.receiveBatchAsync(int maxMessageCount)
    fullName: CompletableFuture<Collection<IMessage>> com.microsoft.azure.servicebus.IMessageReceiver.receiveBatchAsync(int maxMessageCount)
    overload: com.microsoft.azure.servicebus._i_message_receiver.receiveBatchAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 288
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Asynchron empfängt maximal MaxMessageCount <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> aus der Entität.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Collection<IMessage>> receiveBatchAsync(int maxMessageCount)
      parameters:
        - id: maxMessageCount
          type: f75371fa
          description: '<p>Die maximale Anzahl von Nachrichten, die empfangen werden. </p>'
      return:
        type: 9161dfdccom.microsoft.azure.servicebus._i_messagee7daa122
        description: <p>eine CompletableFuture der ausstehende Empfang darstellt. </p>
  - uid: 'com.microsoft.azure.servicebus._i_message_receiver.receiveBatchAsync(int,Duration)'
    id: 'receiveBatchAsync(int,Duration)'
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: 'receiveBatchAsync(int maxMessageCount, Duration serverWaitTime)'
    nameWithType: 'IMessageReceiver.receiveBatchAsync(int maxMessageCount, Duration serverWaitTime)'
    fullName: 'CompletableFuture<Collection<IMessage>> com.microsoft.azure.servicebus.IMessageReceiver.receiveBatchAsync(int maxMessageCount, Duration serverWaitTime)'
    overload: com.microsoft.azure.servicebus._i_message_receiver.receiveBatchAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 297
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Asynchron empfängt maximal MaxMessageCount <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> von Azure Service Bus mit Server-Wartezeit.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Collection<IMessage>> receiveBatchAsync(int maxMessageCount, Duration serverWaitTime)'
      parameters:
        - id: maxMessageCount
          type: f75371fa
          description: '<p>Die maximale Anzahl von Nachrichten, die empfangen werden. </p>'
        - id: serverWaitTime
          type: e02a2de0
          description: '<p>Die Wartezeit, bis der Client für den Empfang einer Nachricht, bevor ein Timeout eintritt. </p>'
      return:
        type: 9161dfdccom.microsoft.azure.servicebus._i_messagee7daa122
        description: <p>eine CompletableFuture der ausstehende Empfang darstellt. </p>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receiveDeferredMessage(long)
    id: receiveDeferredMessage(long)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: receiveDeferredMessage(long sequenceNumber)
    nameWithType: IMessageReceiver.receiveDeferredMessage(long sequenceNumber)
    fullName: IMessage com.microsoft.azure.servicebus.IMessageReceiver.receiveDeferredMessage(long sequenceNumber)
    overload: com.microsoft.azure.servicebus._i_message_receiver.receiveDeferredMessage*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 226
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Empfängt eine verzögerte <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref>. Verzögerte Nachrichten können nur mithilfe der Sequenznummer empfangen werden.</p>
      <p></p>
    syntax:
      content: public IMessage receiveDeferredMessage(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: '<p>Die <xref uid="com.microsoft.azure.servicebus._message.getSequenceNumber()" data-throw-if-not-resolved="false">Message#getSequenceNumber()</xref>. </p>'
      return:
        type: com.microsoft.azure.servicebus._i_message
        description: '<p>Die empfangenen Daten <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> oder null, wenn keine Meldung vorhanden ist, für das angegebene Sequenznummer. </p>'
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Fehler beim Empfang </p>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receiveDeferredMessageAsync(long)
    id: receiveDeferredMessageAsync(long)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: receiveDeferredMessageAsync(long sequenceNumber)
    nameWithType: IMessageReceiver.receiveDeferredMessageAsync(long sequenceNumber)
    fullName: CompletableFuture<IMessage> com.microsoft.azure.servicebus.IMessageReceiver.receiveDeferredMessageAsync(long sequenceNumber)
    overload: com.microsoft.azure.servicebus._i_message_receiver.receiveDeferredMessageAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 280
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Empfängt asynchron einen bestimmten verzögert <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> identifizierte Sequenznummer.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<IMessage> receiveDeferredMessageAsync(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: '<p>Die Sequenznummer der Nachricht, die empfangen werden. </p>'
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_messagea08ddfce
        description: <p>eine CompletableFuture der ausstehende Empfang darstellt. </p>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receiveDeferredMessageBatch(Collection<Long>)
    id: receiveDeferredMessageBatch(Collection<Long>)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: receiveDeferredMessageBatch(Collection<Long> sequenceNumbers)
    nameWithType: IMessageReceiver.receiveDeferredMessageBatch(Collection<Long> sequenceNumbers)
    fullName: Collection<IMessage> com.microsoft.azure.servicebus.IMessageReceiver.receiveDeferredMessageBatch(Collection<Long> sequenceNumbers)
    overload: com.microsoft.azure.servicebus._i_message_receiver.receiveDeferredMessageBatch*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 257
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Erhält eine Lieferung mit verzögerten <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref>.</p>
      <p></p>
    syntax:
      content: public Collection<IMessage> receiveDeferredMessageBatch(Collection<Long> sequenceNumbers)
      parameters:
        - id: sequenceNumbers
          type: f936a554
          description: <p>Die Sequenznummern der gewünschten verzögerte Nachrichten. </p>
      return:
        type: 12ebb11acom.microsoft.azure.servicebus._i_messagea08ddfce
        description: '<p>Liste der Nachrichten empfangen. Gibt null zurück, wenn keine Nachricht gefunden wird. </p>'
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Fehler beim Empfang </p>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receiveDeferredMessageBatchAsync(Collection<Long>)
    id: receiveDeferredMessageBatchAsync(Collection<Long>)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: receiveDeferredMessageBatchAsync(Collection<Long> sequenceNumbers)
    nameWithType: IMessageReceiver.receiveDeferredMessageBatchAsync(Collection<Long> sequenceNumbers)
    fullName: CompletableFuture<Collection<IMessage>> com.microsoft.azure.servicebus.IMessageReceiver.receiveDeferredMessageBatchAsync(Collection<Long> sequenceNumbers)
    overload: com.microsoft.azure.servicebus._i_message_receiver.receiveDeferredMessageBatchAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 305
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Asynchron empfängt einen Satz von verzögerte <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> aus der Entität.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Collection<IMessage>> receiveDeferredMessageBatchAsync(Collection<Long> sequenceNumbers)
      parameters:
        - id: sequenceNumbers
          type: f936a554
          description: '<p>Die Sequenznummern der Nachricht, die empfangen werden. </p>'
      return:
        type: 9161dfdccom.microsoft.azure.servicebus._i_messagee7daa122
        description: <p>eine CompletableFuture der ausstehende Empfang darstellt. </p>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.renewMessageLock(IMessage)
    id: renewMessageLock(IMessage)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: renewMessageLock(IMessage message)
    nameWithType: IMessageReceiver.renewMessageLock(IMessage message)
    fullName: Instant com.microsoft.azure.servicebus.IMessageReceiver.renewMessageLock(IMessage message)
    overload: com.microsoft.azure.servicebus._i_message_receiver.renewMessageLock*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 329
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Erneuert die Sperre für die Nachricht durch das Sperrtoken angegeben. Die Sperre wird basierend auf der Einstellung für die Entität angegeben erneuert werden. Beim Empfang einer Nachricht im <xref uid="com.microsoft.azure.servicebus._receive_mode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode #PEEKLOCK</xref> Modus wird die Nachricht ist für eine Dauer entsprechend den Angaben auf dem Server für diese Instanz Empfänger gesperrt, während der Erstellung der Warteschlange/Abonnement (LockDuration). Wenn die Verarbeitung der Nachricht länger als diese Dauer erforderlich ist, muss die Sperre erneuert werden. Bei jeder Verlängerung wird die Sperre durch die Entität LockDuration erneuert.</p>
      <p></p>
    syntax:
      content: public Instant renewMessageLock(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Die <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> erneuert werden soll. </p>
      return:
        type: 328f8254
        description: '<p>Die neue gesperrt, bis die UTC-Zeit. </p>'
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn erneuern fehlgeschlagen </p>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.renewMessageLockAsync(IMessage)
    id: renewMessageLockAsync(IMessage)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: renewMessageLockAsync(IMessage message)
    nameWithType: IMessageReceiver.renewMessageLockAsync(IMessage message)
    fullName: CompletableFuture<Instant> com.microsoft.azure.servicebus.IMessageReceiver.renewMessageLockAsync(IMessage message)
    overload: com.microsoft.azure.servicebus._i_message_receiver.renewMessageLockAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 313
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Asynchron erneuert die Sperre für die Nachricht durch das Sperrtoken angegeben. Die Sperre wird basierend auf der Einstellung für die Entität angegeben erneuert werden.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Instant> renewMessageLockAsync(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Die <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> erneuert werden soll. </p>
      return:
        type: 6666b360
        description: '<p>eine CompletableFuture, ausstehende erneuern darstellt. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_receiver.setPrefetchCount(int)
    id: setPrefetchCount(int)
    parent: com.microsoft.azure.servicebus._i_message_receiver
    href: com.microsoft.azure.servicebus._i_message_receiver.yml
    langs:
      - java
    name: setPrefetchCount(int prefetchCount)
    nameWithType: IMessageReceiver.setPrefetchCount(int prefetchCount)
    fullName: void com.microsoft.azure.servicebus.IMessageReceiver.setPrefetchCount(int prefetchCount)
    overload: com.microsoft.azure.servicebus._i_message_receiver.setPrefetchCount*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageReceiver.java
      startLine: 350
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Legen Sie den vorabrufwert des Empfängers. Prefetch beschleunigt den Nachrichtenfluss durch ins Leben gerufen, eine Nachricht, die für den lokalen Abruf unmittelbar verfügbar sein, wenn und vor der Anwendung, für eine aufgefordert Verwendung empfangen. Einen Wert ungleich Null festlegen, vorab PrefetchCount Anzahl der Nachrichten abruft. Festlegen des Werts auf 0 (null) wird Prefetch deaktiviert. RECEIVEANDDELETE-Modus ist der Standardwert 0. PEEKLOCK-Modus ist der Standardwert 100. </p>
      <p>Der Wert kann nicht festgelegt werden, bis der Empfänger erstellt wird.</p>
      <p></p>
    syntax:
      content: public void setPrefetchCount(int prefetchCount)
      parameters:
        - id: prefetchCount
          type: f75371fa
          description: <p>Der gewünschte Vorabruf. </p>
    exceptions:
      - type: 73fec9fb
        description: <p>Wenn der Wert konnte nicht festgelegt </p>
references:
  - uid: com.microsoft.azure.servicebus._i_message_receiver.getReceiveMode*
    name: getReceiveMode
    nameWithType: IMessageReceiver.getReceiveMode
    fullName: ReceiveMode com.microsoft.azure.servicebus.IMessageReceiver.getReceiveMode
    package: com.microsoft.azure.servicebus
  - uid: 8256ba40
    spec.java:
      - name: InterruptedException
        fullName: InterruptedException
  - uid: 73fec9fb
    spec.java:
      - name: ServiceBusException
        fullName: ServiceBusException
  - uid: add9545a
    spec.java:
      - name: UUID
        fullName: UUID
  - uid: com.microsoft.azure.servicebus._i_message_receiver.abandon*
    name: abandon
    nameWithType: IMessageReceiver.abandon
    fullName: void com.microsoft.azure.servicebus.IMessageReceiver.abandon
    package: com.microsoft.azure.servicebus
  - uid: e7b06046
    spec.java:
      - name: 'Map<String, Object>'
        fullName: 'Map<String, Object>'
  - uid: db03ee24
    spec.java:
      - name: CompletableFuture<Void>
        fullName: CompletableFuture<Void>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.abandonAsync*
    name: abandonAsync
    nameWithType: IMessageReceiver.abandonAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageReceiver.abandonAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._i_message_receiver.complete*
    name: complete
    nameWithType: IMessageReceiver.complete
    fullName: void com.microsoft.azure.servicebus.IMessageReceiver.complete
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._i_message_receiver.completeAsync*
    name: completeAsync
    nameWithType: IMessageReceiver.completeAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageReceiver.completeAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._i_message_receiver.defer*
    name: defer
    nameWithType: IMessageReceiver.defer
    fullName: void com.microsoft.azure.servicebus.IMessageReceiver.defer
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._i_message_receiver.deferAsync*
    name: deferAsync
    nameWithType: IMessageReceiver.deferAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageReceiver.deferAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._i_message_receiver.deadLetter*
    name: deadLetter
    nameWithType: IMessageReceiver.deadLetter
    fullName: void com.microsoft.azure.servicebus.IMessageReceiver.deadLetter
    package: com.microsoft.azure.servicebus
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.servicebus._i_message_receiver.deadLetterAsync*
    name: deadLetterAsync
    nameWithType: IMessageReceiver.deadLetterAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageReceiver.deadLetterAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receive*
    name: receive
    nameWithType: IMessageReceiver.receive
    fullName: IMessage com.microsoft.azure.servicebus.IMessageReceiver.receive
    package: com.microsoft.azure.servicebus
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receiveDeferredMessage*
    name: receiveDeferredMessage
    nameWithType: IMessageReceiver.receiveDeferredMessage
    fullName: IMessage com.microsoft.azure.servicebus.IMessageReceiver.receiveDeferredMessage
    package: com.microsoft.azure.servicebus
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: 12ebb11acom.microsoft.azure.servicebus._i_messagea08ddfce
    spec.java:
      - name: Collection<
        fullName: Collection<
      - uid: com.microsoft.azure.servicebus._i_message
        name: IMessage
        fullName: com.microsoft.azure.servicebus.IMessage
        href: com.microsoft.azure.servicebus._i_message.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receiveBatch*
    name: receiveBatch
    nameWithType: IMessageReceiver.receiveBatch
    fullName: Collection<IMessage> com.microsoft.azure.servicebus.IMessageReceiver.receiveBatch
    package: com.microsoft.azure.servicebus
  - uid: f936a554
    spec.java:
      - name: Collection<Long>
        fullName: Collection<Long>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receiveDeferredMessageBatch*
    name: receiveDeferredMessageBatch
    nameWithType: IMessageReceiver.receiveDeferredMessageBatch
    fullName: Collection<IMessage> com.microsoft.azure.servicebus.IMessageReceiver.receiveDeferredMessageBatch
    package: com.microsoft.azure.servicebus
  - uid: 9cdf14d0com.microsoft.azure.servicebus._i_messagea08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: com.microsoft.azure.servicebus._i_message
        name: IMessage
        fullName: com.microsoft.azure.servicebus.IMessage
        href: com.microsoft.azure.servicebus._i_message.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receiveAsync*
    name: receiveAsync
    nameWithType: IMessageReceiver.receiveAsync
    fullName: CompletableFuture<IMessage> com.microsoft.azure.servicebus.IMessageReceiver.receiveAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receiveDeferredMessageAsync*
    name: receiveDeferredMessageAsync
    nameWithType: IMessageReceiver.receiveDeferredMessageAsync
    fullName: CompletableFuture<IMessage> com.microsoft.azure.servicebus.IMessageReceiver.receiveDeferredMessageAsync
    package: com.microsoft.azure.servicebus
  - uid: 9161dfdccom.microsoft.azure.servicebus._i_messagee7daa122
    spec.java:
      - name: CompletableFuture<Collection<
        fullName: CompletableFuture<Collection<
      - uid: com.microsoft.azure.servicebus._i_message
        name: IMessage
        fullName: com.microsoft.azure.servicebus.IMessage
        href: com.microsoft.azure.servicebus._i_message.yml
      - name: '>>'
        fullName: '>>'
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receiveBatchAsync*
    name: receiveBatchAsync
    nameWithType: IMessageReceiver.receiveBatchAsync
    fullName: CompletableFuture<Collection<IMessage>> com.microsoft.azure.servicebus.IMessageReceiver.receiveBatchAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._i_message_receiver.receiveDeferredMessageBatchAsync*
    name: receiveDeferredMessageBatchAsync
    nameWithType: IMessageReceiver.receiveDeferredMessageBatchAsync
    fullName: CompletableFuture<Collection<IMessage>> com.microsoft.azure.servicebus.IMessageReceiver.receiveDeferredMessageBatchAsync
    package: com.microsoft.azure.servicebus
  - uid: 6666b360
    spec.java:
      - name: CompletableFuture<Instant>
        fullName: CompletableFuture<Instant>
  - uid: com.microsoft.azure.servicebus._i_message_receiver.renewMessageLockAsync*
    name: renewMessageLockAsync
    nameWithType: IMessageReceiver.renewMessageLockAsync
    fullName: CompletableFuture<Instant> com.microsoft.azure.servicebus.IMessageReceiver.renewMessageLockAsync
    package: com.microsoft.azure.servicebus
  - uid: 328f8254
    spec.java:
      - name: Instant
        fullName: Instant
  - uid: com.microsoft.azure.servicebus._i_message_receiver.renewMessageLock*
    name: renewMessageLock
    nameWithType: IMessageReceiver.renewMessageLock
    fullName: Instant com.microsoft.azure.servicebus.IMessageReceiver.renewMessageLock
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._i_message_receiver.getPrefetchCount*
    name: getPrefetchCount
    nameWithType: IMessageReceiver.getPrefetchCount
    fullName: int com.microsoft.azure.servicebus.IMessageReceiver.getPrefetchCount
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._i_message_receiver.setPrefetchCount*
    name: setPrefetchCount
    nameWithType: IMessageReceiver.setPrefetchCount
    fullName: void com.microsoft.azure.servicebus.IMessageReceiver.setPrefetchCount
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._i_closeable.close()
    parent: com.microsoft.azure.servicebus._i_closeable
    href: com.microsoft.azure.servicebus._i_closeable.yml
    name: close()
    nameWithType: ICloseable.close()
    fullName: void com.microsoft.azure.servicebus.ICloseable.close()
    type: Method
    summary: '<p>Synchron wird geschlossen, und gibt diesem Objekt zugeordneten Ressourcen frei. Beim Aufrufen dieser Methode entspricht der aufrufen. Diese Methode blockiert, bis diese wird das Objekt geschlossen. </p>'
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.servicebus._i_closeable.closeAsync()
    parent: com.microsoft.azure.servicebus._i_closeable
    href: com.microsoft.azure.servicebus._i_closeable.yml
    name: closeAsync()
    nameWithType: ICloseable.closeAsync()
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.ICloseable.closeAsync()
    type: Method
    summary: '<p>Wird geschlossen, und gibt diesem Objekt zugeordneten Ressourcen frei. Ein Objekt kann nicht verwendet werden, nachdem sie geschlossen wurde. Dies ist eine asynchrone Methode, die eine CompletableFuture wird sofort zurückgegeben. Dieses Objekt wird vollständig beendet, wenn die zurückgegebene CompletableFuture abgeschlossen ist. </p>'
    syntax:
      content: public CompletableFuture<Void> closeAsync()
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die das Schließen des dieses Objekt darstellt. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_entity_client.getEntityPath()
    parent: com.microsoft.azure.servicebus._i_message_entity_client
    href: com.microsoft.azure.servicebus._i_message_entity_client.yml
    name: getEntityPath()
    nameWithType: IMessageEntityClient.getEntityPath()
    fullName: String com.microsoft.azure.servicebus.IMessageEntityClient.getEntityPath()
    type: Method
    summary: |-
      <p>Ruft den Pfad der Entität, die dieser Client wird ab, Senden von Nachrichten an oder Empfang von Nachrichten aus.</p>
      <p></p>
    syntax:
      content: public String getEntityPath()
      return:
        type: '26831127'
        description: '<p>Pfad der Entität, der diesem Client eine Verbindung herstellt </p>'
  - uid: com.microsoft.azure.servicebus._i_message_browser.peek()
    parent: com.microsoft.azure.servicebus._i_message_browser
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: peek()
    nameWithType: IMessageBrowser.peek()
    fullName: IMessage com.microsoft.azure.servicebus.IMessageBrowser.peek()
    type: Method
    summary: |-
      <p>als Nächstes liest Sie die aktive Nachricht ohne Änderung des Zustands der Empfänger oder die Quelle der Meldung ein. Der erste Aufruf von <xref uid="com.microsoft.azure.servicebus._i_message_browser.peek()" data-throw-if-not-resolved="false">IMessageBrowser#peek()</xref> Ruft die erste aktive Nachricht für diesen Empfänger. Jeder nachfolgender Aufruf ruft die nachfolgende Meldung in der Entität ab.</p>
      <p></p>
    syntax:
      content: public IMessage peek()
      return:
        type: com.microsoft.azure.servicebus._i_message
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> eingesehen </p>"
  - uid: com.microsoft.azure.servicebus._i_message_browser.peek(long)
    parent: com.microsoft.azure.servicebus._i_message_browser
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: peek(long fromSequenceNumber)
    nameWithType: IMessageBrowser.peek(long fromSequenceNumber)
    fullName: IMessage com.microsoft.azure.servicebus.IMessageBrowser.peek(long fromSequenceNumber)
    type: Method
    summary: |-
      <p>Als Nächstes liest Sie die aktive Nachricht ohne Änderung des Zustands der Empfänger oder die Quelle der Meldung ein.</p>
      <p></p>
    syntax:
      content: public IMessage peek(long fromSequenceNumber)
      parameters:
        - id: fromSequenceNumber
          type: 0364520f
          description: <p>Die Sequenznummer ab dem die Nachricht zu lesen. </p>
      return:
        type: com.microsoft.azure.servicebus._i_message
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> eingesehen </p>"
  - uid: com.microsoft.azure.servicebus._i_message_browser.peekAsync()
    parent: com.microsoft.azure.servicebus._i_message_browser
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: peekAsync()
    nameWithType: IMessageBrowser.peekAsync()
    fullName: CompletableFuture<IMessage> com.microsoft.azure.servicebus.IMessageBrowser.peekAsync()
    type: Method
    summary: |-
      <p>Liest asynchron aktiven Nachrichten ohne den Zustand der Empfänger oder die Quelle der Meldung zu ändern.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<IMessage> peekAsync()
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_messagea08ddfce
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> eingesehen </p>"
  - uid: com.microsoft.azure.servicebus._i_message_browser.peekAsync(long)
    parent: com.microsoft.azure.servicebus._i_message_browser
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: peekAsync(long fromSequenceNumber)
    nameWithType: IMessageBrowser.peekAsync(long fromSequenceNumber)
    fullName: CompletableFuture<IMessage> com.microsoft.azure.servicebus.IMessageBrowser.peekAsync(long fromSequenceNumber)
    type: Method
    summary: |-
      <p>Als Nächstes liest die aktive Nachricht ohne Änderung des Zustands der Empfänger oder die Quelle der Meldung asynchron.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<IMessage> peekAsync(long fromSequenceNumber)
      parameters:
        - id: fromSequenceNumber
          type: 0364520f
          description: <p>Die Sequenznummer ab dem die Nachricht zu lesen. </p>
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_messagea08ddfce
        description: '<p>CompletableFuture, die zurückgibt <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> einsehen. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_browser.peekBatch(int)
    parent: com.microsoft.azure.servicebus._i_message_browser
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: peekBatch(int messageCount)
    nameWithType: IMessageBrowser.peekBatch(int messageCount)
    fullName: Collection<IMessage> com.microsoft.azure.servicebus.IMessageBrowser.peekBatch(int messageCount)
    type: Method
    summary: |-
      <p>Liest nächste Batch von der aktiven Nachrichten ohne den Zustand der Empfänger oder die Quelle der Meldung zu ändern.</p>
      <p></p>
    syntax:
      content: public Collection<IMessage> peekBatch(int messageCount)
      parameters:
        - id: messageCount
          type: f75371fa
          description: <p>Die Anzahl der Nachrichten. </p>
      return:
        type: 12ebb11acom.microsoft.azure.servicebus._i_messagea08ddfce
        description: <p>Batch <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> eingesehen </p>
  - uid: 'com.microsoft.azure.servicebus._i_message_browser.peekBatch(long,int)'
    parent: com.microsoft.azure.servicebus._i_message_browser
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: 'peekBatch(long fromSequenceNumber, int messageCount)'
    nameWithType: 'IMessageBrowser.peekBatch(long fromSequenceNumber, int messageCount)'
    fullName: 'Collection<IMessage> com.microsoft.azure.servicebus.IMessageBrowser.peekBatch(long fromSequenceNumber, int messageCount)'
    type: Method
    summary: |-
      <p>Liest nächste Batch von der aktiven Nachrichten ohne den Zustand der Empfänger oder die Quelle der Meldung zu ändern.</p>
      <p></p>
    syntax:
      content: 'public Collection<IMessage> peekBatch(long fromSequenceNumber, int messageCount)'
      parameters:
        - id: fromSequenceNumber
          type: 0364520f
          description: <p>Die Sequenznummer ab dem die Nachricht zu lesen. </p>
        - id: messageCount
          type: f75371fa
          description: <p>Die Anzahl der Nachrichten. </p>
      return:
        type: 12ebb11acom.microsoft.azure.servicebus._i_messagea08ddfce
        description: <p>Batch <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> eingesehen </p>
  - uid: com.microsoft.azure.servicebus._i_message_browser.peekBatchAsync(int)
    parent: com.microsoft.azure.servicebus._i_message_browser
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: peekBatchAsync(int messageCount)
    nameWithType: IMessageBrowser.peekBatchAsync(int messageCount)
    fullName: CompletableFuture<Collection<IMessage>> com.microsoft.azure.servicebus.IMessageBrowser.peekBatchAsync(int messageCount)
    type: Method
    summary: |-
      <p>Liest asynchron den nächsten Batch aktiver Nachrichten ohne den Zustand der Empfänger oder die Quelle der Meldung zu ändern.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Collection<IMessage>> peekBatchAsync(int messageCount)
      parameters:
        - id: messageCount
          type: f75371fa
          description: <p>Die Anzahl der Nachrichten. </p>
      return:
        type: 9161dfdccom.microsoft.azure.servicebus._i_messagee7daa122
        description: '<p>CompletableFuture, der Batch zurückgibt <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> einsehen. </p>'
  - uid: 'com.microsoft.azure.servicebus._i_message_browser.peekBatchAsync(long,int)'
    parent: com.microsoft.azure.servicebus._i_message_browser
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: 'peekBatchAsync(long fromSequenceNumber, int messageCount)'
    nameWithType: 'IMessageBrowser.peekBatchAsync(long fromSequenceNumber, int messageCount)'
    fullName: 'CompletableFuture<Collection<IMessage>> com.microsoft.azure.servicebus.IMessageBrowser.peekBatchAsync(long fromSequenceNumber, int messageCount)'
    type: Method
    summary: |-
      <p>Liest asynchron den nächsten Batch aktiver Nachrichten ohne den Zustand der Empfänger oder die Quelle der Meldung zu ändern.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Collection<IMessage>> peekBatchAsync(long fromSequenceNumber, int messageCount)'
      parameters:
        - id: fromSequenceNumber
          type: 0364520f
          description: <p>Die Sequenznummer ab dem die Nachricht zu lesen. </p>
        - id: messageCount
          type: f75371fa
          description: <p>Die Anzahl der Nachrichten. </p>
      return:
        type: 9161dfdccom.microsoft.azure.servicebus._i_messagee7daa122
        description: '<p>CompletableFuture, der Batch zurückgibt <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> einsehen. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_entity_client
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_entity_client.yml
    name: IMessageEntityClient
    nameWithType: IMessageEntityClient
    fullName: com.microsoft.azure.servicebus.IMessageEntityClient
    type: Interface
    summary: |-
      <p>Stellt einen messaging-Client mit einer Azure Service Bus-Entität dar.</p>
      <p></p>
    syntax:
      content: public interface IMessageEntityClient extends ICloseable
  - uid: com.microsoft.azure.servicebus._i_message_browser
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: IMessageBrowser
    nameWithType: IMessageBrowser
    fullName: com.microsoft.azure.servicebus.IMessageBrowser
    type: Interface
    summary: '<p>Stellt eine nachrichtenbrowser, die Nachrichten von Azure Service Bus durchsuchen können. </p>'
    syntax:
      content: public interface IMessageBrowser
  - uid: com.microsoft.azure.servicebus._i_message_session
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_session.yml
    name: IMessageSession
    nameWithType: IMessageSession
    fullName: com.microsoft.azure.servicebus.IMessageSession
    type: Interface
    summary: |-
      <p>Beschreibt ein Sitzungsobjekt. <xref uid="com.microsoft.azure.servicebus._i_message_session" data-throw-if-not-resolved="false">IMessageSession</xref> kann zum Ausführen von Vorgängen für Sitzungen verwendet werden. </p>
      <p>Service Bus-Sitzungen, so genannte "Gruppen" in das Protokoll AMQP 1.0 sind ungebundenen Ereignisfolgen zusammengehöriger Nachrichten. Service Bus garantiert die Reihenfolge der Nachrichten in einer Sitzung. </p>
      <p>Beliebiger Sender erstellen Sie eine Sitzung beim Senden von Nachrichten in einer Warteschlange oder ein Thema durch Festlegen der <xref uid="" data-throw-if-not-resolved="false">Nachricht #sessionId</xref> Eigenschaft auf <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> zu einer Anwendung definierter Eindeutiger Bezeichner. Auf der Protokollebene AMQP 1.0 wird dieser Wert auf die Gruppen-Id-Eigenschaft zugeordnet. </p>
      <p>Sitzungen sind vorhanden, wenn mindestens eine Nachricht mit der Sitzung SessionId in die Warteschlange oder ein Thema Abonnement vorhanden ist. Sobald eine Sitzung vorhanden ist, gibt es keine definierten Moment oder einer Geste für, wenn die Sitzung abläuft, oder wird nicht mehr angezeigt. </p>
    syntax:
      content: public interface IMessageSession
  - uid: com.microsoft.azure.servicebus._message_receiver
  - uid: com.microsoft.azure.servicebus._receive_mode
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._receive_mode.yml
    name: ReceiveMode
    nameWithType: ReceiveMode
    fullName: com.microsoft.azure.servicebus.ReceiveMode
    type: Enum
    summary: |-
      <p>Enumeration zur Darstellung der beiden empfangsmodi, Azure Service Bus unterstützt.</p>
      <p></p>
    syntax:
      content: public enum ReceiveMode
  - uid: com.microsoft.azure.servicebus.primitives._service_bus_exception
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._service_bus_exception.yml
    name: ServiceBusException
    nameWithType: ServiceBusException
    fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
    type: Class
    summary: '<p>Dies ist die Basis-Ausnahme, die für alle Fehlerfälle Servicebus generiert wird. </p>'
    syntax:
      content: public class ServiceBusException
  - uid: com.microsoft.azure.servicebus._message
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._message.yml
    name: Message
    nameWithType: Message
    fullName: com.microsoft.azure.servicebus.Message
    type: Class
    syntax:
      content: public class Message
  - uid: com.microsoft.azure.servicebus._message.getLockToken()
    parent: com.microsoft.azure.servicebus._message
    href: com.microsoft.azure.servicebus._message.yml
    name: getLockToken()
    nameWithType: Message.getLockToken()
    fullName: UUID com.microsoft.azure.servicebus.Message.getLockToken()
    type: Method
    summary: |-
      <p>Ruft die Sperre token dieser Nachricht, wenn diese Nachricht empfangen wird mit <xref uid="com.microsoft.azure.servicebus._receive_mode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode #PEEKLOCK</xref> Modus. Dieses Token wird verwendet, um Sie abzuschließen oder zu verwerfen oder die Warteschlange für unzustellbare Nachrichten oder das Aufschieben der diese Nachricht.</p>
      <p></p>
    syntax:
      content: public UUID getLockToken()
      return:
        type: add9545a
        description: '<p>Sperrtoken dieser Nachricht, wenn diese Nachricht empfangen wird PEEKLOCK-Modus verwenden. Andernfalls wird ein Token von der alle Nullen (0) zurückgegeben. </p>'
  - uid: com.microsoft.azure.servicebus._i_message
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message.yml
    name: IMessage
    nameWithType: IMessage
    fullName: com.microsoft.azure.servicebus.IMessage
    type: Interface
    summary: |-
      <p>Stellt eine Nachricht, die zwischen Clients und Azure Service Bus ausgetauscht werden.</p>
      <p></p>
    syntax:
      content: public interface IMessage
  - uid: com.microsoft.azure.servicebus._message.getSequenceNumber()
    parent: com.microsoft.azure.servicebus._message
    href: com.microsoft.azure.servicebus._message.yml
    name: getSequenceNumber()
    nameWithType: Message.getSequenceNumber()
    fullName: long com.microsoft.azure.servicebus.Message.getSequenceNumber()
    type: Method
    summary: |-
      <p>Abgerufen Sie die Sequenznummer dieser Nachricht werden. Azure Service Bus werden alle Nachrichten in Warteschlangen in einer Entität eine einmalige Sequenznummer zugewiesen.</p>
      <p></p>
    syntax:
      content: public long getSequenceNumber()
      return:
        type: 0364520f
        description: <p>Sequenznummer dieser Nachricht </p>
  - uid: com.microsoft.azure.servicebus._receive_mode.PEEKLOCK
    parent: com.microsoft.azure.servicebus._receive_mode
    href: com.microsoft.azure.servicebus._receive_mode.yml
    name: PEEKLOCK
    nameWithType: ReceiveMode.PEEKLOCK
    fullName: com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK
    type: Field
    summary: '<p>In diesem Modus empfangene Nachricht wird nicht aus der Warteschlange oder einem Abonnement gelöscht, es wird stattdessen an den Empfänger, die für andere Empfänger unsichtbar machen vorübergehend gesperrt. Dann wartet der Dienst für eines der drei Ereignisse<itemizedlist><listitem><p>Wenn der Empfänger die Nachricht erfolgreich verarbeitet, aufruft und die Nachricht gelöscht werden. </p></listitem><listitem><p>Wenn der Empfänger entscheidet, dass er die Nachricht nicht erfolgreich verarbeiten kann, aufruft und die Nachricht wird entsperrt und für andere Empfänger verfügbar gemacht werden. </p></listitem><listitem><p>Wenn möchte, dass der Empfänger die Verarbeitung der Nachricht zu einem späteren Zeitpunkt zeitlich verzögern, aufruft und die Nachricht wird verzögert werden. Eine verzögerte kann nur durch seine Sequenznummer empfangen werden. </p></listitem><listitem><p>Wenn der Empfänger unzustellbare Nachricht möchte, aufruft und die Nachricht wird an eine spezielle untergeordnete Warteschlange Warteschlange für unzustellbare Nachrichten verschoben werden. </p></listitem><listitem><p>Der Empfänger keine dieser Methoden in einem konfigurierbaren Zeitraum (standardmäßig 60 Sekunden) aufgerufen wird, geht davon aus der Dienst, dass der Empfänger ein Fehler aufgetreten ist. In diesem Fall verhält, als ob der Empfänger und die Nachricht für andere Empfänger zur Verfügung aufgerufen haben, </p></listitem></itemizedlist></p>'
    syntax:
      content: public PEEKLOCK