### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    id: _iot_hub_transport
    parent: com.microsoft.azure.sdk.iot.device.transport
    children:
      - 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubEventCallback,Object)'
      - 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubResponseCallback,Object)'
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close()
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage()
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks()
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty()
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.multiplexOpen(List<DeviceClient>)
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open()
      - 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages()
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: IotHubTransport
    nameWithType: IotHubTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
    type: Interface
    source:
      remote: &ref_0
        path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 12
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: <p><span data-ttu-id="90119-101">Eine Schnittstelle für einen IoT Hub-Transport.</span><span class="sxs-lookup"><span data-stu-id="90119-101">An interface for an IoT Hub transport.</span></span> </p>
    syntax:
      content: public interface IotHubTransport
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubEventCallback,Object)'
    id: 'addMessage(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: 'addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 51
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="90119-102">Fügt eine Nachricht an die Warteschlange Transport.</span><span class="sxs-lookup"><span data-stu-id="90119-102">Adds a message to the transport queue.</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="90119-103">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="90119-103">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: '<p><span data-ttu-id="90119-104">der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="90119-104">the callback to be invoked when a response for the message is received.</span></span> </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p><span data-ttu-id="90119-105">der Kontext übergeben werden, wenn der Rückruf aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="90119-105">the context to be passed in when the callback is invoked.</span></span> </p>'
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubResponseCallback,Object)'
    id: 'addMessage(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: 'addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 64
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="90119-106">Fügt eine Nachricht an die Warteschlange Transport.</span><span class="sxs-lookup"><span data-stu-id="90119-106">Adds a message to the transport queue.</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="90119-107">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="90119-107">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: '<p><span data-ttu-id="90119-108">der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="90119-108">the callback to be invoked when a response for the message is received.</span></span> </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p><span data-ttu-id="90119-109">der Kontext übergeben werden, wenn der Rückruf aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="90119-109">the context to be passed in when the callback is invoked.</span></span> </p>'
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close()
    id: close()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: close()
    nameWithType: IotHubTransport.close()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close()
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 40
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: "<p><span data-ttu-id=\"90119-110\">Schließt alle Ressourcen, die zur Kommunikation mit IoT Hub verwendet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-110\">Closes all resources used to communicate with an IoT Hub.</span></span> <span data-ttu-id=\"90119-111\">Einmal<code>close() \r\n\r\n    </code> wird aufgerufen, der Transport ist nicht mehr verwendbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-111\">Once<code>close() \r\n\r\n    </code> is called, the transport is no longer usable.</span></span> <span data-ttu-id=\"90119-112\">Wenn der Transport bereits geschlossen ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-112\">If the transport is already closed, the function shall do nothing.</span></span></p>\n\n<p></p>"
    syntax:
      content: public void close()
    exceptions:
      - type: cbf33bbe
        description: '<p><span data-ttu-id="90119-113">Wenn ein Fehler auftritt, schließen Sie den Transport.</span><span class="sxs-lookup"><span data-stu-id="90119-113">if an error occurs in closing the transport.</span></span> </p>'
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage()
    id: handleMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: handleMessage()
    nameWithType: IotHubTransport.handleMessage()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage()
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 90
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="90119-114">Ruft die Nachrichtenrückruf auf, wenn eine Nachricht gefunden wird, und antwortet mit dem IoT Hub auf wie die verarbeitete Nachricht durch den IoT Hub behandelt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="90119-114">Invokes the message callback if a message is found and responds to the IoT Hub on how the processed message should be handled by the IoT Hub.</span></span> </p>
      <p><span data-ttu-id="90119-115">Wenn keine Nachrichtenrückruf festgelegt ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="90119-115">If no message callback is set, the function will do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void handleMessage()
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="90119-116">Wenn der Server nicht erreicht werden konnte.</span><span class="sxs-lookup"><span data-stu-id="90119-116">if the server could not be reached.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks()
    id: invokeCallbacks()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: invokeCallbacks()
    nameWithType: IotHubTransport.invokeCallbacks()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks()
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 78
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: <p><span data-ttu-id="90119-117">Ruft die Rückrufe für alle abgeschlossenen Anforderungen.</span><span class="sxs-lookup"><span data-stu-id="90119-117">Invokes the callbacks for all completed requests.</span></span> </p>
    syntax:
      content: public void invokeCallbacks()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty()
    id: isEmpty()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: isEmpty()
    nameWithType: IotHubTransport.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty()
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 99
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: "<p><span data-ttu-id=\"90119-118\">Gibt<code>true \r\n\r\n    </code> verfügt der Transport keine weiteren Nachrichten mehr verarbeiten, und<code>false \r\n\r\n    </code> andernfalls.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-118\">Returns<code>true \r\n\r\n    </code> if the transport has no more messages to handle, and<code>false \r\n\r\n    </code> otherwise.</span></span></p>\n\n<p></p>"
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: "<p><span data-ttu-id=\"90119-119\">\r\n\r\n  <code>true \r\n\r\n    </code>Wenn der Transport keine weiteren Nachrichten mehr verarbeiten, hat und<code>false \r\n\r\n    </code> andernfalls.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-119\">\r\n\r\n  <code>true \r\n\r\n    </code> if the transport has no more messages to handle, and<code>false \r\n\r\n    </code> otherwise.</span></span> </p>"
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.multiplexOpen(List<DeviceClient>)
    id: multiplexOpen(List<DeviceClient>)
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: multiplexOpen(List<DeviceClient> deviceClientList)
    nameWithType: IotHubTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.multiplexOpen*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 31
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="90119-120">Stellt einen Kanal-Usingmultiplexing Kommunikation mit IoT Hub her.</span><span class="sxs-lookup"><span data-stu-id="90119-120">Establishes a communication channel usingmultiplexing with an IoT Hub.</span></span> <span data-ttu-id="90119-121">Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="90119-121">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void multiplexOpen(List<DeviceClient> deviceClientList)
      parameters:
        - id: deviceClientList
          type: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
          description: <p><span data-ttu-id="90119-122">die Liste der Clients verwenden denselben Transport.</span><span class="sxs-lookup"><span data-stu-id="90119-122">the list of clients use the same transport.</span></span> </p>
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="90119-123">Wenn ein Kommunikationskanal hergestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="90119-123">if a communication channel cannot be established.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open()
    id: open()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: open()
    nameWithType: IotHubTransport.open()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open()
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 21
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="90119-124">Stellt einen Kommunikationskanal mit IoT Hub her.</span><span class="sxs-lookup"><span data-stu-id="90119-124">Establishes a communication channel with an IoT Hub.</span></span> <span data-ttu-id="90119-125">Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="90119-125">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void open()
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="90119-126">Wenn ein Kommunikationskanal hergestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="90119-126">if a communication channel cannot be established.</span></span> </p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    id: 'registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.registerConnectionStateCallback*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 108
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="90119-127">Registriert einen Rückruf ausgeführt werden, wenn die Verbindung mit dem IoT Hub verloren geht oder hergestellt wird.</span><span class="sxs-lookup"><span data-stu-id="90119-127">Registers a callback to be executed whenever the connection to the IoT Hub is lost or established.</span></span></p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p><span data-ttu-id="90119-128">der Rückruf aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="90119-128">the callback to be called.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: "<p><span data-ttu-id=\"90119-129\">Ein Kontext, der an den Rückruf übergeben werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-129\">a context to be passed to the callback.</span></span> <span data-ttu-id=\"90119-130\">Kann <code>null \r\n\r\n    </code> Wenn kein Rückruf bereitgestellt wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-130\">Can be <code>null \r\n\r\n    </code> if no callback is provided.</span></span> </p>"
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages()
    id: sendMessages()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    langs:
      - java
    name: sendMessages()
    nameWithType: IotHubTransport.sendMessages()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages()
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java
      startLine: 75
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="90119-131">Sendet alle Nachrichten in der Warteschlange Transport.</span><span class="sxs-lookup"><span data-stu-id="90119-131">Sends all messages on the transport queue.</span></span> <span data-ttu-id="90119-132">Wenn eine vorherige Sendeversuch Fehler ist aufgetreten, versucht die Funktion, die Nachrichten in der vorherigen Versuch erneut zu senden.</span><span class="sxs-lookup"><span data-stu-id="90119-132">If a previous send attempt had failed, the function will attempt to resend the messages in the previous attempt.</span></span></p>
      <p></p>
    syntax:
      content: public void sendMessages()
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="90119-133">Wenn der Server nicht erreicht werden konnte.</span><span class="sxs-lookup"><span data-stu-id="90119-133">if the server could not be reached.</span></span> </p>
references:
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open*
    name: open
    nameWithType: IotHubTransport.open
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: com.microsoft.azure.sdk.iot.device._device_client
        name: DeviceClient
        fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
        href: com.microsoft.azure.sdk.iot.device._device_client.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.multiplexOpen*
    name: multiplexOpen
    nameWithType: IotHubTransport.multiplexOpen
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.multiplexOpen
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close*
    name: close
    nameWithType: IotHubTransport.close
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage*
    name: addMessage
    nameWithType: IotHubTransport.addMessage
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages*
    name: sendMessages
    nameWithType: IotHubTransport.sendMessages
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks*
    name: invokeCallbacks
    nameWithType: IotHubTransport.invokeCallbacks
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage*
    name: handleMessage
    nameWithType: IotHubTransport.handleMessage
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty*
    name: isEmpty
    nameWithType: IotHubTransport.isEmpty
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.registerConnectionStateCallback*
    name: registerConnectionStateCallback
    nameWithType: IotHubTransport.registerConnectionStateCallback
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStateCallback
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: AmqpsTransport
    nameWithType: AmqpsTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport
    type: Class
    summary: |-
      <p><span data-ttu-id="90119-134">Ein AMQPS-Transport.</span><span class="sxs-lookup"><span data-stu-id="90119-134">An AMQPS transport.</span></span> <span data-ttu-id="90119-135">Enthält Funktionen zum Hinzufügen von Nachrichten und Senden von Nachrichten an einen IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="90119-135">Contains functionality for adding messages and sending messages to an IoT Hub.</span></span> <span data-ttu-id="90119-136">Puffer nicht gesendete Nachrichten, bis sie durch einen IoT Hub empfangen werden.</span><span class="sxs-lookup"><span data-stu-id="90119-136">Buffers unsent messages until they are received by an IoT Hub.</span></span> <span data-ttu-id="90119-137">Ein Transport bei der Erstellung gebunden ist, den folgenden Parametern: IoT Hub-Namen, Geräte-ID und Geräteschlüssel.</span><span class="sxs-lookup"><span data-stu-id="90119-137">A transport is bound at construction to the following parameters: IoT Hub name, device ID and device key.</span></span> </p>
      <p><span data-ttu-id="90119-138">Der Transport empfängt Nachrichten vom IoT Hub auch und ruft einen benutzerdefinierte Meldung Rückruf auf, wenn eine Nachricht und Rückruf gefunden werden.</span><span class="sxs-lookup"><span data-stu-id="90119-138">The transport also receives messages from IoT Hub and invokes a user-defined message callback if a message and callback are found.</span></span> </p>
    syntax:
      content: 'public class AmqpsTransport implements IotHubTransport,ServerListener'
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: HttpsTransport
    nameWithType: HttpsTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport
    type: Class
    summary: |-
      <p><span data-ttu-id="90119-139">Eine HTTPS-Übertragung.</span><span class="sxs-lookup"><span data-stu-id="90119-139">An HTTPS transport.</span></span> <span data-ttu-id="90119-140">Enthält Funktionen zum Hinzufügen von Nachrichten und Senden von Nachrichten im Batchmodus für einen IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="90119-140">Contains functionality for adding messages and sending batched messages to an IoT Hub.</span></span> <span data-ttu-id="90119-141">Puffer nicht gesendete Nachrichten, bis sie durch einen IoT Hub empfangen werden.</span><span class="sxs-lookup"><span data-stu-id="90119-141">Buffers unsent messages until they are received by an IoT Hub.</span></span> <span data-ttu-id="90119-142">Ein Transport bei der Erstellung gebunden ist, den folgenden Parametern: IoT Hub-Namen, Geräte-ID, Geräteschlüssel und Nachricht gültige Sekunden.</span><span class="sxs-lookup"><span data-stu-id="90119-142">A transport is bound at construction to the following parameters: IoT Hub name, device ID, device key, and message valid seconds.</span></span> </p>
      <p><span data-ttu-id="90119-143">Der Transport kann auch einen IoT Hub für Nachrichten abrufen und einen benutzerdefinierte Meldung Rückruf aufzurufen, wenn eine Nachricht und Rückruf gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="90119-143">The transport can also poll an IoT Hub for messages and invoke a user-defined message callback if a message and callback is found.</span></span> </p>
    syntax:
      content: public class HttpsTransport implements IotHubTransport
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: MqttTransport
    nameWithType: MqttTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport
    type: Class
    summary: |-
      <p><span data-ttu-id="90119-144">Ein MQTT-Transport.</span><span class="sxs-lookup"><span data-stu-id="90119-144">An MQTT transport.</span></span> <span data-ttu-id="90119-145">Enthält Funktionen zum Hinzufügen von Nachrichten und Senden von Nachrichten im Batchmodus für einen IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="90119-145">Contains functionality for adding messages and sending batched messages to an IoT Hub.</span></span> <span data-ttu-id="90119-146">Puffer nicht gesendete Nachrichten, bis sie durch einen IoT Hub empfangen werden.</span><span class="sxs-lookup"><span data-stu-id="90119-146">Buffers unsent messages until they are received by an IoT Hub.</span></span> <span data-ttu-id="90119-147">Ein Transport bei der Erstellung gebunden ist, den folgenden Parametern: IoT Hub-Namen, Geräte-ID, Geräteschlüssel und Nachricht gültige Sekunden.</span><span class="sxs-lookup"><span data-stu-id="90119-147">A transport is bound at construction to the following parameters: IoT Hub name, device ID, device key, and message valid seconds.</span></span> </p>
      <p><span data-ttu-id="90119-148">Der Transport kann auch einen IoT Hub für Nachrichten abrufen und einen benutzerdefinierte Meldung Rückruf aufzurufen, wenn eine Nachricht und Rückruf gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="90119-148">The transport can also poll an IoT Hub for messages and invoke a user-defined message callback if a message and callback is found.</span></span> </p>
    syntax:
      content: public class MqttTransport
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.open()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: open()
    nameWithType: MqttTransport.open()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.open()
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-149">Stellt einen Kommunikationskanal mit IoT Hub her.</span><span class="sxs-lookup"><span data-stu-id="90119-149">Establishes a communication channel with an IoT Hub.</span></span> <span data-ttu-id="90119-150">Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="90119-150">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void open()
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.open()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: open()
    nameWithType: AmqpsTransport.open()
    fullName: synchronized void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.open()
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-151">Stellt einen Kommunikationskanal mit IoT Hub her.</span><span class="sxs-lookup"><span data-stu-id="90119-151">Establishes a communication channel with an IoT Hub.</span></span> <span data-ttu-id="90119-152">Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="90119-152">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public synchronized void open()
      return:
        type: 5c0b90ca
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.open()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: open()
    nameWithType: HttpsTransport.open()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.open()
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-153">Stellt einen Kommunikationskanal mit IoT Hub her.</span><span class="sxs-lookup"><span data-stu-id="90119-153">Establishes a communication channel with an IoT Hub.</span></span> <span data-ttu-id="90119-154">Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="90119-154">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void open()
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.multiplexOpen(List<DeviceClient>)
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: multiplexOpen(List<DeviceClient> deviceClientList)
    nameWithType: MqttTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-155">Stellt einen Kanal-Usingmultiplexing Kommunikation mit IoT Hub her.</span><span class="sxs-lookup"><span data-stu-id="90119-155">Establishes a communication channel usingmultiplexing with an IoT Hub.</span></span> <span data-ttu-id="90119-156">Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="90119-156">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void multiplexOpen(List<DeviceClient> deviceClientList)
      parameters:
        - id: deviceClientList
          type: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
          description: <p><span data-ttu-id="90119-157">die Liste der Clients verwenden denselben Transport.</span><span class="sxs-lookup"><span data-stu-id="90119-157">the list of clients use the same transport.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.multiplexOpen(List<DeviceClient>)
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: multiplexOpen(List<DeviceClient> deviceClientList)
    nameWithType: HttpsTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-158">Stellt einen Kanal-Usingmultiplexing Kommunikation mit IoT Hub her.</span><span class="sxs-lookup"><span data-stu-id="90119-158">Establishes a communication channel usingmultiplexing with an IoT Hub.</span></span> <span data-ttu-id="90119-159">Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="90119-159">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void multiplexOpen(List<DeviceClient> deviceClientList)
      parameters:
        - id: deviceClientList
          type: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
          description: <p><span data-ttu-id="90119-160">die Liste der Clients verwenden denselben Transport.</span><span class="sxs-lookup"><span data-stu-id="90119-160">the list of clients use the same transport.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.multiplexOpen(List<DeviceClient>)
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: multiplexOpen(List<DeviceClient> deviceClientList)
    nameWithType: AmqpsTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-161">Stellt einen freigegebenen Kommunikationskanal mit IoT Hub her.</span><span class="sxs-lookup"><span data-stu-id="90119-161">Establishes a shared communication channel with an IoT Hub.</span></span> <span data-ttu-id="90119-162">Wenn ein Kanal bereits OnConnectionInit ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="90119-162">If a channel is already onConnectionInit, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void multiplexOpen(List<DeviceClient> deviceClientList)
      parameters:
        - id: deviceClientList
          type: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
  - uid: com.microsoft.azure.sdk.iot.device._device_client
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._device_client.yml
    name: DeviceClient
    nameWithType: DeviceClient
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
    type: Class
    summary: |-
      <p><span data-ttu-id="90119-163">Die öffentliche API.</span><span class="sxs-lookup"><span data-stu-id="90119-163">The public-facing API.</span></span> <span data-ttu-id="90119-164">Können ein einzelnes logisches oder physisches Gerät für die Verbindung an einen IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="90119-164">Allows a single logical or physical device to connect to an IoT Hub.</span></span> <span data-ttu-id="90119-165">Der IoT Hub-Client unterstützt sendet keine Ereignisse an und Empfangen von Nachrichten von einem IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="90119-165">The IoT Hub client supports sending events to and receiving messages from an IoT Hub.</span></span> </p>
      <p><span data-ttu-id="90119-166">Zur Unterstützung dieser Workflows wird die Clientbibliothek Geben Sie die folgenden Abstraktionen: einer Nachricht mit seiner Nutzlast und die zugeordneten Eigenschaften aus. und einen Client, der Nachrichten sendet und empfängt.</span><span class="sxs-lookup"><span data-stu-id="90119-166">To support these workflows, the client library will provide the following abstractions: a message, with its payload and associated properties; and a client, which sends and receives messages.</span></span> </p>
      <p><span data-ttu-id="90119-167">Der Client puffert Nachrichten, während das Netzwerk ausgefallen ist und erneut gesendet, wenn das Netzwerk wieder online geschaltet wird.</span><span class="sxs-lookup"><span data-stu-id="90119-167">The client buffers messages while the network is down, and re-sends them when the network comes back online.</span></span> <span data-ttu-id="90119-168">Nachrichten zur Verbesserung der Kommunikationseffizienz (nur für HTTPS) als auch batches.</span><span class="sxs-lookup"><span data-stu-id="90119-168">It also batches messages to improve communication efficiency (HTTPS only).</span></span> </p>
      <p><span data-ttu-id="90119-169">Der Client unterstützt HTTPS 1.1 und 1.0 AMQPS Transporte.</span><span class="sxs-lookup"><span data-stu-id="90119-169">The client supports HTTPS 1.1 and AMQPS 1.0 transports.</span></span> </p>
    syntax:
      content: public class DeviceClient
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.close()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: close()
    nameWithType: MqttTransport.close()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.close()
    type: Method
    summary: "<p><span data-ttu-id=\"90119-170\">Schließt alle Ressourcen, die zur Kommunikation mit IoT Hub verwendet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-170\">Closes all resources used to communicate with an IoT Hub.</span></span> <span data-ttu-id=\"90119-171\">Einmal<code>close() \r\n\r\n    </code> wird aufgerufen, der Transport ist nicht mehr verwendbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-171\">Once<code>close() \r\n\r\n    </code> is called, the transport is no longer usable.</span></span> <span data-ttu-id=\"90119-172\">Wenn der Transport bereits geschlossen ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-172\">If the transport is already closed, the function shall do nothing.</span></span> </p>"
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.close()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: close()
    nameWithType: HttpsTransport.close()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.close()
    type: Method
    summary: "<p><span data-ttu-id=\"90119-173\">Schließt alle Ressourcen, die zur Kommunikation mit IoT Hub verwendet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-173\">Closes all resources used to communicate with an IoT Hub.</span></span> <span data-ttu-id=\"90119-174\">Einmal<code>close() \r\n\r\n    </code> wird aufgerufen, der Transport ist nicht mehr verwendbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-174\">Once<code>close() \r\n\r\n    </code> is called, the transport is no longer usable.</span></span> <span data-ttu-id=\"90119-175\">Wenn der Transport bereits geschlossen ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-175\">If the transport is already closed, the function shall do nothing.</span></span></p>\n\n<p></p>"
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.close()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: close()
    nameWithType: AmqpsTransport.close()
    fullName: synchronized void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.close()
    type: Method
    summary: "<p><span data-ttu-id=\"90119-176\">Schließt alle Ressourcen, die zur Kommunikation mit IoT Hub verwendet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-176\">Closes all resources used to communicate with an IoT Hub.</span></span> <span data-ttu-id=\"90119-177\">Einmal<code>close() \r\n\r\n    </code> wird aufgerufen, der Transport ist nicht mehr verwendbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-177\">Once<code>close() \r\n\r\n    </code> is called, the transport is no longer usable.</span></span> <span data-ttu-id=\"90119-178\">Wenn der Transport bereits geschlossen ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-178\">If the transport is already closed, the function shall do nothing.</span></span></p>\n\n<p></p>"
    syntax:
      content: public synchronized void close()
      return:
        type: 5c0b90ca
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.addMessage(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: 'addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    nameWithType: 'MqttTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-179">Fügt eine Nachricht an die Warteschlange Transport.</span><span class="sxs-lookup"><span data-stu-id="90119-179">Adds a message to the transport queue.</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="90119-180">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="90119-180">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: '<p><span data-ttu-id="90119-181">der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="90119-181">the callback to be invoked when a response for the message is received.</span></span> </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p><span data-ttu-id="90119-182">der Kontext übergeben werden, wenn der Rückruf aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="90119-182">the context to be passed in when the callback is invoked.</span></span></p>'
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: 'addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    nameWithType: 'HttpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-183">Fügt eine Nachricht an die Warteschlange Transport.</span><span class="sxs-lookup"><span data-stu-id="90119-183">Adds a message to the transport queue.</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="90119-184">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="90119-184">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: '<p><span data-ttu-id="90119-185">der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="90119-185">the callback to be invoked when a response for the message is received.</span></span> </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p><span data-ttu-id="90119-186">der Kontext übergeben werden, wenn der Rückruf aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="90119-186">the context to be passed in when the callback is invoked.</span></span></p>'
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.addMessage(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: 'addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    nameWithType: 'AmqpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-187">Fügt eine Nachricht an die Warteschlange Transport.</span><span class="sxs-lookup"><span data-stu-id="90119-187">Adds a message to the transport queue.</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="90119-188">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="90119-188">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: '<p><span data-ttu-id="90119-189">der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="90119-189">the callback to be invoked when a response for the message is received.</span></span> </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p><span data-ttu-id="90119-190">der Kontext übergeben werden, wenn der Rückruf aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="90119-190">the context to be passed in when the callback is invoked.</span></span></p>'
  - uid: com.microsoft.azure.sdk.iot.device._message
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._message.yml
    name: Message
    nameWithType: Message
    fullName: com.microsoft.azure.sdk.iot.device.Message
    type: Class
    syntax:
      content: public class Message
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.yml
    name: IotHubEventCallback
    nameWithType: IotHubEventCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
    type: Interface
    summary: |-
      <p><span data-ttu-id="90119-191">Eine Schnittstelle für einen Ereignisrückruf IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="90119-191">An interface for an IoT Hub event callback.</span></span></p>
      <p><span data-ttu-id="90119-192">Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback #Execute(IotHubStatusCode, Object)</xref> beim Empfang einer Antwort von einem IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="90119-192">Developers are expected to create an implementation of this interface, and the transport will call <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback#execute(IotHubStatusCode, Object)</xref> upon receiving a response from an IoT Hub.</span></span> </p>
    syntax:
      content: public interface IotHubEventCallback
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.addMessage(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: 'addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'MqttTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-193">Fügt eine Nachricht an die Warteschlange Transport.</span><span class="sxs-lookup"><span data-stu-id="90119-193">Adds a message to the transport queue.</span></span> <span data-ttu-id="90119-194">!!!</span><span class="sxs-lookup"><span data-stu-id="90119-194">!!!</span></span> <span data-ttu-id="90119-195">Diese Funktionalität ist noch nicht unterstützt, Bitte verwenden Sie fehlerhaft sind.</span><span class="sxs-lookup"><span data-stu-id="90119-195">This functionality is not supported yet, please use  with !!!</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="90119-196">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="90119-196">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: '<p><span data-ttu-id="90119-197">der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="90119-197">the callback to be invoked when a response for the message is received.</span></span> </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p><span data-ttu-id="90119-198">der Kontext übergeben werden, wenn der Rückruf aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="90119-198">the context to be passed in when the callback is invoked.</span></span></p>'
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: 'addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'HttpsTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-199">Fügt eine Nachricht an die Warteschlange Transport.</span><span class="sxs-lookup"><span data-stu-id="90119-199">Adds a message to the transport queue.</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="90119-200">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="90119-200">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: '<p><span data-ttu-id="90119-201">der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="90119-201">the callback to be invoked when a response for the message is received.</span></span> </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p><span data-ttu-id="90119-202">der Kontext übergeben werden, wenn der Rückruf aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="90119-202">the context to be passed in when the callback is invoked.</span></span></p>'
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.addMessage(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: 'addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'AmqpsTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-203">Fügt eine Nachricht an die Warteschlange Transport.</span><span class="sxs-lookup"><span data-stu-id="90119-203">Adds a message to the transport queue.</span></span> <span data-ttu-id="90119-204">!!!</span><span class="sxs-lookup"><span data-stu-id="90119-204">!!!</span></span> <span data-ttu-id="90119-205">Diese Funktionalität ist noch nicht unterstützt, Bitte verwenden Sie fehlerhaft sind.</span><span class="sxs-lookup"><span data-stu-id="90119-205">This functionality is not supported yet, please use  with !!!</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="90119-206">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="90119-206">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: '<p><span data-ttu-id="90119-207">der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="90119-207">the callback to be invoked when a response for the message is received.</span></span> </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p><span data-ttu-id="90119-208">der Kontext übergeben werden, wenn der Rückruf aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="90119-208">the context to be passed in when the callback is invoked.</span></span></p>'
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.yml
    name: IotHubResponseCallback
    nameWithType: IotHubResponseCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubResponseCallback
    type: Interface
    summary: |-
      <p><span data-ttu-id="90119-209">Eine Schnittstelle für ein IoT Hub-Antwort-Rückruf.</span><span class="sxs-lookup"><span data-stu-id="90119-209">An interface for an IoT Hub response callback.</span></span></p>
      <p><span data-ttu-id="90119-210">Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.execute(ResponseMessage,Object)" data-throw-if-not-resolved="false">IotHubResponseCallback #Execute(ResponseMessage, Object)</xref> beim Empfang einer Antwort von einem IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="90119-210">Developers are expected to create an implementation of this interface, and the transport will call <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.execute(ResponseMessage,Object)" data-throw-if-not-resolved="false">IotHubResponseCallback#execute(ResponseMessage, Object)</xref> upon receiving a response from an IoT Hub.</span></span> </p>
    syntax:
      content: public interface IotHubResponseCallback
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.sendMessages()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: sendMessages()
    nameWithType: MqttTransport.sendMessages()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.sendMessages()
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-211">Sendet alle Nachrichten in der Warteschlange Transport, jeweils einzeln an.</span><span class="sxs-lookup"><span data-stu-id="90119-211">Sends all messages on the transport queue, one at a time.</span></span> <span data-ttu-id="90119-212">Wenn eine vorherige Sendeversuch Fehler ist aufgetreten, versucht die Funktion, die Nachrichten in der vorherigen Versuch erneut zu senden.</span><span class="sxs-lookup"><span data-stu-id="90119-212">If a previous send attempt had failed, the function will attempt to resend the messages in the previous attempt.</span></span> </p>
      <p><span data-ttu-id="90119-213">Wenn dieser nicht bereits erstellt wurde, wird die Funktion eine MQTT-Verbindung mit dem IoT Hub in der Konfiguration angegebene initialisieren.</span><span class="sxs-lookup"><span data-stu-id="90119-213">If one has not already been created, the function will initialize an MQTT connection with the IoT Hub specified in the configuration.</span></span></p>
      <p></p>
    syntax:
      content: public void sendMessages()
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.sendMessages()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: sendMessages()
    nameWithType: HttpsTransport.sendMessages()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.sendMessages()
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-214">Sendet alle Nachrichten in der Warteschlange Transport als Batchanforderung.</span><span class="sxs-lookup"><span data-stu-id="90119-214">Sends all messages on the transport queue as a batched request.</span></span></p>
      <p></p>
    syntax:
      content: public void sendMessages()
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.sendMessages()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: sendMessages()
    nameWithType: AmqpsTransport.sendMessages()
    fullName: synchronized void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.sendMessages()
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-215">Sendet alle Nachrichten aus der Liste jeweils einzeln warten.</span><span class="sxs-lookup"><span data-stu-id="90119-215">Sends all messages from the waiting list, one at a time.</span></span> <span data-ttu-id="90119-216">Wenn eine vorherige Sendeversuch Fehler ist aufgetreten, versucht die Funktion, die Nachrichten in der vorherigen Versuch erneut zu senden.</span><span class="sxs-lookup"><span data-stu-id="90119-216">If a previous send attempt had failed, the function will attempt to resend the messages in the previous attempt.</span></span> </p>
      <p></p>
    syntax:
      content: public synchronized void sendMessages()
      return:
        type: 5c0b90ca
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.invokeCallbacks()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: invokeCallbacks()
    nameWithType: MqttTransport.invokeCallbacks()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.invokeCallbacks()
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-217">Ruft die Rückrufe für alle abgeschlossenen Anforderungen.</span><span class="sxs-lookup"><span data-stu-id="90119-217">Invokes the callbacks for all completed requests.</span></span></p>
      <p></p>
    syntax:
      content: public void invokeCallbacks()
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.invokeCallbacks()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: invokeCallbacks()
    nameWithType: HttpsTransport.invokeCallbacks()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.invokeCallbacks()
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-218">Ruft die Rückrufe für alle abgeschlossenen Anforderungen.</span><span class="sxs-lookup"><span data-stu-id="90119-218">Invokes the callbacks for all completed requests.</span></span></p>
      <p></p>
    syntax:
      content: public void invokeCallbacks()
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.invokeCallbacks()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: invokeCallbacks()
    nameWithType: AmqpsTransport.invokeCallbacks()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.invokeCallbacks()
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-219">Ruft die Rückrufe für alle abgeschlossenen Anforderungen.</span><span class="sxs-lookup"><span data-stu-id="90119-219">Invokes the callbacks for all completed requests.</span></span></p>
      <p></p>
    syntax:
      content: public void invokeCallbacks()
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.handleMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: handleMessage()
    nameWithType: MqttTransport.handleMessage()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.handleMessage()
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-220">Ruft den Nachrichtenrückruf auf jedes Mal, wenn eine Nachricht vom Server eingeht.</span><span class="sxs-lookup"><span data-stu-id="90119-220">Invokes the message callback every time a message arrives from the server.</span></span> <span data-ttu-id="90119-221">reagiert auf den IoT Hub auf wie die verarbeitete Nachricht durch den IoT Hub behandelt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="90119-221">responds to the IoT Hub on how the processed message should be handled by the IoT Hub.</span></span> </p>
      <p><span data-ttu-id="90119-222">Wenn keine Nachrichtenrückruf festgelegt ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="90119-222">If no message callback is set, the function will do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void handleMessage()
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.handleMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: handleMessage()
    nameWithType: HttpsTransport.handleMessage()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.handleMessage()
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-223">Ruft die Nachrichtenrückruf auf, wenn eine Nachricht gefunden wird, und antwortet mit dem IoT Hub auf wie die verarbeitete Nachricht durch den IoT Hub behandelt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="90119-223">Invokes the message callback if a message is found and responds to the IoT Hub on how the processed message should be handled by the IoT Hub.</span></span> </p>
      <p><span data-ttu-id="90119-224">Wenn keine Nachrichtenrückruf festgelegt ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="90119-224">If no message callback is set, the function will do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void handleMessage()
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.handleMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: handleMessage()
    nameWithType: AmqpsTransport.handleMessage()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.handleMessage()
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-225">Ruft die Nachrichtenrückruf auf, wenn eine Nachricht gefunden wird, und antwortet mit dem IoT Hub auf wie die verarbeitete Nachricht durch den IoT Hub behandelt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="90119-225">Invokes the message callback if a message is found and responds to the IoT Hub on how the processed message should be handled by the IoT Hub.</span></span> </p>
      <p><span data-ttu-id="90119-226">Wenn keine Nachrichtenrückruf festgelegt ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="90119-226">If no message callback is set, the function will do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void handleMessage()
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.isEmpty()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: isEmpty()
    nameWithType: MqttTransport.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.isEmpty()
    type: Method
    summary: "<p><span data-ttu-id=\"90119-227\">Gibt<code>true \r\n\r\n    </code> verfügt der Transport keine weiteren Nachrichten mehr verarbeiten, und<code>false \r\n\r\n    </code> andernfalls.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-227\">Returns<code>true \r\n\r\n    </code> if the transport has no more messages to handle, and<code>false \r\n\r\n    </code> otherwise.</span></span></p>\n\n<p></p>"
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: "<p><span data-ttu-id=\"90119-228\">\r\n\r\n  <code>true \r\n\r\n    </code>Wenn der Transport keine weiteren Nachrichten mehr verarbeiten, hat und<code>false \r\n\r\n    </code> andernfalls.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-228\">\r\n\r\n  <code>true \r\n\r\n    </code> if the transport has no more messages to handle, and<code>false \r\n\r\n    </code> otherwise.</span></span> </p>"
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.isEmpty()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: isEmpty()
    nameWithType: HttpsTransport.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.isEmpty()
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-229">Zurück, andernfalls True, wenn der Transport keine weiteren Nachrichten mehr verarbeiten, und "false".</span><span class="sxs-lookup"><span data-stu-id="90119-229">Returns true if the transport has no more messages to handle, and false otherwise.</span></span></p>
      <p></p>
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: '<p><span data-ttu-id="90119-230">"true", wenn der Transport keine weiteren Nachrichten zur Handle und "false", andernfalls hat.</span><span class="sxs-lookup"><span data-stu-id="90119-230">true if the transport has no more messages to handle, and false otherwise.</span></span> </p>'
  - uid: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.isEmpty()
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: isEmpty()
    nameWithType: AmqpsTransport.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.isEmpty()
    type: Method
    summary: "<p><span data-ttu-id=\"90119-231\">Gibt<code>true \r\n\r\n    </code> verfügt der Transport keine weiteren Nachrichten mehr verarbeiten, und<code>false \r\n\r\n    </code> andernfalls.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-231\">Returns<code>true \r\n\r\n    </code> if the transport has no more messages to handle, and<code>false \r\n\r\n    </code> otherwise.</span></span></p>\n\n<p></p>"
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: "<p><span data-ttu-id=\"90119-232\">\r\n\r\n  <code>true \r\n\r\n    </code>Wenn der Transport keine weiteren Nachrichten mehr verarbeiten, hat und<code>false \r\n\r\n    </code> andernfalls.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-232\">\r\n\r\n  <code>true \r\n\r\n    </code> if the transport has no more messages to handle, and<code>false \r\n\r\n    </code> otherwise.</span></span> </p>"
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'HttpsTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-233">Registriert einen Rückruf ausgeführt werden, sobald die Https-Verbindung verloren geht oder hergestellt wird.</span><span class="sxs-lookup"><span data-stu-id="90119-233">Registers a callback to be executed whenever the https connection is lost or established.</span></span></p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p><span data-ttu-id="90119-234">der Rückruf aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="90119-234">the callback to be called.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: '<p><span data-ttu-id="90119-235">Ein Kontext, der an den Rückruf übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="90119-235">a context to be passed to the callback.</span></span> <span data-ttu-id="90119-236">Kann null sein</span><span class="sxs-lookup"><span data-stu-id="90119-236">Can be null</span></span> </p>'
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'MqttTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-237">Registriert einen Rückruf ausgeführt werden, wenn die Verbindung Mqtt verloren geht oder hergestellt wird.</span><span class="sxs-lookup"><span data-stu-id="90119-237">Registers a callback to be executed whenever the mqtt connection is lost or established.</span></span></p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p><span data-ttu-id="90119-238">der Rückruf aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="90119-238">the callback to be called.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: "<p><span data-ttu-id=\"90119-239\">Ein Kontext, der an den Rückruf übergeben werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-239\">a context to be passed to the callback.</span></span> <span data-ttu-id=\"90119-240\">Kann <code>null \r\n\r\n    </code> Wenn kein Rückruf bereitgestellt wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-240\">Can be <code>null \r\n\r\n    </code> if no callback is provided.</span></span> </p>"
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport
    href: com.microsoft.azure.sdk.iot.device.transport.amqps._amqps_transport.yml
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'AmqpsTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="90119-241">Registriert einen Rückruf ausgeführt werden, wenn die Verbindung Amqps verloren geht oder hergestellt wird.</span><span class="sxs-lookup"><span data-stu-id="90119-241">Registers a callback to be executed whenever the amqps connection is lost or established.</span></span></p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p><span data-ttu-id="90119-242">der Rückruf aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="90119-242">the callback to be called.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: "<p><span data-ttu-id=\"90119-243\">Ein Kontext, der an den Rückruf übergeben werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-243\">a context to be passed to the callback.</span></span> <span data-ttu-id=\"90119-244\">Kann <code>null \r\n\r\n    </code> Wenn kein Rückruf bereitgestellt wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"90119-244\">Can be <code>null \r\n\r\n    </code> if no callback is provided.</span></span> </p>"
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback.yml
    name: IotHubConnectionStateCallback
    nameWithType: IotHubConnectionStateCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
    type: Interface
    summary: |-
      <p><span data-ttu-id="90119-245">Eine Schnittstelle für ein IoT Hub-Verbindung-Status-Rückruf.</span><span class="sxs-lookup"><span data-stu-id="90119-245">An interface for an IoT Hub connection state callback.</span></span></p>
      <p><span data-ttu-id="90119-246">Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="" data-throw-if-not-resolved="false">IotHubConnectionStateCallback #Execute(IotHubConnectionState, Object)</xref> übergibt den Verbindungsstatus (nach unten, Erfolg usw.).</span><span class="sxs-lookup"><span data-stu-id="90119-246">Developers are expected to create an implementation of this interface, and the transport will call <xref uid="" data-throw-if-not-resolved="false">IotHubConnectionStateCallback#execute(IotHubConnectionState, Object)</xref> passing in the connection status (down, success, etc.).</span></span> </p>
    syntax:
      content: public interface IotHubConnectionStateCallback