### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.datalake.store.retrypolicies._no_retry_policy
    id: _no_retry_policy
    parent: com.microsoft.azure.datalake.store.retrypolicies
    children:
      - 'com.microsoft.azure.datalake.store.retrypolicies._no_retry_policy.shouldRetry(int,Exception)'
    href: com.microsoft.azure.datalake.store.retrypolicies._no_retry_policy.yml
    langs:
      - java
    name: NoRetryPolicy
    nameWithType: NoRetryPolicy
    fullName: com.microsoft.azure.datalake.store.retrypolicies.NoRetryPolicy
    type: Class
    source:
      remote: &ref_0
        path: src/main/java/com/microsoft/azure/datalake/store/retrypolicies/NoRetryPolicy.java
        branch: master
        repo: 'https://github.com/azure/azure-data-lake-store-java'
      path: src/main/java/com/microsoft/azure/datalake/store/retrypolicies/NoRetryPolicy.java
      startLine: 17
    package: com.microsoft.azure.datalake.store.retrypolicies
    summary: |-
      <p>Keine Wiederholung jemals. Gibt immer "false" zeigt an, dass diese Erequest nicht wiederholt werden sollte zurück.</p>
      <p>Dies sollte verwendet werden, und wiederholen Sie dann ist nicht sicher und at-Most-Once-Semantik mit dem Aufruf der Benutzer möchte. Dies ist nützlich für nicht idempotente-Methoden, in dem der Fehler vom letzten Aufruf zurückgegebene abschließend Erfolg oder Fehler des Aufrufs gibt keine. Z. B. wenn ein Anfügen erfolgreich ausgeführt wird, auf dem Back-End ein Timeout auftritt, Anfügen wiederholen sie dann die Daten zweimal, um die Datei. </p>
    syntax:
      content: public class NoRetryPolicy implements RetryPolicy
    inheritance:
      - java.lang.Object
      - com.microsoft.azure.datalake.store.retrypolicies._retry_policy
  - uid: 'com.microsoft.azure.datalake.store.retrypolicies._no_retry_policy.shouldRetry(int,Exception)'
    id: 'shouldRetry(int,Exception)'
    parent: com.microsoft.azure.datalake.store.retrypolicies._no_retry_policy
    href: com.microsoft.azure.datalake.store.retrypolicies._no_retry_policy.yml
    langs:
      - java
    name: 'shouldRetry(int httpResponseCode, Exception lastException)'
    nameWithType: 'NoRetryPolicy.shouldRetry(int httpResponseCode, Exception lastException)'
    fullName: 'boolean com.microsoft.azure.datalake.store.retrypolicies.NoRetryPolicy.shouldRetry(int httpResponseCode, Exception lastException)'
    overload: com.microsoft.azure.datalake.store.retrypolicies._no_retry_policy.shouldRetry*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/retrypolicies/NoRetryPolicy.java
      startLine: 23
    package: com.microsoft.azure.datalake.store.retrypolicies
    summary: "<p>boolescher Wert, der angibt, ob eine fehlerhafte Anforderung wiederholt werden soll. Implementierungen können entscheiden, ob Sie wiederholen den HTTP-Antwortcode und keine Ausnahmen aus den letzten vergeblichen Versuch verwenden. </p>\n<p>Wenn die wiederholungsrichtlinie für eine Wartezeit vor dem nächsten Versuch, erfordert die<code>shouldRetry \r\n\r\n    </code> Methode geeigneten Zeitpunkt vor dem Antworten wieder warten soll. d. h. für Wartevorgänge kein expliziter Vertrag ist allerdings handelt es sich implizit in die Zeit, bis die<code>shouldRetry \r\n\r\n    </code> -Methode zurückgegeben. </p>\n\n<p></p>"
    syntax:
      content: 'public boolean shouldRetry(int httpResponseCode, Exception lastException)'
      parameters:
        - id: httpResponseCode
          type: f75371fa
          description: <p>der HTTP-Antwortcode empfangen </p>
        - id: lastException
          type: 8a99d4b0
          description: '<p>alle Ausnahmen, die beim Verarbeiten der letzten Anforderung aufgetreten </p>'
      return:
        type: 4fc6e284
        description: '<p>boolescher Wert, der angibt, ob die Anforderung wiederholt werden soll </p>'
    overridden: 'com.microsoft.azure.datalake.store.retrypolicies._retry_policy.shouldRetry(int,Exception)'
references:
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: 8a99d4b0
    spec.java:
      - name: Exception
        fullName: Exception
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.datalake.store.retrypolicies._no_retry_policy.shouldRetry*
    name: shouldRetry
    nameWithType: NoRetryPolicy.shouldRetry
    fullName: boolean com.microsoft.azure.datalake.store.retrypolicies.NoRetryPolicy.shouldRetry
    package: com.microsoft.azure.datalake.store.retrypolicies
  - uid: com.microsoft.azure.datalake.store.retrypolicies._retry_policy
    parent: com.microsoft.azure.datalake.store.retrypolicies
    href: com.microsoft.azure.datalake.store.retrypolicies._retry_policy.yml
    name: RetryPolicy
    nameWithType: RetryPolicy
    fullName: com.microsoft.azure.datalake.store.retrypolicies.RetryPolicy
    type: Interface
    summary: |-
      <p>die <xref uid="com.microsoft.azure.datalake.store.retrypolicies._retry_policy" data-throw-if-not-resolved="false">RetryPolicy</xref> steuert, ob es sich bei eine fehlgeschlagene Anforderung wiederholt, und wie lange warten, und wiederholen Sie dann werden soll. </p>
      <p>Implementierungen dieser Schnittstelle implementieren andere wiederholungsrichtlinien. </p>
    syntax:
      content: public interface RetryPolicy
  - uid: 'com.microsoft.azure.datalake.store.retrypolicies._retry_policy.shouldRetry(int,Exception)'
    parent: com.microsoft.azure.datalake.store.retrypolicies._retry_policy
    href: com.microsoft.azure.datalake.store.retrypolicies._retry_policy.yml
    name: 'shouldRetry(int httpResponseCode, Exception lastException)'
    nameWithType: 'RetryPolicy.shouldRetry(int httpResponseCode, Exception lastException)'
    fullName: 'boolean com.microsoft.azure.datalake.store.retrypolicies.RetryPolicy.shouldRetry(int httpResponseCode, Exception lastException)'
    type: Method
    summary: "<p>boolescher Wert, der angibt, ob eine fehlerhafte Anforderung wiederholt werden soll. Implementierungen können entscheiden, ob Sie wiederholen den HTTP-Antwortcode und keine Ausnahmen aus den letzten vergeblichen Versuch verwenden. </p>\n<p>Wenn die wiederholungsrichtlinie für eine Wartezeit vor dem nächsten Versuch, erfordert die<code>shouldRetry \r\n\r\n    </code> Methode geeigneten Zeitpunkt vor dem Antworten wieder warten soll. d. h. für Wartevorgänge kein expliziter Vertrag ist allerdings handelt es sich implizit in die Zeit, bis die<code>shouldRetry \r\n\r\n    </code> -Methode zurückgegeben. </p>\n\n<p></p>"
    syntax:
      content: 'public boolean shouldRetry(int httpResponseCode, Exception lastException)'
      parameters:
        - id: httpResponseCode
          type: f75371fa
          description: <p>der HTTP-Antwortcode empfangen </p>
        - id: lastException
          type: 8a99d4b0
          description: '<p>alle Ausnahmen, die beim Verarbeiten der letzten Anforderung aufgetreten </p>'
      return:
        type: 4fc6e284
        description: '<p>boolescher Wert, der angibt, ob die Anforderung wiederholt werden soll </p>'