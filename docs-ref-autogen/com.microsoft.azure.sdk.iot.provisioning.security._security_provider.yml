### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.provisioning.security._security_provider
    id: _security_provider
    parent: com.microsoft.azure.sdk.iot.provisioning.security
    children:
      - com.microsoft.azure.sdk.iot.provisioning.security._security_provider.getRegistrationId()
      - com.microsoft.azure.sdk.iot.provisioning.security._security_provider.getSSLContext()
    href: com.microsoft.azure.sdk.iot.provisioning.security._security_provider.yml
    langs:
      - java
    name: SecurityProvider
    nameWithType: SecurityProvider
    fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider
    type: Class
    source:
      remote: &ref_0
        path: provisioning/security/security-provider/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/SecurityProvider.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: provisioning/security/security-provider/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/SecurityProvider.java
      startLine: 24
    package: com.microsoft.azure.sdk.iot.provisioning.security
    syntax:
      content: public class SecurityProvider
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.sdk.iot.provisioning.security._security_provider.getRegistrationId()
    id: getRegistrationId()
    parent: com.microsoft.azure.sdk.iot.provisioning.security._security_provider
    href: com.microsoft.azure.sdk.iot.provisioning.security._security_provider.yml
    langs:
      - java
    name: getRegistrationId()
    nameWithType: SecurityProvider.getRegistrationId()
    fullName: abstract String com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider.getRegistrationId()
    overload: com.microsoft.azure.sdk.iot.provisioning.security._security_provider.getRegistrationId*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/security/security-provider/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/SecurityProvider.java
      startLine: 140
    package: com.microsoft.azure.sdk.iot.provisioning.security
    summary: <p><span data-ttu-id="dc235-101">Eindeutige Id für die Registrierung erforderlich</span><span class="sxs-lookup"><span data-stu-id="dc235-101">Unique id required for registration</span></span> </p>
    syntax:
      content: public abstract String getRegistrationId()
      return:
        type: 9065866d
        description: '<p><span data-ttu-id="dc235-102">Gibt zurück, dass die Registrierung verwendete Id für den Dienst erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="dc235-102">Returns the registration Id used needed for the service</span></span> </p>'
    exceptions:
      - type: f44c259f
        description: <p><span data-ttu-id="dc235-103">Wenn der Registrierungs-Id mit der zugrunde liegenden Implementierung konnte nicht abgerufen werden</span><span class="sxs-lookup"><span data-stu-id="dc235-103">If registration id with the underlying implementation could not be retrieved</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.provisioning.security._security_provider.getSSLContext()
    id: getSSLContext()
    parent: com.microsoft.azure.sdk.iot.provisioning.security._security_provider
    href: com.microsoft.azure.sdk.iot.provisioning.security._security_provider.yml
    langs:
      - java
    name: getSSLContext()
    nameWithType: SecurityProvider.getSSLContext()
    fullName: abstract SSLContext com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider.getSSLContext()
    overload: com.microsoft.azure.sdk.iot.provisioning.security._security_provider.getSSLContext*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/security/security-provider/src/main/java/com/microsoft/azure/sdk/iot/provisioning/security/SecurityProvider.java
      startLine: 148
    package: com.microsoft.azure.sdk.iot.provisioning.security
    summary: '<p><span data-ttu-id="dc235-104">Ruft den SSL-Kontext geladen, die mit vertrauenswürdigen Zertifikaten ab.</span><span class="sxs-lookup"><span data-stu-id="dc235-104">Retrieves the SSL context loaded with trusted certs.</span></span> <span data-ttu-id="dc235-105">Im Falle X509 mit vollständige Kette SSL-Kontext geladen werden muss ganz halten bis das Blatt zusammen mit seinem privaten Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="dc235-105">In case of X509 SSL context shall be loaded with complete chain all the way till the leaf along with its private key.</span></span> </p>'
    syntax:
      content: public abstract SSLContext getSSLContext()
      return:
        type: 6de79eb1
        description: <p><span data-ttu-id="dc235-106">Die relevant für den Ablauf SSLContext</span><span class="sxs-lookup"><span data-stu-id="dc235-106">The SSLContext relevant to the flow</span></span> </p>
    exceptions:
      - type: f44c259f
        description: <p><span data-ttu-id="dc235-107">Wenn Ssl-Kontext für keines der Grund nicht erstellt werden konnte</span><span class="sxs-lookup"><span data-stu-id="dc235-107">If ssl context could not be generated for any of the reason</span></span> </p>
references:
  - uid: f44c259f
    spec.java:
      - name: SecurityProviderException
        fullName: SecurityProviderException
  - uid: 9065866d
    spec.java:
      - name: abstract String
        fullName: abstract String
  - uid: com.microsoft.azure.sdk.iot.provisioning.security._security_provider.getRegistrationId*
    name: getRegistrationId
    nameWithType: SecurityProvider.getRegistrationId
    fullName: abstract String com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider.getRegistrationId
    package: com.microsoft.azure.sdk.iot.provisioning.security
  - uid: 6de79eb1
    spec.java:
      - name: abstract SSLContext
        fullName: abstract SSLContext
  - uid: com.microsoft.azure.sdk.iot.provisioning.security._security_provider.getSSLContext*
    name: getSSLContext
    nameWithType: SecurityProvider.getSSLContext
    fullName: abstract SSLContext com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider.getSSLContext
    package: com.microsoft.azure.sdk.iot.provisioning.security
  - uid: com.microsoft.azure.sdk.iot.provisioning.security._security_provider_tpm
    parent: com.microsoft.azure.sdk.iot.provisioning.security
    href: com.microsoft.azure.sdk.iot.provisioning.security._security_provider_tpm.yml
    name: SecurityProviderTpm
    nameWithType: SecurityProviderTpm
    fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderTpm
    type: Class
    syntax:
      content: public class SecurityProviderTpm
  - uid: com.microsoft.azure.sdk.iot.provisioning.security._security_provider_x509
    parent: com.microsoft.azure.sdk.iot.provisioning.security
    href: com.microsoft.azure.sdk.iot.provisioning.security._security_provider_x509.yml
    name: SecurityProviderX509
    nameWithType: SecurityProviderX509
    fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderX509
    type: Class
    syntax:
      content: public class SecurityProviderX509
  - uid: com.microsoft.azure.sdk.iot.provisioning.security.exceptions._security_provider_exception
    parent: com.microsoft.azure.sdk.iot.provisioning.security.exceptions
    href: com.microsoft.azure.sdk.iot.provisioning.security.exceptions._security_provider_exception.yml
    name: SecurityProviderException
    nameWithType: SecurityProviderException
    fullName: com.microsoft.azure.sdk.iot.provisioning.security.exceptions.SecurityProviderException
    type: Class
    syntax:
      content: public class SecurityProviderException