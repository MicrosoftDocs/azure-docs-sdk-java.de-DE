### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._actor_runtime
    id: _actor_runtime
    parent: microsoft.servicefabric.actors
    children:
      - 'microsoft.servicefabric.actors._actor_runtime.registerActorAsync(Class<T>,BiFunction<StatefulServiceContext, ActorTypeInformation, FabricActorService>,Duration)'
      - 'microsoft.servicefabric.actors._actor_runtime.registerActorAsync(Class<T>,Duration)'
    href: microsoft.servicefabric.actors._actor_runtime.yml
    langs:
      - java
    name: ActorRuntime
    nameWithType: ActorRuntime
    fullName: microsoft.servicefabric.actors.ActorRuntime
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorRuntime.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorRuntime.java
      startLine: 16
    package: microsoft.servicefabric.actors
    summary: <p>Enthält Methoden zum Actor-Typ mit Service Fabric-Runtime zu registrieren. </p>
    syntax: &ref_1
      content: public class ActorRuntime
    inheritance:
      - java.lang.Object
  - uid: 'microsoft.servicefabric.actors._actor_runtime.registerActorAsync(Class<T>,BiFunction<StatefulServiceContext, ActorTypeInformation, FabricActorService>,Duration)'
    id: 'registerActorAsync(Class<T>,BiFunction<StatefulServiceContext, ActorTypeInformation, FabricActorService>,Duration)'
    parent: microsoft.servicefabric.actors._actor_runtime
    href: microsoft.servicefabric.actors._actor_runtime.yml
    langs:
      - java
    name: 'registerActorAsync(Class<T> actorType, BiFunction<StatefulServiceContext, ActorTypeInformation, FabricActorService> actorServiceFactory, Duration timeout)'
    nameWithType: 'ActorRuntime.registerActorAsync(Class<T> actorType, BiFunction<StatefulServiceContext, ActorTypeInformation, FabricActorService> actorServiceFactory, Duration timeout)'
    fullName: 'static <T extends ActorBase> CompletableFuture<?> microsoft.servicefabric.actors.ActorRuntime.registerActorAsync(Class<T> actorType, BiFunction<StatefulServiceContext, ActorTypeInformation, FabricActorService> actorServiceFactory, Duration timeout)'
    overload: microsoft.servicefabric.actors._actor_runtime.registerActorAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorRuntime.java
      startLine: 63
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Registriert einen Akteurtyp mit Service Fabric-Laufzeit.</p>
      <p></p>
    syntax:
      content: 'public static static<T extends ActorBase> CompletableFuture<?> registerActorAsync(Class<T> actorType, BiFunction<StatefulServiceContext, ActorTypeInformation, FabricActorService> actorServiceFactory, Duration timeout)'
      parameters:
        - id: actorType
          type: ffb09d2d
          description: <p>Akteur implementierende Klasse <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> Schnittstelle </p>
        - id: actorServiceFactory
          type: 8ead6242system.fabric._stateful_service_contextb33c76fcmicrosoft.servicefabric.actors._actor_type_informationb33c76fcmicrosoft.servicefabric.actors._fabric_actor_servicea08ddfce
          description: "<p>\r\n\r\n  <xref href=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\"></xref>Dienst-Implementierung erstellen <xref href=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\"></xref>. Sieh<xref href=\"microsoft.servicefabric.actors._fabric_actor_service\" data-throw-if-not-resolved=\"false\"></xref></p>"
        - id: timeout
          type: e02a2de0
          description: '<p>Ein Zeitlimit, wonach der Registrierungsvorgang abgebrochen werden. </p>'
      return:
        type: 1e2c6103microsoft.servicefabric.actors._actor_basea598367f
        description: '<p>Eine Aufgabe, die den asynchronen Vorgang Akteurtyp registrieren, mit Service Fabric-Laufzeit darstellt. </p>'
  - uid: 'microsoft.servicefabric.actors._actor_runtime.registerActorAsync(Class<T>,Duration)'
    id: 'registerActorAsync(Class<T>,Duration)'
    parent: microsoft.servicefabric.actors._actor_runtime
    href: microsoft.servicefabric.actors._actor_runtime.yml
    langs:
      - java
    name: 'registerActorAsync(Class<T> actorType, Duration timeout)'
    nameWithType: 'ActorRuntime.registerActorAsync(Class<T> actorType, Duration timeout)'
    fullName: 'static <T extends ActorBase> CompletableFuture<?> microsoft.servicefabric.actors.ActorRuntime.registerActorAsync(Class<T> actorType, Duration timeout)'
    overload: microsoft.servicefabric.actors._actor_runtime.registerActorAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorRuntime.java
      startLine: 40
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Registriert einen Akteurtyp mit Service Fabric-Laufzeit.</p>
      <p></p>
    syntax:
      content: 'public static static<T extends ActorBase> CompletableFuture<?> registerActorAsync(Class<T> actorType, Duration timeout)'
      parameters:
        - id: actorType
          type: ffb09d2d
          description: <p>Akteur implementierende Klasse <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> Schnittstelle </p>
        - id: timeout
          type: e02a2de0
          description: '<p>Ein Zeitlimit, wonach der Registrierungsvorgang abgebrochen werden. </p>'
      return:
        type: 1e2c6103microsoft.servicefabric.actors._actor_basea598367f
        description: '<p>Eine Aufgabe, die den asynchronen Vorgang Akteurtyp registrieren, mit Service Fabric-Laufzeit darstellt. </p>'
references:
  - uid: ffb09d2d
    spec.java:
      - name: Class<T>
        fullName: Class<T>
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: 1e2c6103microsoft.servicefabric.actors._actor_basea598367f
    spec.java:
      - name: 'static<T extends '
        fullName: 'static<T extends '
      - uid: microsoft.servicefabric.actors._actor_base
        name: ActorBase
        fullName: microsoft.servicefabric.actors.ActorBase
        href: microsoft.servicefabric.actors._actor_base.yml
      - name: '> CompletableFuture<?>'
        fullName: '> CompletableFuture<?>'
  - uid: microsoft.servicefabric.actors._actor_runtime.registerActorAsync*
    name: registerActorAsync
    nameWithType: ActorRuntime.registerActorAsync
    fullName: static <T extends ActorBase> CompletableFuture<?> microsoft.servicefabric.actors.ActorRuntime.registerActorAsync
    package: microsoft.servicefabric.actors
  - uid: 8ead6242system.fabric._stateful_service_contextb33c76fcmicrosoft.servicefabric.actors._actor_type_informationb33c76fcmicrosoft.servicefabric.actors._fabric_actor_servicea08ddfce
    spec.java:
      - name: BiFunction<
        fullName: BiFunction<
      - uid: system.fabric._stateful_service_context
        name: StatefulServiceContext
        fullName: system.fabric.StatefulServiceContext
        href: system.fabric._stateful_service_context.yml
      - name: ', '
        fullName: ', '
      - uid: microsoft.servicefabric.actors._actor_type_information
        name: ActorTypeInformation
        fullName: microsoft.servicefabric.actors.ActorTypeInformation
        href: microsoft.servicefabric.actors._actor_type_information.yml
      - name: ', '
        fullName: ', '
      - uid: microsoft.servicefabric.actors._fabric_actor_service
        name: FabricActorService
        fullName: microsoft.servicefabric.actors.FabricActorService
        href: microsoft.servicefabric.actors._fabric_actor_service.yml
      - name: '>'
        fullName: '>'
  - uid: microsoft.servicefabric.actors._actor_runtime
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_runtime.yml
    name: ActorRuntime
    nameWithType: ActorRuntime
    fullName: microsoft.servicefabric.actors.ActorRuntime
    type: Class
    summary: <p>Enthält Methoden zum Actor-Typ mit Service Fabric-Runtime zu registrieren. </p>
    syntax: *ref_1
  - uid: microsoft.servicefabric.actors._actor_base
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_base.yml
    name: ActorBase
    nameWithType: ActorBase
    fullName: microsoft.servicefabric.actors.ActorBase
    type: Class
    summary: "<p>Stellt die Basisklasse für Akteure. <xref href=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\"></xref></p>\n<p>\r\n\r\n  <bold>Hinweise:</bold>Dies ist ein Basistyp für Akteur, bietet die Funktionalität, die durch Ableiten von Akteur implementiert Akteure gemeinsam ist <xref href=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\"></xref> der Zustand in den Garbage Collections der Akteur und Fail-Failover beibehalten wird. Speichern und Abrufen des Zustands wird von der Akteur-State-Anbieter bereitgestellt <xref href=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\"></xref>. </p>"
    syntax:
      content: public class ActorBase
  - uid: microsoft.servicefabric.actors._actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor.yml
    name: Actor
    nameWithType: Actor
    fullName: microsoft.servicefabric.actors.Actor
    type: Interface
    summary: <p>Die Basisschnittstelle für das zuverlässige Akteur Schnittstellen erben. </p>
    syntax:
      content: public interface Actor
  - uid: system.fabric._stateful_service_context
    parent: system.fabric
    href: system.fabric._stateful_service_context.yml
    name: StatefulServiceContext
    nameWithType: StatefulServiceContext
    fullName: system.fabric.StatefulServiceContext
    type: Class
    syntax:
      content: public class StatefulServiceContext
  - uid: microsoft.servicefabric.actors._actor_type_information
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_type_information.yml
    name: ActorTypeInformation
    nameWithType: ActorTypeInformation
    fullName: microsoft.servicefabric.actors.ActorTypeInformation
    type: Class
    summary: <p>Enthält Informationen zum Implementieren von eines Akteurs Typ an. </p>
    syntax:
      content: public class ActorTypeInformation
  - uid: microsoft.servicefabric.actors._fabric_actor_service
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    name: FabricActorService
    nameWithType: FabricActorService
    fullName: microsoft.servicefabric.actors.FabricActorService
    type: Class
    summary: "<p>Stellt die Basisklasse für Microsoft Service Fabric-basierten zuverlässige Akteure Dienst dar. </p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>Ableiten von dieser Klasse, die einen eigenen benutzerdefinierten Akteur-Dienst zu implementieren, wenn Sie alle Verhalten des Diensts für die Akteure außer Kraft setzen möchten. </p>"
    syntax:
      content: public class FabricActorService