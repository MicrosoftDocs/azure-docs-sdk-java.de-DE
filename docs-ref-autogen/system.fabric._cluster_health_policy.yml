### YamlMime:ManagedReference
items:
  - uid: system.fabric._cluster_health_policy
    id: _cluster_health_policy
    parent: system.fabric
    children:
      - system.fabric._cluster_health_policy.ClusterHealthPolicy()
      - system.fabric._cluster_health_policy.getApplicationTypeHealthPolicyMap()
      - system.fabric._cluster_health_policy.getConsiderWarningAsError()
      - system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications()
      - system.fabric._cluster_health_policy.getMaxPercentUnhealthyNodes()
      - system.fabric._cluster_health_policy.setConsiderWarningAsError(boolean)
      - system.fabric._cluster_health_policy.setMaxPercentUnhealthyApplications(byte)
      - system.fabric._cluster_health_policy.setMaxPercentUnhealthyNodes(byte)
      - system.fabric._cluster_health_policy.toNative(PinCollection)
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: ClusterHealthPolicy
    nameWithType: ClusterHealthPolicy
    fullName: system.fabric.ClusterHealthPolicy
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 5
    package: system.fabric
    summary: '<p>Definiert eine Integritätsrichtlinie, die zur Bewertung der Integritäts des Clusters oder eines Clusterknotens. </p>'
    syntax:
      content: public class ClusterHealthPolicy
    inheritance:
      - java.lang.Object
  - uid: system.fabric._cluster_health_policy.ClusterHealthPolicy()
    id: ClusterHealthPolicy()
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: ClusterHealthPolicy()
    nameWithType: ClusterHealthPolicy.ClusterHealthPolicy()
    fullName: system.fabric.ClusterHealthPolicy.ClusterHealthPolicy()
    overload: system.fabric._cluster_health_policy.ClusterHealthPolicy*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 35
    package: system.fabric
    summary: "<p>Initialisiert eine neue Instanz der dem <ref refid=\"\" kindref=\"compound\">system.fabric.ClusterHealthPolicy</ref> Klasse. </p>\n<p>\r\n\r\n  <bold>Beschreibung: </bold>standardmäßig keine Fehler oder Warnungen toleriert werden. </p>"
    syntax:
      content: public ClusterHealthPolicy()
  - uid: system.fabric._cluster_health_policy.getApplicationTypeHealthPolicyMap()
    id: getApplicationTypeHealthPolicyMap()
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: getApplicationTypeHealthPolicyMap()
    nameWithType: ClusterHealthPolicy.getApplicationTypeHealthPolicyMap()
    fullName: ApplicationTypeHealthPolicyMap system.fabric.ClusterHealthPolicy.getApplicationTypeHealthPolicyMap()
    overload: system.fabric._cluster_health_policy.getApplicationTypeHealthPolicyMap*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 96
    package: system.fabric
    summary: "<p>Ruft die Zuordnung mit MaxPercentUnhealthyApplications pro Anwendung Typnamen ab.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>Wenn keine Richtlinie für eine Anwendung Typnamen angegeben wird, ist die Standardeinstellung MaxPercentUnhealthyApplications zur Auswertung verwendet. </p>\n\n<p>\r\n\r\n  <bold>Beschreibung:</bold>Anwendung Integrität Richtlinie Typzuordnung kann während integritätsevaluierung Cluster verwendet werden, um spezielle Anwendungstypen zu beschreiben. Standardmäßig werden alle Anwendungen in einem Pool versetzt und mit ausgewertet <xref href=\"system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications()\" data-throw-if-not-resolved=\"false\"></xref>. Wenn eine oder mehrere Anwendungstypen speziell sind und müssen Sitzungsschlüsseln auf eine andere Weise behandelt außerhalb des globalen Pools und anhand der Prozentsätze mit ihrer Anwendung Typnamen in der Zuordnung verknüpfte ausgewertet. Beispielsweise enthält ein Cluster Tausende von Anwendungen mit unterschiedlichen Typen und wenige Steueranwendungsinstanzen eines besonderen Anwendungstyps. Die Steueranwendungen dürfen niemals einen Fehlerstatus aufweisen. Daher können Benutzer angeben, globale MaxPercentUnhealthyApplications 20 % tolerieren einige, aber für die Anwendung vom Typ \"ControlApplicationType\" die MaxPercentUnhealthyApplications auf 0 festgelegt. Wenn einige der zahlreichen Anwendungen fehlerhaft sind, aber unter dem globalen Prozentsatz für fehlerhafte Anwendungen liegen, wird der Cluster mit einer Warnung ausgewertet. Der Integritätszustand „Warnung“ wirkt sich nicht auf ein Clusterupgrade oder auf andere Überwachungen aus, die durch den Integritätszustand „Fehler“ ausgelöst werden. Aber auch nur ein einziges Steuerelement Anwendung Fehler stellen Cluster Integritätsfehler, welche Rollback kann oder zu verhindern, dass eine clusterupgrade würde. Für die in der Zuordnung definierten Anwendungstypen werden alle Anwendungsinstanzen aus dem globalen Anwendungspool entfernt. Sie werden anhand des speziellen MaxPercentUnhealthyApplications-Werts aus der Zuordnung basierend auf der Gesamtanzahl von Anwendungen des Anwendungstyps ausgewertet. Die restlichen Anwendungen verbleiben im globalen Pool und werden mit MaxPercentUnhealthyApplications ausgewertet. Fügen Sie um Einträge für die bestimmte Anwendungstypen im clustermanifest zu definieren, innerhalb FabricSettings Einträge für Parameter mit dem Namen gebildet, indem Präfix gefolgt von \"ApplicationTypeMaxPercentUnhealthyApplications-\" durch den Typnamen für die Anwendung ein. Wenn keine Richtlinie für einen Anwendungstyp angegeben wird, ist die Standardeinstellung MaxPercentUnhealthyApplications zur Auswertung verwendet. Die Anwendung Typ integritätsauswertung erfolgt nur, wenn der Cluster EnableApplicationTypeHealthEvaluation Wert \"true\" konfiguriert ist. Die Einstellung ist standardmäßig deaktiviert. </p>"
    syntax:
      content: public ApplicationTypeHealthPolicyMap getApplicationTypeHealthPolicyMap()
      return:
        type: system.fabric._application_type_health_policy_map
        description: <p>Anwendung Integrität Richtlinie Typzuordnung mit MaxPercentUnhealthyApplications pro Name des Anwendungstyps. </p>
  - uid: system.fabric._cluster_health_policy.getConsiderWarningAsError()
    id: getConsiderWarningAsError()
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: getConsiderWarningAsError()
    nameWithType: ClusterHealthPolicy.getConsiderWarningAsError()
    fullName: boolean system.fabric.ClusterHealthPolicy.getConsiderWarningAsError()
    overload: system.fabric._cluster_health_policy.getConsiderWarningAsError*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 217
    package: system.fabric
    summary: |-
      <p>Ruft einen booleschen Wert ab, der bestimmt, Berichten bestimmen, mit dem Status "Warnung" mit den gleichen Schweregrad als Fehler behandelt werden sollen.</p>
      <p></p>
    syntax:
      content: public boolean getConsiderWarningAsError()
      return:
        type: 4fc6e284
        description: '<p>"true", wenn Sie Berichte mit Status "Warnung" als Fehler behandelt werden sollen; "false", wenn Warnungen nicht als Fehler behandelt werden sollen. </p>'
  - uid: system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications()
    id: getMaxPercentUnhealthyApplications()
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: getMaxPercentUnhealthyApplications()
    nameWithType: ClusterHealthPolicy.getMaxPercentUnhealthyApplications()
    fullName: byte system.fabric.ClusterHealthPolicy.getMaxPercentUnhealthyApplications()
    overload: system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 194
    package: system.fabric
    summary: "<p>Legt die maximal zulässige Prozentsatz fehlerhafter Anwendungen fest.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>der Prozentsatz stellt den maximal zulässigen Prozentsatz der Anwendungen, die fehlerhaft sein kann, bevor der Cluster bei Fehler betrachtet wird. Wenn der Prozentsatz wird berücksichtigt, aber mindestens eine fehlerhafte Anwendung vorhanden ist, wird die Integrität als Warnung ausgewertet. Dies wird durch Dividieren der Anzahl der fehlerhaften Anwendungen über die Gesamtzahl der Anwendungen, die im Cluster eine Anwendungstypen, die in enthalten sind alle Anwendungen außer bereitgestellt berechnet die <xref href=\"system.fabric._application_type_health_policy_map\" data-throw-if-not-resolved=\"false\"></xref>. Rundet auf die Berechnung auf kleinere Mengen von Anwendungen einen Ausfall tolerieren kann. Standardprozentsatz : null. </p>"
    syntax: &ref_1
      content: public byte getMaxPercentUnhealthyApplications()
      return:
        type: d357ea40
        description: <p>Die maximal zulässige Prozentsatz fehlerhafter Anwendungen. Zulässige Werte sind ganzzahlige Werte von 0 bis 100. </p>
  - uid: system.fabric._cluster_health_policy.getMaxPercentUnhealthyNodes()
    id: getMaxPercentUnhealthyNodes()
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: getMaxPercentUnhealthyNodes()
    nameWithType: ClusterHealthPolicy.getMaxPercentUnhealthyNodes()
    fullName: byte system.fabric.ClusterHealthPolicy.getMaxPercentUnhealthyNodes()
    overload: system.fabric._cluster_health_policy.getMaxPercentUnhealthyNodes*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 147
    package: system.fabric
    summary: "<p>Ruft die maximal zulässige Prozentsatz fehlerhafter Knoten ab.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>der Prozentsatz stellt den maximal zulässigen Prozentsatz der Knoten, die fehlerhaft sein kann, bevor der Cluster bei Fehler betrachtet wird. Wenn der Prozentsatz wird berücksichtigt, aber mindestens eine fehlerhafte Knoten vorhanden ist, wird die Integrität als Warnung ausgewertet. Dies wird durch Dividieren der Anzahl der fehlerhaften Knoten über die Gesamtanzahl der Knoten im Cluster berechnet. Die Berechnung wird aufgerundet, um einen Fehler auf einer kleinen Anzahl von Knoten zu tolerieren. Standardprozentsatz : null. </p>\n\n<p>In großen Clustern werden einige Knoten immer nach unten oder out für Reparaturen, damit dieser Prozentsatz toleriert werden, die konfiguriert werden soll. </p>"
    syntax:
      content: public byte getMaxPercentUnhealthyNodes()
      return:
        type: d357ea40
        description: <p>Die maximal zulässige Prozentsatz fehlerhafter Knoten. Zulässige Werte sind ganzzahlige Werte von 0 bis 100. </p>
  - uid: system.fabric._cluster_health_policy.setConsiderWarningAsError(boolean)
    id: setConsiderWarningAsError(boolean)
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: setConsiderWarningAsError(boolean considerWarningAsError)
    nameWithType: ClusterHealthPolicy.setConsiderWarningAsError(boolean considerWarningAsError)
    fullName: void system.fabric.ClusterHealthPolicy.setConsiderWarningAsError(boolean considerWarningAsError)
    overload: system.fabric._cluster_health_policy.setConsiderWarningAsError*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 206
    package: system.fabric
    summary: |-
      <p>Legt einen booleschen Wert ab, der bestimmt, bestimmen mit Status "Warnung" meldet sollten mit den gleichen Schweregrad als Fehler behandelt werden.</p>
      <p></p>
    syntax:
      content: public void setConsiderWarningAsError(boolean considerWarningAsError)
      parameters:
        - id: considerWarningAsError
          type: 4fc6e284
          description: '<p>"true", wenn Sie Berichte mit Status "Warnung" als Fehler behandelt werden sollen; "false", wenn Warnungen nicht als Fehler behandelt werden sollen. </p>'
  - uid: system.fabric._cluster_health_policy.setMaxPercentUnhealthyApplications(byte)
    id: setMaxPercentUnhealthyApplications(byte)
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: setMaxPercentUnhealthyApplications(byte maxPercentUnhealthyApplications)
    nameWithType: ClusterHealthPolicy.setMaxPercentUnhealthyApplications(byte maxPercentUnhealthyApplications)
    fullName: void system.fabric.ClusterHealthPolicy.setMaxPercentUnhealthyApplications(byte maxPercentUnhealthyApplications)
    overload: system.fabric._cluster_health_policy.setMaxPercentUnhealthyApplications*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 169
    package: system.fabric
    summary: "<p>Legt die maximal zulässige Prozentsatz fehlerhafter Anwendungen fest.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>der Prozentsatz stellt den maximal zulässigen Prozentsatz der Anwendungen, die fehlerhaft sein kann, bevor der Cluster bei Fehler betrachtet wird. Wenn der Prozentsatz wird berücksichtigt, aber mindestens eine fehlerhafte Anwendung vorhanden ist, wird die Integrität als Warnung ausgewertet. Dies wird durch Dividieren der Anzahl der fehlerhaften Anwendungen über die Gesamtzahl der Anwendungen, die im Cluster eine Anwendungstypen, die in enthalten sind alle Anwendungen außer bereitgestellt berechnet die <xref href=\"system.fabric._application_type_health_policy_map\" data-throw-if-not-resolved=\"false\"></xref>. Rundet auf die Berechnung auf kleinere Mengen von Anwendungen einen Ausfall tolerieren kann. Standardprozentsatz : null. </p>"
    syntax:
      content: public void setMaxPercentUnhealthyApplications(byte maxPercentUnhealthyApplications)
      parameters:
        - id: maxPercentUnhealthyApplications
          type: d357ea40
          description: <p>Die maximal zulässige Prozentsatz fehlerhafter Anwendungen. Zulässige Werte sind ganzzahlige Werte von 0 bis 100. </p>
    exceptions:
      - type: 3c87bd19
        description: <p>Der angegebene Wert lag außerhalb des Bereichs von ganzzahligen Werten von 0 bis 100. </p>
  - uid: system.fabric._cluster_health_policy.setMaxPercentUnhealthyNodes(byte)
    id: setMaxPercentUnhealthyNodes(byte)
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: setMaxPercentUnhealthyNodes(byte maxPercentUnhealthyNodes)
    nameWithType: ClusterHealthPolicy.setMaxPercentUnhealthyNodes(byte maxPercentUnhealthyNodes)
    fullName: void system.fabric.ClusterHealthPolicy.setMaxPercentUnhealthyNodes(byte maxPercentUnhealthyNodes)
    overload: system.fabric._cluster_health_policy.setMaxPercentUnhealthyNodes*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 120
    package: system.fabric
    summary: "<p>Ruft die maximal zulässige Prozentsatz fehlerhafter Knoten ab.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>der Prozentsatz stellt den maximal zulässigen Prozentsatz der Knoten, die fehlerhaft sein kann, bevor der Cluster bei Fehler betrachtet wird. Wenn der Prozentsatz wird berücksichtigt, aber mindestens eine fehlerhafte Knoten vorhanden ist, wird die Integrität als Warnung ausgewertet. Dies wird durch Dividieren der Anzahl der fehlerhaften Knoten über die Gesamtanzahl der Knoten im Cluster berechnet. Die Berechnung wird aufgerundet, um einen Fehler auf einer kleinen Anzahl von Knoten zu tolerieren. Standardprozentsatz : null. </p>\n\n<p>In großen Clustern werden einige Knoten immer nach unten oder out für Reparaturen, damit dieser Prozentsatz toleriert werden, die konfiguriert werden soll. </p>\n<p></p>"
    syntax:
      content: public void setMaxPercentUnhealthyNodes(byte maxPercentUnhealthyNodes)
      parameters:
        - id: maxPercentUnhealthyNodes
          type: d357ea40
          description: <p>Die maximal zulässige Prozentsatz fehlerhafter Knoten. Zulässige Werte sind ganzzahlige Werte von 0 bis 100. </p>
    exceptions:
      - type: 3c87bd19
        description: <p>Der angegebene Wert lag außerhalb des Bereichs von ganzzahligen Werten von 0 bis 100. </p>
  - uid: system.fabric._cluster_health_policy.toNative(PinCollection)
    id: toNative(PinCollection)
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    langs:
      - java
    name: toNative(PinCollection pinCollection)
    nameWithType: ClusterHealthPolicy.toNative(PinCollection pinCollection)
    fullName: long system.fabric.ClusterHealthPolicy.toNative(PinCollection pinCollection)
    overload: system.fabric._cluster_health_policy.toNative*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterHealthPolicy.java
      startLine: 42
    package: system.fabric
    syntax:
      content: public long toNative(PinCollection pinCollection)
      parameters:
        - id: pinCollection
          type: system.fabric._pin_collection
      return:
        type: 0364520f
references:
  - uid: system.fabric._cluster_health_policy.ClusterHealthPolicy*
    name: ClusterHealthPolicy
    nameWithType: ClusterHealthPolicy.ClusterHealthPolicy
    fullName: system.fabric.ClusterHealthPolicy.ClusterHealthPolicy
    package: system.fabric
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._cluster_health_policy.toNative*
    name: toNative
    nameWithType: ClusterHealthPolicy.toNative
    fullName: long system.fabric.ClusterHealthPolicy.toNative
    package: system.fabric
  - uid: system.fabric._cluster_health_policy.getApplicationTypeHealthPolicyMap*
    name: getApplicationTypeHealthPolicyMap
    nameWithType: ClusterHealthPolicy.getApplicationTypeHealthPolicyMap
    fullName: ApplicationTypeHealthPolicyMap system.fabric.ClusterHealthPolicy.getApplicationTypeHealthPolicyMap
    package: system.fabric
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: d357ea40
    spec.java:
      - name: byte
        fullName: byte
  - uid: system.fabric._cluster_health_policy.setMaxPercentUnhealthyNodes*
    name: setMaxPercentUnhealthyNodes
    nameWithType: ClusterHealthPolicy.setMaxPercentUnhealthyNodes
    fullName: void system.fabric.ClusterHealthPolicy.setMaxPercentUnhealthyNodes
    package: system.fabric
  - uid: system.fabric._cluster_health_policy.getMaxPercentUnhealthyNodes*
    name: getMaxPercentUnhealthyNodes
    nameWithType: ClusterHealthPolicy.getMaxPercentUnhealthyNodes
    fullName: byte system.fabric.ClusterHealthPolicy.getMaxPercentUnhealthyNodes
    package: system.fabric
  - uid: system.fabric._cluster_health_policy.setMaxPercentUnhealthyApplications*
    name: setMaxPercentUnhealthyApplications
    nameWithType: ClusterHealthPolicy.setMaxPercentUnhealthyApplications
    fullName: void system.fabric.ClusterHealthPolicy.setMaxPercentUnhealthyApplications
    package: system.fabric
  - uid: system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications*
    name: getMaxPercentUnhealthyApplications
    nameWithType: ClusterHealthPolicy.getMaxPercentUnhealthyApplications
    fullName: byte system.fabric.ClusterHealthPolicy.getMaxPercentUnhealthyApplications
    package: system.fabric
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: system.fabric._cluster_health_policy.setConsiderWarningAsError*
    name: setConsiderWarningAsError
    nameWithType: ClusterHealthPolicy.setConsiderWarningAsError
    fullName: void system.fabric.ClusterHealthPolicy.setConsiderWarningAsError
    package: system.fabric
  - uid: system.fabric._cluster_health_policy.getConsiderWarningAsError*
    name: getConsiderWarningAsError
    nameWithType: ClusterHealthPolicy.getConsiderWarningAsError
    fullName: boolean system.fabric.ClusterHealthPolicy.getConsiderWarningAsError
    package: system.fabric
  - uid: system.fabric._application_type_health_policy_map
    parent: system.fabric
    href: system.fabric._application_type_health_policy_map.yml
    name: ApplicationTypeHealthPolicyMap
    nameWithType: ApplicationTypeHealthPolicyMap
    fullName: system.fabric.ApplicationTypeHealthPolicyMap
    type: Class
    summary: "<p>Definiert eine Richtlinie-Zuordnung mit Einträge für anwendungsintegritätsrichtlinien Typ, die während der integritätsauswertung Cluster verwendet wird. </p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>Anwendung Integrität Richtlinie Typzuordnung kann während integritätsevaluierung Cluster verwendet werden, um spezielle Anwendungstypen zu beschreiben. Die Anwendungstypen, die in der Zuordnung enthaltenen werden ausgewertet, für den Prozentsatz enthalten in der Zuordnung, und nicht mit dem globalen <xref href=\"system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications()\" data-throw-if-not-resolved=\"false\"></xref>. Zu den Anwendungsbereichen von Anwendungstypen, die in der Zuordnung angegeben werden für den globalen Pool von Anwendungen nicht gezählt. </p>"
    syntax:
      content: public class ApplicationTypeHealthPolicyMap
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection
  - uid: system.fabric._cluster_health_policy.getMaxPercentUnhealthyApplications()
    parent: system.fabric._cluster_health_policy
    href: system.fabric._cluster_health_policy.yml
    name: getMaxPercentUnhealthyApplications()
    nameWithType: ClusterHealthPolicy.getMaxPercentUnhealthyApplications()
    fullName: byte system.fabric.ClusterHealthPolicy.getMaxPercentUnhealthyApplications()
    type: Method
    summary: "<p>Legt die maximal zulässige Prozentsatz fehlerhafter Anwendungen fest.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>der Prozentsatz stellt den maximal zulässigen Prozentsatz der Anwendungen, die fehlerhaft sein kann, bevor der Cluster bei Fehler betrachtet wird. Wenn der Prozentsatz wird berücksichtigt, aber mindestens eine fehlerhafte Anwendung vorhanden ist, wird die Integrität als Warnung ausgewertet. Dies wird durch Dividieren der Anzahl der fehlerhaften Anwendungen über die Gesamtzahl der Anwendungen, die im Cluster eine Anwendungstypen, die in enthalten sind alle Anwendungen außer bereitgestellt berechnet die <xref href=\"system.fabric._application_type_health_policy_map\" data-throw-if-not-resolved=\"false\"></xref>. Rundet auf die Berechnung auf kleinere Mengen von Anwendungen einen Ausfall tolerieren kann. Standardprozentsatz : null. </p>"
    syntax: *ref_1