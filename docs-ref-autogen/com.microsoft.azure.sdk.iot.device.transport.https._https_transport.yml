### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    id: _https_transport
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    children:
      - 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage(Message,IotHubEventCallback,Object)'
      - 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage(Message,IotHubResponseCallback,Object)'
      - com.microsoft.azure.sdk.iot.device.transport.https._https_transport.close()
      - com.microsoft.azure.sdk.iot.device.transport.https._https_transport.handleMessage()
      - com.microsoft.azure.sdk.iot.device.transport.https._https_transport.HttpsTransport(DeviceClientConfig)
      - com.microsoft.azure.sdk.iot.device.transport.https._https_transport.invokeCallbacks()
      - com.microsoft.azure.sdk.iot.device.transport.https._https_transport.isEmpty()
      - com.microsoft.azure.sdk.iot.device.transport.https._https_transport.multiplexOpen(List<DeviceClient>)
      - com.microsoft.azure.sdk.iot.device.transport.https._https_transport.open()
      - 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
      - com.microsoft.azure.sdk.iot.device.transport.https._https_transport.sendMessages()
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: HttpsTransport
    nameWithType: HttpsTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport
    type: Class
    source:
      remote: &ref_0
        path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 29
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p><span data-ttu-id="83fea-101">Eine HTTPS-Übertragung.</span><span class="sxs-lookup"><span data-stu-id="83fea-101">An HTTPS transport.</span></span> <span data-ttu-id="83fea-102">Enthält Funktionen zum Hinzufügen von Nachrichten und Senden von Nachrichten im Batchmodus für einen IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="83fea-102">Contains functionality for adding messages and sending batched messages to an IoT Hub.</span></span> <span data-ttu-id="83fea-103">Puffer nicht gesendete Nachrichten, bis sie durch einen IoT Hub empfangen werden.</span><span class="sxs-lookup"><span data-stu-id="83fea-103">Buffers unsent messages until they are received by an IoT Hub.</span></span> <span data-ttu-id="83fea-104">Ein Transport bei der Erstellung gebunden ist, den folgenden Parametern: IoT Hub-Namen, Geräte-ID, Geräteschlüssel und Nachricht gültige Sekunden.</span><span class="sxs-lookup"><span data-stu-id="83fea-104">A transport is bound at construction to the following parameters: IoT Hub name, device ID, device key, and message valid seconds.</span></span> </p>
      <p><span data-ttu-id="83fea-105">Der Transport kann auch einen IoT Hub für Nachrichten abrufen und einen benutzerdefinierte Meldung Rückruf aufzurufen, wenn eine Nachricht und Rückruf gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-105">The transport can also poll an IoT Hub for messages and invoke a user-defined message callback if a message and callback is found.</span></span> </p>
    syntax:
      content: public class HttpsTransport implements IotHubTransport
    inheritance:
      - java.lang.Object
      - Closeable
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage(Message,IotHubEventCallback,Object)'
    id: 'addMessage(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: 'addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    nameWithType: 'HttpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 146
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p><span data-ttu-id="83fea-106">Fügt eine Nachricht an die Warteschlange Transport.</span><span class="sxs-lookup"><span data-stu-id="83fea-106">Adds a message to the transport queue.</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="83fea-107">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="83fea-107">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: '<p><span data-ttu-id="83fea-108">der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-108">the callback to be invoked when a response for the message is received.</span></span> </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p><span data-ttu-id="83fea-109">der Kontext übergeben werden, wenn der Rückruf aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-109">the context to be passed in when the callback is invoked.</span></span></p>'
    overridden: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubEventCallback,Object)'
    exceptions:
      - type: 12fe80de
        description: <p><span data-ttu-id="83fea-110">Wenn der Transport nicht geöffnet wurde oder bereits geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-110">if the transport has not been opened or is already closed.</span></span> </p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage(Message,IotHubResponseCallback,Object)'
    id: 'addMessage(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: 'addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'HttpsTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 172
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p><span data-ttu-id="83fea-111">Fügt eine Nachricht an die Warteschlange Transport.</span><span class="sxs-lookup"><span data-stu-id="83fea-111">Adds a message to the transport queue.</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="83fea-112">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="83fea-112">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: '<p><span data-ttu-id="83fea-113">der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-113">the callback to be invoked when a response for the message is received.</span></span> </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p><span data-ttu-id="83fea-114">der Kontext übergeben werden, wenn der Rückruf aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-114">the context to be passed in when the callback is invoked.</span></span></p>'
    overridden: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubResponseCallback,Object)'
    exceptions:
      - type: 12fe80de
        description: <p><span data-ttu-id="83fea-115">Wenn der Transport nicht geöffnet wurde oder bereits geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-115">if the transport has not been opened or is already closed.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.close()
    id: close()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: close()
    nameWithType: HttpsTransport.close()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.close()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.close*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 107
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: "<p><span data-ttu-id=\"83fea-116\">Schließt alle Ressourcen, die zur Kommunikation mit IoT Hub verwendet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"83fea-116\">Closes all resources used to communicate with an IoT Hub.</span></span> <span data-ttu-id=\"83fea-117\">Einmal<code>close() \r\n\r\n    </code> wird aufgerufen, der Transport ist nicht mehr verwendbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"83fea-117\">Once<code>close() \r\n\r\n    </code> is called, the transport is no longer usable.</span></span> <span data-ttu-id=\"83fea-118\">Wenn der Transport bereits geschlossen ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class=\"sxs-lookup\"><span data-stu-id=\"83fea-118\">If the transport is already closed, the function shall do nothing.</span></span></p>\n\n<p></p>"
    syntax:
      content: public void close()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close()
    exceptions:
      - type: cbf33bbe
        description: '<p><span data-ttu-id="83fea-119">Wenn ein Fehler auftritt, schließen Sie den Transport.</span><span class="sxs-lookup"><span data-stu-id="83fea-119">if an error occurs in closing the transport.</span></span> </p>'
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.handleMessage()
    id: handleMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: handleMessage()
    nameWithType: HttpsTransport.handleMessage()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.handleMessage()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.handleMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 299
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p><span data-ttu-id="83fea-120">Ruft die Nachrichtenrückruf auf, wenn eine Nachricht gefunden wird, und antwortet mit dem IoT Hub auf wie die verarbeitete Nachricht durch den IoT Hub behandelt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="83fea-120">Invokes the message callback if a message is found and responds to the IoT Hub on how the processed message should be handled by the IoT Hub.</span></span> </p>
      <p><span data-ttu-id="83fea-121">Wenn keine Nachrichtenrückruf festgelegt ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="83fea-121">If no message callback is set, the function will do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void handleMessage()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage()
    exceptions:
      - type: cbf33bbe
        description: '<p><span data-ttu-id="83fea-122">Wenn der Server konnte nicht erreicht werden oder wenn die Antwort sendet IoT Hub meldungsergebnis keinen Statuscode <xref uid="" data-throw-if-not-resolved="false">IotHubStatusCode #OK_EMPTY</xref>.</span><span class="sxs-lookup"><span data-stu-id="83fea-122">if the server could not be reached, or if the response from sending the IoT Hub message result does not have status code <xref uid="" data-throw-if-not-resolved="false">IotHubStatusCode#OK_EMPTY</xref>.</span></span> </p>'
      - type: 12fe80de
        description: <p><span data-ttu-id="83fea-123">Wenn der Transport nicht geöffnet wurde oder bereits geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-123">if the transport has not been opened or is already closed.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.HttpsTransport(DeviceClientConfig)
    id: HttpsTransport(DeviceClientConfig)
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: HttpsTransport(DeviceClientConfig config)
    nameWithType: HttpsTransport.HttpsTransport(DeviceClientConfig config)
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.HttpsTransport(DeviceClientConfig config)
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.HttpsTransport*
    type: Constructor
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 61
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p><span data-ttu-id="83fea-124">Erstellt eine Instanz aus der angegebenen <xref uid="com.microsoft.azure.sdk.iot.device._device_client_config" data-throw-if-not-resolved="false">DeviceClientConfig</xref> Objekt.</span><span class="sxs-lookup"><span data-stu-id="83fea-124">Constructs an instance from the given <xref uid="com.microsoft.azure.sdk.iot.device._device_client_config" data-throw-if-not-resolved="false">DeviceClientConfig</xref> object.</span></span></p>
      <p></p>
    syntax:
      content: public HttpsTransport(DeviceClientConfig config)
      parameters:
        - id: config
          type: com.microsoft.azure.sdk.iot.device._device_client_config
          description: <p><span data-ttu-id="83fea-125">Konfigurationsparameter für eine Verbindung mit IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="83fea-125">configuration parameters for an IoT Hub connection.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.invokeCallbacks()
    id: invokeCallbacks()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: invokeCallbacks()
    nameWithType: HttpsTransport.invokeCallbacks()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.invokeCallbacks()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.invokeCallbacks*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 253
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p><span data-ttu-id="83fea-126">Ruft die Rückrufe für alle abgeschlossenen Anforderungen.</span><span class="sxs-lookup"><span data-stu-id="83fea-126">Invokes the callbacks for all completed requests.</span></span></p>
      <p></p>
    syntax:
      content: public void invokeCallbacks()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks()
    exceptions:
      - type: 12fe80de
        description: <p><span data-ttu-id="83fea-127">Wenn der Transport nicht geöffnet wurde oder bereits geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-127">if the transport has not been opened or is already closed.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.isEmpty()
    id: isEmpty()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: isEmpty()
    nameWithType: HttpsTransport.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.isEmpty()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.isEmpty*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 357
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p><span data-ttu-id="83fea-128">Zurück, andernfalls True, wenn der Transport keine weiteren Nachrichten mehr verarbeiten, und "false".</span><span class="sxs-lookup"><span data-stu-id="83fea-128">Returns true if the transport has no more messages to handle, and false otherwise.</span></span></p>
      <p></p>
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: '<p><span data-ttu-id="83fea-129">"true", wenn der Transport keine weiteren Nachrichten zur Handle und "false", andernfalls hat.</span><span class="sxs-lookup"><span data-stu-id="83fea-129">true if the transport has no more messages to handle, and false otherwise.</span></span> </p>'
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty()
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.multiplexOpen(List<DeviceClient>)
    id: multiplexOpen(List<DeviceClient>)
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: multiplexOpen(List<DeviceClient> deviceClientList)
    nameWithType: HttpsTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.multiplexOpen*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 95
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p><span data-ttu-id="83fea-130">Stellt einen Kanal-Usingmultiplexing Kommunikation mit IoT Hub her.</span><span class="sxs-lookup"><span data-stu-id="83fea-130">Establishes a communication channel usingmultiplexing with an IoT Hub.</span></span> <span data-ttu-id="83fea-131">Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="83fea-131">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void multiplexOpen(List<DeviceClient> deviceClientList)
      parameters:
        - id: deviceClientList
          type: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
          description: <p><span data-ttu-id="83fea-132">die Liste der Clients verwenden denselben Transport.</span><span class="sxs-lookup"><span data-stu-id="83fea-132">the list of clients use the same transport.</span></span> </p>
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.multiplexOpen(List<DeviceClient>)
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="83fea-133">Wenn ein Kommunikationskanal hergestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="83fea-133">if a communication channel cannot be established.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.open()
    id: open()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: open()
    nameWithType: HttpsTransport.open()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.open()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.open*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 80
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p><span data-ttu-id="83fea-134">Stellt einen Kommunikationskanal mit IoT Hub her.</span><span class="sxs-lookup"><span data-stu-id="83fea-134">Establishes a communication channel with an IoT Hub.</span></span> <span data-ttu-id="83fea-135">Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="83fea-135">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void open()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open()
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="83fea-136">Wenn ein Kommunikationskanal hergestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="83fea-136">if a communication channel cannot be established.</span></span> </p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    id: 'registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'HttpsTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.registerConnectionStateCallback*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 370
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p><span data-ttu-id="83fea-137">Registriert einen Rückruf ausgeführt werden, sobald die Https-Verbindung verloren geht oder hergestellt wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-137">Registers a callback to be executed whenever the https connection is lost or established.</span></span></p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p><span data-ttu-id="83fea-138">der Rückruf aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="83fea-138">the callback to be called.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: '<p><span data-ttu-id="83fea-139">Ein Kontext, der an den Rückruf übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="83fea-139">a context to be passed to the callback.</span></span> <span data-ttu-id="83fea-140">Kann null sein</span><span class="sxs-lookup"><span data-stu-id="83fea-140">Can be null</span></span> </p>'
    overridden: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    exceptions:
      - type: 3c87bd19
        description: <p><span data-ttu-id="83fea-141">Wenn der bereitgestellte Rückruf null ist.</span><span class="sxs-lookup"><span data-stu-id="83fea-141">if the provided callback is null</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.sendMessages()
    id: sendMessages()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_transport
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.yml
    langs:
      - java
    name: sendMessages()
    nameWithType: HttpsTransport.sendMessages()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.sendMessages()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.sendMessages*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsTransport.java
      startLine: 193
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p><span data-ttu-id="83fea-142">Sendet alle Nachrichten in der Warteschlange Transport als Batchanforderung.</span><span class="sxs-lookup"><span data-stu-id="83fea-142">Sends all messages on the transport queue as a batched request.</span></span></p>
      <p></p>
    syntax:
      content: public void sendMessages()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages()
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="83fea-143">Wenn der Server nicht erreicht werden konnte.</span><span class="sxs-lookup"><span data-stu-id="83fea-143">if the server could not be reached.</span></span> </p>
      - type: 12fe80de
        description: <p><span data-ttu-id="83fea-144">Wenn der Transport nicht geöffnet wurde oder bereits geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-144">if the transport has not been opened or is already closed.</span></span> </p>
references:
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.HttpsTransport*
    name: HttpsTransport
    nameWithType: HttpsTransport.HttpsTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.HttpsTransport
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.open*
    name: open
    nameWithType: HttpsTransport.open
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.open
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: com.microsoft.azure.sdk.iot.device._device_client
        name: DeviceClient
        fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
        href: com.microsoft.azure.sdk.iot.device._device_client.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.multiplexOpen*
    name: multiplexOpen
    nameWithType: HttpsTransport.multiplexOpen
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.multiplexOpen
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.close*
    name: close
    nameWithType: HttpsTransport.close
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.close
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: 12fe80de
    spec.java:
      - name: IllegalStateException
        fullName: IllegalStateException
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.addMessage*
    name: addMessage
    nameWithType: HttpsTransport.addMessage
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.addMessage
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.sendMessages*
    name: sendMessages
    nameWithType: HttpsTransport.sendMessages
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.sendMessages
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.invokeCallbacks*
    name: invokeCallbacks
    nameWithType: HttpsTransport.invokeCallbacks
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.invokeCallbacks
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.handleMessage*
    name: handleMessage
    nameWithType: HttpsTransport.handleMessage
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.handleMessage
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.isEmpty*
    name: isEmpty
    nameWithType: HttpsTransport.isEmpty
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.isEmpty
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport.registerConnectionStateCallback*
    name: registerConnectionStateCallback
    nameWithType: HttpsTransport.registerConnectionStateCallback
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.registerConnectionStateCallback
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: IotHubTransport
    nameWithType: IotHubTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
    type: Interface
    summary: <p><span data-ttu-id="83fea-145">Eine Schnittstelle für einen IoT Hub-Transport.</span><span class="sxs-lookup"><span data-stu-id="83fea-145">An interface for an IoT Hub transport.</span></span> </p>
    syntax:
      content: public interface IotHubTransport
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_transport._https_transport_state
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_transport._https_transport_state.yml
    name: HttpsTransport.HttpsTransportState
    nameWithType: HttpsTransport.HttpsTransportState
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsTransport.HttpsTransportState
    type: Enum
    summary: <p><span data-ttu-id="83fea-146">Der Status der HTTPS-Transport.</span><span class="sxs-lookup"><span data-stu-id="83fea-146">The state of the HTTPS transport.</span></span> </p>
    syntax:
      content: protected enum HttpsTransportState
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback.yml
    name: IotHubConnectionStateCallback
    nameWithType: IotHubConnectionStateCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
    type: Interface
    summary: |-
      <p><span data-ttu-id="83fea-147">Eine Schnittstelle für ein IoT Hub-Verbindung-Status-Rückruf.</span><span class="sxs-lookup"><span data-stu-id="83fea-147">An interface for an IoT Hub connection state callback.</span></span></p>
      <p><span data-ttu-id="83fea-148">Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="" data-throw-if-not-resolved="false">IotHubConnectionStateCallback #Execute(IotHubConnectionState, Object)</xref> übergibt den Verbindungsstatus (nach unten, Erfolg usw.).</span><span class="sxs-lookup"><span data-stu-id="83fea-148">Developers are expected to create an implementation of this interface, and the transport will call <xref uid="" data-throw-if-not-resolved="false">IotHubConnectionStateCallback#execute(IotHubConnectionState, Object)</xref> passing in the connection status (down, success, etc.).</span></span> </p>
    syntax:
      content: public interface IotHubConnectionStateCallback
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_iot_hub_connection.yml
    name: HttpsIotHubConnection
    nameWithType: HttpsIotHubConnection
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsIotHubConnection
    type: Class
    summary: <p><span data-ttu-id="83fea-149">Eine HTTPS-Verbindung zwischen einem Gerät und IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="83fea-149">An HTTPS connection between a device and an IoT Hub.</span></span> <span data-ttu-id="83fea-150">Enthält Funktionen für die Verbindung synchron mit den anderen IoT Hub-Ressourcen-URIs.</span><span class="sxs-lookup"><span data-stu-id="83fea-150">Contains functionality for synchronously connecting to the different IoT Hub resource URIs.</span></span> </p>
    syntax:
      content: public class HttpsIotHubConnection
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.yml
    name: IotHubOutboundPacket
    nameWithType: IotHubOutboundPacket
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket
    type: Class
    summary: <p><span data-ttu-id="83fea-151">Ein Paket mit den Daten für einen IoT Hub-Transport zum Senden einer Nachricht erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="83fea-151">A packet containing the data needed for an IoT Hub transport to send a message.</span></span> </p>
    syntax:
      content: public class IotHubOutboundPacket
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_callback_packet
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_callback_packet.yml
    name: IotHubCallbackPacket
    nameWithType: IotHubCallbackPacket
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubCallbackPacket
    type: Class
    summary: '<p><span data-ttu-id="83fea-152">Ein Paket mit der erforderlichen Daten für einen IoT Hub-Transport, einen Rückruf aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="83fea-152">A packet containing the data needed for an IoT Hub transport to invoke a callback.</span></span> </p>'
    syntax:
      content: public class IotHubCallbackPacket
  - uid: com.microsoft.azure.sdk.iot.device._device_client_config
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
    name: DeviceClientConfig
    nameWithType: DeviceClientConfig
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
    type: Class
    summary: <p><span data-ttu-id="83fea-153">Konfigurationseinstellungen für einen IoT Hub-Client.</span><span class="sxs-lookup"><span data-stu-id="83fea-153">Configuration settings for an IoT Hub client.</span></span> <span data-ttu-id="83fea-154">Überprüft alle benutzerdefinierten Einstellungen an.</span><span class="sxs-lookup"><span data-stu-id="83fea-154">Validates all user-defined settings.</span></span> </p>
    syntax:
      content: public class DeviceClientConfig
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: open()
    nameWithType: IotHubTransport.open()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open()
    type: Method
    summary: |-
      <p><span data-ttu-id="83fea-155">Stellt einen Kommunikationskanal mit IoT Hub her.</span><span class="sxs-lookup"><span data-stu-id="83fea-155">Establishes a communication channel with an IoT Hub.</span></span> <span data-ttu-id="83fea-156">Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="83fea-156">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void open()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.multiplexOpen(List<DeviceClient>)
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: multiplexOpen(List<DeviceClient> deviceClientList)
    nameWithType: IotHubTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    type: Method
    summary: |-
      <p><span data-ttu-id="83fea-157">Stellt einen Kanal-Usingmultiplexing Kommunikation mit IoT Hub her.</span><span class="sxs-lookup"><span data-stu-id="83fea-157">Establishes a communication channel usingmultiplexing with an IoT Hub.</span></span> <span data-ttu-id="83fea-158">Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="83fea-158">If a channel is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void multiplexOpen(List<DeviceClient> deviceClientList)
      parameters:
        - id: deviceClientList
          type: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
          description: <p><span data-ttu-id="83fea-159">die Liste der Clients verwenden denselben Transport.</span><span class="sxs-lookup"><span data-stu-id="83fea-159">the list of clients use the same transport.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_client
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._device_client.yml
    name: DeviceClient
    nameWithType: DeviceClient
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
    type: Class
    summary: |-
      <p><span data-ttu-id="83fea-160">Die öffentliche API.</span><span class="sxs-lookup"><span data-stu-id="83fea-160">The public-facing API.</span></span> <span data-ttu-id="83fea-161">Können ein einzelnes logisches oder physisches Gerät für die Verbindung an einen IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="83fea-161">Allows a single logical or physical device to connect to an IoT Hub.</span></span> <span data-ttu-id="83fea-162">Der IoT Hub-Client unterstützt sendet keine Ereignisse an und Empfangen von Nachrichten von einem IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="83fea-162">The IoT Hub client supports sending events to and receiving messages from an IoT Hub.</span></span> </p>
      <p><span data-ttu-id="83fea-163">Zur Unterstützung dieser Workflows wird die Clientbibliothek Geben Sie die folgenden Abstraktionen: einer Nachricht mit seiner Nutzlast und die zugeordneten Eigenschaften aus. und einen Client, der Nachrichten sendet und empfängt.</span><span class="sxs-lookup"><span data-stu-id="83fea-163">To support these workflows, the client library will provide the following abstractions: a message, with its payload and associated properties; and a client, which sends and receives messages.</span></span> </p>
      <p><span data-ttu-id="83fea-164">Der Client puffert Nachrichten, während das Netzwerk ausgefallen ist und erneut gesendet, wenn das Netzwerk wieder online geschaltet wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-164">The client buffers messages while the network is down, and re-sends them when the network comes back online.</span></span> <span data-ttu-id="83fea-165">Nachrichten zur Verbesserung der Kommunikationseffizienz (nur für HTTPS) als auch batches.</span><span class="sxs-lookup"><span data-stu-id="83fea-165">It also batches messages to improve communication efficiency (HTTPS only).</span></span> </p>
      <p><span data-ttu-id="83fea-166">Der Client unterstützt HTTPS 1.1 und 1.0 AMQPS Transporte.</span><span class="sxs-lookup"><span data-stu-id="83fea-166">The client supports HTTPS 1.1 and AMQPS 1.0 transports.</span></span> </p>
    syntax:
      content: public class DeviceClient
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: close()
    nameWithType: IotHubTransport.close()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close()
    type: Method
    summary: "<p><span data-ttu-id=\"83fea-167\">Schließt alle Ressourcen, die zur Kommunikation mit IoT Hub verwendet.</span><span class=\"sxs-lookup\"><span data-stu-id=\"83fea-167\">Closes all resources used to communicate with an IoT Hub.</span></span> <span data-ttu-id=\"83fea-168\">Einmal<code>close() \r\n\r\n    </code> wird aufgerufen, der Transport ist nicht mehr verwendbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"83fea-168\">Once<code>close() \r\n\r\n    </code> is called, the transport is no longer usable.</span></span> <span data-ttu-id=\"83fea-169\">Wenn der Transport bereits geschlossen ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class=\"sxs-lookup\"><span data-stu-id=\"83fea-169\">If the transport is already closed, the function shall do nothing.</span></span></p>\n\n<p></p>"
    syntax:
      content: public void close()
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: 'addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="83fea-170">Fügt eine Nachricht an die Warteschlange Transport.</span><span class="sxs-lookup"><span data-stu-id="83fea-170">Adds a message to the transport queue.</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="83fea-171">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="83fea-171">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: '<p><span data-ttu-id="83fea-172">der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-172">the callback to be invoked when a response for the message is received.</span></span> </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p><span data-ttu-id="83fea-173">der Kontext übergeben werden, wenn der Rückruf aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-173">the context to be passed in when the callback is invoked.</span></span> </p>'
  - uid: com.microsoft.azure.sdk.iot.device._message
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._message.yml
    name: Message
    nameWithType: Message
    fullName: com.microsoft.azure.sdk.iot.device.Message
    type: Class
    syntax:
      content: public class Message
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.yml
    name: IotHubEventCallback
    nameWithType: IotHubEventCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
    type: Interface
    summary: |-
      <p><span data-ttu-id="83fea-174">Eine Schnittstelle für einen Ereignisrückruf IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="83fea-174">An interface for an IoT Hub event callback.</span></span></p>
      <p><span data-ttu-id="83fea-175">Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback #Execute(IotHubStatusCode, Object)</xref> beim Empfang einer Antwort von einem IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="83fea-175">Developers are expected to create an implementation of this interface, and the transport will call <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback#execute(IotHubStatusCode, Object)</xref> upon receiving a response from an IoT Hub.</span></span> </p>
    syntax:
      content: public interface IotHubEventCallback
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: 'addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="83fea-176">Fügt eine Nachricht an die Warteschlange Transport.</span><span class="sxs-lookup"><span data-stu-id="83fea-176">Adds a message to the transport queue.</span></span></p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="83fea-177">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="83fea-177">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: '<p><span data-ttu-id="83fea-178">der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-178">the callback to be invoked when a response for the message is received.</span></span> </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p><span data-ttu-id="83fea-179">der Kontext übergeben werden, wenn der Rückruf aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-179">the context to be passed in when the callback is invoked.</span></span> </p>'
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.yml
    name: IotHubResponseCallback
    nameWithType: IotHubResponseCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubResponseCallback
    type: Interface
    summary: |-
      <p><span data-ttu-id="83fea-180">Eine Schnittstelle für ein IoT Hub-Antwort-Rückruf.</span><span class="sxs-lookup"><span data-stu-id="83fea-180">An interface for an IoT Hub response callback.</span></span></p>
      <p><span data-ttu-id="83fea-181">Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.execute(ResponseMessage,Object)" data-throw-if-not-resolved="false">IotHubResponseCallback #Execute(ResponseMessage, Object)</xref> beim Empfang einer Antwort von einem IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="83fea-181">Developers are expected to create an implementation of this interface, and the transport will call <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.execute(ResponseMessage,Object)" data-throw-if-not-resolved="false">IotHubResponseCallback#execute(ResponseMessage, Object)</xref> upon receiving a response from an IoT Hub.</span></span> </p>
    syntax:
      content: public interface IotHubResponseCallback
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: sendMessages()
    nameWithType: IotHubTransport.sendMessages()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages()
    type: Method
    summary: |-
      <p><span data-ttu-id="83fea-182">Sendet alle Nachrichten in der Warteschlange Transport.</span><span class="sxs-lookup"><span data-stu-id="83fea-182">Sends all messages on the transport queue.</span></span> <span data-ttu-id="83fea-183">Wenn eine vorherige Sendeversuch Fehler ist aufgetreten, versucht die Funktion, die Nachrichten in der vorherigen Versuch erneut zu senden.</span><span class="sxs-lookup"><span data-stu-id="83fea-183">If a previous send attempt had failed, the function will attempt to resend the messages in the previous attempt.</span></span></p>
      <p></p>
    syntax:
      content: public void sendMessages()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: invokeCallbacks()
    nameWithType: IotHubTransport.invokeCallbacks()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks()
    type: Method
    summary: <p><span data-ttu-id="83fea-184">Ruft die Rückrufe für alle abgeschlossenen Anforderungen.</span><span class="sxs-lookup"><span data-stu-id="83fea-184">Invokes the callbacks for all completed requests.</span></span> </p>
    syntax:
      content: public void invokeCallbacks()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: handleMessage()
    nameWithType: IotHubTransport.handleMessage()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage()
    type: Method
    summary: |-
      <p><span data-ttu-id="83fea-185">Ruft die Nachrichtenrückruf auf, wenn eine Nachricht gefunden wird, und antwortet mit dem IoT Hub auf wie die verarbeitete Nachricht durch den IoT Hub behandelt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="83fea-185">Invokes the message callback if a message is found and responds to the IoT Hub on how the processed message should be handled by the IoT Hub.</span></span> </p>
      <p><span data-ttu-id="83fea-186">Wenn keine Nachrichtenrückruf festgelegt ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="83fea-186">If no message callback is set, the function will do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void handleMessage()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: isEmpty()
    nameWithType: IotHubTransport.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty()
    type: Method
    summary: "<p><span data-ttu-id=\"83fea-187\">Gibt<code>true \r\n\r\n    </code> verfügt der Transport keine weiteren Nachrichten mehr verarbeiten, und<code>false \r\n\r\n    </code> andernfalls.</span><span class=\"sxs-lookup\"><span data-stu-id=\"83fea-187\">Returns<code>true \r\n\r\n    </code> if the transport has no more messages to handle, and<code>false \r\n\r\n    </code> otherwise.</span></span></p>\n\n<p></p>"
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: "<p><span data-ttu-id=\"83fea-188\">\r\n\r\n  <code>true \r\n\r\n    </code>Wenn der Transport keine weiteren Nachrichten mehr verarbeiten, hat und<code>false \r\n\r\n    </code> andernfalls.</span><span class=\"sxs-lookup\"><span data-stu-id=\"83fea-188\">\r\n\r\n  <code>true \r\n\r\n    </code> if the transport has no more messages to handle, and<code>false \r\n\r\n    </code> otherwise.</span></span> </p>"
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p><span data-ttu-id="83fea-189">Registriert einen Rückruf ausgeführt werden, wenn die Verbindung mit dem IoT Hub verloren geht oder hergestellt wird.</span><span class="sxs-lookup"><span data-stu-id="83fea-189">Registers a callback to be executed whenever the connection to the IoT Hub is lost or established.</span></span></p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p><span data-ttu-id="83fea-190">der Rückruf aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="83fea-190">the callback to be called.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: "<p><span data-ttu-id=\"83fea-191\">Ein Kontext, der an den Rückruf übergeben werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"83fea-191\">a context to be passed to the callback.</span></span> <span data-ttu-id=\"83fea-192\">Kann <code>null \r\n\r\n    </code> Wenn kein Rückruf bereitgestellt wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"83fea-192\">Can be <code>null \r\n\r\n    </code> if no callback is provided.</span></span> </p>"
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state.yml
    name: IotHubConnectionState
    nameWithType: IotHubConnectionState
    fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionState
    type: Enum
    summary: <p><span data-ttu-id="83fea-193">Der Statuswert der IoT Hub-Verbindung.</span><span class="sxs-lookup"><span data-stu-id="83fea-193">The IoT Hub connection state value.</span></span> </p>
    syntax:
      content: public enum IotHubConnectionState
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_message
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_message.yml
    name: HttpsMessage
    nameWithType: HttpsMessage
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMessage
    type: Interface
    summary: '<p><span data-ttu-id="83fea-194">Eine HTTPS-Nachricht.</span><span class="sxs-lookup"><span data-stu-id="83fea-194">An HTTPS message.</span></span> <span data-ttu-id="83fea-195">Eine HTTPS-Nachricht aus einer einfachen IoT Hub-Nachricht durch die Eigenschaftennamen zeichnet sich mit "- app - Iothub" dem Präfix und nach der expliziten Spezifikation des Content-Type.</span><span class="sxs-lookup"><span data-stu-id="83fea-195">An HTTPS message is distinguished from a plain IoT Hub message by its property names, which are prefixed with ''iothub-app-''; and by the explicit specification of a content-type.</span></span> </p>'
    syntax:
      content: public interface HttpsMessage
  - uid: com.microsoft.azure.sdk.iot.device.exceptions._iot_hub_size_exceeded_exception
    parent: com.microsoft.azure.sdk.iot.device.exceptions
    href: com.microsoft.azure.sdk.iot.device.exceptions._iot_hub_size_exceeded_exception.yml
    name: IotHubSizeExceededException
    nameWithType: IotHubSizeExceededException
    fullName: com.microsoft.azure.sdk.iot.device.exceptions.IotHubSizeExceededException
    type: Class
    summary: |-
      <p><span data-ttu-id="83fea-196">Erstellen Sie Ausnahmen für IotHub Größe überschritten</span><span class="sxs-lookup"><span data-stu-id="83fea-196">Create IotHub size exceeded exceptions</span></span></p>
      <p><span data-ttu-id="83fea-197">Diese Ausnahme wird Throw sein, wenn eine Funktion zum Hinzufügen von Inhalt in einem Puffer versucht oder Nachricht und der endgültigen Datenbankgröße die maximale Größe von dem IotHub akzeptabel überschreitet.</span><span class="sxs-lookup"><span data-stu-id="83fea-197">This exception will be throw when a function tries to add content in a buffer or message and the final size will exceed the maximum size acceptable by the IotHub.</span></span> </p>
    syntax:
      content: public class IotHubSizeExceededException
  - uid: com.microsoft.azure.sdk.iot.device._response_message
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._response_message.yml
    name: ResponseMessage
    nameWithType: ResponseMessage
    fullName: com.microsoft.azure.sdk.iot.device.ResponseMessage
    type: Class
    summary: <p><span data-ttu-id="83fea-198">Erweitern <xref uid="com.microsoft.azure.sdk.iot.device._message" data-throw-if-not-resolved="false">Nachricht</xref> zur Unterstützung von Statusantwort</span><span class="sxs-lookup"><span data-stu-id="83fea-198">Extend <xref uid="com.microsoft.azure.sdk.iot.device._message" data-throw-if-not-resolved="false">Message</xref> to support status response</span></span> </p>
    syntax:
      content: public class ResponseMessage