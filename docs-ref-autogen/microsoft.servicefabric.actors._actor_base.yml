### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._actor_base
    id: _actor_base
    parent: microsoft.servicefabric.actors
    children:
      - microsoft.servicefabric.actors._actor_base.getActorService()
      - microsoft.servicefabric.actors._actor_base.getApplicationName()
      - microsoft.servicefabric.actors._actor_base.getEvent(Class<T>)
      - microsoft.servicefabric.actors._actor_base.getId()
      - microsoft.servicefabric.actors._actor_base.getReminder(String)
      - microsoft.servicefabric.actors._actor_base.getServiceUri()
      - microsoft.servicefabric.actors._actor_base.onActivateAsync()
      - microsoft.servicefabric.actors._actor_base.onDeactivateAsync()
      - microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)
      - microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)
      - 'microsoft.servicefabric.actors._actor_base.registerReminderAsync(String,byte [],Duration,Duration)'
      - 'microsoft.servicefabric.actors._actor_base.registerTimer(Function<Object, CompletableFuture<?>>,Object,Duration,Duration)'
      - 'microsoft.servicefabric.actors._actor_base.registerTimer(Function<Object, CompletableFuture<?>>,String,Object,Duration,Duration)'
      - microsoft.servicefabric.actors._actor_base.unregisterReminderAsync(ActorReminder)
      - microsoft.servicefabric.actors._actor_base.unregisterTimer(ActorTimer)
    href: microsoft.servicefabric.actors._actor_base.yml
    langs:
      - java
    name: ActorBase
    nameWithType: ActorBase
    fullName: microsoft.servicefabric.actors.ActorBase
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
      startLine: 24
    package: microsoft.servicefabric.actors
    summary: "<p>Stellt die Basisklasse für Akteure. <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Akteur</xref></p>\n<p>\r\n\r\n  <b>Hinweise:</b>Dies ist ein Basistyp für Akteur, bietet die Funktionalität, die durch Ableiten von Akteur implementiert Akteure gemeinsam ist <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Akteur</xref> der Zustand in den Garbage Collections der Akteur und Fail-Failover beibehalten wird. Speichern und Abrufen des Zustands wird von der Akteur-State-Anbieter bereitgestellt <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>. </p>"
    syntax:
      content: public class ActorBase
    inheritance:
      - java.lang.Object
  - uid: microsoft.servicefabric.actors._actor_base.getActorService()
    id: getActorService()
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    langs:
      - java
    name: getActorService()
    nameWithType: ActorBase.getActorService()
    fullName: FabricActorService microsoft.servicefabric.actors.ActorBase.getActorService()
    overload: microsoft.servicefabric.actors._actor_base.getActorService*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
      startLine: 96
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft die statusbehafteten dienstreplikats, die den Akteur gehostet wird.</p>
      <p></p>
    syntax:
      content: public FabricActorService getActorService()
      return:
        type: microsoft.servicefabric.actors._fabric_actor_service
        description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._fabric_actor_service\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.actors.FabricActorService</xref> , die den Akteur hosting zustandsbehafteten dienstreplikats darstellt. Akteur. </p>"
  - uid: microsoft.servicefabric.actors._actor_base.getApplicationName()
    id: getApplicationName()
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    langs:
      - java
    name: getApplicationName()
    nameWithType: ActorBase.getApplicationName()
    fullName: String microsoft.servicefabric.actors.ActorBase.getApplicationName()
    overload: microsoft.servicefabric.actors._actor_base.getApplicationName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
      startLine: 68
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft den Namen der Anwendung, die den Akteur-Dienst enthält, der dieser Akteur gehostet wird.</p>
      <p></p>
    syntax:
      content: public String getApplicationName()
      return:
        type: '26831127'
        description: '<p>Der Name der Anwendung, die der Akteur-Dienst enthält, der dieser Akteur gehostet wird. </p>'
  - uid: microsoft.servicefabric.actors._actor_base.getEvent(Class<T>)
    id: getEvent(Class<T>)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    langs:
      - java
    name: getEvent(Class<T> eventClass)
    nameWithType: ActorBase.getEvent(Class<T> eventClass)
    fullName: protected<T> T microsoft.servicefabric.actors.ActorBase.getEvent(Class<T> eventClass)
    overload: microsoft.servicefabric.actors._actor_base.getEvent*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
      startLine: 259
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft das Ereignis für die angegebene Schnittstelle ab.</p>
      <p></p>
    syntax:
      content: protected <T> T getEvent(Class<T> eventClass)
      parameters:
        - id: eventClass
          type: ffb09d2d
          description: <p>Event-Klasse. </p>
      return:
        type: '34698212'
        description: '<p>Gibt das Ereignis, das die angegebene Schnittstelle darstellt. </p>'
  - uid: microsoft.servicefabric.actors._actor_base.getId()
    id: getId()
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    langs:
      - java
    name: getId()
    nameWithType: ActorBase.getId()
    fullName: ActorId microsoft.servicefabric.actors.ActorBase.getId()
    overload: microsoft.servicefabric.actors._actor_base.getId*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
      startLine: 77
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft die Identität des dieser Akteur mit dem Akteur-Dienst ab.</p>
      <p></p>
    syntax:
      content: public ActorId getId()
      return:
        type: microsoft.servicefabric.actors._actor_id
        description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">Der Akteur-ID</xref> für den Akteur. </p>"
  - uid: microsoft.servicefabric.actors._actor_base.getReminder(String)
    id: getReminder(String)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    langs:
      - java
    name: getReminder(String reminderName)
    nameWithType: ActorBase.getReminder(String reminderName)
    fullName: ActorReminder microsoft.servicefabric.actors.ActorBase.getReminder(String reminderName)
    overload: microsoft.servicefabric.actors._actor_base.getReminder*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
      startLine: 270
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft die Erinnerung Akteur mit dem angegebenen Namen ab.</p>
      <p></p>
    syntax:
      content: protected ActorReminder getReminder(String reminderName)
      parameters:
        - id: reminderName
          type: '26831127'
          description: <p>Der Name der abzurufenden Erinnerung. </p>
      return:
        type: microsoft.servicefabric.actors._actor_reminder
        description: '<p>Ein <xref uid="microsoft.servicefabric.actors._actor_reminder" data-throw-if-not-resolved="false">ActorReminder</xref> , die eine Akteur Erinnerung darstellt. </p>'
  - uid: microsoft.servicefabric.actors._actor_base.getServiceUri()
    id: getServiceUri()
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    langs:
      - java
    name: getServiceUri()
    nameWithType: ActorBase.getServiceUri()
    fullName: URI microsoft.servicefabric.actors.ActorBase.getServiceUri()
    overload: microsoft.servicefabric.actors._actor_base.getServiceUri*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
      startLine: 86
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft den Uri des Diensts Akteur, der dieser Akteur gehostet wird.</p>
      <p></p>
    syntax:
      content: public URI getServiceUri()
      return:
        type: '62304784'
        description: "<p>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.net.URI</xref> des Akteurs-Diensts, der dieser Akteur gehostet wird. </p>"
  - uid: microsoft.servicefabric.actors._actor_base.onActivateAsync()
    id: onActivateAsync()
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    langs:
      - java
    name: onActivateAsync()
    nameWithType: ActorBase.onActivateAsync()
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onActivateAsync()
    overload: microsoft.servicefabric.actors._actor_base.onActivateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
      startLine: 107
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Überschreiben Sie diese Methode zum Initialisieren der Elemente, Zustand initialisieren oder Zeitgeber zu registrieren. Diese Methode wird rechts aufgerufen, nachdem der Akteur aktiviert wird, und vor jeder Methode aufrufen oder Erinnerungen darauf weitergeleitet werden.</p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> onActivateAsync()
      return:
        type: 16409f84
        description: '<p>Eine CompletableFuture, die ausstehenden OnActivateAsync-Vorgang darstellt. </p>'
  - uid: microsoft.servicefabric.actors._actor_base.onDeactivateAsync()
    id: onDeactivateAsync()
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    langs:
      - java
    name: onDeactivateAsync()
    nameWithType: ActorBase.onDeactivateAsync()
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onDeactivateAsync()
    overload: microsoft.servicefabric.actors._actor_base.onDeactivateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
      startLine: 117
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Überschreiben Sie diese Methode zum Aufheben der Registrierung die Zeitgeber einschließlich Ressourcen freizugeben. Diese Methode wird direkt aufgerufen, bevor der Akteur deaktiviert wird.</p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> onDeactivateAsync()
      return:
        type: 16409f84
        description: '<p>Eine CompletableFuture, die ausstehenden OnDeactivateAsync Vorgang darstellt. </p>'
  - uid: microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)
    id: onPostActorMethodAsync(ActorMethodContext)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    langs:
      - java
    name: onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    nameWithType: ActorBase.onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    overload: microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
      startLine: 159
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Diese Methode wird aufgerufen, von Akteur Runtime eine Akteur-Methode Ausführung beendet wurde. Überschreiben Sie diese Methode für eine Aktion ausgeführt, nachdem eine Akteur-Methode die Ausführung beendet ist.</p>
      <p></p>
    syntax: &ref_2
      content: protected CompletableFuture<?> onPostActorMethodAsync(ActorMethodContext actorMethodContext)
      parameters:
        - id: actorMethodContext
          type: microsoft.servicefabric.actors._actor_method_context
          description: '<p>Ein <xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref> beschreiben die Methode, die vom Akteur-Laufzeit, bevor Sie diese Methode aufgerufen wurde. </p>'
      return:
        type: 16409f84
        description: |-
          <p>Ein <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> , post, actor-Method-Vorgang darstellt. <verbatim>    &lt;b&gt;"Hinweise":&lt;/b&gt; diese Methode wird aufgerufen, indem Akteur zur Laufzeit vor:

              &lt;ul&gt;

              &lt;li&gt;Invoking an actor interface method when a client request comes.&lt;/li&gt;

              &lt;li&gt;Invoking a method on {@link Remindable} interface when a reminder fires.&lt;/li&gt;

              &lt;li&gt;Invoking a timer callback when timer fires.&lt;/li&gt;

              &lt;/ul&gt;</verbatim></p>
  - uid: microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)
    id: onPreActorMethodAsync(ActorMethodContext)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    langs:
      - java
    name: onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    nameWithType: ActorBase.onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    overload: microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
      startLine: 138
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Diese Methode wird von Akteur Laufzeit aufgerufen, unmittelbar vor eine Akteur-Methode aufrufen. Überschreiben Sie diese Methode zum Ausführen von Maßnahmen, die vor einem Akteur-Methode aufgerufen wird.</p>
      <p></p>
    syntax: &ref_1
      content: protected CompletableFuture<?> onPreActorMethodAsync(ActorMethodContext actorMethodContext)
      parameters:
        - id: actorMethodContext
          type: microsoft.servicefabric.actors._actor_method_context
          description: '<p>Ein <xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref> beschreiben die Methode, die vom Akteur Common Language Runtime nach Abschluss dieser Methode aufgerufen wird. </p>'
      return:
        type: 16409f84
        description: |-
          <p>Ein <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> , actor--Methode Vorgang darstellt. <verbatim>    &lt;b&gt;"Hinweise":&lt;/b&gt;diese Methode wird aufgerufen, indem Akteur zur Laufzeit vor:

              &lt;ul&gt;

              &lt;li&gt;Invoking an actor interface method when a client request comes.&lt;/li&gt;

              &lt;li&gt;Invoking a method on {@link Remindable} interface when a reminder fires.&lt;/li&gt;

              &lt;li&gt;Invoking a timer callback when timer fires.&lt;/li&gt;

              &lt;/ul&gt;</verbatim></p>
  - uid: 'microsoft.servicefabric.actors._actor_base.registerReminderAsync(String,byte [],Duration,Duration)'
    id: 'registerReminderAsync(String,byte [],Duration,Duration)'
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    langs:
      - java
    name: 'registerReminderAsync(String reminderName, byte[] state, Duration dueTime, Duration period)'
    nameWithType: 'ActorBase.registerReminderAsync(String reminderName, byte[] state, Duration dueTime, Duration period)'
    fullName: 'CompletableFuture<ActorReminder> microsoft.servicefabric.actors.ActorBase.registerReminderAsync(String reminderName, byte[] state, Duration dueTime, Duration period)'
    overload: microsoft.servicefabric.actors._actor_base.registerReminderAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
      startLine: 293
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Registriert die angegebene Erinnerung Akteur.</p>
      <p></p>
    syntax:
      content: 'protected CompletableFuture<ActorReminder> registerReminderAsync(String reminderName, byte[] state, Duration dueTime, Duration period)'
      parameters:
        - id: reminderName
          type: '26831127'
          description: <p>Name der Erinnerung registrieren </p>
        - id: state
          type: ccd9418d
          description: <p>Status Erinnerung zugeordnet. </p>
        - id: dueTime
          type: e02a2de0
          description: '<p>Ein <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref> , das die Zeitspanne für die Verzögerung, die Erinnerung auslösen darstellt. Geben Sie (-1) Millisekunde an, um zu verhindern, dass Erinnerung ausgelöst. Geben Sie 0 (null) fest, um die Erinnerung sofort ausgelöst. </p>'
        - id: period
          type: e02a2de0
          description: '<p>Das Zeitintervall zwischen den Auslösen von Erinnerungen. Geben Sie (-1) Millisekunde an, um regelmäßige Auslösen von Ereignissen zu deaktivieren. </p>'
      return:
        type: 9cdf14d0microsoft.servicefabric.actors._actor_remindera08ddfce
        description: '<p>Eine Aufgabe, die den asynchronen Registrierungsvorgang darstellt. Der Wert von TResult-Parameter ist ein <xref uid="microsoft.servicefabric.actors._actor_reminder" data-throw-if-not-resolved="false">ActorReminder</xref> , die der Akteur Erinnerung, die registriert war darstellt. </p>'
  - uid: 'microsoft.servicefabric.actors._actor_base.registerTimer(Function<Object, CompletableFuture<?>>,Object,Duration,Duration)'
    id: 'registerTimer(Function<Object, CompletableFuture<?>>,Object,Duration,Duration)'
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    langs:
      - java
    name: 'registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, Object state, Duration dueTime, Duration period)'
    nameWithType: 'ActorBase.registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, Object state, Duration dueTime, Duration period)'
    fullName: 'ActorTimer microsoft.servicefabric.actors.ActorBase.registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, Object state, Duration dueTime, Duration period)'
    overload: microsoft.servicefabric.actors._actor_base.registerTimer*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
      startLine: 176
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Registriert einen Zeitgeber für den Akteur.</p>
      <p></p>
    syntax:
      content: 'protected ActorTimer registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, Object state, Duration dueTime, Duration period)'
      parameters:
        - id: asyncCallback
          type: 05842176
          description: '<p>Rückruf, der aufgerufen wird, wenn der Zeitgeber ausgelöst wird. </p>'
        - id: state
          type: '79317049'
          description: <p>Status Zeitgeberrückruf übergeben. </p>
        - id: dueTime
          type: e02a2de0
          description: '<p>Zeitspanne, wenn Akteur Timer aufgrund erster Stelle steht. </p>'
        - id: period
          type: e02a2de0
          description: <p>Die Zeitspanne für nachfolgende Akteur Timer-Aufruf. </p>
      return:
        type: microsoft.servicefabric.actors._actor_timer
        description: <p>Gibt <xref uid="microsoft.servicefabric.actors._actor_timer" data-throw-if-not-resolved="false">ActorTimer</xref> Objekt. </p>
  - uid: 'microsoft.servicefabric.actors._actor_base.registerTimer(Function<Object, CompletableFuture<?>>,String,Object,Duration,Duration)'
    id: 'registerTimer(Function<Object, CompletableFuture<?>>,String,Object,Duration,Duration)'
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    langs:
      - java
    name: 'registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, String asyncCallbackFunctionName, Object state, Duration dueTime, Duration period)'
    nameWithType: 'ActorBase.registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, String asyncCallbackFunctionName, Object state, Duration dueTime, Duration period)'
    fullName: 'ActorTimer microsoft.servicefabric.actors.ActorBase.registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, String asyncCallbackFunctionName, Object state, Duration dueTime, Duration period)'
    overload: microsoft.servicefabric.actors._actor_base.registerTimer*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
      startLine: 213
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Registriert einen Zeitgeber für den Akteur.</p>
      <p></p>
    syntax:
      content: 'protected ActorTimer registerTimer(Function<Object, CompletableFuture<?>> asyncCallback, String asyncCallbackFunctionName, Object state, Duration dueTime, Duration period)'
      parameters:
        - id: asyncCallback
          type: 05842176
          description: '<p>Rückruf, der aufgerufen wird, wenn der Zeitgeber ausgelöst wird. </p>'
        - id: asyncCallbackFunctionName
          type: '26831127'
          description: '<p>Name der AsyncCallBack-Funktion. Es kann verwendet werden, <xref uid="microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref> und <xref uid="microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref> So initiieren Sie eine Benutzeraufgabe auf vor und nach dem Aufrufen dieser Funktion. Die Eigenschaft <xref uid="microsoft.servicefabric.actors._actor_method_context.getMethodName()" data-throw-if-not-resolved="false">ActorMethodContext#getMethodName()</xref> erhalten den Methodennamen. </p>'
        - id: state
          type: '79317049'
          description: <p>Status Zeitgeberrückruf übergeben. </p>
        - id: dueTime
          type: e02a2de0
          description: '<p>Zeitspanne, wenn Akteur Timer aufgrund erster Stelle steht. </p>'
        - id: period
          type: e02a2de0
          description: <p>Die Zeitspanne für nachfolgende Akteur Timer-Aufruf. </p>
      return:
        type: microsoft.servicefabric.actors._actor_timer
        description: <p>Gibt <xref uid="microsoft.servicefabric.actors._actor_timer" data-throw-if-not-resolved="false">ActorTimer</xref> Objekt. </p>
  - uid: microsoft.servicefabric.actors._actor_base.unregisterReminderAsync(ActorReminder)
    id: unregisterReminderAsync(ActorReminder)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    langs:
      - java
    name: unregisterReminderAsync(ActorReminder reminder)
    nameWithType: ActorBase.unregisterReminderAsync(ActorReminder reminder)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.unregisterReminderAsync(ActorReminder reminder)
    overload: microsoft.servicefabric.actors._actor_base.unregisterReminderAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
      startLine: 310
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Hebt die Registrierung der angegebenen Erinnerung mit Akteur.</p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> unregisterReminderAsync(ActorReminder reminder)
      parameters:
        - id: reminder
          type: microsoft.servicefabric.actors._actor_reminder
          description: <p>Der Akteur Erinnerung beim Aufheben der Registrierung. </p>
      return:
        type: 16409f84
        description: '<p>Eine Aufgabe, die den asynchronen stellt Aufhebung der Registrierung Vorgang. </p>'
  - uid: microsoft.servicefabric.actors._actor_base.unregisterTimer(ActorTimer)
    id: unregisterTimer(ActorTimer)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    langs:
      - java
    name: unregisterTimer(ActorTimer timer)
    nameWithType: ActorBase.unregisterTimer(ActorTimer timer)
    fullName: void microsoft.servicefabric.actors.ActorBase.unregisterTimer(ActorTimer timer)
    overload: microsoft.servicefabric.actors._actor_base.unregisterTimer*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorBase.java
      startLine: 238
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Hebt die Registrierung eines Zeitgebers, der zuvor auf dieser Akteur festgelegt.</p>
      <p></p>
    syntax:
      content: protected void unregisterTimer(ActorTimer timer)
      parameters:
        - id: timer
          type: microsoft.servicefabric.actors._actor_timer
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_timer\" data-throw-if-not-resolved=\"false\">ActorTimer</xref> darstellt Zeitgeber, der nicht aufgehoben werden muss. </p>"
references:
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: microsoft.servicefabric.actors._actor_base.getApplicationName*
    name: getApplicationName
    nameWithType: ActorBase.getApplicationName
    fullName: String microsoft.servicefabric.actors.ActorBase.getApplicationName
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_base.getId*
    name: getId
    nameWithType: ActorBase.getId
    fullName: ActorId microsoft.servicefabric.actors.ActorBase.getId
    package: microsoft.servicefabric.actors
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: microsoft.servicefabric.actors._actor_base.getServiceUri*
    name: getServiceUri
    nameWithType: ActorBase.getServiceUri
    fullName: URI microsoft.servicefabric.actors.ActorBase.getServiceUri
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_base.getActorService*
    name: getActorService
    nameWithType: ActorBase.getActorService
    fullName: FabricActorService microsoft.servicefabric.actors.ActorBase.getActorService
    package: microsoft.servicefabric.actors
  - uid: 16409f84
    spec.java:
      - name: CompletableFuture<?>
        fullName: CompletableFuture<?>
  - uid: microsoft.servicefabric.actors._actor_base.onActivateAsync*
    name: onActivateAsync
    nameWithType: ActorBase.onActivateAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onActivateAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_base.onDeactivateAsync*
    name: onDeactivateAsync
    nameWithType: ActorBase.onDeactivateAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onDeactivateAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync*
    name: onPreActorMethodAsync
    nameWithType: ActorBase.onPreActorMethodAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onPreActorMethodAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync*
    name: onPostActorMethodAsync
    nameWithType: ActorBase.onPostActorMethodAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onPostActorMethodAsync
    package: microsoft.servicefabric.actors
  - uid: 05842176
    spec.java:
      - name: 'Function<Object, CompletableFuture<?>>'
        fullName: 'Function<Object, CompletableFuture<?>>'
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: microsoft.servicefabric.actors._actor_base.registerTimer*
    name: registerTimer
    nameWithType: ActorBase.registerTimer
    fullName: ActorTimer microsoft.servicefabric.actors.ActorBase.registerTimer
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_base.unregisterTimer*
    name: unregisterTimer
    nameWithType: ActorBase.unregisterTimer
    fullName: void microsoft.servicefabric.actors.ActorBase.unregisterTimer
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_base.getReminder*
    name: getReminder
    nameWithType: ActorBase.getReminder
    fullName: ActorReminder microsoft.servicefabric.actors.ActorBase.getReminder
    package: microsoft.servicefabric.actors
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: 9cdf14d0microsoft.servicefabric.actors._actor_remindera08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: microsoft.servicefabric.actors._actor_reminder
        name: ActorReminder
        fullName: microsoft.servicefabric.actors.ActorReminder
        href: microsoft.servicefabric.actors._actor_reminder.yml
      - name: '>'
        fullName: '>'
  - uid: microsoft.servicefabric.actors._actor_base.registerReminderAsync*
    name: registerReminderAsync
    nameWithType: ActorBase.registerReminderAsync
    fullName: CompletableFuture<ActorReminder> microsoft.servicefabric.actors.ActorBase.registerReminderAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_base.unregisterReminderAsync*
    name: unregisterReminderAsync
    nameWithType: ActorBase.unregisterReminderAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.unregisterReminderAsync
    package: microsoft.servicefabric.actors
  - uid: ffb09d2d
    spec.java:
      - name: Class<T>
        fullName: Class<T>
  - uid: '34698212'
    spec.java:
      - name: <T> T
        fullName: <T> T
  - uid: microsoft.servicefabric.actors._actor_base.getEvent*
    name: getEvent
    nameWithType: ActorBase.getEvent
    fullName: protected<T> T microsoft.servicefabric.actors.ActorBase.getEvent
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._dummy_actor
  - uid: microsoft.servicefabric.actors._fabric_actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._fabric_actor.yml
    name: FabricActor
    nameWithType: FabricActor
    fullName: microsoft.servicefabric.actors.FabricActor
    type: Class
    summary: "<p>Stellt einen Akteur, der mehrere zuverlässige \"benannte\" Status zugeordnet aufweisen kann. <xref uid=\"microsoft.servicefabric.actors._actor_base\" data-throw-if-not-resolved=\"false\">ActorBase</xref></p>\n<p>\r\n\r\n  <b>Beschreibung:</b>der Zustand in den Garbage Collections der Akteur und Fail-Failover beibehalten wird. Speichern und Abrufen des Zustands wird von der Akteur-State-Anbieter bereitgestellt <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>. </p>"
    syntax:
      content: public class FabricActor
  - uid: microsoft.servicefabric.actors._actor_timer
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_timer.yml
    name: ActorTimer
    nameWithType: ActorTimer
    fullName: microsoft.servicefabric.actors.ActorTimer
    type: Interface
    summary: <p>Stellt Zeitgeber legen Sie für eine <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Akteur</xref></p>
    syntax:
      content: public interface ActorTimer
  - uid: microsoft.servicefabric.actors._actor_id
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_id.yml
    name: ActorId
    nameWithType: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    type: Class
    summary: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">Der Akteur-ID</xref> ist die Identität der Akteur innerhalb eines Diensts Akteur. Akteure können festgestellt werden, indem <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.String</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.UUID</xref> oder lang. </p>"
    syntax:
      content: public class ActorId
  - uid: microsoft.servicefabric.actors._fabric_actor_service
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    name: FabricActorService
    nameWithType: FabricActorService
    fullName: microsoft.servicefabric.actors.FabricActorService
    type: Class
    summary: "<p>Stellt die Basisklasse für Microsoft Service Fabric-basierten zuverlässige Akteure Dienst dar. </p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Ableiten von dieser Klasse, die einen eigenen benutzerdefinierten Akteur-Dienst zu implementieren, wenn Sie alle Verhalten des Diensts für die Akteure außer Kraft setzen möchten. </p>"
    syntax:
      content: public class FabricActorService
  - uid: microsoft.servicefabric.actors._actor_method_context
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_method_context.yml
    name: ActorMethodContext
    nameWithType: ActorMethodContext
    fullName: microsoft.servicefabric.actors.ActorMethodContext
    type: Class
    summary: '<p>Ein <xref uid="microsoft.servicefabric.actors._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref> enthält Informationen über die Methode, die vom Akteur Laufzeit aufgerufen wird, und wird als Argument übergeben <xref uid="microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref> und <xref uid="microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref>. </p>'
    syntax:
      content: public class ActorMethodContext
  - uid: microsoft.servicefabric.actors._actor_base.onPreActorMethodAsync(ActorMethodContext)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    nameWithType: ActorBase.onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    type: Method
    summary: |-
      <p>Diese Methode wird von Akteur Laufzeit aufgerufen, unmittelbar vor eine Akteur-Methode aufrufen. Überschreiben Sie diese Methode zum Ausführen von Maßnahmen, die vor einem Akteur-Methode aufgerufen wird.</p>
      <p></p>
    syntax: *ref_1
  - uid: microsoft.servicefabric.actors._actor_base.onPostActorMethodAsync(ActorMethodContext)
    parent: microsoft.servicefabric.actors._actor_base
    href: microsoft.servicefabric.actors._actor_base.yml
    name: onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    nameWithType: ActorBase.onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorBase.onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    type: Method
    summary: |-
      <p>Diese Methode wird aufgerufen, von Akteur Runtime eine Akteur-Methode Ausführung beendet wurde. Überschreiben Sie diese Methode für eine Aktion ausgeführt, nachdem eine Akteur-Methode die Ausführung beendet ist.</p>
      <p></p>
    syntax: *ref_2
  - uid: microsoft.servicefabric.actors._actor_method_context.getMethodName()
    parent: microsoft.servicefabric.actors._actor_method_context
    href: microsoft.servicefabric.actors._actor_method_context.yml
    name: getMethodName()
    nameWithType: ActorMethodContext.getMethodName()
    fullName: String microsoft.servicefabric.actors.ActorMethodContext.getMethodName()
    type: Method
    summary: |-
      <p>Name der Methode, die vom Akteur Laufzeit aufgerufen.</p>
      <p></p>
    syntax:
      content: public String getMethodName()
      return:
        type: '26831127'
        description: '<p>Eine Zeichenfolge, die den Namen der Methode darstellt. </p>'
  - uid: microsoft.servicefabric.actors._actor_reminder
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_reminder.yml
    name: ActorReminder
    nameWithType: ActorReminder
    fullName: microsoft.servicefabric.actors.ActorReminder
    type: Interface
    summary: <p>Kapselt die Erinnerung legen Sie für eine <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Akteur</xref></p>
    syntax:
      content: public interface ActorReminder
  - uid: microsoft.servicefabric.actors._actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor.yml
    name: Actor
    nameWithType: Actor
    fullName: microsoft.servicefabric.actors.Actor
    type: Interface
    summary: <p>Die Basisschnittstelle für das zuverlässige Akteur Schnittstellen erben. </p>
    syntax:
      content: public interface Actor
  - uid: microsoft.servicefabric.actors._actor_state_provider
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    name: ActorStateProvider
    nameWithType: ActorStateProvider
    fullName: microsoft.servicefabric.actors.ActorStateProvider
    type: Interface
    summary: '<p>Stellt die Schnittstelle, die ein Akteur State-Anbieter für Akteur-Laufzeit für die Kommunikation zu implementieren muss. </p>'
    syntax:
      content: public interface ActorStateProvider