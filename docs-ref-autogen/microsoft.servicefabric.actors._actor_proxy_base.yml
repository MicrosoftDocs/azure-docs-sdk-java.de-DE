### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._actor_proxy_base
    id: _actor_proxy_base
    parent: microsoft.servicefabric.actors
    children:
      - microsoft.servicefabric.actors._actor_proxy_base.ActorProxyBase()
      - 'microsoft.servicefabric.actors._actor_proxy_base.create(Class<T>,ActorId)'
      - 'microsoft.servicefabric.actors._actor_proxy_base.create(Class<T>,ActorId,String)'
      - 'microsoft.servicefabric.actors._actor_proxy_base.create(Class<T>,ActorId,String,String)'
      - 'microsoft.servicefabric.actors._actor_proxy_base.create(Class<T>,ActorId,String,String,String)'
      - 'microsoft.servicefabric.actors._actor_proxy_base.create(Class<T>,ActorId,URI)'
      - 'microsoft.servicefabric.actors._actor_proxy_base.create(Class<T>,ActorId,URI,String)'
      - microsoft.servicefabric.actors._actor_proxy_base.createRequestMessageBody(Object)
      - 'microsoft.servicefabric.actors._actor_proxy_base.deserializeMessage(byte [])'
      - microsoft.servicefabric.actors._actor_proxy_base.getActorId()
      - microsoft.servicefabric.actors._actor_proxy_base.getActorServicePartitionClient()
      - microsoft.servicefabric.actors._actor_proxy_base.getResponseMessageBodyValue(Object)
      - 'microsoft.servicefabric.actors._actor_proxy_base.invoke(int,int,byte [])'
      - 'microsoft.servicefabric.actors._actor_proxy_base.invokeAsync(int,int,byte [],CancellationToken)'
      - microsoft.servicefabric.actors._actor_proxy_base.serializeMessage(Object)
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    langs:
      - java
    name: ActorProxyBase
    nameWithType: ActorProxyBase
    fullName: microsoft.servicefabric.actors.ActorProxyBase
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
      startLine: 17
    package: microsoft.servicefabric.actors
    summary: <p>Stellt die basisimplementierung für den Proxy an den Remoteserver Akteur Objekten IActor Schnittstellen implementieren. </p>
    syntax:
      content: public class ActorProxyBase extends ProxyBase implements ActorProxy
    inheritance:
      - java.lang.Object
      - microsoft.servicefabric.services.remoting.builder._proxy_base
    inheritedMembers:
      - microsoft.servicefabric.services.remoting.builder._proxy_base.continueWith(CompletableFuture<Object>)
      - 'microsoft.servicefabric.services.remoting.builder._proxy_base.getReturnValue(int,int,Object)'
      - 'microsoft.servicefabric.services.remoting.builder._proxy_base.invoke(int,int,Object)'
      - 'microsoft.servicefabric.services.remoting.builder._proxy_base.invokeAsync(int,int,Object,CancellationToken)'
      - microsoft.servicefabric.services.remoting.builder._proxy_base.ProxyBase()
  - uid: microsoft.servicefabric.actors._actor_proxy_base.ActorProxyBase()
    id: ActorProxyBase()
    parent: microsoft.servicefabric.actors._actor_proxy_base
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    langs:
      - java
    name: ActorProxyBase()
    nameWithType: ActorProxyBase.ActorProxyBase()
    fullName: microsoft.servicefabric.actors.ActorProxyBase.ActorProxyBase()
    overload: microsoft.servicefabric.actors._actor_proxy_base.ActorProxyBase*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
      startLine: 46
    package: microsoft.servicefabric.actors
    summary: <p>Initialisiert eine neue Instanz der dem <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref> Klasse. </p>
    syntax:
      content: protected ActorProxyBase()
  - uid: 'microsoft.servicefabric.actors._actor_proxy_base.create(Class<T>,ActorId)'
    id: 'create(Class<T>,ActorId)'
    parent: microsoft.servicefabric.actors._actor_proxy_base
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    langs:
      - java
    name: 'create(Class<T> actorInterfaceType, ActorId actorId)'
    nameWithType: 'ActorProxyBase.create(Class<T> actorInterfaceType, ActorId actorId)'
    fullName: 'static <T extends Actor> T microsoft.servicefabric.actors.ActorProxyBase.create(Class<T> actorInterfaceType, ActorId actorId)'
    overload: microsoft.servicefabric.actors._actor_proxy_base.create*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
      startLine: 71
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Erstellt einen Proxy für die Akteur-Objekt, das eine Akteur-Schnittstelle implementiert.</p>
      <p>
      Der Parameter "ApplicationName" ist null, wenn der Client als Teil der gleichen Service Fabric-Anwendung als Akteur-Dienst ausgeführt wird, für die Kommunikation mit beibehält. In diesem Fall wird der Anwendungsname aus bestimmt <xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>, und erfolgt durch Aufrufen über die <xref uid="system.fabric._code_package_activation_context.getApplicationName()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getApplicationName()</xref> Eigenschaft. </p>
      <p></p>
    syntax:
      content: 'public static static<T extends Actor> T create(Class<T> actorInterfaceType, ActorId actorId)'
      parameters:
        - id: actorInterfaceType
          type: ffb09d2d
          description: '<p>Der Akteur-Schnittstelle, die vom Objekt remote Akteur implementiert. Das zurückgegebene Proxyobjekt wird diese Schnittstelle implementieren. </p>'
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Akteur</xref> Id des Objekts Akteur Proxy. Methoden, die für diesen Proxy aufgerufen führt zu Anfragen an der Akteur mit dieser Id gesendet wird. </p>"
      return:
        type: 1e2c6103microsoft.servicefabric.actors._actor21353812
        description: '<p>Ein Akteur-Proxy-Objekt, das implementiert <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref> und TActorInterface. </p>'
    exceptions:
      - type: '44102508'
        description: '<p>Ausnahme beim Ungültiges URI-Format übergeben wird, als Parameter "ApplicationName" </p>'
  - uid: 'microsoft.servicefabric.actors._actor_proxy_base.create(Class<T>,ActorId,String)'
    id: 'create(Class<T>,ActorId,String)'
    parent: microsoft.servicefabric.actors._actor_proxy_base
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    langs:
      - java
    name: 'create(Class<T> actorInterfaceType, ActorId actorId, String applicationName)'
    nameWithType: 'ActorProxyBase.create(Class<T> actorInterfaceType, ActorId actorId, String applicationName)'
    fullName: 'static <T extends Actor> T microsoft.servicefabric.actors.ActorProxyBase.create(Class<T> actorInterfaceType, ActorId actorId, String applicationName)'
    overload: microsoft.servicefabric.actors._actor_proxy_base.create*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
      startLine: 103
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Erstellt einen Proxy für die Akteur-Objekt, das eine Akteur-Schnittstelle implementiert.</p>
      <p>
      Der Parameter "ApplicationName" ist null, wenn der Client als Teil der gleichen Service Fabric-Anwendung als Akteur-Dienst ausgeführt wird, für die Kommunikation mit beibehält. In diesem Fall wird der Anwendungsname aus bestimmt <xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>, und erfolgt durch Aufrufen über die <xref uid="system.fabric._code_package_activation_context.getApplicationName()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getApplicationName()</xref> Eigenschaft. </p>
      <p></p>
    syntax:
      content: 'public static static<T extends Actor> T create(Class<T> actorInterfaceType, ActorId actorId, String applicationName)'
      parameters:
        - id: actorInterfaceType
          type: ffb09d2d
          description: '<p>Der Akteur-Schnittstelle, die vom Objekt remote Akteur implementiert. Das zurückgegebene Proxyobjekt wird diese Schnittstelle implementieren. </p>'
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Akteur</xref> Id des Objekts Akteur Proxy. Methoden, die für diesen Proxy aufgerufen führt zu Anfragen an der Akteur mit dieser Id gesendet wird. </p>"
        - id: applicationName
          type: '26831127'
          description: '<p>Der Name der Service Fabric-Anwendung, die der Akteur-Dienst hostet die Akteur-Objekte enthält. Dieser Parameter kann null sein, wenn der Client als Teil der gleichen Service Fabric-Anwendung ausgeführt wird. Weitere Informationen finden Sie unter "Hinweise". </p>'
      return:
        type: 1e2c6103microsoft.servicefabric.actors._actor21353812
        description: '<p>Ein Akteur-Proxy-Objekt, das implementiert <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref> und TActorInterface. </p>'
    exceptions:
      - type: '44102508'
        description: '<p>Ausnahme beim Ungültiges URI-Format übergeben wird, als Parameter "ApplicationName" </p>'
  - uid: 'microsoft.servicefabric.actors._actor_proxy_base.create(Class<T>,ActorId,String,String)'
    id: 'create(Class<T>,ActorId,String,String)'
    parent: microsoft.servicefabric.actors._actor_proxy_base
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    langs:
      - java
    name: 'create(Class<T> actorInterfaceType, ActorId actorId, String applicationName, String serviceName)'
    nameWithType: 'ActorProxyBase.create(Class<T> actorInterfaceType, ActorId actorId, String applicationName, String serviceName)'
    fullName: 'static <T extends Actor> T microsoft.servicefabric.actors.ActorProxyBase.create(Class<T> actorInterfaceType, ActorId actorId, String applicationName, String serviceName)'
    overload: microsoft.servicefabric.actors._actor_proxy_base.create*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
      startLine: 144
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Erstellt einen Proxy für die Akteur-Objekt, das eine Akteur-Schnittstelle implementiert.</p>
      <p>
      Der Parameter "ApplicationName" ist null, wenn der Client als Teil der gleichen Service Fabric-Anwendung als Akteur-Dienst ausgeführt wird, für die Kommunikation mit beibehält. In diesem Fall wird der Anwendungsname aus bestimmt <xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>, und erfolgt durch Aufrufen über die <xref uid="system.fabric._code_package_activation_context.getApplicationName()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getApplicationName()</xref> Eigenschaft. </p>
      <p></p>
    syntax:
      content: 'public static static<T extends Actor> T create(Class<T> actorInterfaceType, ActorId actorId, String applicationName, String serviceName)'
      parameters:
        - id: actorInterfaceType
          type: ffb09d2d
          description: '<p>Der Akteur-Schnittstelle, die vom Objekt remote Akteur implementiert. Das zurückgegebene Proxyobjekt wird diese Schnittstelle implementieren. </p>'
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Akteur</xref> Id des Objekts Akteur Proxy. Methoden, die für diesen Proxy aufgerufen führt zu Anfragen an der Akteur mit dieser Id gesendet wird. </p>"
        - id: applicationName
          type: '26831127'
          description: '<p>Der Name der Service Fabric-Anwendung, die der Akteur-Dienst hostet die Akteur-Objekte enthält. Dieser Parameter kann null sein, wenn der Client als Teil der gleichen Service Fabric-Anwendung ausgeführt wird. Weitere Informationen finden Sie unter "Hinweise". </p>'
        - id: serviceName
          type: '26831127'
          description: '<p>Name des Service Fabric-Dienstes, je nach Konfiguration durch <xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref> auf die Akteur-Implementierung. Standardmäßig ist der Name des Diensts nicht mit dem Namen der Akteur-Schnittstelle abgeleitet. Jedoch <xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref> ist erforderlich, wenn ein Akteur mehr als ein Akteur Schnittstellen implementiert oder eine Akteur-Schnittstelle wird von einer anderen Akteur-Schnittstelle abgeleitet, wie die Festlegung der ServiceName automatisch hergestellt werden kann. </p>'
      return:
        type: 1e2c6103microsoft.servicefabric.actors._actor21353812
        description: '<p>Ein Akteur-Proxy-Objekt, das implementiert <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref> und TActorInterface. </p>'
    exceptions:
      - type: '44102508'
        description: '<p>Ausnahme beim Ungültiges URI-Format übergeben wird, als Parameter "ApplicationName" </p>'
  - uid: 'microsoft.servicefabric.actors._actor_proxy_base.create(Class<T>,ActorId,String,String,String)'
    id: 'create(Class<T>,ActorId,String,String,String)'
    parent: microsoft.servicefabric.actors._actor_proxy_base
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    langs:
      - java
    name: 'create(Class<T> actorInterfaceType, ActorId actorId, String applicationName, String serviceName, String listenerName)'
    nameWithType: 'ActorProxyBase.create(Class<T> actorInterfaceType, ActorId actorId, String applicationName, String serviceName, String listenerName)'
    fullName: 'static <T extends Actor> T microsoft.servicefabric.actors.ActorProxyBase.create(Class<T> actorInterfaceType, ActorId actorId, String applicationName, String serviceName, String listenerName)'
    overload: microsoft.servicefabric.actors._actor_proxy_base.create*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
      startLine: 191
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Erstellt einen Proxy für die Akteur-Objekt, das eine Akteur-Schnittstelle implementiert.</p>
      <p>
      Der Parameter "ApplicationName" ist null, wenn der Client als Teil der gleichen Service Fabric-Anwendung als Akteur-Dienst ausgeführt wird, für die Kommunikation mit beibehält. In diesem Fall wird der Anwendungsname aus bestimmt <xref uid="system.fabric._code_package_activation_context" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext</xref>, und erfolgt durch Aufrufen über die <xref uid="system.fabric._code_package_activation_context.getApplicationName()" data-throw-if-not-resolved="false">system.fabric.CodePackageActivationContext#getApplicationName()</xref> Eigenschaft. </p>
      <p></p>
    syntax:
      content: 'public static static<T extends Actor> T create(Class<T> actorInterfaceType, ActorId actorId, String applicationName, String serviceName, String listenerName)'
      parameters:
        - id: actorInterfaceType
          type: ffb09d2d
          description: '<p>Der Akteur-Schnittstelle, die vom Objekt remote Akteur implementiert. Das zurückgegebene Proxyobjekt wird diese Schnittstelle implementieren. </p>'
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Akteur</xref> Id des Objekts Akteur Proxy. Methoden, die für diesen Proxy aufgerufen führt zu Anfragen an der Akteur mit dieser Id gesendet wird. </p>"
        - id: applicationName
          type: '26831127'
          description: '<p>Der Name der Service Fabric-Anwendung, die der Akteur-Dienst hostet die Akteur-Objekte enthält. Dieser Parameter kann null sein, wenn der Client als Teil der gleichen Service Fabric-Anwendung ausgeführt wird. Weitere Informationen finden Sie unter "Hinweise". </p>'
        - id: serviceName
          type: '26831127'
          description: '<p>Name des Service Fabric-Dienstes, je nach Konfiguration durch <xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref> auf die Akteur-Implementierung. Standardmäßig ist der Name des Diensts nicht mit dem Namen der Akteur-Schnittstelle abgeleitet. Jedoch <xref uid="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false">ActorServiceAttribute</xref> ist erforderlich, wenn ein Akteur mehr als ein Akteur Schnittstellen implementiert oder eine Akteur-Schnittstelle wird von einer anderen Akteur-Schnittstelle abgeleitet, wie die Festlegung der ServiceName automatisch hergestellt werden kann. </p>'
        - id: listenerName
          type: '26831127'
          description: '<p>Standardmäßig verfügt ein Akteur-Dienst nur einen Listener für eine Verbindung herstellen und Kommunikation mit Clients. Jedoch möglich ist, mehrere Listener einen Akteur-Dienst konfigurieren, gibt der ListenerName-Parameter den Namen des Listeners für die Verbindung an. </p>'
      return:
        type: 1e2c6103microsoft.servicefabric.actors._actor21353812
        description: '<p>Ein Akteur-Proxy-Objekt, das implementiert <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref> und TActorInterface. </p>'
    exceptions:
      - type: '44102508'
        description: '<p>Ausnahme beim Ungültiges URI-Format übergeben wird, als Parameter "ApplicationName" </p>'
  - uid: 'microsoft.servicefabric.actors._actor_proxy_base.create(Class<T>,ActorId,URI)'
    id: 'create(Class<T>,ActorId,URI)'
    parent: microsoft.servicefabric.actors._actor_proxy_base
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    langs:
      - java
    name: 'create(Class<T> actorInterfaceType, ActorId actorId, URI serviceUri)'
    nameWithType: 'ActorProxyBase.create(Class<T> actorInterfaceType, ActorId actorId, URI serviceUri)'
    fullName: 'static <T extends Actor> T microsoft.servicefabric.actors.ActorProxyBase.create(Class<T> actorInterfaceType, ActorId actorId, URI serviceUri)'
    overload: microsoft.servicefabric.actors._actor_proxy_base.create*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
      startLine: 218
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Erstellt einen Proxy für die Akteur-Objekt, das eine Akteur-Schnittstelle implementiert.</p>
      <p></p>
    syntax:
      content: 'public static static<T extends Actor> T create(Class<T> actorInterfaceType, ActorId actorId, URI serviceUri)'
      parameters:
        - id: actorInterfaceType
          type: ffb09d2d
          description: '<p>Der Akteur-Schnittstelle, die vom Objekt remote Akteur implementiert. Das zurückgegebene Proxyobjekt wird diese Schnittstelle implementieren. </p>'
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Akteur</xref> Id des Objekts Akteur Proxy. Methoden, die für diesen Proxy aufgerufen führt zu Anfragen an der Akteur mit dieser Id gesendet wird. </p>"
        - id: serviceUri
          type: '62304784'
          description: <p>URI des Diensts Akteur </p>
      return:
        type: 1e2c6103microsoft.servicefabric.actors._actor21353812
        description: '<p>Ein Akteur-Proxy-Objekt, das implementiert <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref> und TActorInterface. Der Akteur-Schnittstelle, die vom Objekt remote Akteur implementiert. Das zurückgegebene Proxyobjekt wird diese Schnittstelle implementieren. </p>'
  - uid: 'microsoft.servicefabric.actors._actor_proxy_base.create(Class<T>,ActorId,URI,String)'
    id: 'create(Class<T>,ActorId,URI,String)'
    parent: microsoft.servicefabric.actors._actor_proxy_base
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    langs:
      - java
    name: 'create(Class<T> actorInterfaceType, ActorId actorId, URI serviceUri, String listenerName)'
    nameWithType: 'ActorProxyBase.create(Class<T> actorInterfaceType, ActorId actorId, URI serviceUri, String listenerName)'
    fullName: 'static <T extends Actor> T microsoft.servicefabric.actors.ActorProxyBase.create(Class<T> actorInterfaceType, ActorId actorId, URI serviceUri, String listenerName)'
    overload: microsoft.servicefabric.actors._actor_proxy_base.create*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
      startLine: 248
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Erstellt einen Proxy für die Akteur-Objekt, das eine Akteur-Schnittstelle implementiert.</p>
      <p></p>
    syntax:
      content: 'public static static<T extends Actor> T create(Class<T> actorInterfaceType, ActorId actorId, URI serviceUri, String listenerName)'
      parameters:
        - id: actorInterfaceType
          type: ffb09d2d
          description: '<p>Der Akteur-Schnittstelle, die vom Objekt remote Akteur implementiert. Das zurückgegebene Proxyobjekt wird diese Schnittstelle implementieren. </p>'
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Akteur</xref> Id des Objekts Akteur Proxy. Methoden, die für diesen Proxy aufgerufen führt zu Anfragen an der Akteur mit dieser Id gesendet wird. </p>"
        - id: serviceUri
          type: '62304784'
          description: <p>URI des Diensts Akteur </p>
        - id: listenerName
          type: '26831127'
          description: '<p>Standardmäßig verfügt ein Akteur-Dienst nur einen Listener für eine Verbindung herstellen und Kommunikation mit Clients. Jedoch möglich ist, mehrere Listener einen Akteur-Dienst konfigurieren, gibt der ListenerName-Parameter den Namen des Listeners für die Verbindung an. </p>'
      return:
        type: 1e2c6103microsoft.servicefabric.actors._actor21353812
        description: '<p>Ein Akteur-Proxy-Objekt, das implementiert <xref uid="microsoft.servicefabric.actors._actor_proxy" data-throw-if-not-resolved="false">ActorProxy</xref> und TActorInterface. Der Akteur-Schnittstelle, die vom Objekt remote Akteur implementiert. Das zurückgegebene Proxyobjekt wird diese Schnittstelle implementieren. </p>'
  - uid: microsoft.servicefabric.actors._actor_proxy_base.createRequestMessageBody(Object)
    id: createRequestMessageBody(Object)
    parent: microsoft.servicefabric.actors._actor_proxy_base
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    langs:
      - java
    name: createRequestMessageBody(Object requestMessageBodyValue)
    nameWithType: ActorProxyBase.createRequestMessageBody(Object requestMessageBodyValue)
    fullName: Object microsoft.servicefabric.actors.ActorProxyBase.createRequestMessageBody(Object requestMessageBodyValue)
    overload: microsoft.servicefabric.actors._actor_proxy_base.createRequestMessageBody*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
      startLine: 325
    package: microsoft.servicefabric.actors
    syntax:
      content: protected Object createRequestMessageBody(Object requestMessageBodyValue)
      parameters:
        - id: requestMessageBodyValue
          type: '79317049'
      return:
        type: '79317049'
  - uid: 'microsoft.servicefabric.actors._actor_proxy_base.deserializeMessage(byte [])'
    id: 'deserializeMessage(byte [])'
    parent: microsoft.servicefabric.actors._actor_proxy_base
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    langs:
      - java
    name: 'deserializeMessage(byte[] msgBodyValue)'
    nameWithType: 'ActorProxyBase.deserializeMessage(byte[] msgBodyValue)'
    fullName: 'Object microsoft.servicefabric.actors.ActorProxyBase.deserializeMessage(byte[] msgBodyValue)'
    overload: microsoft.servicefabric.actors._actor_proxy_base.deserializeMessage*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
      startLine: 321
    package: microsoft.servicefabric.actors
    syntax:
      content: 'protected Object deserializeMessage(byte[] msgBodyValue)'
      parameters:
        - id: msgBodyValue
          type: ccd9418d
      return:
        type: '79317049'
  - uid: microsoft.servicefabric.actors._actor_proxy_base.getActorId()
    id: getActorId()
    parent: microsoft.servicefabric.actors._actor_proxy_base
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    langs:
      - java
    name: getActorId()
    nameWithType: ActorProxyBase.getActorId()
    fullName: ActorId microsoft.servicefabric.actors.ActorProxyBase.getActorId()
    overload: microsoft.servicefabric.actors._actor_proxy_base.getActorId*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
      startLine: 28
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorId</xref> Proxy-Objekt zugeordnet.</p>
      <p></p>
    syntax:
      content: public ActorId getActorId()
      return:
        type: microsoft.servicefabric.actors._actor_id
        description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.actors.ActorId</xref> Proxy-Objekt zugeordnet. </p>"
    overridden: microsoft.servicefabric.actors._actor_proxy.getActorId()
  - uid: microsoft.servicefabric.actors._actor_proxy_base.getActorServicePartitionClient()
    id: getActorServicePartitionClient()
    parent: microsoft.servicefabric.actors._actor_proxy_base
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    langs:
      - java
    name: getActorServicePartitionClient()
    nameWithType: ActorProxyBase.getActorServicePartitionClient()
    fullName: ActorServicePartitionClientImpl microsoft.servicefabric.actors.ActorProxyBase.getActorServicePartitionClient()
    overload: microsoft.servicefabric.actors._actor_proxy_base.getActorServicePartitionClient*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
      startLine: 39
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft <xref uid="" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorServicePartitionClientImpl</xref> , die diesen Proxy für die Kommunikation mit dem Akteur verwendet wird.</p>
      <p></p>
    syntax:
      content: public ActorServicePartitionClientImpl getActorServicePartitionClient()
      return:
        type: ef7224bd
        description: "<p>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.actors.ActorServicePartitionClientImpl</xref> , die diesen Proxy für die Kommunikation mit dem Akteur verwendet wird. </p>"
    overridden: microsoft.servicefabric.actors._actor_proxy.getActorServicePartitionClient()
  - uid: microsoft.servicefabric.actors._actor_proxy_base.getResponseMessageBodyValue(Object)
    id: getResponseMessageBodyValue(Object)
    parent: microsoft.servicefabric.actors._actor_proxy_base
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    langs:
      - java
    name: getResponseMessageBodyValue(Object responseMessageBody)
    nameWithType: ActorProxyBase.getResponseMessageBodyValue(Object responseMessageBody)
    fullName: Object microsoft.servicefabric.actors.ActorProxyBase.getResponseMessageBodyValue(Object responseMessageBody)
    overload: microsoft.servicefabric.actors._actor_proxy_base.getResponseMessageBodyValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
      startLine: 348
    package: microsoft.servicefabric.actors
    syntax:
      content: protected Object getResponseMessageBodyValue(Object responseMessageBody)
      parameters:
        - id: responseMessageBody
          type: '79317049'
      return:
        type: '79317049'
  - uid: 'microsoft.servicefabric.actors._actor_proxy_base.invoke(int,int,byte [])'
    id: 'invoke(int,int,byte [])'
    parent: microsoft.servicefabric.actors._actor_proxy_base
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    langs:
      - java
    name: 'invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)'
    nameWithType: 'ActorProxyBase.invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)'
    fullName: 'void microsoft.servicefabric.actors.ActorProxyBase.invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)'
    overload: microsoft.servicefabric.actors._actor_proxy_base.invoke*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
      startLine: 331
    package: microsoft.servicefabric.actors
    syntax:
      content: 'protected void invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)'
      parameters:
        - id: interfaceId
          type: f75371fa
        - id: methodId
          type: f75371fa
        - id: requestMsgBodyBytes
          type: ccd9418d
  - uid: 'microsoft.servicefabric.actors._actor_proxy_base.invokeAsync(int,int,byte [],CancellationToken)'
    id: 'invokeAsync(int,int,byte [],CancellationToken)'
    parent: microsoft.servicefabric.actors._actor_proxy_base
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    langs:
      - java
    name: 'invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)'
    nameWithType: 'ActorProxyBase.invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<byte[]> microsoft.servicefabric.actors.ActorProxyBase.invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.actors._actor_proxy_base.invokeAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
      startLine: 338
    package: microsoft.servicefabric.actors
    syntax:
      content: 'protected CompletableFuture<byte[]> invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)'
      parameters:
        - id: interfaceId
          type: f75371fa
        - id: methodId
          type: f75371fa
        - id: requestMsgBodyBytes
          type: ccd9418d
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 5fe2dfa4
  - uid: microsoft.servicefabric.actors._actor_proxy_base.serializeMessage(Object)
    id: serializeMessage(Object)
    parent: microsoft.servicefabric.actors._actor_proxy_base
    href: microsoft.servicefabric.actors._actor_proxy_base.yml
    langs:
      - java
    name: serializeMessage(Object msgBodyValue)
    nameWithType: ActorProxyBase.serializeMessage(Object msgBodyValue)
    fullName: 'byte [] microsoft.servicefabric.actors.ActorProxyBase.serializeMessage(Object msgBodyValue)'
    overload: microsoft.servicefabric.actors._actor_proxy_base.serializeMessage*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorProxyBase.java
      startLine: 317
    package: microsoft.servicefabric.actors
    syntax:
      content: 'protected byte [] serializeMessage(Object msgBodyValue)'
      parameters:
        - id: msgBodyValue
          type: '79317049'
      return:
        type: ccd9418d
references:
  - uid: microsoft.servicefabric.actors._actor_proxy_base.getActorId*
    name: getActorId
    nameWithType: ActorProxyBase.getActorId
    fullName: ActorId microsoft.servicefabric.actors.ActorProxyBase.getActorId
    package: microsoft.servicefabric.actors
  - uid: ef7224bd
    spec.java:
      - name: ActorServicePartitionClientImpl
        fullName: ActorServicePartitionClientImpl
  - uid: microsoft.servicefabric.actors._actor_proxy_base.getActorServicePartitionClient*
    name: getActorServicePartitionClient
    nameWithType: ActorProxyBase.getActorServicePartitionClient
    fullName: ActorServicePartitionClientImpl microsoft.servicefabric.actors.ActorProxyBase.getActorServicePartitionClient
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_proxy_base.ActorProxyBase*
    name: ActorProxyBase
    nameWithType: ActorProxyBase.ActorProxyBase
    fullName: microsoft.servicefabric.actors.ActorProxyBase.ActorProxyBase
    package: microsoft.servicefabric.actors
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: microsoft.servicefabric.actors._actor_proxy_base.serializeMessage*
    name: serializeMessage
    nameWithType: ActorProxyBase.serializeMessage
    fullName: 'byte [] microsoft.servicefabric.actors.ActorProxyBase.serializeMessage'
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_proxy_base.deserializeMessage*
    name: deserializeMessage
    nameWithType: ActorProxyBase.deserializeMessage
    fullName: Object microsoft.servicefabric.actors.ActorProxyBase.deserializeMessage
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_proxy_base.createRequestMessageBody*
    name: createRequestMessageBody
    nameWithType: ActorProxyBase.createRequestMessageBody
    fullName: Object microsoft.servicefabric.actors.ActorProxyBase.createRequestMessageBody
    package: microsoft.servicefabric.actors
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: microsoft.servicefabric.actors._actor_proxy_base.invoke*
    name: invoke
    nameWithType: ActorProxyBase.invoke
    fullName: void microsoft.servicefabric.actors.ActorProxyBase.invoke
    package: microsoft.servicefabric.actors
  - uid: 5fe2dfa4
    spec.java:
      - name: 'CompletableFuture<byte[]>'
        fullName: 'CompletableFuture<byte[]>'
  - uid: microsoft.servicefabric.actors._actor_proxy_base.invokeAsync*
    name: invokeAsync
    nameWithType: ActorProxyBase.invokeAsync
    fullName: 'CompletableFuture<byte[]> microsoft.servicefabric.actors.ActorProxyBase.invokeAsync'
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_proxy_base.getResponseMessageBodyValue*
    name: getResponseMessageBodyValue
    nameWithType: ActorProxyBase.getResponseMessageBodyValue
    fullName: Object microsoft.servicefabric.actors.ActorProxyBase.getResponseMessageBodyValue
    package: microsoft.servicefabric.actors
  - uid: '44102508'
    spec.java:
      - name: URISyntaxException
        fullName: URISyntaxException
  - uid: ffb09d2d
    spec.java:
      - name: Class<T>
        fullName: Class<T>
  - uid: 1e2c6103microsoft.servicefabric.actors._actor21353812
    spec.java:
      - name: 'static<T extends '
        fullName: 'static<T extends '
      - uid: microsoft.servicefabric.actors._actor
        name: Actor
        fullName: microsoft.servicefabric.actors.Actor
        href: microsoft.servicefabric.actors._actor.yml
      - name: '> T'
        fullName: '> T'
  - uid: microsoft.servicefabric.actors._actor_proxy_base.create*
    name: create
    nameWithType: ActorProxyBase.create
    fullName: static <T extends Actor> T microsoft.servicefabric.actors.ActorProxyBase.create
    package: microsoft.servicefabric.actors
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: microsoft.servicefabric.services.remoting.builder._proxy_base.continueWith(CompletableFuture<Object>)
    parent: microsoft.servicefabric.services.remoting.builder._proxy_base
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: continueWith(CompletableFuture<Object> future)
    nameWithType: ProxyBase.continueWith(CompletableFuture<Object> future)
    fullName: CompletableFuture<?> microsoft.servicefabric.services.remoting.builder.ProxyBase.continueWith(CompletableFuture<Object> future)
    type: Method
    summary: '<p>Wird aufgerufen, durch die generierte Proxyklasse, um den Vorgang fortzusetzen, nach dem Abrufen des Antworttexts, die keinen Wert verfügt. </p>'
    syntax:
      content: protected CompletableFuture<?> continueWith(CompletableFuture<Object> future)
      parameters:
        - id: future
          type: 55aa5245
          description: '<p>Ein <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> , die den asynchronen Vorgang für den remote-Methodenaufruf darstellt. </p>'
      return:
        type: 16409f84
        description: '<p>Ein <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> , die den asynchronen Vorgang für den remote-Methodenaufruf darstellt. </p>'
  - uid: 'microsoft.servicefabric.services.remoting.builder._proxy_base.getReturnValue(int,int,Object)'
    parent: microsoft.servicefabric.services.remoting.builder._proxy_base
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: 'getReturnValue(int interfaceId, int methodId, Object responseBody)'
    nameWithType: 'ProxyBase.getReturnValue(int interfaceId, int methodId, Object responseBody)'
    fullName: 'abstract Object microsoft.servicefabric.services.remoting.builder.ProxyBase.getReturnValue(int interfaceId, int methodId, Object responseBody)'
    type: Method
    summary: <p>Geben Sie die Umwandlung der Antworttext und extrahiert den Wert aus der abgeleiteten Klasse implementiert. </p>
    syntax:
      content: 'protected abstract Object getReturnValue(int interfaceId, int methodId, Object responseBody)'
      parameters:
        - id: interfaceId
          type: f75371fa
          description: <p>Schnittstellen-Id für die Akteur-Schnittstelle. </p>
        - id: methodId
          type: f75371fa
          description: <p>Methode-Id für die Akteur-Methode. </p>
        - id: responseBody
          type: '79317049'
          description: <p>Der Antworttext. </p>
      return:
        type: 1377799a
        description: <p>Der Rückgabewert des Methodenaufrufs als <xref uid="" data-throw-if-not-resolved="false">Objekt</xref>. </p>
  - uid: 'microsoft.servicefabric.services.remoting.builder._proxy_base.invoke(int,int,Object)'
    parent: microsoft.servicefabric.services.remoting.builder._proxy_base
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: 'invoke(int interfaceId, int methodId, Object requestMsgBodyValue)'
    nameWithType: 'ProxyBase.invoke(int interfaceId, int methodId, Object requestMsgBodyValue)'
    fullName: 'void microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke(int interfaceId, int methodId, Object requestMsgBodyValue)'
    type: Method
    summary: <p>Wird von der generierten Proxyklasse zum Senden der Nachricht auf das Remoteobjekt aufgerufen. </p>
    syntax:
      content: 'protected void invoke(int interfaceId, int methodId, Object requestMsgBodyValue)'
      parameters:
        - id: interfaceId
          type: f75371fa
          description: <p>Die ID der remote-Schnittstelle. </p>
        - id: methodId
          type: f75371fa
          description: <p>ID der remote-Methode Invokved sein. </p>
        - id: requestMsgBodyValue
          type: '79317049'
          description: <p>Der Nachrichtentext Remoteobjekt gesendet werden. </p>
  - uid: 'microsoft.servicefabric.services.remoting.builder._proxy_base.invokeAsync(int,int,Object,CancellationToken)'
    parent: microsoft.servicefabric.services.remoting.builder._proxy_base
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: 'invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)'
    nameWithType: 'ProxyBase.invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)'
    type: Method
    summary: '<p>Wird aufgerufen, von der generierten Proxyklasse zum Senden der Anforderung an das Remoteobjekt und rufen Sie die Antwort zurück. </p>'
    syntax:
      content: 'protected CompletableFuture<Object> invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)'
      parameters:
        - id: interfaceId
          type: f75371fa
          description: <p>Die ID der remote-Schnittstelle. </p>
        - id: methodId
          type: f75371fa
          description: <p>Die ID der remote-Methode aufgerufen werden. </p>
        - id: requestMsgBodyValue
          type: '79317049'
          description: <p>Der Anforderungstext. </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 55aa5245
        description: '<p>Ein <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> , der asynchrone Aufruf Remoteobjekt asynchronen Vorgang darstellt. </p>'
  - uid: microsoft.servicefabric.services.remoting.builder._proxy_base.ProxyBase()
    parent: microsoft.servicefabric.services.remoting.builder._proxy_base
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: ProxyBase()
    nameWithType: ProxyBase.ProxyBase()
    fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.ProxyBase()
    type: Constructor
    summary: <p>Initialisiert eine neue Instanz der dem <xref uid="microsoft.servicefabric.services.remoting.builder._proxy_base" data-throw-if-not-resolved="false">ProxyBase</xref> Klasse. </p>
    syntax:
      content: protected ProxyBase()
  - uid: microsoft.servicefabric.services.remoting.builder._proxy_base
    parent: microsoft.servicefabric.services.remoting.builder
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: ProxyBase
    nameWithType: ProxyBase
    fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase
    type: Class
    summary: '<p>Die Basisklasse, die von Remoting-Code-Generator verwendet, um den Proxy für die Remote-Schnittstellen zu generieren. </p>'
    syntax:
      content: public class ProxyBase
  - uid: microsoft.servicefabric.actors._actor_proxy
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_proxy.yml
    name: ActorProxy
    nameWithType: ActorProxy
    fullName: microsoft.servicefabric.actors.ActorProxy
    type: Interface
    summary: <p>Stellt eine Schnittstelle zur Implementierung des Proxyzugriffs für Akteur-Dienst. </p>
    syntax:
      content: public interface ActorProxy
  - uid: microsoft.servicefabric.actors._fabric_actor_proxy_factory
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._fabric_actor_proxy_factory.yml
    name: FabricActorProxyFactory
    nameWithType: FabricActorProxyFactory
    fullName: microsoft.servicefabric.actors.FabricActorProxyFactory
    type: Class
    summary: '<p>Formularbereichsfactory-Klasse, um einen Proxy für die remote Akteur-Objekte zu erstellen. </p>'
    syntax:
      content: public class FabricActorProxyFactory
  - uid: microsoft.servicefabric.actors._actor_id
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_id.yml
    name: ActorId
    nameWithType: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    type: Class
    summary: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">Der Akteur-ID</xref> ist die Identität der Akteur innerhalb eines Diensts Akteur. Akteure können festgestellt werden, indem <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.String</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.UUID</xref> oder lang. </p>"
    syntax:
      content: public class ActorId
  - uid: microsoft.servicefabric.actors._actor_proxy.getActorId()
    parent: microsoft.servicefabric.actors._actor_proxy
    href: microsoft.servicefabric.actors._actor_proxy.yml
    name: getActorId()
    nameWithType: ActorProxy.getActorId()
    fullName: ActorId microsoft.servicefabric.actors.ActorProxy.getActorId()
    type: Method
    summary: |-
      <p>Ruft <xref uid="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorId</xref> Proxy-Objekt zugeordnet.</p>
      <p></p>
    syntax:
      content: public ActorId getActorId()
      return:
        type: microsoft.servicefabric.actors._actor_id
        description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.actors.ActorId</xref> Proxy-Objekt zugeordnet. </p>"
  - uid: microsoft.servicefabric.actors._actor_proxy.getActorServicePartitionClient()
    parent: microsoft.servicefabric.actors._actor_proxy
    href: microsoft.servicefabric.actors._actor_proxy.yml
    name: getActorServicePartitionClient()
    nameWithType: ActorProxy.getActorServicePartitionClient()
    fullName: ActorServicePartitionClientImpl microsoft.servicefabric.actors.ActorProxy.getActorServicePartitionClient()
    type: Method
    summary: |-
      <p>Ruft <xref uid="" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorServicePartitionClientImpl</xref> , die diesen Proxy für die Kommunikation mit dem Akteur verwendet wird.</p>
      <p></p>
    syntax:
      content: public ActorServicePartitionClientImpl getActorServicePartitionClient()
      return:
        type: ef7224bd
        description: "<p>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">microsoft.servicefabric.actors.ActorServicePartitionClientImpl</xref> , die diesen Proxy für die Kommunikation mit dem Akteur verwendet wird. </p>"
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p>Ein <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> wird verwendet, um die Benachrichtigung verteilt wird, dass Vorgänge abgebrochen werden sollen. Sie erstellen ein Abbruchtoken, das durch die Instanziierung einer <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> -Objekt, das Abbruchtoken verwaltet entnommen seine <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken() </xref> Methode. Übergeben Sie dann das Abbruchtoken, das auf eine beliebige Anzahl von Vorgängen, die Nachricht vom Abbruch erhalten soll. Das Token kann nicht verwendet werden, um den Abbruch zu initiieren. Wenn das besitzende Objekt aufruft <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, auf das Abbruchtoken, das die abgebrochene Eigenschaft festgelegt ist auf "true". Die Objekte, die die Benachrichtigung empfangen können Antworten Verfolgungsinformationen geeignet ist. </p>'
    syntax:
      content: public class CancellationToken
  - uid: microsoft.servicefabric.actors._actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor.yml
    name: Actor
    nameWithType: Actor
    fullName: microsoft.servicefabric.actors.Actor
    type: Interface
    summary: <p>Die Basisschnittstelle für das zuverlässige Akteur Schnittstellen erben. </p>
    syntax:
      content: public interface Actor
  - uid: system.fabric._code_package_activation_context
    parent: system.fabric
    href: system.fabric._code_package_activation_context.yml
    name: CodePackageActivationContext
    nameWithType: CodePackageActivationContext
    fullName: system.fabric.CodePackageActivationContext
    type: Interface
    summary: '<p>Stellt Aktivierungskontext für die Service Fabric-Dienst dar. Dies gilt für nur aktiviert, fabricdienst. </p>'
    syntax:
      content: public interface CodePackageActivationContext
  - uid: system.fabric._code_package_activation_context.getApplicationName()
    parent: system.fabric._code_package_activation_context
    href: system.fabric._code_package_activation_context.yml
    name: getApplicationName()
    nameWithType: CodePackageActivationContext.getApplicationName()
    fullName: String system.fabric.CodePackageActivationContext.getApplicationName()
    type: Method
    summary: |-
      <p>Ruft den Namen der Anwendung ab.</p>
      <p></p>
    syntax:
      content: public String getApplicationName()
      return:
        type: '26831127'
        description: <p>Der Namen der Anwendung. </p>
  - uid: microsoft.servicefabric.actors._actor_service_attribute
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_service_attribute.yml
    name: ActorServiceAttribute
    nameWithType: ActorServiceAttribute
    fullName: microsoft.servicefabric.actors.ActorServiceAttribute
    type: Interface
    summary: <p>Diese Attribute ermöglicht das Konfigurieren der Eigenschaften des Diensts Akteur. Das Attribut wird auf dem Akteurtyp angewendet. </p>
    syntax:
      content: public interface ActorServiceAttribute