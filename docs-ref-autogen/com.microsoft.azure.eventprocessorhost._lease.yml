### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.eventprocessorhost._lease
    id: _lease
    parent: com.microsoft.azure.eventprocessorhost
    children:
      - com.microsoft.azure.eventprocessorhost._lease.getEpoch()
      - com.microsoft.azure.eventprocessorhost._lease.getOwner()
      - com.microsoft.azure.eventprocessorhost._lease.getPartitionId()
      - com.microsoft.azure.eventprocessorhost._lease.getToken()
      - com.microsoft.azure.eventprocessorhost._lease.incrementEpoch()
      - com.microsoft.azure.eventprocessorhost._lease.isExpired()
      - com.microsoft.azure.eventprocessorhost._lease.Lease()
      - com.microsoft.azure.eventprocessorhost._lease.Lease(Lease)
      - com.microsoft.azure.eventprocessorhost._lease.Lease(String)
      - com.microsoft.azure.eventprocessorhost._lease.setEpoch(long)
      - com.microsoft.azure.eventprocessorhost._lease.setOwner(String)
      - com.microsoft.azure.eventprocessorhost._lease.setToken(String)
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: Lease
    nameWithType: Lease
    fullName: com.microsoft.azure.eventprocessorhost.Lease
    type: Class
    source:
      remote: &ref_0
        path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
        branch: master
        repo: 'https://github.com/Azure/azure-event-hubs-java'
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 22
    package: com.microsoft.azure.eventprocessorhost
    summary: "<p>\r\n\r\n  <xref href=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\"></xref>Klasse ist öffentlich, sodass, dass Sie fortgeschrittene Benutzer implementieren können ein <xref href=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\"></xref>. Es sei denn, Sie implementieren <xref href=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\"></xref> sollte nicht für den Umgang mit Objekte dieser Klasse haben oder abgeleiteten Klassen direkt. </p>\n\n<p>Bei der Implementierung einer <xref href=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\"></xref> es möglicherweise erforderlich sein, leiten Sie von dieser Klasse ausführen, um weitere Informationen und IsExpired zu überschreiben. Die Datenfelder wurde verlassen haben anstelle von privaten geschützt werden, da sie ein breites Spektrum aufweisen der Getter und Setter (mit Ausnahme der PartitionId, das unveränderlich ist) die bieten einen gleichwertigen Zugriff. Wenn AzureBlobLease zu implementieren, z. B. gab es keine Notwendigkeit mehr Zugriff als der Getter und Setter bereitstellen. </p>\n<p>Beachten Sie, dass ein <xref href=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\"></xref> Objekt enthält nur Informationen zu einer Partition Lease. Die entsprechende Funktionalität zum Abrufen/erneuern/Freigabe eine Lease ist alles auf der <xref href=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\"></xref>. </p>"
    syntax: &ref_1
      content: public class Lease
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.eventprocessorhost._lease.getEpoch()
    id: getEpoch()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: getEpoch()
    nameWithType: Lease.getEpoch()
    fullName: long com.microsoft.azure.eventprocessorhost.Lease.getEpoch()
    overload: com.microsoft.azure.eventprocessorhost._lease.getEpoch*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 74
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Epoche ist ein Konzept von ereignishubempfängern verwendet. Wenn ein Empfänger auf eine Partition mit einer höheren Epoche als vorhandener Empfänger erstellt wird, ist im Wesentlichen der vorherigen Empfänger erzwungen getrennt. Beim Versuch, einen Empfänger mit einer niedrigeren Epoche zu erstellen, die die vorhandene Empfänger fehl. Die <xref href="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false"></xref> führt der Epoche um, damit bei ein Host eine Lease stiehlt, einen Empfänger mit einer höheren Epoche erstellen können.</p>
      <p></p>
    syntax:
      content: public long getEpoch()
      return:
        type: 0364520f
  - uid: com.microsoft.azure.eventprocessorhost._lease.getOwner()
    id: getOwner()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: getOwner()
    nameWithType: Lease.getOwner()
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getOwner()
    overload: com.microsoft.azure.eventprocessorhost._lease.getOwner*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 106
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Der Besitzer eines Lease ist der Name des der <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref> die derzeit die Lease enthält.</p>
      <p></p>
    syntax:
      content: public String getOwner()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._lease.getPartitionId()
    id: getPartitionId()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: getPartitionId()
    nameWithType: Lease.getPartitionId()
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getPartitionId()
    overload: com.microsoft.azure.eventprocessorhost._lease.getPartitionId*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 126
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Gibt die Id der Partition zurück, die von diesem <xref href="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false"></xref> ist. Unveränderliche also, dass sich keine entsprechenden Setter-Methode.</p>
      <p></p>
    syntax:
      content: public String getPartitionId()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._lease.getToken()
    id: getToken()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: getToken()
    nameWithType: Lease.getToken()
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getToken()
    overload: com.microsoft.azure.eventprocessorhost._lease.getToken*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 138
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Die <xref href="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false"></xref> führt eine beliebige Zeichenfolge, die das "Token" aufgerufen. AzureStorageCheckpointLeaseManager verwendet diese zum Speichern der BLOB-Lease-ID, die von der Azure-Speicher-API verwendet. Andere Implementierungen von <xref href="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false"></xref> können für eine andere Option verwenden.</p>
      <p></p>
    syntax:
      content: public String getToken()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._lease.incrementEpoch()
    id: incrementEpoch()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: incrementEpoch()
    nameWithType: Lease.incrementEpoch()
    fullName: long com.microsoft.azure.eventprocessorhost.Lease.incrementEpoch()
    overload: com.microsoft.azure.eventprocessorhost._lease.incrementEpoch*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 95
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Die am häufigsten verwendete Vorgang auf dem Wert Epoche ist es nach einer Lease stehlen erhöht. Diese praktische Funktion ersetzt die Get-Inkrement-Set, die andernfalls erforderlich wären.</p>
      <p></p>
    syntax:
      content: public long incrementEpoch()
      return:
        type: 0364520f
        description: <p>Der neue Wert der Epoche. </p>
  - uid: com.microsoft.azure.eventprocessorhost._lease.isExpired()
    id: isExpired()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: isExpired()
    nameWithType: Lease.isExpired()
    fullName: boolean com.microsoft.azure.eventprocessorhost.Lease.isExpired()
    overload: com.microsoft.azure.eventprocessorhost._lease.isExpired*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 160
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Wenn eine Implementierung von <xref href="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false"></xref> unterstützt das Konzept der Lease abläuft, und klicken Sie dann eine Klasse abgeleitet <xref href="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false"></xref> kann zum Überschreiben dieser Funktion können Sie die Lease zu überprüfen und zurückgeben, ob es abgelaufen ist.</p>
      <p></p>
    syntax:
      content: public boolean isExpired()
      return:
        type: 4fc6e284
        description: '<p>"true", wenn die Lease, false abgelaufen ist, wenn es noch gültig ist </p>'
    exceptions:
      - type: 8a99d4b0
        description: <p>Eine Außerkraftsetzung beträchtlichen Arbeitsaufwand muss möglicherweise Ausnahmen ausgelöst. </p>
  - uid: com.microsoft.azure.eventprocessorhost._lease.Lease()
    id: Lease()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: Lease()
    nameWithType: Lease.Lease()
    fullName: com.microsoft.azure.eventprocessorhost.Lease.Lease()
    overload: com.microsoft.azure.eventprocessorhost._lease.Lease*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 33
    package: com.microsoft.azure.eventprocessorhost
    summary: <p>Verwenden Sie nicht. nur für GSon Deserialisierungsprogramm hinzugefügt </p>
    syntax:
      content: protected Lease()
  - uid: com.microsoft.azure.eventprocessorhost._lease.Lease(Lease)
    id: Lease(Lease)
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: Lease(Lease source)
    nameWithType: Lease.Lease(Lease source)
    fullName: com.microsoft.azure.eventprocessorhost.Lease.Lease(Lease source)
    overload: com.microsoft.azure.eventprocessorhost._lease.Lease*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 57
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Erstellen einer <xref href="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false"></xref> durch Duplizieren der angegebenen <xref href="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false"></xref>.</p>
      <p></p>
    syntax:
      content: public Lease(Lease source)
      parameters:
        - id: source
          type: com.microsoft.azure.eventprocessorhost._lease
  - uid: com.microsoft.azure.eventprocessorhost._lease.Lease(String)
    id: Lease(String)
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: Lease(String partitionId)
    nameWithType: Lease.Lease(String partitionId)
    fullName: com.microsoft.azure.eventprocessorhost.Lease.Lease(String partitionId)
    overload: com.microsoft.azure.eventprocessorhost._lease.Lease*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 43
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Erstellen einer <xref href="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false"></xref> für die angegebene Partition.</p>
      <p></p>
    syntax:
      content: public Lease(String partitionId)
      parameters:
        - id: partitionId
          type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._lease.setEpoch(long)
    id: setEpoch(long)
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: setEpoch(long epoch)
    nameWithType: Lease.setEpoch(long epoch)
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setEpoch(long epoch)
    overload: com.microsoft.azure.eventprocessorhost._lease.setEpoch*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 84
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Legen Sie den Beginn der Epoche-Wert.</p>
      <p></p>
    syntax:
      content: public void setEpoch(long epoch)
      parameters:
        - id: epoch
          type: 0364520f
  - uid: com.microsoft.azure.eventprocessorhost._lease.setOwner(String)
    id: setOwner(String)
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: setOwner(String owner)
    nameWithType: Lease.setOwner(String owner)
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setOwner(String owner)
    overload: com.microsoft.azure.eventprocessorhost._lease.setOwner*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 116
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Legen Sie die Zeichenfolge Besitzer an. Verwendet, wenn ein Host eine Lease stiehlt.</p>
      <p></p>
    syntax:
      content: public void setOwner(String owner)
      parameters:
        - id: owner
          type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._lease.setToken(String)
    id: setToken(String)
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: setToken(String token)
    nameWithType: Lease.setToken(String token)
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setToken(String token)
    overload: com.microsoft.azure.eventprocessorhost._lease.setToken*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 148
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Legen Sie den Tokenwert ein.</p>
      <p></p>
    syntax:
      content: public void setToken(String token)
      parameters:
        - id: token
          type: '26831127'
references:
  - uid: com.microsoft.azure.eventprocessorhost._lease.Lease*
    name: Lease
    nameWithType: Lease.Lease
    fullName: com.microsoft.azure.eventprocessorhost.Lease.Lease
    package: com.microsoft.azure.eventprocessorhost
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: com.microsoft.azure.eventprocessorhost._lease.getEpoch*
    name: getEpoch
    nameWithType: Lease.getEpoch
    fullName: long com.microsoft.azure.eventprocessorhost.Lease.getEpoch
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.setEpoch*
    name: setEpoch
    nameWithType: Lease.setEpoch
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setEpoch
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.incrementEpoch*
    name: incrementEpoch
    nameWithType: Lease.incrementEpoch
    fullName: long com.microsoft.azure.eventprocessorhost.Lease.incrementEpoch
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.getOwner*
    name: getOwner
    nameWithType: Lease.getOwner
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getOwner
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.setOwner*
    name: setOwner
    nameWithType: Lease.setOwner
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setOwner
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.getPartitionId*
    name: getPartitionId
    nameWithType: Lease.getPartitionId
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getPartitionId
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.getToken*
    name: getToken
    nameWithType: Lease.getToken
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getToken
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.setToken*
    name: setToken
    nameWithType: Lease.setToken
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setToken
    package: com.microsoft.azure.eventprocessorhost
  - uid: 8a99d4b0
    spec.java:
      - name: Exception
        fullName: Exception
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.eventprocessorhost._lease.isExpired*
    name: isExpired
    nameWithType: Lease.isExpired
    fullName: boolean com.microsoft.azure.eventprocessorhost.Lease.isExpired
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._azure_blob_lease
  - uid: com.microsoft.azure.eventprocessorhost._lease
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    name: Lease
    nameWithType: Lease
    fullName: com.microsoft.azure.eventprocessorhost.Lease
    type: Class
    summary: "<p>\r\n\r\n  <xref href=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\"></xref>Klasse ist öffentlich, sodass, dass Sie fortgeschrittene Benutzer implementieren können ein <xref href=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\"></xref>. Es sei denn, Sie implementieren <xref href=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\"></xref> sollte nicht für den Umgang mit Objekte dieser Klasse haben oder abgeleiteten Klassen direkt. </p>\n\n<p>Bei der Implementierung einer <xref href=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\"></xref> es möglicherweise erforderlich sein, leiten Sie von dieser Klasse ausführen, um weitere Informationen und IsExpired zu überschreiben. Die Datenfelder wurde verlassen haben anstelle von privaten geschützt werden, da sie ein breites Spektrum aufweisen der Getter und Setter (mit Ausnahme der PartitionId, das unveränderlich ist) die bieten einen gleichwertigen Zugriff. Wenn AzureBlobLease zu implementieren, z. B. gab es keine Notwendigkeit mehr Zugriff als der Getter und Setter bereitstellen. </p>\n<p>Beachten Sie, dass ein <xref href=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\"></xref> Objekt enthält nur Informationen zu einer Partition Lease. Die entsprechende Funktionalität zum Abrufen/erneuern/Freigabe eine Lease ist alles auf der <xref href=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\"></xref>. </p>"
    syntax: *ref_1
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    name: EventProcessorHost
    nameWithType: EventProcessorHost
    fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost
    type: Class
    syntax:
      content: public class EventProcessorHost
  - uid: com.microsoft.azure.eventprocessorhost._i_lease_manager
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._i_lease_manager.yml
    name: ILeaseManager
    nameWithType: ILeaseManager
    fullName: com.microsoft.azure.eventprocessorhost.ILeaseManager
    type: Interface
    syntax:
      content: public interface ILeaseManager