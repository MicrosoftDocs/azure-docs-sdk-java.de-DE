### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.eventprocessorhost._lease
    id: _lease
    parent: com.microsoft.azure.eventprocessorhost
    children:
      - com.microsoft.azure.eventprocessorhost._lease.getEpoch()
      - com.microsoft.azure.eventprocessorhost._lease.getOwner()
      - com.microsoft.azure.eventprocessorhost._lease.getPartitionId()
      - com.microsoft.azure.eventprocessorhost._lease.getToken()
      - com.microsoft.azure.eventprocessorhost._lease.incrementEpoch()
      - com.microsoft.azure.eventprocessorhost._lease.isExpired()
      - com.microsoft.azure.eventprocessorhost._lease.Lease()
      - com.microsoft.azure.eventprocessorhost._lease.Lease(Lease)
      - com.microsoft.azure.eventprocessorhost._lease.Lease(String)
      - com.microsoft.azure.eventprocessorhost._lease.setEpoch(long)
      - com.microsoft.azure.eventprocessorhost._lease.setOwner(String)
      - com.microsoft.azure.eventprocessorhost._lease.setToken(String)
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: Lease
    nameWithType: Lease
    fullName: com.microsoft.azure.eventprocessorhost.Lease
    type: Class
    source:
      remote: &ref_0
        path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
        branch: master
        repo: 'https://github.com/Azure/azure-event-hubs-java'
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 22
    package: com.microsoft.azure.eventprocessorhost
    summary: "<p><span data-ttu-id=\"d0a0c-101\">\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> Klasse ist öffentlich, sodass, dass Sie fortgeschrittene Benutzer implementieren können ein <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0a0c-101\">\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> class is public so that advanced users can implement an <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>.</span></span> <span data-ttu-id=\"d0a0c-102\">Es sei denn, Sie implementieren <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> sollten keine Objekte dieser Klasse zu verarbeiten oder abgeleiteten Klassen direkt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0a0c-102\">Unless you are implementing <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> you should not have to deal with objects of this class or derived classes directly.</span></span> </p>\n\n<p><span data-ttu-id=\"d0a0c-103\">Bei der Implementierung einer <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> es möglicherweise erforderlich sein, leiten Sie von dieser Klasse ausführen, um weitere Informationen und IsExpired zu überschreiben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0a0c-103\">When implementing an <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> it may be necessary to derive from this class to carry around more information and override isExpired.</span></span> <span data-ttu-id=\"d0a0c-104\">Die Datenfelder wurde verlassen haben anstelle von privaten geschützt werden, da sie ein breites Spektrum aufweisen der Getter und Setter (mit Ausnahme der PartitionId, das unveränderlich ist) die bieten einen gleichwertigen Zugriff.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0a0c-104\">The data fields have been left private instead of protected because they have a full set of getters and setters (except partitionId, which is immutable) which provide equivalent access.</span></span> <span data-ttu-id=\"d0a0c-105\">Wenn AzureBlobLease zu implementieren, z. B. gab es keine Notwendigkeit mehr Zugriff als der Getter und Setter bereitstellen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0a0c-105\">When implementing AzureBlobLease, for example, there was no need for more access than the getters and setters provide.</span></span> </p>\n<p><span data-ttu-id=\"d0a0c-106\">Beachten Sie, dass eine <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> Objekt enthält nur Informationen zu einer Partition Lease.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0a0c-106\">Note that a <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> object just carries information about a partition lease.</span></span> <span data-ttu-id=\"d0a0c-107\">Die entsprechende Funktionalität zum Abrufen/erneuern/Freigabe eine Lease ist alles auf der <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0a0c-107\">The functionality to acquire/renew/release a lease is all on the <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>.</span></span> </p>"
    syntax: &ref_1
      content: public class Lease
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.eventprocessorhost._lease.getEpoch()
    id: getEpoch()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: getEpoch()
    nameWithType: Lease.getEpoch()
    fullName: long com.microsoft.azure.eventprocessorhost.Lease.getEpoch()
    overload: com.microsoft.azure.eventprocessorhost._lease.getEpoch*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 74
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="d0a0c-108">Epoche ist ein Konzept von ereignishubempfängern verwendet.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-108">Epoch is a concept used by Event Hub receivers.</span></span> <span data-ttu-id="d0a0c-109">Wenn ein Empfänger auf eine Partition mit einer höheren Epoche als vorhandener Empfänger erstellt wird, ist im Wesentlichen der vorherigen Empfänger erzwungen getrennt.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-109">Basically, if a receiver is created on a partition with a higher epoch than the existing receiver, the previous receiver is forcibly disconnected.</span></span> <span data-ttu-id="d0a0c-110">Beim Versuch, einen Empfänger mit einer niedrigeren Epoche zu erstellen, die die vorhandene Empfänger fehl.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-110">Attempting to create a receiver with a lower epoch that the existing receiver will fail.</span></span> <span data-ttu-id="d0a0c-111">Die <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> führt der Epoche um, damit bei ein Host eine Lease stiehlt, einen Empfänger mit einer höheren Epoche erstellen können.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-111">The <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> carries the epoch around so that when a host steals a lease, it can create a receiver with a higher epoch.</span></span></p>
      <p></p>
    syntax:
      content: public long getEpoch()
      return:
        type: 0364520f
  - uid: com.microsoft.azure.eventprocessorhost._lease.getOwner()
    id: getOwner()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: getOwner()
    nameWithType: Lease.getOwner()
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getOwner()
    overload: com.microsoft.azure.eventprocessorhost._lease.getOwner*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 106
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="d0a0c-112">Der Besitzer eines Lease ist der Name des der <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false">EventProcessorHost</xref> die derzeit die Lease enthält.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-112">The owner of a lease is the name of the <xref uid="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false">EventProcessorHost</xref> which currently holds the lease.</span></span></p>
      <p></p>
    syntax:
      content: public String getOwner()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._lease.getPartitionId()
    id: getPartitionId()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: getPartitionId()
    nameWithType: Lease.getPartitionId()
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getPartitionId()
    overload: com.microsoft.azure.eventprocessorhost._lease.getPartitionId*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 126
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="d0a0c-113">Gibt die Id der Partition zurück, die von diesem <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> ist.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-113">Returns the id of the partition that this <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> is for.</span></span> <span data-ttu-id="d0a0c-114">Unveränderliche also, dass sich keine entsprechenden Setter-Methode.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-114">Immutable so there is no corresponding setter.</span></span></p>
      <p></p>
    syntax:
      content: public String getPartitionId()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._lease.getToken()
    id: getToken()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: getToken()
    nameWithType: Lease.getToken()
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getToken()
    overload: com.microsoft.azure.eventprocessorhost._lease.getToken*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 138
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="d0a0c-115">Die <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> führt eine beliebige Zeichenfolge, die das "Token" aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-115">The <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> carries an arbitrary string called the "token".</span></span> <span data-ttu-id="d0a0c-116">AzureStorageCheckpointLeaseManager verwendet diese zum Speichern der BLOB-Lease-ID, die von der Azure-Speicher-API verwendet.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-116">AzureStorageCheckpointLeaseManager uses this to store the blob lease ID used by the Azure Storage API.</span></span> <span data-ttu-id="d0a0c-117">Andere Implementierungen von <xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref> können für eine andere Option verwenden.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-117">Other implementations of <xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref> may use it for anything.</span></span></p>
      <p></p>
    syntax:
      content: public String getToken()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._lease.incrementEpoch()
    id: incrementEpoch()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: incrementEpoch()
    nameWithType: Lease.incrementEpoch()
    fullName: long com.microsoft.azure.eventprocessorhost.Lease.incrementEpoch()
    overload: com.microsoft.azure.eventprocessorhost._lease.incrementEpoch*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 95
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="d0a0c-118">Die am häufigsten verwendete Vorgang auf dem Wert Epoche ist es nach einer Lease stehlen erhöht.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-118">The most common operation on the epoch value is incrementing it after stealing a lease.</span></span> <span data-ttu-id="d0a0c-119">Diese praktische Funktion ersetzt die Get-Inkrement-Set, die andernfalls erforderlich wären.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-119">This convenience function replaces the get-increment-set that would otherwise be required.</span></span></p>
      <p></p>
    syntax:
      content: public long incrementEpoch()
      return:
        type: 0364520f
        description: <p><span data-ttu-id="d0a0c-120">Der neue Wert der Epoche.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-120">The new value of the epoch.</span></span> </p>
  - uid: com.microsoft.azure.eventprocessorhost._lease.isExpired()
    id: isExpired()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: isExpired()
    nameWithType: Lease.isExpired()
    fullName: boolean com.microsoft.azure.eventprocessorhost.Lease.isExpired()
    overload: com.microsoft.azure.eventprocessorhost._lease.isExpired*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 160
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="d0a0c-121">Wenn eine Implementierung von <xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref> unterstützt das Konzept der Lease abläuft, und klicken Sie dann eine Klasse abgeleitet <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> kann zum Überschreiben dieser Funktion können Sie die Lease zu überprüfen und zurückgeben, ob es abgelaufen ist.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-121">If an implementation of <xref uid="com.microsoft.azure.eventprocessorhost._i_lease_manager" data-throw-if-not-resolved="false">ILeaseManager</xref> supports the concept of lease expiration, then a class derived from <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> may override this function to inspect the lease and return whether it has expired.</span></span></p>
      <p></p>
    syntax:
      content: public boolean isExpired()
      return:
        type: 4fc6e284
        description: '<p><span data-ttu-id="d0a0c-122">"true", wenn die Lease, false abgelaufen ist, wenn es noch gültig ist</span><span class="sxs-lookup"><span data-stu-id="d0a0c-122">true if the lease is expired, false if it is still valid</span></span> </p>'
    exceptions:
      - type: 8a99d4b0
        description: <p><span data-ttu-id="d0a0c-123">Eine Außerkraftsetzung beträchtlichen Arbeitsaufwand muss möglicherweise Ausnahmen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-123">An override which does significant work may need to throw exceptions.</span></span> </p>
  - uid: com.microsoft.azure.eventprocessorhost._lease.Lease()
    id: Lease()
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: Lease()
    nameWithType: Lease.Lease()
    fullName: com.microsoft.azure.eventprocessorhost.Lease.Lease()
    overload: com.microsoft.azure.eventprocessorhost._lease.Lease*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 33
    package: com.microsoft.azure.eventprocessorhost
    summary: <p><span data-ttu-id="d0a0c-124">Verwenden Sie nicht. nur für GSon Deserialisierungsprogramm hinzugefügt</span><span class="sxs-lookup"><span data-stu-id="d0a0c-124">Do not use; added only for GSon deserializer</span></span> </p>
    syntax:
      content: protected Lease()
  - uid: com.microsoft.azure.eventprocessorhost._lease.Lease(Lease)
    id: Lease(Lease)
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: Lease(Lease source)
    nameWithType: Lease.Lease(Lease source)
    fullName: com.microsoft.azure.eventprocessorhost.Lease.Lease(Lease source)
    overload: com.microsoft.azure.eventprocessorhost._lease.Lease*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 57
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="d0a0c-125">Erstellen einer <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> durch Duplizieren der angegebenen <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref>.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-125">Create a <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> by duplicating the given <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref>.</span></span></p>
      <p></p>
    syntax:
      content: public Lease(Lease source)
      parameters:
        - id: source
          type: com.microsoft.azure.eventprocessorhost._lease
  - uid: com.microsoft.azure.eventprocessorhost._lease.Lease(String)
    id: Lease(String)
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: Lease(String partitionId)
    nameWithType: Lease.Lease(String partitionId)
    fullName: com.microsoft.azure.eventprocessorhost.Lease.Lease(String partitionId)
    overload: com.microsoft.azure.eventprocessorhost._lease.Lease*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 43
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="d0a0c-126">Erstellen einer <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> für die angegebene Partition.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-126">Create a <xref uid="com.microsoft.azure.eventprocessorhost._lease" data-throw-if-not-resolved="false">Lease</xref> for the given partition.</span></span></p>
      <p></p>
    syntax:
      content: public Lease(String partitionId)
      parameters:
        - id: partitionId
          type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._lease.setEpoch(long)
    id: setEpoch(long)
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: setEpoch(long epoch)
    nameWithType: Lease.setEpoch(long epoch)
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setEpoch(long epoch)
    overload: com.microsoft.azure.eventprocessorhost._lease.setEpoch*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 84
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="d0a0c-127">Legen Sie den Beginn der Epoche-Wert.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-127">Set the epoch value.</span></span></p>
      <p></p>
    syntax:
      content: public void setEpoch(long epoch)
      parameters:
        - id: epoch
          type: 0364520f
  - uid: com.microsoft.azure.eventprocessorhost._lease.setOwner(String)
    id: setOwner(String)
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: setOwner(String owner)
    nameWithType: Lease.setOwner(String owner)
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setOwner(String owner)
    overload: com.microsoft.azure.eventprocessorhost._lease.setOwner*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 116
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="d0a0c-128">Legen Sie die Zeichenfolge Besitzer an.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-128">Set the owner string.</span></span> <span data-ttu-id="d0a0c-129">Verwendet, wenn ein Host eine Lease stiehlt.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-129">Used when a host steals a lease.</span></span></p>
      <p></p>
    syntax:
      content: public void setOwner(String owner)
      parameters:
        - id: owner
          type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._lease.setToken(String)
    id: setToken(String)
    parent: com.microsoft.azure.eventprocessorhost._lease
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    langs:
      - java
    name: setToken(String token)
    nameWithType: Lease.setToken(String token)
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setToken(String token)
    overload: com.microsoft.azure.eventprocessorhost._lease.setToken*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Lease.java
      startLine: 148
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="d0a0c-130">Legen Sie den Tokenwert ein.</span><span class="sxs-lookup"><span data-stu-id="d0a0c-130">Set the token value.</span></span></p>
      <p></p>
    syntax:
      content: public void setToken(String token)
      parameters:
        - id: token
          type: '26831127'
references:
  - uid: com.microsoft.azure.eventprocessorhost._lease.Lease*
    name: Lease
    nameWithType: Lease.Lease
    fullName: com.microsoft.azure.eventprocessorhost.Lease.Lease
    package: com.microsoft.azure.eventprocessorhost
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: com.microsoft.azure.eventprocessorhost._lease.getEpoch*
    name: getEpoch
    nameWithType: Lease.getEpoch
    fullName: long com.microsoft.azure.eventprocessorhost.Lease.getEpoch
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.setEpoch*
    name: setEpoch
    nameWithType: Lease.setEpoch
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setEpoch
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.incrementEpoch*
    name: incrementEpoch
    nameWithType: Lease.incrementEpoch
    fullName: long com.microsoft.azure.eventprocessorhost.Lease.incrementEpoch
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.getOwner*
    name: getOwner
    nameWithType: Lease.getOwner
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getOwner
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.setOwner*
    name: setOwner
    nameWithType: Lease.setOwner
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setOwner
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.getPartitionId*
    name: getPartitionId
    nameWithType: Lease.getPartitionId
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getPartitionId
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.getToken*
    name: getToken
    nameWithType: Lease.getToken
    fullName: String com.microsoft.azure.eventprocessorhost.Lease.getToken
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._lease.setToken*
    name: setToken
    nameWithType: Lease.setToken
    fullName: void com.microsoft.azure.eventprocessorhost.Lease.setToken
    package: com.microsoft.azure.eventprocessorhost
  - uid: 8a99d4b0
    spec.java:
      - name: Exception
        fullName: Exception
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.eventprocessorhost._lease.isExpired*
    name: isExpired
    nameWithType: Lease.isExpired
    fullName: boolean com.microsoft.azure.eventprocessorhost.Lease.isExpired
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._azure_blob_lease
  - uid: com.microsoft.azure.eventprocessorhost._lease
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    name: Lease
    nameWithType: Lease
    fullName: com.microsoft.azure.eventprocessorhost.Lease
    type: Class
    summary: "<p><span data-ttu-id=\"d0a0c-131\">\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> Klasse ist öffentlich, sodass, dass Sie fortgeschrittene Benutzer implementieren können ein <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0a0c-131\">\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> class is public so that advanced users can implement an <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>.</span></span> <span data-ttu-id=\"d0a0c-132\">Es sei denn, Sie implementieren <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> sollten keine Objekte dieser Klasse zu verarbeiten oder abgeleiteten Klassen direkt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0a0c-132\">Unless you are implementing <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> you should not have to deal with objects of this class or derived classes directly.</span></span> </p>\n\n<p><span data-ttu-id=\"d0a0c-133\">Bei der Implementierung einer <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> es möglicherweise erforderlich sein, leiten Sie von dieser Klasse ausführen, um weitere Informationen und IsExpired zu überschreiben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0a0c-133\">When implementing an <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> it may be necessary to derive from this class to carry around more information and override isExpired.</span></span> <span data-ttu-id=\"d0a0c-134\">Die Datenfelder wurde verlassen haben anstelle von privaten geschützt werden, da sie ein breites Spektrum aufweisen der Getter und Setter (mit Ausnahme der PartitionId, das unveränderlich ist) die bieten einen gleichwertigen Zugriff.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0a0c-134\">The data fields have been left private instead of protected because they have a full set of getters and setters (except partitionId, which is immutable) which provide equivalent access.</span></span> <span data-ttu-id=\"d0a0c-135\">Wenn AzureBlobLease zu implementieren, z. B. gab es keine Notwendigkeit mehr Zugriff als der Getter und Setter bereitstellen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0a0c-135\">When implementing AzureBlobLease, for example, there was no need for more access than the getters and setters provide.</span></span> </p>\n<p><span data-ttu-id=\"d0a0c-136\">Beachten Sie, dass eine <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> Objekt enthält nur Informationen zu einer Partition Lease.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0a0c-136\">Note that a <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> object just carries information about a partition lease.</span></span> <span data-ttu-id=\"d0a0c-137\">Die entsprechende Funktionalität zum Abrufen/erneuern/Freigabe eine Lease ist alles auf der <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0a0c-137\">The functionality to acquire/renew/release a lease is all on the <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>.</span></span> </p>"
    syntax: *ref_1
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    name: EventProcessorHost
    nameWithType: EventProcessorHost
    fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost
    type: Class
    syntax:
      content: public class EventProcessorHost
  - uid: com.microsoft.azure.eventprocessorhost._i_lease_manager
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._i_lease_manager.yml
    name: ILeaseManager
    nameWithType: ILeaseManager
    fullName: com.microsoft.azure.eventprocessorhost.ILeaseManager
    type: Interface
    syntax:
      content: public interface ILeaseManager