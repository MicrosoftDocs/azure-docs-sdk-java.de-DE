### YamlMime:ManagedReference
items:
  - uid: system.fabric._application_health_policy
    id: _application_health_policy
    parent: system.fabric
    children:
      - system.fabric._application_health_policy.ApplicationHealthPolicy()
      - system.fabric._application_health_policy.getDefaultServiceTypeHealthPolicy()
      - system.fabric._application_health_policy.getMaxPercentUnhealthyDeployedApplications()
      - system.fabric._application_health_policy.getServiceTypeHealthPolicyMap()
      - system.fabric._application_health_policy.isConsiderWarningAsError()
      - system.fabric._application_health_policy.setConsiderWarningAsError(boolean)
      - system.fabric._application_health_policy.setDefaultServiceTypeHealthPolicy(ServiceTypeHealthPolicy)
      - system.fabric._application_health_policy.setMaxPercentUnhealthyDeployedApplications(byte)
    href: system.fabric._application_health_policy.yml
    langs:
      - java
    name: ApplicationHealthPolicy
    nameWithType: ApplicationHealthPolicy
    fullName: system.fabric.ApplicationHealthPolicy
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthPolicy.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthPolicy.java
      startLine: 14
    package: system.fabric
    summary: '<p>Definiert eine Integritätsrichtlinie, die zur Bewertung der Integritäts einer Anwendung oder eines seiner untergeordneten Entitäten. </p>'
    syntax: &ref_1
      content: public class ApplicationHealthPolicy
    inheritance:
      - java.lang.Object
  - uid: system.fabric._application_health_policy.ApplicationHealthPolicy()
    id: ApplicationHealthPolicy()
    parent: system.fabric._application_health_policy
    href: system.fabric._application_health_policy.yml
    langs:
      - java
    name: ApplicationHealthPolicy()
    nameWithType: ApplicationHealthPolicy.ApplicationHealthPolicy()
    fullName: system.fabric.ApplicationHealthPolicy.ApplicationHealthPolicy()
    overload: system.fabric._application_health_policy.ApplicationHealthPolicy*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthPolicy.java
      startLine: 59
    package: system.fabric
    summary: "<p>Initialisiert eine neue Instanz der dem <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.ApplicationHealthPolicy</xref> Klasse. </p>\n<p>\r\n\r\n  <b>Beschreibung:</b> standardmäßig keine Fehler oder Warnungen toleriert werden. </p>"
    syntax:
      content: public ApplicationHealthPolicy()
  - uid: system.fabric._application_health_policy.getDefaultServiceTypeHealthPolicy()
    id: getDefaultServiceTypeHealthPolicy()
    parent: system.fabric._application_health_policy
    href: system.fabric._application_health_policy.yml
    langs:
      - java
    name: getDefaultServiceTypeHealthPolicy()
    nameWithType: ApplicationHealthPolicy.getDefaultServiceTypeHealthPolicy()
    fullName: ServiceTypeHealthPolicy system.fabric.ApplicationHealthPolicy.getDefaultServiceTypeHealthPolicy()
    overload: system.fabric._application_health_policy.getDefaultServiceTypeHealthPolicy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthPolicy.java
      startLine: 166
    package: system.fabric
    summary: |-
      <p>Ruft die Integritätsrichtlinie, die standardmäßig verwendet wird, um den Zustand eines Diensttyps auszuwerten.</p>
      <p></p>
    syntax: &ref_2
      content: public ServiceTypeHealthPolicy getDefaultServiceTypeHealthPolicy()
      return:
        type: system.fabric._service_type_health_policy
        description: '<p>Die <xref uid="system.fabric._service_type_health_policy" data-throw-if-not-resolved="false">system.fabric.ServiceTypeHealthPolicy</xref> verwendet, um die Integrität des Diensts-Typ zu ermitteln, ob keine dienstrichtlinie für den Typ definiert ist. </p>'
  - uid: system.fabric._application_health_policy.getMaxPercentUnhealthyDeployedApplications()
    id: getMaxPercentUnhealthyDeployedApplications()
    parent: system.fabric._application_health_policy
    href: system.fabric._application_health_policy.yml
    langs:
      - java
    name: getMaxPercentUnhealthyDeployedApplications()
    nameWithType: ApplicationHealthPolicy.getMaxPercentUnhealthyDeployedApplications()
    fullName: byte system.fabric.ApplicationHealthPolicy.getMaxPercentUnhealthyDeployedApplications()
    overload: system.fabric._application_health_policy.getMaxPercentUnhealthyDeployedApplications*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthPolicy.java
      startLine: 129
    package: system.fabric
    summary: "<p>Ruft den maximalen zulässigen Prozentsatz an fehlerhaften bereitgestellten Anwendungen ab.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>der Prozentsatz stellt den maximal zulässigen Prozentsatz der bereitgestellten Anwendungen, die fehlerhaft sein kann, bevor die Anwendung bei Fehler betrachtet wird. Dies wird berechnet durch Dividieren der Anzahl der fehlerhaften bereitgestellten Anwendungen über die Anzahl der Knoten, die die Anwendungen derzeit auf dem Cluster bereitgestellt werden. Die Berechnung wird aufgerundet, um einen Fehler auf einer kleinen Anzahl von Knoten zu tolerieren. Standardprozentsatz : null. </p>"
    syntax:
      content: public byte getMaxPercentUnhealthyDeployedApplications()
      return:
        type: d357ea40
        description: <p>Die maximal zulässige Prozentsatz fehlerhafter bereitgestellte Anwendungen. Zulässige Werte sind Byte-Werten von 0 bis 100. </p>
  - uid: system.fabric._application_health_policy.getServiceTypeHealthPolicyMap()
    id: getServiceTypeHealthPolicyMap()
    parent: system.fabric._application_health_policy
    href: system.fabric._application_health_policy.yml
    langs:
      - java
    name: getServiceTypeHealthPolicyMap()
    nameWithType: ApplicationHealthPolicy.getServiceTypeHealthPolicyMap()
    fullName: 'Map<String, ServiceTypeHealthPolicy> system.fabric.ApplicationHealthPolicy.getServiceTypeHealthPolicyMap()'
    overload: system.fabric._application_health_policy.getServiceTypeHealthPolicyMap*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthPolicy.java
      startLine: 198
    package: system.fabric
    summary: "<p>Ruft die Zuordnung mit <xref uid=\"system.fabric._service_type_health_policy\" data-throw-if-not-resolved=\"false\">system.fabric.ServiceTypeHealthPolicy</xref> pro Diensttypname.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>die Einträge in der Zuordnung ersetzen die Standard-Dienst Typ Integritätsrichtlinie für jeden Diensttyp angegeben. Beispielsweise können in einer Anwendung, die einen Diensttyp für zustandslose Gateway und einen Diensttyp für zustandsbehaftete Modul enthält, die Integritätsrichtlinien für die Zustandslose und zustandsbehaftete Dienste unterschiedlich konfiguriert sein. Mit der Richtlinie pro Diensttyp besteht eine detailliertere Kontrolle über die Integrität des Diensts zur Verfügung. </p>\n\n<p>Wenn keine Richtlinie für einen Dienstnamen Typ angegeben ist die <xref uid=\"system.fabric._application_health_policy.getDefaultServiceTypeHealthPolicy()\" data-throw-if-not-resolved=\"false\">system.fabric.ApplicationHealthPolicy#getDefaultServiceTypeHealthPolicy()</xref> zur Auswertung verwendet wird. </p>"
    syntax:
      content: 'public Map<String, ServiceTypeHealthPolicy> getServiceTypeHealthPolicyMap()'
      return:
        type: 2108f1f4system.fabric._service_type_health_policya08ddfce
        description: <p>Die Zuordnung mit einer Dienst-Typ-Integritätsrichtlinie pro Diensttypname. </p>
  - uid: system.fabric._application_health_policy.isConsiderWarningAsError()
    id: isConsiderWarningAsError()
    parent: system.fabric._application_health_policy
    href: system.fabric._application_health_policy.yml
    langs:
      - java
    name: isConsiderWarningAsError()
    nameWithType: ApplicationHealthPolicy.isConsiderWarningAsError()
    fullName: boolean system.fabric.ApplicationHealthPolicy.isConsiderWarningAsError()
    overload: system.fabric._application_health_policy.isConsiderWarningAsError*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthPolicy.java
      startLine: 99
    package: system.fabric
    summary: |-
      <p>Ruft einen booleschen Wert ab, der bestimmt, ob Berichte mit Status "Warnung" mit den gleichen Schweregrad als Fehler behandelt werden sollen.</p>
      <p></p>
    syntax:
      content: public boolean isConsiderWarningAsError()
      return:
        type: 4fc6e284
        description: '<p>"true", wenn Sie Berichte mit Status "Warnung" als Fehler behandelt werden sollen; "false", wenn Warnungen nicht als Fehler behandelt werden sollen. </p>'
  - uid: system.fabric._application_health_policy.setConsiderWarningAsError(boolean)
    id: setConsiderWarningAsError(boolean)
    parent: system.fabric._application_health_policy
    href: system.fabric._application_health_policy.yml
    langs:
      - java
    name: setConsiderWarningAsError(boolean considerWarningAsError)
    nameWithType: ApplicationHealthPolicy.setConsiderWarningAsError(boolean considerWarningAsError)
    fullName: void system.fabric.ApplicationHealthPolicy.setConsiderWarningAsError(boolean considerWarningAsError)
    overload: system.fabric._application_health_policy.setConsiderWarningAsError*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthPolicy.java
      startLine: 111
    package: system.fabric
    summary: |-
      <p>Legt einen booleschen Wert ab, der bestimmt, ob Berichte mit Status "Warnung" mit den gleichen Schweregrad als Fehler behandelt werden sollen.</p>
      <p></p>
    syntax:
      content: public void setConsiderWarningAsError(boolean considerWarningAsError)
      parameters:
        - id: considerWarningAsError
          type: 4fc6e284
          description: '<p>"true", wenn Sie Berichte mit Status "Warnung" als Fehler behandelt werden sollen; "false", wenn Warnungen nicht als Fehler behandelt werden sollen. </p>'
  - uid: system.fabric._application_health_policy.setDefaultServiceTypeHealthPolicy(ServiceTypeHealthPolicy)
    id: setDefaultServiceTypeHealthPolicy(ServiceTypeHealthPolicy)
    parent: system.fabric._application_health_policy
    href: system.fabric._application_health_policy.yml
    langs:
      - java
    name: setDefaultServiceTypeHealthPolicy(ServiceTypeHealthPolicy defaultServiceTypeHealthPolicy)
    nameWithType: ApplicationHealthPolicy.setDefaultServiceTypeHealthPolicy(ServiceTypeHealthPolicy defaultServiceTypeHealthPolicy)
    fullName: void system.fabric.ApplicationHealthPolicy.setDefaultServiceTypeHealthPolicy(ServiceTypeHealthPolicy defaultServiceTypeHealthPolicy)
    overload: system.fabric._application_health_policy.setDefaultServiceTypeHealthPolicy*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthPolicy.java
      startLine: 177
    package: system.fabric
    summary: |-
      <p>Legt die Integritätsrichtlinie, die standardmäßig verwendet wird, um den Zustand eines Diensttyps auszuwerten.</p>
      <p></p>
    syntax:
      content: public void setDefaultServiceTypeHealthPolicy(ServiceTypeHealthPolicy defaultServiceTypeHealthPolicy)
      parameters:
        - id: defaultServiceTypeHealthPolicy
          type: system.fabric._service_type_health_policy
          description: '<p>Die <xref uid="system.fabric._service_type_health_policy" data-throw-if-not-resolved="false">system.fabric.ServiceTypeHealthPolicy</xref> verwendet, um die Integrität des Diensts-Typ zu ermitteln, ob keine dienstrichtlinie für den Typ definiert ist. </p>'
  - uid: system.fabric._application_health_policy.setMaxPercentUnhealthyDeployedApplications(byte)
    id: setMaxPercentUnhealthyDeployedApplications(byte)
    parent: system.fabric._application_health_policy
    href: system.fabric._application_health_policy.yml
    langs:
      - java
    name: setMaxPercentUnhealthyDeployedApplications(byte maxPercentUnhealthyDeployedApplications)
    nameWithType: ApplicationHealthPolicy.setMaxPercentUnhealthyDeployedApplications(byte maxPercentUnhealthyDeployedApplications)
    fullName: void system.fabric.ApplicationHealthPolicy.setMaxPercentUnhealthyDeployedApplications(byte maxPercentUnhealthyDeployedApplications)
    overload: system.fabric._application_health_policy.setMaxPercentUnhealthyDeployedApplications*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationHealthPolicy.java
      startLine: 150
    package: system.fabric
    summary: "<p>Legt die maximal zulässige Prozentsatz fehlerhafter bereitgestellte Anwendungen.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>der Prozentsatz stellt den maximal zulässigen Prozentsatz der bereitgestellten Anwendungen, die fehlerhaft sein kann, bevor die Anwendung bei Fehler betrachtet wird. Dies wird berechnet durch Dividieren der Anzahl der fehlerhaften bereitgestellten Anwendungen über die Anzahl der Knoten, die die Anwendungen derzeit auf dem Cluster bereitgestellt werden. Die Berechnung wird aufgerundet, um einen Fehler auf einer kleinen Anzahl von Knoten zu tolerieren. Standardprozentsatz : null. </p>\n\n<p></p>"
    syntax:
      content: public void setMaxPercentUnhealthyDeployedApplications(byte maxPercentUnhealthyDeployedApplications)
      parameters:
        - id: maxPercentUnhealthyDeployedApplications
          type: d357ea40
          description: <p>Die maximal zulässige Prozentsatz fehlerhafter bereitgestellte Anwendungen. Zulässige Werte sind Byte-Werten von 0 bis 100. </p>
    exceptions:
      - type: 3c87bd19
        description: <p>Der angegebene Wert lag außerhalb des Bereichs von ganzzahligen Werten von 0 bis 100. </p>
references:
  - uid: system.fabric._application_health_policy.ApplicationHealthPolicy*
    name: ApplicationHealthPolicy
    nameWithType: ApplicationHealthPolicy.ApplicationHealthPolicy
    fullName: system.fabric.ApplicationHealthPolicy.ApplicationHealthPolicy
    package: system.fabric
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: system.fabric._application_health_policy.isConsiderWarningAsError*
    name: isConsiderWarningAsError
    nameWithType: ApplicationHealthPolicy.isConsiderWarningAsError
    fullName: boolean system.fabric.ApplicationHealthPolicy.isConsiderWarningAsError
    package: system.fabric
  - uid: system.fabric._application_health_policy.setConsiderWarningAsError*
    name: setConsiderWarningAsError
    nameWithType: ApplicationHealthPolicy.setConsiderWarningAsError
    fullName: void system.fabric.ApplicationHealthPolicy.setConsiderWarningAsError
    package: system.fabric
  - uid: d357ea40
    spec.java:
      - name: byte
        fullName: byte
  - uid: system.fabric._application_health_policy.getMaxPercentUnhealthyDeployedApplications*
    name: getMaxPercentUnhealthyDeployedApplications
    nameWithType: ApplicationHealthPolicy.getMaxPercentUnhealthyDeployedApplications
    fullName: byte system.fabric.ApplicationHealthPolicy.getMaxPercentUnhealthyDeployedApplications
    package: system.fabric
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: system.fabric._application_health_policy.setMaxPercentUnhealthyDeployedApplications*
    name: setMaxPercentUnhealthyDeployedApplications
    nameWithType: ApplicationHealthPolicy.setMaxPercentUnhealthyDeployedApplications
    fullName: void system.fabric.ApplicationHealthPolicy.setMaxPercentUnhealthyDeployedApplications
    package: system.fabric
  - uid: system.fabric._application_health_policy.getDefaultServiceTypeHealthPolicy*
    name: getDefaultServiceTypeHealthPolicy
    nameWithType: ApplicationHealthPolicy.getDefaultServiceTypeHealthPolicy
    fullName: ServiceTypeHealthPolicy system.fabric.ApplicationHealthPolicy.getDefaultServiceTypeHealthPolicy
    package: system.fabric
  - uid: system.fabric._application_health_policy.setDefaultServiceTypeHealthPolicy*
    name: setDefaultServiceTypeHealthPolicy
    nameWithType: ApplicationHealthPolicy.setDefaultServiceTypeHealthPolicy
    fullName: void system.fabric.ApplicationHealthPolicy.setDefaultServiceTypeHealthPolicy
    package: system.fabric
  - uid: 2108f1f4system.fabric._service_type_health_policya08ddfce
    spec.java:
      - name: 'Map<String, '
        fullName: 'Map<String, '
      - uid: system.fabric._service_type_health_policy
        name: ServiceTypeHealthPolicy
        fullName: system.fabric.ServiceTypeHealthPolicy
        href: system.fabric._service_type_health_policy.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._application_health_policy.getServiceTypeHealthPolicyMap*
    name: getServiceTypeHealthPolicyMap
    nameWithType: ApplicationHealthPolicy.getServiceTypeHealthPolicyMap
    fullName: 'Map<String, ServiceTypeHealthPolicy> system.fabric.ApplicationHealthPolicy.getServiceTypeHealthPolicyMap'
    package: system.fabric
  - uid: system.fabric._service_type_health_policy
    parent: system.fabric
    href: system.fabric._service_type_health_policy.yml
    name: ServiceTypeHealthPolicy
    nameWithType: ServiceTypeHealthPolicy
    fullName: system.fabric.ServiceTypeHealthPolicy
    type: Class
    summary: '<p>Stellt die Integritätsrichtlinie, die zur Bewertung der Integritäts von Diensten, die zu einem Diensttyp gehören. </p>'
    syntax:
      content: public class ServiceTypeHealthPolicy
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection
  - uid: system.fabric._application_health_policy
    parent: system.fabric
    href: system.fabric._application_health_policy.yml
    name: ApplicationHealthPolicy
    nameWithType: ApplicationHealthPolicy
    fullName: system.fabric.ApplicationHealthPolicy
    type: Class
    summary: '<p>Definiert eine Integritätsrichtlinie, die zur Bewertung der Integritäts einer Anwendung oder eines seiner untergeordneten Entitäten. </p>'
    syntax: *ref_1
  - uid: system.fabric._application_health_policy.getDefaultServiceTypeHealthPolicy()
    parent: system.fabric._application_health_policy
    href: system.fabric._application_health_policy.yml
    name: getDefaultServiceTypeHealthPolicy()
    nameWithType: ApplicationHealthPolicy.getDefaultServiceTypeHealthPolicy()
    fullName: ServiceTypeHealthPolicy system.fabric.ApplicationHealthPolicy.getDefaultServiceTypeHealthPolicy()
    type: Method
    summary: |-
      <p>Ruft die Integritätsrichtlinie, die standardmäßig verwendet wird, um den Zustand eines Diensttyps auszuwerten.</p>
      <p></p>
    syntax: *ref_2