### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.storage.blob._sub_stream
    id: _sub_stream
    parent: com.microsoft.azure.storage.blob
    children:
      - com.microsoft.azure.storage.blob._sub_stream.close()
      - com.microsoft.azure.storage.blob._sub_stream.getInputStream()
      - com.microsoft.azure.storage.blob._sub_stream.getLength()
      - com.microsoft.azure.storage.blob._sub_stream.mark(int)
      - com.microsoft.azure.storage.blob._sub_stream.markSupported()
      - com.microsoft.azure.storage.blob._sub_stream.read()
      - 'com.microsoft.azure.storage.blob._sub_stream.read(byte [])'
      - 'com.microsoft.azure.storage.blob._sub_stream.read(byte [],int,int)'
      - com.microsoft.azure.storage.blob._sub_stream.reset()
      - com.microsoft.azure.storage.blob._sub_stream.skip(long)
      - 'com.microsoft.azure.storage.blob._sub_stream.SubStream(InputStream,long,long,Object)'
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: SubStream
    nameWithType: SubStream
    fullName: com.microsoft.azure.storage.blob.SubStream
    type: Class
    source:
      remote: &ref_0
        path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
        branch: master
        repo: 'https://github.com/Azure/azure-storage-java'
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 24
    package: com.microsoft.azure.storage.blob
    syntax: &ref_1
      content: public class SubStream
    inheritance:
      - java.lang.Object
      - InputStream
  - uid: com.microsoft.azure.storage.blob._sub_stream.close()
    id: close()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: close()
    nameWithType: SubStream.close()
    fullName: void com.microsoft.azure.storage.blob.SubStream.close()
    overload: com.microsoft.azure.storage.blob._sub_stream.close*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 329
    package: com.microsoft.azure.storage.blob
    summary: <p><span data-ttu-id="73afb-101">Schließt die Unterdatenstrom an.</span><span class="sxs-lookup"><span data-stu-id="73afb-101">Closes the substream.</span></span> </p>
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.storage.blob._sub_stream.getInputStream()
    id: getInputStream()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: getInputStream()
    nameWithType: SubStream.getInputStream()
    fullName: InputStream com.microsoft.azure.storage.blob.SubStream.getInputStream()
    overload: com.microsoft.azure.storage.blob._sub_stream.getInputStream*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 91
    package: com.microsoft.azure.storage.blob
    syntax:
      content: public InputStream getInputStream()
      return:
        type: 76fcb9b7
  - uid: com.microsoft.azure.storage.blob._sub_stream.getLength()
    id: getLength()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: getLength()
    nameWithType: SubStream.getLength()
    fullName: long com.microsoft.azure.storage.blob.SubStream.getLength()
    overload: com.microsoft.azure.storage.blob._sub_stream.getLength*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 95
    package: com.microsoft.azure.storage.blob
    syntax:
      content: public long getLength()
      return:
        type: 0364520f
  - uid: com.microsoft.azure.storage.blob._sub_stream.mark(int)
    id: mark(int)
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: mark(int readlimit)
    nameWithType: SubStream.mark(int readlimit)
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.mark(int readlimit)
    overload: com.microsoft.azure.storage.blob._sub_stream.mark*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 295
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p><span data-ttu-id="73afb-102">Markiert die aktuelle Position in der Unterdatenstrom an.</span><span class="sxs-lookup"><span data-stu-id="73afb-102">Marks the current position in the substream.</span></span> <span data-ttu-id="73afb-103">Ein nachfolgender Aufruf an die Methode wird den Stream auf diese Position gespeicherte neu positionieren.</span><span class="sxs-lookup"><span data-stu-id="73afb-103">A subsequent call to the  method will reposition the stream to this stored position.</span></span></p>
      <p></p>
    syntax: &ref_4
      content: public synchronized void mark(int readlimit)
      parameters:
        - id: readlimit
          type: f75371fa
          description: '<p><span data-ttu-id="73afb-104">die maximale Anzahl von Bytes, die vor der Markierung Position gelesen werden kann, wird ungültig.</span><span class="sxs-lookup"><span data-stu-id="73afb-104">the maximum limit of bytes that can be read before the mark position becomes invalid.</span></span> </p>'
      return:
        type: 5c0b90ca
    see:
      - type: com.microsoft.azure.storage.blob._sub_stream.reset()
        description: '<span data-ttu-id="73afb-105">Unterdatenstrom:: reset()</span><span class="sxs-lookup"><span data-stu-id="73afb-105">SubStream::reset()</span></span>'
  - uid: com.microsoft.azure.storage.blob._sub_stream.markSupported()
    id: markSupported()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: markSupported()
    nameWithType: SubStream.markSupported()
    fullName: boolean com.microsoft.azure.storage.blob.SubStream.markSupported()
    overload: com.microsoft.azure.storage.blob._sub_stream.markSupported*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 321
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p><span data-ttu-id="73afb-106">Die Wrapperklasse Unterdatenstrom ist nur mit markable Eingabedatenströme kompatibel und daher wird immer "true" zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="73afb-106">The substream wrapper class is only compatible with markable input streams and hence will always return true.</span></span> <span data-ttu-id="73afb-107">Diese Anforderung wird im Klassenkonstruktor erzwungen.</span><span class="sxs-lookup"><span data-stu-id="73afb-107">This requirement is enforced in the class constructor.</span></span></p>
      <p></p>
    syntax:
      content: public boolean markSupported()
      return:
        type: 4fc6e284
        description: |-
          <p>

            <code>true</code>

          </p>
    see:
      - type: com.microsoft.azure.storage.blob._sub_stream.mark(int)
        description: '<span data-ttu-id="73afb-108">SubStream::mark(int)</span><span class="sxs-lookup"><span data-stu-id="73afb-108">SubStream::mark(int)</span></span>'
      - type: com.microsoft.azure.storage.blob._sub_stream.reset()
        description: '<span data-ttu-id="73afb-109">Unterdatenstrom:: reset()</span><span class="sxs-lookup"><span data-stu-id="73afb-109">SubStream::reset()</span></span>'
  - uid: com.microsoft.azure.storage.blob._sub_stream.read()
    id: read()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: read()
    nameWithType: SubStream.read()
    fullName: int com.microsoft.azure.storage.blob.SubStream.read()
    overload: com.microsoft.azure.storage.blob._sub_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 112
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p><span data-ttu-id="73afb-110">Liest das nächste Byte der Daten aus dem Stream umschlossene an.</span><span class="sxs-lookup"><span data-stu-id="73afb-110">Reads the next byte of data from the wrapped stream.</span></span> <span data-ttu-id="73afb-111">Das Byte mit dem Wert wird zurückgegeben, als ein in den Bereich an.</span><span class="sxs-lookup"><span data-stu-id="73afb-111">The value byte is returned as an  in the range  to .</span></span> <span data-ttu-id="73afb-112">Wenn keine Byte verfügbar ist, da das Ende der Unterdatenstrom erreicht wurde, wird der Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="73afb-112">If no byte is available because the end of the substream has been reached, the value  is returned.</span></span> <span data-ttu-id="73afb-113">Diese Methode blockiert, bis die Eingabedaten verfügbar ist, werden das Ende des Streams wird erkannt, oder eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="73afb-113">This method blocks until input data is available, the end of the stream is detected, or an exception is thrown.</span></span></p>
      <p></p>
    syntax: &ref_2
      content: public int read()
      return:
        type: f75371fa
        description: '<p><span data-ttu-id="73afb-114">das nächste Byte der Daten oder <code>-1</code> , wenn das Ende der Unterdatenstrom erreicht ist.</span><span class="sxs-lookup"><span data-stu-id="73afb-114">the next byte of data, or <code>-1</code> if the end of the substream is reached.</span></span> </p>'
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="73afb-115">Wenn ein e/a-Fehler auftritt.</span><span class="sxs-lookup"><span data-stu-id="73afb-115">if an I/O error occurs.</span></span> </p>
  - uid: 'com.microsoft.azure.storage.blob._sub_stream.read(byte [])'
    id: 'read(byte [])'
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: 'read(byte[] b)'
    nameWithType: 'SubStream.read(byte[] b)'
    fullName: 'synchronized int com.microsoft.azure.storage.blob.SubStream.read(byte[] b)'
    overload: com.microsoft.azure.storage.blob._sub_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 150
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p><span data-ttu-id="73afb-116">Liest eine Anzahl von Bytes aus dem umschlossenen Stream und speichert sie in den Pufferarray.</span><span class="sxs-lookup"><span data-stu-id="73afb-116">Reads some number of bytes from the wrapped stream and stores them into the buffer array .</span></span> <span data-ttu-id="73afb-117">Die Anzahl der tatsächlich gelesenen Bytes wird als eine ganze Zahl zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="73afb-117">The number of bytes actually read is returned as an integer.</span></span> <span data-ttu-id="73afb-118">Diese Methode blockiert, bis die Eingabedaten verfügbar ist, werden Ende der Datei erkannt wird, oder eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="73afb-118">This method blocks until input data is available, end of file is detected, or an exception is thrown.</span></span> </p>
      <p><span data-ttu-id="73afb-119">Wenn die Länge 0 (null) ist, kann keine Bytes gelesen werden und wird zurückgegeben; Andernfalls ist beim Lesen von mindestens 1 Byte.</span><span class="sxs-lookup"><span data-stu-id="73afb-119">If the length of  is zero, then no bytes are read and  is returned; otherwise, there is an attempt to read at least one byte.</span></span> <span data-ttu-id="73afb-120">Wenn keine Byte verfügbar ist, da die Unterdatenstrom am Ende der Datei ist der Wert wird zurückgegeben. Andernfalls ist mindestens ein Byte gelesen und in gespeichert.</span><span class="sxs-lookup"><span data-stu-id="73afb-120">If no byte is available because the substream is at the end of the file, the value  is returned; otherwise, at least one byte is read and stored into .</span></span> </p>
      <p><span data-ttu-id="73afb-121">Das erste gelesene Byte wird in das Element, das nächste Element an usw. gespeichert.</span><span class="sxs-lookup"><span data-stu-id="73afb-121">The first byte read is stored into element , the next one into , and so on.</span></span> <span data-ttu-id="73afb-122">Die Anzahl der gelesenen Bytes ist, darf höchstens, gleich der Länge.</span><span class="sxs-lookup"><span data-stu-id="73afb-122">The number of bytes read is, at most, equal to the length of .</span></span> <span data-ttu-id="73afb-123">Können <em>k</em> werden die Anzahl der Bytes, die tatsächlich gelesenen; diese Bytes gespeichert in Elementen durch <em>k</em>, verlassen Elemente <em>k</em> über nicht betroffen.</span><span class="sxs-lookup"><span data-stu-id="73afb-123">Let <em>k</em> be the number of bytes actually read; these bytes will be stored in elements  through <em>k</em>, leaving elements <em>k</em> through  unaffected.</span></span> </p>
      <p><span data-ttu-id="73afb-124">Die Methode für die Klasse hat dieselbe Wirkung wie das:</span><span class="sxs-lookup"><span data-stu-id="73afb-124">The  method for class  has the same effect as:</span></span> <pre></pre></p>
      <p></p>
    syntax:
      content: 'public synchronized int read(byte[] b)'
      parameters:
        - id: b
          type: ccd9418d
          description: '<p><span data-ttu-id="73afb-125">der Puffer, in dem die Daten gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="73afb-125">the buffer into which the data is read.</span></span> </p>'
      return:
        type: 3d3ee726
        description: '<p><span data-ttu-id="73afb-126">Die Gesamtanzahl der in den Puffer gelesenen Bytes oder <code>-1</code> , wenn keine Daten mehr vorhanden ist, da das Ende des Streams erreicht wurde.</span><span class="sxs-lookup"><span data-stu-id="73afb-126">the total number of bytes read into the buffer, or <code>-1</code> if there is no more data because the end of the stream has been reached.</span></span> </p>'
    exceptions:
      - type: cbf33bbe
        description: '<p><span data-ttu-id="73afb-127">Wenn das erste Byte nicht aus irgendeinem Grund als das Ende der Datei gelesen werden kann, wenn die umschlossene Datenstrom geschlossen wurde oder e/a-Fehler tritt auf, wenn eine andere.</span><span class="sxs-lookup"><span data-stu-id="73afb-127">If the first byte cannot be read for any reason other than the end of the file, if the wrapped stream has been closed, or if some other I/O error occurs.</span></span> </p>'
      - type: 17c54119
        description: <p><span data-ttu-id="73afb-128">Wenn <code>b</code> ist <code>null</code>.</span><span class="sxs-lookup"><span data-stu-id="73afb-128">if <code>b</code> is <code>null</code>.</span></span> </p>
  - uid: 'com.microsoft.azure.storage.blob._sub_stream.read(byte [],int,int)'
    id: 'read(byte [],int,int)'
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: 'read(byte[] b, int off, int len)'
    nameWithType: 'SubStream.read(byte[] b, int off, int len)'
    fullName: 'synchronized int com.microsoft.azure.storage.blob.SubStream.read(byte[] b, int off, int len)'
    overload: com.microsoft.azure.storage.blob._sub_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 190
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p><span data-ttu-id="73afb-129">Liest bis zum Bytes an Daten aus der Unterdatenstrom.</span><span class="sxs-lookup"><span data-stu-id="73afb-129">Reads up to  bytes of data from the substream.</span></span> <span data-ttu-id="73afb-130">Puffert Daten aus den umschlossenen Stream zum Minimieren von Skip und Mehraufwand zu lesen.</span><span class="sxs-lookup"><span data-stu-id="73afb-130">Buffers data from the wrapped stream in order to minimize skip and read overhead.</span></span> <span data-ttu-id="73afb-131">Die ' WrappedStream ' wird nur aufgerufen werden, wenn die ReadBuffer erfüllen, kann nicht die read-Anforderung.</span><span class="sxs-lookup"><span data-stu-id="73afb-131">The wrappedstream will only be invoked if the readBuffer cannot fulfil the the read request.</span></span> <span data-ttu-id="73afb-132">Um gültige Ergebnisse sicherzustellen, muss die umschlossene Stream vor dem Lesen der Unterdatenstrom gekennzeichnet sein.</span><span class="sxs-lookup"><span data-stu-id="73afb-132">In order to ensure valid results, the wrapped stream must be marked prior to reading from the substream.</span></span> <span data-ttu-id="73afb-133">Dadurch können wir auf die relative Unterdatenstrom Position im Stream umschlossene zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="73afb-133">This allows us to reset to the relative substream position in the wrapped stream.</span></span> <span data-ttu-id="73afb-134">Die Anzahl der tatsächlich gelesenen Bytes wird als eine ganze Zahl zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="73afb-134">The number of bytes actually read is returned as an integer.</span></span> <span data-ttu-id="73afb-135">Alle diese Vorgänge werden synchron ausgeführt, in eine systeminterne Sperre, um sicherzustellen, dass keine anderen gleichzeitigen Anforderungen von Unterdatenstrom Instanzen Racebedingungen bewirken.</span><span class="sxs-lookup"><span data-stu-id="73afb-135">All these operations are done synchronously within an intrinsic lock to ensure other concurrent requests by substream instances do not result in race conditions.</span></span> </p>
      <p><span data-ttu-id="73afb-136">Der zugrunde liegenden Aufruf zum das Lesen des umschlossenen Stream wird blockiert, bis Eingabedaten verfügbar ist, Ende der Datei erkannt wird, oder eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="73afb-136">The underlying call to the read of the wrapped stream will blocks until input data is available, end of file is detected, or an exception is thrown.</span></span> </p>
      <p><span data-ttu-id="73afb-137">Wenn ist 0 (null), und klicken Sie dann keine Bytes gelesen werden und wird zurückgegeben. Andernfalls ist beim Lesen von mindestens 1 Byte.</span><span class="sxs-lookup"><span data-stu-id="73afb-137">If  is zero, then no bytes are read and  is returned; otherwise, there is an attempt to read at least one byte.</span></span> <span data-ttu-id="73afb-138">Wenn keine Byte verfügbar ist, da die Unterdatenstrom am Dateiende, ist der Wert wird zurückgegeben. Andernfalls ist mindestens ein Byte gelesen und in gespeichert.</span><span class="sxs-lookup"><span data-stu-id="73afb-138">If no byte is available because the substream is at end of file, the value  is returned; otherwise, at least one byte is read and stored into .</span></span></p>
      <p></p>
    syntax:
      content: 'public synchronized int read(byte[] b, int off, int len)'
      parameters:
        - id: b
          type: ccd9418d
          description: '<p><span data-ttu-id="73afb-139">der Puffer, in dem die Daten gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="73afb-139">the buffer into which the data is read.</span></span> </p>'
        - id: 'off'
          type: f75371fa
          description: <p><span data-ttu-id="73afb-140">der Anfangsoffset im Array <code>b</code> an dem die Daten geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="73afb-140">the start offset in array <code>b</code> at which the data is written.</span></span> </p>
        - id: len
          type: f75371fa
          description: <p><span data-ttu-id="73afb-141">die maximale Anzahl der zu lesenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="73afb-141">the maximum number of bytes to read.</span></span> </p>
      return:
        type: 3d3ee726
        description: '<p><span data-ttu-id="73afb-142">Die Gesamtanzahl der in den Puffer gelesenen Bytes oder <code>-1</code> , wenn keine Daten mehr vorhanden ist, da das Ende des Streams erreicht wurde.</span><span class="sxs-lookup"><span data-stu-id="73afb-142">the total number of bytes read into the buffer, or <code>-1</code> if there is no more data because the end of the stream has been reached.</span></span> </p>'
    exceptions:
      - type: cbf33bbe
        description: '<p><span data-ttu-id="73afb-143">Wenn das erste Byte nicht werden, die aus irgendeinem Grund als dem Ende der Datei gelesen kann oder umschlossene Stream geschlossen wurde, oder wenn eine andere e/a-Fehler auftritt.</span><span class="sxs-lookup"><span data-stu-id="73afb-143">If the first byte cannot be read for any reason other than end of file, or if the wrapped stream has been closed, or if some other I/O error occurs.</span></span> </p>'
      - type: 17c54119
        description: <p><span data-ttu-id="73afb-144">Wenn <code>b</code> ist <code>null</code>.</span><span class="sxs-lookup"><span data-stu-id="73afb-144">If <code>b</code> is <code>null</code>.</span></span> </p>
      - type: 473ec288
        description: '<p><span data-ttu-id="73afb-145">Wenn <code>off</code> negativ ist, <code>len</code> negativ ist, oder <code>len</code> ist größer als<code>b.length - off</code></span><span class="sxs-lookup"><span data-stu-id="73afb-145">If <code>off</code> is negative, <code>len</code> is negative, or <code>len</code> is greater than <code>b.length - off</code></span></span></p>'
    see:
      - type: com.microsoft.azure.storage.blob._sub_stream.read()
        description: '<span data-ttu-id="73afb-146">Unterdatenstrom:: ''Read()'' eingestellt</span><span class="sxs-lookup"><span data-stu-id="73afb-146">SubStream::read()</span></span>'
  - uid: com.microsoft.azure.storage.blob._sub_stream.reset()
    id: reset()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: reset()
    nameWithType: SubStream.reset()
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.reset()
    overload: com.microsoft.azure.storage.blob._sub_stream.reset*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 308
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p><span data-ttu-id="73afb-147">Positioniert die Unterdatenstrom Position, die dem Index, in dem die Methode zuletzt aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="73afb-147">Repositions the substream position to the index where the  method was last called.</span></span> </p>
      <p><span data-ttu-id="73afb-148">Die neue Position der zurücksetzen auf Unterdatenstrom wird bis zum nachfolgenden Lesevorgängen wirksam.</span><span class="sxs-lookup"><span data-stu-id="73afb-148">The new reset position on substream does not take effect until subsequent reads.</span></span></p>
      <p></p>
    syntax: &ref_3
      content: public synchronized void reset()
      return:
        type: 5c0b90ca
    see:
      - type: com.microsoft.azure.storage.blob._sub_stream.mark(int)
        description: '<span data-ttu-id="73afb-149">SubStream::mark(int)</span><span class="sxs-lookup"><span data-stu-id="73afb-149">SubStream::mark(int)</span></span>'
  - uid: com.microsoft.azure.storage.blob._sub_stream.skip(long)
    id: skip(long)
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: skip(long n)
    nameWithType: SubStream.skip(long n)
    fullName: long com.microsoft.azure.storage.blob.SubStream.skip(long n)
    overload: com.microsoft.azure.storage.blob._sub_stream.skip*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 276
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p><span data-ttu-id="73afb-150">Erhöht die aktuelle Position der Unterdatenstrom durch.</span><span class="sxs-lookup"><span data-stu-id="73afb-150">Advances the current position of the substream by .</span></span> <span data-ttu-id="73afb-151">Die Methode keine zugrunde liegende Methode der umschlossenen Stream-Klasse aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="73afb-151">The  method does not invoke the underlying  method of the wrapped stream class.</span></span> <span data-ttu-id="73afb-152">Das tatsächliche Überspringen von Bytes wird während der nachfolgenden Lesevorgängen Unterdatenstrom berücksichtigt werden.</span><span class="sxs-lookup"><span data-stu-id="73afb-152">The actual skipping of bytes will be accounted for during subsequent substream read operations.</span></span></p>
      <p></p>
    syntax:
      content: public long skip(long n)
      parameters:
        - id: 'n'
          type: 0364520f
          description: '<p><span data-ttu-id="73afb-153">die Anzahl der Bytes, die effektiv übersprungen werden.</span><span class="sxs-lookup"><span data-stu-id="73afb-153">the number of bytes to be effectively skipped.</span></span> </p>'
      return:
        type: 0364520f
        description: <p><span data-ttu-id="73afb-154">die tatsächliche Anzahl von Bytes übersprungen.</span><span class="sxs-lookup"><span data-stu-id="73afb-154">the actual number of bytes skipped.</span></span> </p>
  - uid: 'com.microsoft.azure.storage.blob._sub_stream.SubStream(InputStream,long,long,Object)'
    id: 'SubStream(InputStream,long,long,Object)'
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: 'SubStream(InputStream source, long startIndex, long streamLength, Object lock)'
    nameWithType: 'SubStream.SubStream(InputStream source, long startIndex, long streamLength, Object lock)'
    fullName: 'com.microsoft.azure.storage.blob.SubStream.SubStream(InputStream source, long startIndex, long streamLength, Object lock)'
    overload: com.microsoft.azure.storage.blob._sub_stream.SubStream*
    type: Constructor
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 64
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p><span data-ttu-id="73afb-155">Erstellt eine neue Unterdatenstrom-Instanz, die die umschlossene Datenstrom aus bis zu vorsieht.</span><span class="sxs-lookup"><span data-stu-id="73afb-155">Creates a new substream instance that partitions the wrapped stream  from  up to .</span></span> <span data-ttu-id="73afb-156">Jede Unterdatenstrom-Instanz, die das gleiche zugrunde liegende umschließt muss den gleichen gegenseitigen Ausschluss zum Vermeiden von Racebedingungen von gleichzeitigen Vorgängen freigeben.</span><span class="sxs-lookup"><span data-stu-id="73afb-156">Each substream instance that wraps the same underlying  must share the same mutual exclusion  to avoid race conditions from concurrent operations.</span></span></p>
      <p></p>
    syntax:
      content: 'public SubStream(InputStream source, long startIndex, long streamLength, Object lock)'
      parameters:
        - id: source
          type: 76fcb9b7
          description: '<p><span data-ttu-id="73afb-157">Markable InputStream, die umschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="73afb-157">The markable InputStream to be wrapped.</span></span> </p>'
        - id: startIndex
          type: 0364520f
          description: '<p><span data-ttu-id="73afb-158">Ein gültiger Index in der umschlossenen Stream, in dem die Unterdatenstrom logisch beginnen soll.</span><span class="sxs-lookup"><span data-stu-id="73afb-158">A valid index in the wrapped stream where the substream should logically begin.</span></span> </p>'
        - id: streamLength
          type: 0364520f
          description: <p><span data-ttu-id="73afb-159">Die Länge der Unterdatenstrom.</span><span class="sxs-lookup"><span data-stu-id="73afb-159">The length of the substream.</span></span> </p>
        - id: lock
          type: '79317049'
          description: '<p><span data-ttu-id="73afb-160">Eine systeminterne Sperre um threadsichere, gleichzeitige Operationen an Unterdatenstrom-Instanzen, die die gleichen InputStream wrapping sicherzustellen.</span><span class="sxs-lookup"><span data-stu-id="73afb-160">An intrinsic lock to ensure thread-safe, concurrent operations on substream instances wrapping the same InputStream.</span></span> </p>'
    exceptions:
      - type: 8a99d4b0
references:
  - uid: 8a99d4b0
    spec.java:
      - name: Exception
        fullName: Exception
  - uid: 76fcb9b7
    spec.java:
      - name: InputStream
        fullName: InputStream
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: com.microsoft.azure.storage.blob._sub_stream.SubStream*
    name: SubStream
    nameWithType: SubStream.SubStream
    fullName: com.microsoft.azure.storage.blob.SubStream.SubStream
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream.getInputStream*
    name: getInputStream
    nameWithType: SubStream.getInputStream
    fullName: InputStream com.microsoft.azure.storage.blob.SubStream.getInputStream
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream.getLength*
    name: getLength
    nameWithType: SubStream.getLength
    fullName: long com.microsoft.azure.storage.blob.SubStream.getLength
    package: com.microsoft.azure.storage.blob
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.storage.blob._sub_stream.read*
    name: read
    nameWithType: SubStream.read
    fullName: int com.microsoft.azure.storage.blob.SubStream.read
    package: com.microsoft.azure.storage.blob
  - uid: 17c54119
    spec.java:
      - name: NullPointerException
        fullName: NullPointerException
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: 3d3ee726
    spec.java:
      - name: synchronized int
        fullName: synchronized int
  - uid: 473ec288
    spec.java:
      - name: IndexOutOfBoundsException
        fullName: IndexOutOfBoundsException
  - uid: com.microsoft.azure.storage.blob._sub_stream.skip*
    name: skip
    nameWithType: SubStream.skip
    fullName: long com.microsoft.azure.storage.blob.SubStream.skip
    package: com.microsoft.azure.storage.blob
  - uid: 5c0b90ca
    spec.java:
      - name: synchronized void
        fullName: synchronized void
  - uid: com.microsoft.azure.storage.blob._sub_stream.mark*
    name: mark
    nameWithType: SubStream.mark
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.mark
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream.reset*
    name: reset
    nameWithType: SubStream.reset
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.reset
    package: com.microsoft.azure.storage.blob
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.storage.blob._sub_stream.markSupported*
    name: markSupported
    nameWithType: SubStream.markSupported
    fullName: boolean com.microsoft.azure.storage.blob.SubStream.markSupported
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream.close*
    name: close
    nameWithType: SubStream.close
    fullName: void com.microsoft.azure.storage.blob.SubStream.close
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream
    parent: com.microsoft.azure.storage.blob
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    name: SubStream
    nameWithType: SubStream
    fullName: com.microsoft.azure.storage.blob.SubStream
    type: Class
    syntax: *ref_1
  - uid: com.microsoft.azure.storage.blob._sub_stream.read()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    name: read()
    nameWithType: SubStream.read()
    fullName: int com.microsoft.azure.storage.blob.SubStream.read()
    type: Method
    summary: |-
      <p><span data-ttu-id="73afb-161">Liest das nächste Byte der Daten aus dem Stream umschlossene an.</span><span class="sxs-lookup"><span data-stu-id="73afb-161">Reads the next byte of data from the wrapped stream.</span></span> <span data-ttu-id="73afb-162">Das Byte mit dem Wert wird zurückgegeben, als ein in den Bereich an.</span><span class="sxs-lookup"><span data-stu-id="73afb-162">The value byte is returned as an  in the range  to .</span></span> <span data-ttu-id="73afb-163">Wenn keine Byte verfügbar ist, da das Ende der Unterdatenstrom erreicht wurde, wird der Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="73afb-163">If no byte is available because the end of the substream has been reached, the value  is returned.</span></span> <span data-ttu-id="73afb-164">Diese Methode blockiert, bis die Eingabedaten verfügbar ist, werden das Ende des Streams wird erkannt, oder eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="73afb-164">This method blocks until input data is available, the end of the stream is detected, or an exception is thrown.</span></span></p>
      <p></p>
    syntax: *ref_2
  - uid: com.microsoft.azure.storage.blob._sub_stream.reset()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    name: reset()
    nameWithType: SubStream.reset()
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.reset()
    type: Method
    summary: |-
      <p><span data-ttu-id="73afb-165">Positioniert die Unterdatenstrom Position, die dem Index, in dem die Methode zuletzt aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="73afb-165">Repositions the substream position to the index where the  method was last called.</span></span> </p>
      <p><span data-ttu-id="73afb-166">Die neue Position der zurücksetzen auf Unterdatenstrom wird bis zum nachfolgenden Lesevorgängen wirksam.</span><span class="sxs-lookup"><span data-stu-id="73afb-166">The new reset position on substream does not take effect until subsequent reads.</span></span></p>
      <p></p>
    syntax: *ref_3
  - uid: com.microsoft.azure.storage.blob._sub_stream.mark(int)
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    name: mark(int readlimit)
    nameWithType: SubStream.mark(int readlimit)
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.mark(int readlimit)
    type: Method
    summary: |-
      <p><span data-ttu-id="73afb-167">Markiert die aktuelle Position in der Unterdatenstrom an.</span><span class="sxs-lookup"><span data-stu-id="73afb-167">Marks the current position in the substream.</span></span> <span data-ttu-id="73afb-168">Ein nachfolgender Aufruf an die Methode wird den Stream auf diese Position gespeicherte neu positionieren.</span><span class="sxs-lookup"><span data-stu-id="73afb-168">A subsequent call to the  method will reposition the stream to this stored position.</span></span></p>
      <p></p>
    syntax: *ref_4