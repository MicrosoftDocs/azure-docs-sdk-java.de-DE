### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.storage.blob._sub_stream
    id: _sub_stream
    parent: com.microsoft.azure.storage.blob
    children:
      - com.microsoft.azure.storage.blob._sub_stream.close()
      - com.microsoft.azure.storage.blob._sub_stream.getInputStream()
      - com.microsoft.azure.storage.blob._sub_stream.getLength()
      - com.microsoft.azure.storage.blob._sub_stream.mark(int)
      - com.microsoft.azure.storage.blob._sub_stream.markSupported()
      - com.microsoft.azure.storage.blob._sub_stream.read()
      - 'com.microsoft.azure.storage.blob._sub_stream.read(byte [])'
      - 'com.microsoft.azure.storage.blob._sub_stream.read(byte [],int,int)'
      - com.microsoft.azure.storage.blob._sub_stream.reset()
      - com.microsoft.azure.storage.blob._sub_stream.skip(long)
      - 'com.microsoft.azure.storage.blob._sub_stream.SubStream(InputStream,long,long,Object)'
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: SubStream
    nameWithType: SubStream
    fullName: com.microsoft.azure.storage.blob.SubStream
    type: Class
    source:
      remote: &ref_0
        path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
        branch: master
        repo: 'https://github.com/Azure/azure-storage-java'
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 24
    package: com.microsoft.azure.storage.blob
    syntax: &ref_1
      content: public class SubStream
    inheritance:
      - java.lang.Object
      - InputStream
  - uid: com.microsoft.azure.storage.blob._sub_stream.close()
    id: close()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: close()
    nameWithType: SubStream.close()
    fullName: void com.microsoft.azure.storage.blob.SubStream.close()
    overload: com.microsoft.azure.storage.blob._sub_stream.close*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 329
    package: com.microsoft.azure.storage.blob
    summary: <p>Schließt die Unterdatenstrom an. </p>
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.storage.blob._sub_stream.getInputStream()
    id: getInputStream()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: getInputStream()
    nameWithType: SubStream.getInputStream()
    fullName: InputStream com.microsoft.azure.storage.blob.SubStream.getInputStream()
    overload: com.microsoft.azure.storage.blob._sub_stream.getInputStream*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 91
    package: com.microsoft.azure.storage.blob
    syntax:
      content: public InputStream getInputStream()
      return:
        type: 76fcb9b7
  - uid: com.microsoft.azure.storage.blob._sub_stream.getLength()
    id: getLength()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: getLength()
    nameWithType: SubStream.getLength()
    fullName: long com.microsoft.azure.storage.blob.SubStream.getLength()
    overload: com.microsoft.azure.storage.blob._sub_stream.getLength*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 95
    package: com.microsoft.azure.storage.blob
    syntax:
      content: public long getLength()
      return:
        type: 0364520f
  - uid: com.microsoft.azure.storage.blob._sub_stream.mark(int)
    id: mark(int)
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: mark(int readlimit)
    nameWithType: SubStream.mark(int readlimit)
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.mark(int readlimit)
    overload: com.microsoft.azure.storage.blob._sub_stream.mark*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 295
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p>Markiert die aktuelle Position in der Unterdatenstrom an. Ein nachfolgender Aufruf an die Methode wird den Stream auf diese Position gespeicherte neu positionieren.</p>
      <p></p>
    syntax: &ref_4
      content: public synchronized void mark(int readlimit)
      parameters:
        - id: readlimit
          type: f75371fa
          description: '<p>die maximale Anzahl von Bytes, die vor der Markierung Position gelesen werden kann, wird ungültig. </p>'
      return:
        type: 5c0b90ca
    see:
      - type: com.microsoft.azure.storage.blob._sub_stream.reset()
        description: 'Unterdatenstrom:: reset()'
  - uid: com.microsoft.azure.storage.blob._sub_stream.markSupported()
    id: markSupported()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: markSupported()
    nameWithType: SubStream.markSupported()
    fullName: boolean com.microsoft.azure.storage.blob.SubStream.markSupported()
    overload: com.microsoft.azure.storage.blob._sub_stream.markSupported*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 321
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p>Die Wrapperklasse Unterdatenstrom ist nur mit markable Eingabedatenströme kompatibel und daher wird immer "true" zurückgeben. Diese Anforderung wird im Klassenkonstruktor erzwungen.</p>
      <p></p>
    syntax:
      content: public boolean markSupported()
      return:
        type: 4fc6e284
        description: |-
          <p>

            <code>true</code>

          </p>
    see:
      - type: com.microsoft.azure.storage.blob._sub_stream.mark(int)
        description: 'SubStream::mark(int)'
      - type: com.microsoft.azure.storage.blob._sub_stream.reset()
        description: 'Unterdatenstrom:: reset()'
  - uid: com.microsoft.azure.storage.blob._sub_stream.read()
    id: read()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: read()
    nameWithType: SubStream.read()
    fullName: int com.microsoft.azure.storage.blob.SubStream.read()
    overload: com.microsoft.azure.storage.blob._sub_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 112
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p>Liest das nächste Byte der Daten aus dem Stream umschlossene an. Das Byte mit dem Wert wird zurückgegeben, als ein in den Bereich an. Wenn keine Byte verfügbar ist, da das Ende der Unterdatenstrom erreicht wurde, wird der Wert zurückgegeben. Diese Methode blockiert, bis die Eingabedaten verfügbar ist, werden das Ende des Streams wird erkannt, oder eine Ausnahme ausgelöst.</p>
      <p></p>
    syntax: &ref_2
      content: public int read()
      return:
        type: f75371fa
        description: '<p>das nächste Byte der Daten oder <code>-1</code> , wenn das Ende der Unterdatenstrom erreicht ist. </p>'
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn ein e/a-Fehler auftritt. </p>
  - uid: 'com.microsoft.azure.storage.blob._sub_stream.read(byte [])'
    id: 'read(byte [])'
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: 'read(byte[] b)'
    nameWithType: 'SubStream.read(byte[] b)'
    fullName: 'synchronized int com.microsoft.azure.storage.blob.SubStream.read(byte[] b)'
    overload: com.microsoft.azure.storage.blob._sub_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 150
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p>Liest eine Anzahl von Bytes aus dem umschlossenen Stream und speichert sie in den Pufferarray. Die Anzahl der tatsächlich gelesenen Bytes wird als eine ganze Zahl zurückgegeben. Diese Methode blockiert, bis die Eingabedaten verfügbar ist, werden Ende der Datei erkannt wird, oder eine Ausnahme ausgelöst. </p>
      <p>Wenn die Länge 0 (null) ist, kann keine Bytes gelesen werden und wird zurückgegeben; Andernfalls ist beim Lesen von mindestens 1 Byte. Wenn keine Byte verfügbar ist, da die Unterdatenstrom am Ende der Datei ist der Wert wird zurückgegeben. Andernfalls ist mindestens ein Byte gelesen und in gespeichert. </p>
      <p>Das erste gelesene Byte wird in das Element, das nächste Element an usw. gespeichert. Die Anzahl der gelesenen Bytes ist, darf höchstens, gleich der Länge. Können <em>k</em> werden die Anzahl der Bytes, die tatsächlich gelesenen; diese Bytes gespeichert in Elementen durch <em>k</em>, verlassen Elemente <em>k</em> über nicht betroffen. </p>
      <p>Die Methode für die Klasse hat dieselbe Wirkung wie das: <pre></pre></p>
      <p></p>
    syntax:
      content: 'public synchronized int read(byte[] b)'
      parameters:
        - id: b
          type: ccd9418d
          description: '<p>der Puffer, in dem die Daten gelesen werden. </p>'
      return:
        type: 3d3ee726
        description: '<p>Die Gesamtanzahl der in den Puffer gelesenen Bytes oder <code>-1</code> , wenn keine Daten mehr vorhanden ist, da das Ende des Streams erreicht wurde. </p>'
    exceptions:
      - type: cbf33bbe
        description: '<p>Wenn das erste Byte nicht aus irgendeinem Grund als das Ende der Datei gelesen werden kann, wenn die umschlossene Datenstrom geschlossen wurde oder e/a-Fehler tritt auf, wenn eine andere. </p>'
      - type: 17c54119
        description: <p>Wenn <code>b</code> ist <code>null</code>. </p>
  - uid: 'com.microsoft.azure.storage.blob._sub_stream.read(byte [],int,int)'
    id: 'read(byte [],int,int)'
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: 'read(byte[] b, int off, int len)'
    nameWithType: 'SubStream.read(byte[] b, int off, int len)'
    fullName: 'synchronized int com.microsoft.azure.storage.blob.SubStream.read(byte[] b, int off, int len)'
    overload: com.microsoft.azure.storage.blob._sub_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 190
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p>Liest bis zum Bytes an Daten aus der Unterdatenstrom. Puffert Daten aus den umschlossenen Stream zum Minimieren von Skip und Mehraufwand zu lesen. Die ' WrappedStream ' wird nur aufgerufen werden, wenn die ReadBuffer erfüllen, kann nicht die read-Anforderung. Um gültige Ergebnisse sicherzustellen, muss die umschlossene Stream vor dem Lesen der Unterdatenstrom gekennzeichnet sein. Dadurch können wir auf die relative Unterdatenstrom Position im Stream umschlossene zurückgesetzt. Die Anzahl der tatsächlich gelesenen Bytes wird als eine ganze Zahl zurückgegeben. Alle diese Vorgänge werden synchron ausgeführt, in eine systeminterne Sperre, um sicherzustellen, dass keine anderen gleichzeitigen Anforderungen von Unterdatenstrom Instanzen Racebedingungen bewirken. </p>
      <p>Der zugrunde liegenden Aufruf zum das Lesen des umschlossenen Stream wird blockiert, bis Eingabedaten verfügbar ist, Ende der Datei erkannt wird, oder eine Ausnahme ausgelöst. </p>
      <p>Wenn ist 0 (null), und klicken Sie dann keine Bytes gelesen werden und wird zurückgegeben. Andernfalls ist beim Lesen von mindestens 1 Byte. Wenn keine Byte verfügbar ist, da die Unterdatenstrom am Dateiende, ist der Wert wird zurückgegeben. Andernfalls ist mindestens ein Byte gelesen und in gespeichert.</p>
      <p></p>
    syntax:
      content: 'public synchronized int read(byte[] b, int off, int len)'
      parameters:
        - id: b
          type: ccd9418d
          description: '<p>der Puffer, in dem die Daten gelesen werden. </p>'
        - id: 'off'
          type: f75371fa
          description: <p>der Anfangsoffset im Array <code>b</code> an dem die Daten geschrieben werden. </p>
        - id: len
          type: f75371fa
          description: <p>die maximale Anzahl der zu lesenden Bytes. </p>
      return:
        type: 3d3ee726
        description: '<p>Die Gesamtanzahl der in den Puffer gelesenen Bytes oder <code>-1</code> , wenn keine Daten mehr vorhanden ist, da das Ende des Streams erreicht wurde. </p>'
    exceptions:
      - type: cbf33bbe
        description: '<p>Wenn das erste Byte nicht werden, die aus irgendeinem Grund als dem Ende der Datei gelesen kann oder umschlossene Stream geschlossen wurde, oder wenn eine andere e/a-Fehler auftritt. </p>'
      - type: 17c54119
        description: <p>Wenn <code>b</code> ist <code>null</code>. </p>
      - type: 473ec288
        description: '<p>Wenn <code>off</code> negativ ist, <code>len</code> negativ ist, oder <code>len</code> ist größer als<code>b.length - off</code></p>'
    see:
      - type: com.microsoft.azure.storage.blob._sub_stream.read()
        description: 'Unterdatenstrom:: ''Read()'' eingestellt'
  - uid: com.microsoft.azure.storage.blob._sub_stream.reset()
    id: reset()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: reset()
    nameWithType: SubStream.reset()
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.reset()
    overload: com.microsoft.azure.storage.blob._sub_stream.reset*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 308
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p>Positioniert die Unterdatenstrom Position, die dem Index, in dem die Methode zuletzt aufgerufen wurde. </p>
      <p>Die neue Position der zurücksetzen auf Unterdatenstrom wird bis zum nachfolgenden Lesevorgängen wirksam.</p>
      <p></p>
    syntax: &ref_3
      content: public synchronized void reset()
      return:
        type: 5c0b90ca
    see:
      - type: com.microsoft.azure.storage.blob._sub_stream.mark(int)
        description: 'SubStream::mark(int)'
  - uid: com.microsoft.azure.storage.blob._sub_stream.skip(long)
    id: skip(long)
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: skip(long n)
    nameWithType: SubStream.skip(long n)
    fullName: long com.microsoft.azure.storage.blob.SubStream.skip(long n)
    overload: com.microsoft.azure.storage.blob._sub_stream.skip*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 276
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p>Erhöht die aktuelle Position der Unterdatenstrom durch. Die Methode keine zugrunde liegende Methode der umschlossenen Stream-Klasse aufgerufen werden. Das tatsächliche Überspringen von Bytes wird während der nachfolgenden Lesevorgängen Unterdatenstrom berücksichtigt werden.</p>
      <p></p>
    syntax:
      content: public long skip(long n)
      parameters:
        - id: 'n'
          type: 0364520f
          description: '<p>die Anzahl der Bytes, die effektiv übersprungen werden. </p>'
      return:
        type: 0364520f
        description: <p>die tatsächliche Anzahl von Bytes übersprungen. </p>
  - uid: 'com.microsoft.azure.storage.blob._sub_stream.SubStream(InputStream,long,long,Object)'
    id: 'SubStream(InputStream,long,long,Object)'
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    langs:
      - java
    name: 'SubStream(InputStream source, long startIndex, long streamLength, Object lock)'
    nameWithType: 'SubStream.SubStream(InputStream source, long startIndex, long streamLength, Object lock)'
    fullName: 'com.microsoft.azure.storage.blob.SubStream.SubStream(InputStream source, long startIndex, long streamLength, Object lock)'
    overload: com.microsoft.azure.storage.blob._sub_stream.SubStream*
    type: Constructor
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/blob/SubStream.java
      startLine: 64
    package: com.microsoft.azure.storage.blob
    summary: |-
      <p>Erstellt eine neue Unterdatenstrom-Instanz, die die umschlossene Datenstrom aus bis zu vorsieht. Jede Unterdatenstrom-Instanz, die das gleiche zugrunde liegende umschließt muss den gleichen gegenseitigen Ausschluss zum Vermeiden von Racebedingungen von gleichzeitigen Vorgängen freigeben.</p>
      <p></p>
    syntax:
      content: 'public SubStream(InputStream source, long startIndex, long streamLength, Object lock)'
      parameters:
        - id: source
          type: 76fcb9b7
          description: '<p>Markable InputStream, die umschlossen werden. </p>'
        - id: startIndex
          type: 0364520f
          description: '<p>Ein gültiger Index in der umschlossenen Stream, in dem die Unterdatenstrom logisch beginnen soll. </p>'
        - id: streamLength
          type: 0364520f
          description: <p>Die Länge der Unterdatenstrom. </p>
        - id: lock
          type: '79317049'
          description: '<p>Eine systeminterne Sperre um threadsichere, gleichzeitige Operationen an Unterdatenstrom-Instanzen, die die gleichen InputStream wrapping sicherzustellen. </p>'
    exceptions:
      - type: 8a99d4b0
references:
  - uid: 8a99d4b0
    spec.java:
      - name: Exception
        fullName: Exception
  - uid: 76fcb9b7
    spec.java:
      - name: InputStream
        fullName: InputStream
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: com.microsoft.azure.storage.blob._sub_stream.SubStream*
    name: SubStream
    nameWithType: SubStream.SubStream
    fullName: com.microsoft.azure.storage.blob.SubStream.SubStream
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream.getInputStream*
    name: getInputStream
    nameWithType: SubStream.getInputStream
    fullName: InputStream com.microsoft.azure.storage.blob.SubStream.getInputStream
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream.getLength*
    name: getLength
    nameWithType: SubStream.getLength
    fullName: long com.microsoft.azure.storage.blob.SubStream.getLength
    package: com.microsoft.azure.storage.blob
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.storage.blob._sub_stream.read*
    name: read
    nameWithType: SubStream.read
    fullName: int com.microsoft.azure.storage.blob.SubStream.read
    package: com.microsoft.azure.storage.blob
  - uid: 17c54119
    spec.java:
      - name: NullPointerException
        fullName: NullPointerException
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: 3d3ee726
    spec.java:
      - name: synchronized int
        fullName: synchronized int
  - uid: 473ec288
    spec.java:
      - name: IndexOutOfBoundsException
        fullName: IndexOutOfBoundsException
  - uid: com.microsoft.azure.storage.blob._sub_stream.skip*
    name: skip
    nameWithType: SubStream.skip
    fullName: long com.microsoft.azure.storage.blob.SubStream.skip
    package: com.microsoft.azure.storage.blob
  - uid: 5c0b90ca
    spec.java:
      - name: synchronized void
        fullName: synchronized void
  - uid: com.microsoft.azure.storage.blob._sub_stream.mark*
    name: mark
    nameWithType: SubStream.mark
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.mark
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream.reset*
    name: reset
    nameWithType: SubStream.reset
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.reset
    package: com.microsoft.azure.storage.blob
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.storage.blob._sub_stream.markSupported*
    name: markSupported
    nameWithType: SubStream.markSupported
    fullName: boolean com.microsoft.azure.storage.blob.SubStream.markSupported
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream.close*
    name: close
    nameWithType: SubStream.close
    fullName: void com.microsoft.azure.storage.blob.SubStream.close
    package: com.microsoft.azure.storage.blob
  - uid: com.microsoft.azure.storage.blob._sub_stream
    parent: com.microsoft.azure.storage.blob
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    name: SubStream
    nameWithType: SubStream
    fullName: com.microsoft.azure.storage.blob.SubStream
    type: Class
    syntax: *ref_1
  - uid: com.microsoft.azure.storage.blob._sub_stream.read()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    name: read()
    nameWithType: SubStream.read()
    fullName: int com.microsoft.azure.storage.blob.SubStream.read()
    type: Method
    summary: |-
      <p>Liest das nächste Byte der Daten aus dem Stream umschlossene an. Das Byte mit dem Wert wird zurückgegeben, als ein in den Bereich an. Wenn keine Byte verfügbar ist, da das Ende der Unterdatenstrom erreicht wurde, wird der Wert zurückgegeben. Diese Methode blockiert, bis die Eingabedaten verfügbar ist, werden das Ende des Streams wird erkannt, oder eine Ausnahme ausgelöst.</p>
      <p></p>
    syntax: *ref_2
  - uid: com.microsoft.azure.storage.blob._sub_stream.reset()
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    name: reset()
    nameWithType: SubStream.reset()
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.reset()
    type: Method
    summary: |-
      <p>Positioniert die Unterdatenstrom Position, die dem Index, in dem die Methode zuletzt aufgerufen wurde. </p>
      <p>Die neue Position der zurücksetzen auf Unterdatenstrom wird bis zum nachfolgenden Lesevorgängen wirksam.</p>
      <p></p>
    syntax: *ref_3
  - uid: com.microsoft.azure.storage.blob._sub_stream.mark(int)
    parent: com.microsoft.azure.storage.blob._sub_stream
    href: com.microsoft.azure.storage.blob._sub_stream.yml
    name: mark(int readlimit)
    nameWithType: SubStream.mark(int readlimit)
    fullName: synchronized void com.microsoft.azure.storage.blob.SubStream.mark(int readlimit)
    type: Method
    summary: |-
      <p>Markiert die aktuelle Position in der Unterdatenstrom an. Ein nachfolgender Aufruf an die Methode wird den Stream auf diese Position gespeicherte neu positionieren.</p>
      <p></p>
    syntax: *ref_4