### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet
    id: _iot_hub_outbound_packet
    parent: com.microsoft.azure.sdk.iot.device.transport
    children:
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.getCallback()
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.getContext()
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.getMessage()
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.getResponseCallback()
      - 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.IotHubOutboundPacket(Message,IotHubEventCallback,Object)'
      - 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.IotHubOutboundPacket(Message,IotHubResponseCallback,Object)'
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.yml
    langs:
      - java
    name: IotHubOutboundPacket
    nameWithType: IotHubOutboundPacket
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket
    type: Class
    source:
      remote: &ref_0
        path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubOutboundPacket.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubOutboundPacket.java
      startLine: 13
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: <p><span data-ttu-id="e2def-101">Ein Paket mit den Daten für einen IoT Hub-Transport zum Senden einer Nachricht erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="e2def-101">A packet containing the data needed for an IoT Hub transport to send a message.</span></span> </p>
    syntax:
      content: public class IotHubOutboundPacket
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.getCallback()
    id: getCallback()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.yml
    langs:
      - java
    name: getCallback()
    nameWithType: IotHubOutboundPacket.getCallback()
    fullName: IotHubEventCallback com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket.getCallback()
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.getCallback*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubOutboundPacket.java
      startLine: 78
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="e2def-102">Der Getter für den Rückruf, aufgerufen werden soll, wenn eine Antwort empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="e2def-102">Getter for the callback to be invoked when a response is received.</span></span></p>
      <p></p>
    syntax:
      content: public IotHubEventCallback getCallback()
      return:
        type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
        description: "<p><span data-ttu-id=\"e2def-103\">die EventCallback-Funktion.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e2def-103\">the eventCallback function.</span></span> <span data-ttu-id=\"e2def-104\">Es kann sein<code>null \r\n\r\n    </code> .</span><span class=\"sxs-lookup\"><span data-stu-id=\"e2def-104\">It can be<code>null \r\n\r\n    </code> .</span></span> </p>"
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.getContext()
    id: getContext()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.yml
    langs:
      - java
    name: getContext()
    nameWithType: IotHubOutboundPacket.getContext()
    fullName: Object com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket.getContext()
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.getContext*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubOutboundPacket.java
      startLine: 100
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="e2def-105">Der Getter für den Kontext an den Rückruf übergeben werden, wenn er aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="e2def-105">Getter for the context to be passed to the callback when it is invoked.</span></span></p>
      <p></p>
    syntax:
      content: public Object getContext()
      return:
        type: '79317049'
        description: <p><span data-ttu-id="e2def-106">der rückrufkontext verwendet.</span><span class="sxs-lookup"><span data-stu-id="e2def-106">the callback context.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.getMessage()
    id: getMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.yml
    langs:
      - java
    name: getMessage()
    nameWithType: IotHubOutboundPacket.getMessage()
    fullName: Message com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket.getMessage()
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.getMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubOutboundPacket.java
      startLine: 67
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="e2def-107">Der Getter für die Nachricht gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="e2def-107">Getter for the message to be sent.</span></span></p>
      <p></p>
    syntax:
      content: public Message getMessage()
      return:
        type: com.microsoft.azure.sdk.iot.device._message
        description: <p><span data-ttu-id="e2def-108">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="e2def-108">the message to be sent.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.getResponseCallback()
    id: getResponseCallback()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.yml
    langs:
      - java
    name: getResponseCallback()
    nameWithType: IotHubOutboundPacket.getResponseCallback()
    fullName: IotHubResponseCallback com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket.getResponseCallback()
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.getResponseCallback*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubOutboundPacket.java
      startLine: 89
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="e2def-109">Der Getter für den Rückruf, aufgerufen werden soll, wenn eine Antwort empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="e2def-109">Getter for the callback to be invoked when a response is received.</span></span></p>
      <p></p>
    syntax:
      content: public IotHubResponseCallback getResponseCallback()
      return:
        type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
        description: "<p><span data-ttu-id=\"e2def-110\">die EventCallback-Funktion.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e2def-110\">the eventCallback function.</span></span> <span data-ttu-id=\"e2def-111\">Es kann sein<code>null \r\n\r\n    </code> .</span><span class=\"sxs-lookup\"><span data-stu-id=\"e2def-111\">It can be<code>null \r\n\r\n    </code> .</span></span> </p>"
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.IotHubOutboundPacket(Message,IotHubEventCallback,Object)'
    id: 'IotHubOutboundPacket(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.yml
    langs:
      - java
    name: 'IotHubOutboundPacket(Message message, IotHubEventCallback eventCallback, Object callbackContext)'
    nameWithType: 'IotHubOutboundPacket.IotHubOutboundPacket(Message message, IotHubEventCallback eventCallback, Object callbackContext)'
    fullName: 'com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket.IotHubOutboundPacket(Message message, IotHubEventCallback eventCallback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.IotHubOutboundPacket*
    type: Constructor
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubOutboundPacket.java
      startLine: 28
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="e2def-112">Der Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="e2def-112">Constructor.</span></span></p>
      <p></p>
    syntax:
      content: 'public IotHubOutboundPacket(Message message, IotHubEventCallback eventCallback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="e2def-113">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="e2def-113">the message to be sent.</span></span> </p>
        - id: eventCallback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: '<p><span data-ttu-id="e2def-114">der Rückruf aufgerufen, wenn eine Antwort vom IoT Hub empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="e2def-114">the callback to be invoked when a response from the IoT Hub is received.</span></span> </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p><span data-ttu-id="e2def-115">der Kontext, der an den Rückruf übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="e2def-115">the context to be passed to the callback.</span></span> </p>'
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.IotHubOutboundPacket(Message,IotHubResponseCallback,Object)'
    id: 'IotHubOutboundPacket(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.yml
    langs:
      - java
    name: 'IotHubOutboundPacket(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'IotHubOutboundPacket.IotHubOutboundPacket(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket.IotHubOutboundPacket(Message message, IotHubResponseCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.IotHubOutboundPacket*
    type: Constructor
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubOutboundPacket.java
      startLine: 49
    package: com.microsoft.azure.sdk.iot.device.transport
    summary: |-
      <p><span data-ttu-id="e2def-116">Der Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="e2def-116">Constructor.</span></span></p>
      <p></p>
    syntax:
      content: 'public IotHubOutboundPacket(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="e2def-117">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="e2def-117">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: '<p><span data-ttu-id="e2def-118">der Rückruf aufgerufen, wenn eine Antwort vom IoT Hub empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="e2def-118">the callback to be invoked when a response from the IoT Hub is received.</span></span> </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p><span data-ttu-id="e2def-119">der Kontext, der an den Rückruf übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="e2def-119">the context to be passed to the callback.</span></span> </p>'
references:
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.IotHubOutboundPacket*
    name: IotHubOutboundPacket
    nameWithType: IotHubOutboundPacket.IotHubOutboundPacket
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket.IotHubOutboundPacket
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.getMessage*
    name: getMessage
    nameWithType: IotHubOutboundPacket.getMessage
    fullName: Message com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket.getMessage
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.getCallback*
    name: getCallback
    nameWithType: IotHubOutboundPacket.getCallback
    fullName: IotHubEventCallback com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket.getCallback
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.getResponseCallback*
    name: getResponseCallback
    nameWithType: IotHubOutboundPacket.getResponseCallback
    fullName: IotHubResponseCallback com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket.getResponseCallback
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.getContext*
    name: getContext
    nameWithType: IotHubOutboundPacket.getContext
    fullName: Object com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket.getContext
    package: com.microsoft.azure.sdk.iot.device.transport
  - uid: com.microsoft.azure.sdk.iot.device._message
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._message.yml
    name: Message
    nameWithType: Message
    fullName: com.microsoft.azure.sdk.iot.device.Message
    type: Class
    syntax:
      content: public class Message
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.yml
    name: IotHubEventCallback
    nameWithType: IotHubEventCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
    type: Interface
    summary: |-
      <p><span data-ttu-id="e2def-120">Eine Schnittstelle für einen Ereignisrückruf IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="e2def-120">An interface for an IoT Hub event callback.</span></span></p>
      <p><span data-ttu-id="e2def-121">Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback #Execute(IotHubStatusCode, Object)</xref> beim Empfang einer Antwort von einem IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="e2def-121">Developers are expected to create an implementation of this interface, and the transport will call <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback#execute(IotHubStatusCode, Object)</xref> upon receiving a response from an IoT Hub.</span></span> </p>
    syntax:
      content: public interface IotHubEventCallback
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.yml
    name: IotHubResponseCallback
    nameWithType: IotHubResponseCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubResponseCallback
    type: Interface
    summary: |-
      <p><span data-ttu-id="e2def-122">Eine Schnittstelle für ein IoT Hub-Antwort-Rückruf.</span><span class="sxs-lookup"><span data-stu-id="e2def-122">An interface for an IoT Hub response callback.</span></span></p>
      <p><span data-ttu-id="e2def-123">Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.execute(ResponseMessage,Object)" data-throw-if-not-resolved="false">IotHubResponseCallback #Execute(ResponseMessage, Object)</xref> beim Empfang einer Antwort von einem IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="e2def-123">Developers are expected to create an implementation of this interface, and the transport will call <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.execute(ResponseMessage,Object)" data-throw-if-not-resolved="false">IotHubResponseCallback#execute(ResponseMessage, Object)</xref> upon receiving a response from an IoT Hub.</span></span> </p>
    syntax:
      content: public interface IotHubResponseCallback