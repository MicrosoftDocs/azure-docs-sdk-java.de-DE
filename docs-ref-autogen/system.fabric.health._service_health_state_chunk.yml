### YamlMime:ManagedReference
items:
  - uid: system.fabric.health._service_health_state_chunk
    id: _service_health_state_chunk
    parent: system.fabric.health
    children:
      - system.fabric.health._service_health_state_chunk.getHealthState()
      - system.fabric.health._service_health_state_chunk.getPartitionHealthStateChunks()
      - system.fabric.health._service_health_state_chunk.getServiceName()
    href: system.fabric.health._service_health_state_chunk.yml
    langs:
      - java
    name: ServiceHealthStateChunk
    nameWithType: ServiceHealthStateChunk
    fullName: system.fabric.health.ServiceHealthStateChunk
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/health/ServiceHealthStateChunk.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ServiceHealthStateChunk.java
      startLine: 8
    package: system.fabric.health
    summary: '<p>Stellt ein Service Health Status Segment, das grundlegende Zustandsinformationen zum Dienst enthält. </p>'
    syntax:
      content: public class ServiceHealthStateChunk
    inheritance:
      - java.lang.Object
  - uid: system.fabric.health._service_health_state_chunk.getHealthState()
    id: getHealthState()
    parent: system.fabric.health._service_health_state_chunk
    href: system.fabric.health._service_health_state_chunk.yml
    langs:
      - java
    name: getHealthState()
    nameWithType: ServiceHealthStateChunk.getHealthState()
    fullName: HealthState system.fabric.health.ServiceHealthStateChunk.getHealthState()
    overload: system.fabric.health._service_health_state_chunk.getHealthState*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ServiceHealthStateChunk.java
      startLine: 43
    package: system.fabric.health
    summary: |-
      <p>Ruft ab, der aggregierte Integritätszustand des Diensts, berechnet anhand der alle gemeldeten integritätsereignisse, seinen untergeordneten Elementen und einer anwendungsintegritäts-Richtlinie.</p>
      <p></p>
    syntax:
      content: public HealthState getHealthState()
      return:
        type: system.fabric.health._health_state
        description: <p>Der aggregierte Integritätszustand des Diensts. </p>
  - uid: system.fabric.health._service_health_state_chunk.getPartitionHealthStateChunks()
    id: getPartitionHealthStateChunks()
    parent: system.fabric.health._service_health_state_chunk
    href: system.fabric.health._service_health_state_chunk.yml
    langs:
      - java
    name: getPartitionHealthStateChunks()
    nameWithType: ServiceHealthStateChunk.getPartitionHealthStateChunks()
    fullName: PartitionHealthStateChunkList system.fabric.health.ServiceHealthStateChunk.getPartitionHealthStateChunks()
    overload: system.fabric.health._service_health_state_chunk.getPartitionHealthStateChunks*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ServiceHealthStateChunk.java
      startLine: 33
    package: system.fabric.health
    summary: "<p>Ruft die Liste der partitionsintegrität Service State-Segmente, die die Eingabefilter respektieren ab.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold> keine untergeordneten Elemente sind standardmäßig in Ergebnissen enthalten. Benutzer können anfordern, einige untergeordnete Elemente basierend auf den gewünschten Zustand oder andere Informationen einschließen. Beispielsweise können Benutzer auf alle Partitionen enthalten ist, Status Integritätsfehler anfordern. Unabhängig von den Filterwert werden alle untergeordneten Elemente verwendet, um aggregiert den Dienststatus zu berechnen. </p>"
    syntax:
      content: public PartitionHealthStateChunkList getPartitionHealthStateChunks()
      return:
        type: system.fabric.health._partition_health_state_chunk_list
        description: '<p>Die Liste der Partition Health Status Blöcke, die die Eingabefilter berücksichtigen. </p>'
  - uid: system.fabric.health._service_health_state_chunk.getServiceName()
    id: getServiceName()
    parent: system.fabric.health._service_health_state_chunk
    href: system.fabric.health._service_health_state_chunk.yml
    langs:
      - java
    name: getServiceName()
    nameWithType: ServiceHealthStateChunk.getServiceName()
    fullName: URI system.fabric.health.ServiceHealthStateChunk.getServiceName()
    overload: system.fabric.health._service_health_state_chunk.getServiceName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ServiceHealthStateChunk.java
      startLine: 52
    package: system.fabric.health
    summary: |-
      <p>Ruft den Dienstnamen, der den Dienst eindeutig identifiziert.</p>
      <p></p>
    syntax:
      content: public URI getServiceName()
      return:
        type: '62304784'
        description: <p>Der Name des Diensts. </p>
references:
  - uid: system.fabric.health._service_health_state_chunk.getPartitionHealthStateChunks*
    name: getPartitionHealthStateChunks
    nameWithType: ServiceHealthStateChunk.getPartitionHealthStateChunks
    fullName: PartitionHealthStateChunkList system.fabric.health.ServiceHealthStateChunk.getPartitionHealthStateChunks
    package: system.fabric.health
  - uid: system.fabric.health._service_health_state_chunk.getHealthState*
    name: getHealthState
    nameWithType: ServiceHealthStateChunk.getHealthState
    fullName: HealthState system.fabric.health.ServiceHealthStateChunk.getHealthState
    package: system.fabric.health
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: system.fabric.health._service_health_state_chunk.getServiceName*
    name: getServiceName
    nameWithType: ServiceHealthStateChunk.getServiceName
    fullName: URI system.fabric.health.ServiceHealthStateChunk.getServiceName
    package: system.fabric.health
  - uid: system.fabric.health._health_state
    parent: system.fabric.health
    href: system.fabric.health._health_state.yml
    name: HealthState
    nameWithType: HealthState
    fullName: system.fabric.health.HealthState
    type: Enum
    syntax:
      content: public enum HealthState
  - uid: system.fabric.health._partition_health_state_chunk_list
    parent: system.fabric.health
    href: system.fabric.health._partition_health_state_chunk_list.yml
    name: PartitionHealthStateChunkList
    nameWithType: PartitionHealthStateChunkList
    fullName: system.fabric.health.PartitionHealthStateChunkList
    type: Class
    summary: "<p>Stellt eine Liste mit <xref href=\"system.fabric.health._partition_health_state_chunk\" data-throw-if-not-resolved=\"false\"></xref> Elemente. </p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>die Liste kann über integritätsabfragen Status-Blocks abgerufen werden. Abfragen können als Ergebnis Segmente aufweisen, die eine Nachricht eingefügt werden kann. In diesem Fall die Liste der Elemente, die die Nachricht wird zurückgegeben, sowie eine Anzahl, die zeigt, wie viele gesamtelemente sind verfügbar. </p>"
    syntax:
      content: public class PartitionHealthStateChunkList extends HealthStateChunkList<PartitionHealthStateChunk>