### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler
    id: _reactor_handler
    parent: com.microsoft.azure.eventhubs.amqp
    children:
      - com.microsoft.azure.eventhubs.amqp._reactor_handler.getReactorDispatcher()
      - com.microsoft.azure.eventhubs.amqp._reactor_handler.onReactorFinal(Event)
      - com.microsoft.azure.eventhubs.amqp._reactor_handler.onReactorInit(Event)
      - com.microsoft.azure.eventhubs.amqp._reactor_handler.unsafeSetReactorDispatcher(final ReactorDispatcher)
    href: com.microsoft.azure.eventhubs.amqp._reactor_handler.yml
    langs:
      - java
    name: ReactorHandler
    nameWithType: ReactorHandler
    fullName: com.microsoft.azure.eventhubs.amqp.ReactorHandler
    type: Class
    source:
      remote: &ref_0
        path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/amqp/ReactorHandler.java
        branch: master
        repo: 'https://github.com/Azure/azure-event-hubs-java'
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/amqp/ReactorHandler.java
      startLine: 15
    package: com.microsoft.azure.eventhubs.amqp
    syntax:
      content: public class ReactorHandler
    inheritance:
      - java.lang.Object
      - BaseHandler
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler.getReactorDispatcher()
    id: getReactorDispatcher()
    parent: com.microsoft.azure.eventhubs.amqp._reactor_handler
    href: com.microsoft.azure.eventhubs.amqp._reactor_handler.yml
    langs:
      - java
    name: getReactorDispatcher()
    nameWithType: ReactorHandler.getReactorDispatcher()
    fullName: ReactorDispatcher com.microsoft.azure.eventhubs.amqp.ReactorHandler.getReactorDispatcher()
    overload: com.microsoft.azure.eventhubs.amqp._reactor_handler.getReactorDispatcher*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/amqp/ReactorHandler.java
      startLine: 21
    package: com.microsoft.azure.eventhubs.amqp
    syntax:
      content: public ReactorDispatcher getReactorDispatcher()
      return:
        type: com.microsoft.azure.eventhubs.amqp._reactor_dispatcher
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler.onReactorFinal(Event)
    id: onReactorFinal(Event)
    parent: com.microsoft.azure.eventhubs.amqp._reactor_handler
    href: com.microsoft.azure.eventhubs.amqp._reactor_handler.yml
    langs:
      - java
    name: onReactorFinal(Event e)
    nameWithType: ReactorHandler.onReactorFinal(Event e)
    fullName: void com.microsoft.azure.eventhubs.amqp.ReactorHandler.onReactorFinal(Event e)
    overload: com.microsoft.azure.eventhubs.amqp._reactor_handler.onReactorFinal*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/amqp/ReactorHandler.java
      startLine: 40
    package: com.microsoft.azure.eventhubs.amqp
    syntax:
      content: public void onReactorFinal(Event e)
      parameters:
        - id: e
          type: 70fceca4
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler.onReactorInit(Event)
    id: onReactorInit(Event)
    parent: com.microsoft.azure.eventhubs.amqp._reactor_handler
    href: com.microsoft.azure.eventhubs.amqp._reactor_handler.yml
    langs:
      - java
    name: onReactorInit(Event e)
    nameWithType: ReactorHandler.onReactorInit(Event e)
    fullName: void com.microsoft.azure.eventhubs.amqp.ReactorHandler.onReactorInit(Event e)
    overload: com.microsoft.azure.eventhubs.amqp._reactor_handler.onReactorInit*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/amqp/ReactorHandler.java
      startLine: 31
    package: com.microsoft.azure.eventhubs.amqp
    syntax:
      content: public void onReactorInit(Event e)
      parameters:
        - id: e
          type: 70fceca4
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler.unsafeSetReactorDispatcher(final ReactorDispatcher)
    id: unsafeSetReactorDispatcher(final ReactorDispatcher)
    parent: com.microsoft.azure.eventhubs.amqp._reactor_handler
    href: com.microsoft.azure.eventhubs.amqp._reactor_handler.yml
    langs:
      - java
    name: unsafeSetReactorDispatcher(final ReactorDispatcher reactorDispatcher)
    nameWithType: ReactorHandler.unsafeSetReactorDispatcher(final ReactorDispatcher reactorDispatcher)
    fullName: void com.microsoft.azure.eventhubs.amqp.ReactorHandler.unsafeSetReactorDispatcher(final ReactorDispatcher reactorDispatcher)
    overload: com.microsoft.azure.eventhubs.amqp._reactor_handler.unsafeSetReactorDispatcher*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/amqp/ReactorHandler.java
      startLine: 26
    package: com.microsoft.azure.eventhubs.amqp
    syntax:
      content: public void unsafeSetReactorDispatcher(final ReactorDispatcher reactorDispatcher)
      parameters:
        - id: reactorDispatcher
          type: 93de0ef9com.microsoft.azure.eventhubs.amqp._reactor_dispatcher
references:
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler.getReactorDispatcher*
    name: getReactorDispatcher
    nameWithType: ReactorHandler.getReactorDispatcher
    fullName: ReactorDispatcher com.microsoft.azure.eventhubs.amqp.ReactorHandler.getReactorDispatcher
    package: com.microsoft.azure.eventhubs.amqp
  - uid: 93de0ef9com.microsoft.azure.eventhubs.amqp._reactor_dispatcher
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.eventhubs.amqp._reactor_dispatcher
        name: ReactorDispatcher
        fullName: com.microsoft.azure.eventhubs.amqp.ReactorDispatcher
        href: com.microsoft.azure.eventhubs.amqp._reactor_dispatcher.yml
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler.unsafeSetReactorDispatcher*
    name: unsafeSetReactorDispatcher
    nameWithType: ReactorHandler.unsafeSetReactorDispatcher
    fullName: void com.microsoft.azure.eventhubs.amqp.ReactorHandler.unsafeSetReactorDispatcher
    package: com.microsoft.azure.eventhubs.amqp
  - uid: 70fceca4
    spec.java:
      - name: Event
        fullName: Event
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler.onReactorInit*
    name: onReactorInit
    nameWithType: ReactorHandler.onReactorInit
    fullName: void com.microsoft.azure.eventhubs.amqp.ReactorHandler.onReactorInit
    package: com.microsoft.azure.eventhubs.amqp
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_handler.onReactorFinal*
    name: onReactorFinal
    nameWithType: ReactorHandler.onReactorFinal
    fullName: void com.microsoft.azure.eventhubs.amqp.ReactorHandler.onReactorFinal
    package: com.microsoft.azure.eventhubs.amqp
  - uid: com.microsoft.azure.eventhubs.amqp._reactor_dispatcher
    parent: com.microsoft.azure.eventhubs.amqp
    href: com.microsoft.azure.eventhubs.amqp._reactor_dispatcher.yml
    name: ReactorDispatcher
    nameWithType: ReactorDispatcher
    fullName: com.microsoft.azure.eventhubs.amqp.ReactorDispatcher
    type: Class
    summary: "<p><span data-ttu-id=\"75d33-101\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reaktor</xref> ist nicht threadsicher - alle Aufrufe an <xref uid=\"\" data-throw-if-not-resolved=\"false\">Proton</xref> -APIs werden sollten - Reaktor-Thread.</span><span class=\"sxs-lookup\"><span data-stu-id=\"75d33-101\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref> is not thread-safe - all calls to <xref uid=\"\" data-throw-if-not-resolved=\"false\">Proton</xref> API's should be - on the Reactor Thread.</span></span> <span data-ttu-id=\"75d33-102\"><xref uid=\"\" data-throw-if-not-resolved=\"false\">Reaktor</xref> funktioniert der Out-of-Box für alle ereignisgesteuert-API - ex: OnReceive – die nach OnSocketRead auslösen könnten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"75d33-102\"><xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref> works out-of-box for all event driven API - ex: onReceive - which could raise upon onSocketRead.</span></span> <span data-ttu-id=\"75d33-103\"><xref uid=\"\" data-throw-if-not-resolved=\"false\">Reaktor</xref> hat-APIs unterstützt, z. B. Send() Out-of-Box - die potenziell in anderen Thread der Reaktor ausgeführt werden kann.</span><span class=\"sxs-lookup\"><span data-stu-id=\"75d33-103\"><xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref> didn't support API's like Send() out-of-box - which could potentially run on different thread to that of Reactor.</span></span> <span data-ttu-id=\"75d33-104\">Die folgenden Hilfsprogrammklasse daher dient zum Generieren eines Ereignisses Hook <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reaktor</xref>des delegationsmuster Ereignis.</span><span class=\"sxs-lookup\"><span data-stu-id=\"75d33-104\">So, the following utility class is used to generate an Event to hook into <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref>'s event delegation pattern.</span></span> <span data-ttu-id=\"75d33-105\">Er verwendet ein <xref uid=\"\" data-throw-if-not-resolved=\"false\">Pipe</xref> als die e/a, auf welche Reaktor überwacht.</span><span class=\"sxs-lookup\"><span data-stu-id=\"75d33-105\">It uses a <xref uid=\"\" data-throw-if-not-resolved=\"false\">Pipe</xref> as the IO on which Reactor Listens to.</span></span> <span data-ttu-id=\"75d33-106\">Kardinalität: mehrere <xref uid=\"com.microsoft.azure.eventhubs.amqp._reactor_dispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatcher</xref>des angefügt werden konnte, um 1 <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reaktor</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"75d33-106\">Cardinality: multiple <xref uid=\"com.microsoft.azure.eventhubs.amqp._reactor_dispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatcher</xref>'s could be attached to 1 <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref>.</span></span> <span data-ttu-id=\"75d33-107\">Jede <xref uid=\"com.microsoft.azure.eventhubs.amqp._reactor_dispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatcher</xref> sollten synchron - initialisiert werden, wie es den API-Aufrufe <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reaktor</xref> die nicht threadsicher ist.</span><span class=\"sxs-lookup\"><span data-stu-id=\"75d33-107\">Each <xref uid=\"com.microsoft.azure.eventhubs.amqp._reactor_dispatcher\" data-throw-if-not-resolved=\"false\">ReactorDispatcher</xref> should be initialized Synchronously - as it calls API in <xref uid=\"\" data-throw-if-not-resolved=\"false\">Reactor</xref> which is not thread-safe.</span></span> </p>"
    syntax:
      content: public class ReactorDispatcher