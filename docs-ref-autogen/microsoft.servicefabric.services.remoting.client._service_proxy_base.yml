### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base
    id: _service_proxy_base
    parent: microsoft.servicefabric.services.remoting.client
    children:
      - 'microsoft.servicefabric.services.remoting.client._service_proxy_base.create(Class<T>,URI)'
      - 'microsoft.servicefabric.services.remoting.client._service_proxy_base.create(Class<T>,URI,ServicePartitionKey,TargetReplicaSelector,String)'
      - microsoft.servicefabric.services.remoting.client._service_proxy_base.createRequestMessageBody(Object)
      - 'microsoft.servicefabric.services.remoting.client._service_proxy_base.deserializeMessage(byte [])'
      - microsoft.servicefabric.services.remoting.client._service_proxy_base.getResponseMessageBodyValue(Object)
      - microsoft.servicefabric.services.remoting.client._service_proxy_base.getServiceInterfaceType()
      - microsoft.servicefabric.services.remoting.client._service_proxy_base.getServicePartitionClient()
      - 'microsoft.servicefabric.services.remoting.client._service_proxy_base.initialize(ServiceProxyGenerator,ServiceRemotingPartitionClientImpl)'
      - 'microsoft.servicefabric.services.remoting.client._service_proxy_base.invoke(int,int,byte [])'
      - 'microsoft.servicefabric.services.remoting.client._service_proxy_base.invokeAsync(int,int,byte [],CancellationToken)'
      - microsoft.servicefabric.services.remoting.client._service_proxy_base.serializeMessage(Object)
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: ServiceProxyBase
    nameWithType: ServiceProxyBase
    fullName: microsoft.servicefabric.services.remoting.client.ServiceProxyBase
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 16
    package: microsoft.servicefabric.services.remoting.client
    summary: <p>Stellt die basisimplementierung für den Proxy zu den Remote IService-Schnittstellen bereit. </p>
    syntax:
      content: public class ServiceProxyBase extends ProxyBase implements ServiceProxy
    inheritance:
      - java.lang.Object
      - microsoft.servicefabric.services.remoting.builder._proxy_base
    inheritedMembers:
      - microsoft.servicefabric.services.remoting.builder._proxy_base.continueWith(CompletableFuture<Object>)
      - 'microsoft.servicefabric.services.remoting.builder._proxy_base.getReturnValue(int,int,Object)'
      - 'microsoft.servicefabric.services.remoting.builder._proxy_base.invoke(int,int,Object)'
      - 'microsoft.servicefabric.services.remoting.builder._proxy_base.invokeAsync(int,int,Object,CancellationToken)'
      - microsoft.servicefabric.services.remoting.builder._proxy_base.ProxyBase()
  - uid: 'microsoft.servicefabric.services.remoting.client._service_proxy_base.create(Class<T>,URI)'
    id: 'create(Class<T>,URI)'
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: 'create(Class<T> serviceInterfaceType, URI serviceUri)'
    nameWithType: 'ServiceProxyBase.create(Class<T> serviceInterfaceType, URI serviceUri)'
    fullName: 'static <T extends Service> T microsoft.servicefabric.services.remoting.client.ServiceProxyBase.create(Class<T> serviceInterfaceType, URI serviceUri)'
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.create*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 23
    package: microsoft.servicefabric.services.remoting.client
    syntax:
      content: 'public static static<T extends Service> T create(Class<T> serviceInterfaceType, URI serviceUri)'
      parameters:
        - id: serviceInterfaceType
          type: ffb09d2d
        - id: serviceUri
          type: '62304784'
      return:
        type: 1e2c6103microsoft.servicefabric.services.remoting._service21353812
  - uid: 'microsoft.servicefabric.services.remoting.client._service_proxy_base.create(Class<T>,URI,ServicePartitionKey,TargetReplicaSelector,String)'
    id: 'create(Class<T>,URI,ServicePartitionKey,TargetReplicaSelector,String)'
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: 'create(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)'
    nameWithType: 'ServiceProxyBase.create(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)'
    fullName: 'static <T extends Service> T microsoft.servicefabric.services.remoting.client.ServiceProxyBase.create(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)'
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.create*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 75
    package: microsoft.servicefabric.services.remoting.client
    summary: |-
      <p>Erstellt einen Proxy zur Kommunikation mit den angegebenen Dienst mithilfe der Remote-Benutzeroberfläche TServiceInterface, die der Dienst implementiert.</p>
      <p></p>
    syntax:
      content: 'public static static<T extends Service> T create(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)'
      parameters:
        - id: serviceInterfaceType
          type: ffb09d2d
          description: '<p>Schnittstellentyp, der Remote ausgeführt wird </p>'
        - id: serviceUri
          type: '62304784'
          description: <p>Der URI der <xref href="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false"></xref>. </p>
        - id: partitionKey
          type: microsoft.servicefabric.services.client._service_partition_key
          description: '<p>Der Partitionsschlüssel, der bestimmt, welche Dienstpartition ist verantwortlich für die Verarbeitung von Anforderungen von diesem Dienstproxy </p>'
        - id: targetReplicaSelector
          type: microsoft.servicefabric.services.communication.client._target_replica_selector
          description: '<p>Bestimmt, welches Replikat oder eine Instanz von der Dienstpartition der Client eine Verbindung herstellen soll. </p>'
        - id: listenerName
          type: '26831127'
          description: '<p>Dieser Parameter ist Optional, wenn der Dienst über einen einzelnen Kommunikation Listener verfügt. Die Endpunkte des Diensts sind, im Format {"Endpunkte": {"Listener1": "Endpoint1", "Listener2": "Endpoint2"...}}. Wenn der Dienst mehrere Endpunkte verfügbar macht, identifiziert dieser Parameter die dieser Endpunkte für das Remoting-Kommunikation verwenden.</p>'
      return:
        type: 1e2c6103microsoft.servicefabric.services.remoting._service21353812
        description: '<p>Der Proxy, der die Schnittstelle implementiert, die Remote ausgeführt wird. Das zurückgegebene Objekt auch implementieren <xref href="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false"></xref> Schnittstelle. </p>'
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.createRequestMessageBody(Object)
    id: createRequestMessageBody(Object)
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: createRequestMessageBody(Object requestMessageBodyValue)
    nameWithType: ServiceProxyBase.createRequestMessageBody(Object requestMessageBodyValue)
    fullName: Object microsoft.servicefabric.services.remoting.client.ServiceProxyBase.createRequestMessageBody(Object requestMessageBodyValue)
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.createRequestMessageBody*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 101
    package: microsoft.servicefabric.services.remoting.client
    syntax:
      content: protected Object createRequestMessageBody(Object requestMessageBodyValue)
      parameters:
        - id: requestMessageBodyValue
          type: '79317049'
      return:
        type: '79317049'
  - uid: 'microsoft.servicefabric.services.remoting.client._service_proxy_base.deserializeMessage(byte [])'
    id: 'deserializeMessage(byte [])'
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: 'deserializeMessage(byte[] msgBodyValue)'
    nameWithType: 'ServiceProxyBase.deserializeMessage(byte[] msgBodyValue)'
    fullName: 'Object microsoft.servicefabric.services.remoting.client.ServiceProxyBase.deserializeMessage(byte[] msgBodyValue)'
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.deserializeMessage*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 96
    package: microsoft.servicefabric.services.remoting.client
    syntax:
      content: 'protected Object deserializeMessage(byte[] msgBodyValue)'
      parameters:
        - id: msgBodyValue
          type: ccd9418d
      return:
        type: '79317049'
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.getResponseMessageBodyValue(Object)
    id: getResponseMessageBodyValue(Object)
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: getResponseMessageBodyValue(Object responseMessageBody)
    nameWithType: ServiceProxyBase.getResponseMessageBodyValue(Object responseMessageBody)
    fullName: Object microsoft.servicefabric.services.remoting.client.ServiceProxyBase.getResponseMessageBodyValue(Object responseMessageBody)
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.getResponseMessageBodyValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 122
    package: microsoft.servicefabric.services.remoting.client
    syntax:
      content: protected Object getResponseMessageBodyValue(Object responseMessageBody)
      parameters:
        - id: responseMessageBody
          type: '79317049'
      return:
        type: '79317049'
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.getServiceInterfaceType()
    id: getServiceInterfaceType()
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: getServiceInterfaceType()
    nameWithType: ServiceProxyBase.getServiceInterfaceType()
    fullName: Class<?> microsoft.servicefabric.services.remoting.client.ServiceProxyBase.getServiceInterfaceType()
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.getServiceInterfaceType*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 33
    package: microsoft.servicefabric.services.remoting.client
    summary: |-
      <p>Der Schnittstellentyp, der Remote ausgeführt wird.</p>
      <p></p>
    syntax:
      content: public Class<?> getServiceInterfaceType()
      return:
        type: a19781f8
        description: "<p>\r\n\r\n  <xref href=\"microsoft.servicefabric.services.remoting._service\" data-throw-if-not-resolved=\"false\"></xref>Schnittstellentyp. </p>"
    overridden: microsoft.servicefabric.services.remoting.client._service_proxy.getServiceInterfaceType()
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.getServicePartitionClient()
    id: getServicePartitionClient()
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: getServicePartitionClient()
    nameWithType: ServiceProxyBase.getServicePartitionClient()
    fullName: ServiceRemotingPartitionClient microsoft.servicefabric.services.remoting.client.ServiceProxyBase.getServicePartitionClient()
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.getServicePartitionClient*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 43
    package: microsoft.servicefabric.services.remoting.client
    summary: |-
      <p>Die Partition-Dienstclient verwendet, um die Anforderungen an den Dienst zu senden.</p>
      <p></p>
    syntax:
      content: public ServiceRemotingPartitionClient getServicePartitionClient()
      return:
        type: microsoft.servicefabric.services.remoting.client._service_remoting_partition_client
        description: '<p>ServicePartitionClient verwendet werden, indem Sie die <xref href="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false"></xref>. </p>'
    overridden: microsoft.servicefabric.services.remoting.client._service_proxy.getServicePartitionClient()
  - uid: 'microsoft.servicefabric.services.remoting.client._service_proxy_base.initialize(ServiceProxyGenerator,ServiceRemotingPartitionClientImpl)'
    id: 'initialize(ServiceProxyGenerator,ServiceRemotingPartitionClientImpl)'
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: 'initialize(ServiceProxyGenerator serviceProxyGenerator, ServiceRemotingPartitionClientImpl remotingPartitionClient)'
    nameWithType: 'ServiceProxyBase.initialize(ServiceProxyGenerator serviceProxyGenerator, ServiceRemotingPartitionClientImpl remotingPartitionClient)'
    fullName: 'void microsoft.servicefabric.services.remoting.client.ServiceProxyBase.initialize(ServiceProxyGenerator serviceProxyGenerator, ServiceRemotingPartitionClientImpl remotingPartitionClient)'
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.initialize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 126
    package: microsoft.servicefabric.services.remoting.client
    syntax:
      content: 'public void initialize(ServiceProxyGenerator serviceProxyGenerator, ServiceRemotingPartitionClientImpl remotingPartitionClient)'
      parameters:
        - id: serviceProxyGenerator
          type: microsoft.servicefabric.services.remoting.builder._service_proxy_generator
        - id: remotingPartitionClient
          type: 2d260c2d
  - uid: 'microsoft.servicefabric.services.remoting.client._service_proxy_base.invoke(int,int,byte [])'
    id: 'invoke(int,int,byte [])'
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: 'invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)'
    nameWithType: 'ServiceProxyBase.invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)'
    fullName: 'void microsoft.servicefabric.services.remoting.client.ServiceProxyBase.invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)'
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.invoke*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 108
    package: microsoft.servicefabric.services.remoting.client
    syntax:
      content: 'protected void invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)'
      parameters:
        - id: interfaceId
          type: f75371fa
        - id: methodId
          type: f75371fa
        - id: requestMsgBodyBytes
          type: ccd9418d
  - uid: 'microsoft.servicefabric.services.remoting.client._service_proxy_base.invokeAsync(int,int,byte [],CancellationToken)'
    id: 'invokeAsync(int,int,byte [],CancellationToken)'
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: 'invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)'
    nameWithType: 'ServiceProxyBase.invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<byte[]> microsoft.servicefabric.services.remoting.client.ServiceProxyBase.invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.invokeAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 113
    package: microsoft.servicefabric.services.remoting.client
    syntax:
      content: 'protected CompletableFuture<byte[]> invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)'
      parameters:
        - id: interfaceId
          type: f75371fa
        - id: methodId
          type: f75371fa
        - id: requestMsgBodyBytes
          type: ccd9418d
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 5fe2dfa4
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.serializeMessage(Object)
    id: serializeMessage(Object)
    parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
    href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
    langs:
      - java
    name: serializeMessage(Object msgBodyValue)
    nameWithType: ServiceProxyBase.serializeMessage(Object msgBodyValue)
    fullName: 'byte [] microsoft.servicefabric.services.remoting.client.ServiceProxyBase.serializeMessage(Object msgBodyValue)'
    overload: microsoft.servicefabric.services.remoting.client._service_proxy_base.serializeMessage*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyBase.java
      startLine: 91
    package: microsoft.servicefabric.services.remoting.client
    syntax:
      content: 'protected byte [] serializeMessage(Object msgBodyValue)'
      parameters:
        - id: msgBodyValue
          type: '79317049'
      return:
        type: ccd9418d
references:
  - uid: ffb09d2d
    spec.java:
      - name: Class<T>
        fullName: Class<T>
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: 1e2c6103microsoft.servicefabric.services.remoting._service21353812
    spec.java:
      - name: 'static<T extends '
        fullName: 'static<T extends '
      - uid: microsoft.servicefabric.services.remoting._service
        name: Service
        fullName: microsoft.servicefabric.services.remoting.Service
        href: microsoft.servicefabric.services.remoting._service.yml
      - name: '> T'
        fullName: '> T'
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.create*
    name: create
    nameWithType: ServiceProxyBase.create
    fullName: static <T extends Service> T microsoft.servicefabric.services.remoting.client.ServiceProxyBase.create
    package: microsoft.servicefabric.services.remoting.client
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: a19781f8
    spec.java:
      - name: Class<?>
        fullName: Class<?>
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.getServiceInterfaceType*
    name: getServiceInterfaceType
    nameWithType: ServiceProxyBase.getServiceInterfaceType
    fullName: Class<?> microsoft.servicefabric.services.remoting.client.ServiceProxyBase.getServiceInterfaceType
    package: microsoft.servicefabric.services.remoting.client
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.getServicePartitionClient*
    name: getServicePartitionClient
    nameWithType: ServiceProxyBase.getServicePartitionClient
    fullName: ServiceRemotingPartitionClient microsoft.servicefabric.services.remoting.client.ServiceProxyBase.getServicePartitionClient
    package: microsoft.servicefabric.services.remoting.client
  - uid: 2d260c2d
    spec.java:
      - name: ServiceRemotingPartitionClientImpl
        fullName: ServiceRemotingPartitionClientImpl
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.initialize*
    name: initialize
    nameWithType: ServiceProxyBase.initialize
    fullName: void microsoft.servicefabric.services.remoting.client.ServiceProxyBase.initialize
    package: microsoft.servicefabric.services.remoting.client
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.serializeMessage*
    name: serializeMessage
    nameWithType: ServiceProxyBase.serializeMessage
    fullName: 'byte [] microsoft.servicefabric.services.remoting.client.ServiceProxyBase.serializeMessage'
    package: microsoft.servicefabric.services.remoting.client
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.deserializeMessage*
    name: deserializeMessage
    nameWithType: ServiceProxyBase.deserializeMessage
    fullName: Object microsoft.servicefabric.services.remoting.client.ServiceProxyBase.deserializeMessage
    package: microsoft.servicefabric.services.remoting.client
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.createRequestMessageBody*
    name: createRequestMessageBody
    nameWithType: ServiceProxyBase.createRequestMessageBody
    fullName: Object microsoft.servicefabric.services.remoting.client.ServiceProxyBase.createRequestMessageBody
    package: microsoft.servicefabric.services.remoting.client
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.invoke*
    name: invoke
    nameWithType: ServiceProxyBase.invoke
    fullName: void microsoft.servicefabric.services.remoting.client.ServiceProxyBase.invoke
    package: microsoft.servicefabric.services.remoting.client
  - uid: 5fe2dfa4
    spec.java:
      - name: 'CompletableFuture<byte[]>'
        fullName: 'CompletableFuture<byte[]>'
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.invokeAsync*
    name: invokeAsync
    nameWithType: ServiceProxyBase.invokeAsync
    fullName: 'CompletableFuture<byte[]> microsoft.servicefabric.services.remoting.client.ServiceProxyBase.invokeAsync'
    package: microsoft.servicefabric.services.remoting.client
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.getResponseMessageBodyValue*
    name: getResponseMessageBodyValue
    nameWithType: ServiceProxyBase.getResponseMessageBodyValue
    fullName: Object microsoft.servicefabric.services.remoting.client.ServiceProxyBase.getResponseMessageBodyValue
    package: microsoft.servicefabric.services.remoting.client
  - uid: microsoft.servicefabric.services.remoting.builder._proxy_base.continueWith(CompletableFuture<Object>)
    parent: microsoft.servicefabric.services.remoting.builder._proxy_base
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: continueWith(CompletableFuture<Object> future)
    nameWithType: ProxyBase.continueWith(CompletableFuture<Object> future)
    fullName: CompletableFuture<?> microsoft.servicefabric.services.remoting.builder.ProxyBase.continueWith(CompletableFuture<Object> future)
    type: Method
    summary: '<p>Wird aufgerufen, durch die generierte Proxyklasse, um den Vorgang fortzusetzen, nach dem Abrufen des Antworttexts, die keinen Wert verfügt. </p>'
    syntax:
      content: protected CompletableFuture<?> continueWith(CompletableFuture<Object> future)
      parameters:
        - id: future
          type: 55aa5245
          description: '<p>Ein <ref refid="" kindref="compound">CompletableFuture</ref> , die den asynchronen Vorgang für den remote-Methodenaufruf darstellt. </p>'
      return:
        type: 16409f84
        description: '<p>Ein <ref refid="" kindref="compound">CompletableFuture</ref> , die den asynchronen Vorgang für den remote-Methodenaufruf darstellt. </p>'
  - uid: 'microsoft.servicefabric.services.remoting.builder._proxy_base.getReturnValue(int,int,Object)'
    parent: microsoft.servicefabric.services.remoting.builder._proxy_base
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: 'getReturnValue(int interfaceId, int methodId, Object responseBody)'
    nameWithType: 'ProxyBase.getReturnValue(int interfaceId, int methodId, Object responseBody)'
    fullName: 'abstract Object microsoft.servicefabric.services.remoting.builder.ProxyBase.getReturnValue(int interfaceId, int methodId, Object responseBody)'
    type: Method
    summary: <p>Geben Sie die Umwandlung der Antworttext und extrahiert den Wert aus der abgeleiteten Klasse implementiert. </p>
    syntax:
      content: 'protected abstract Object getReturnValue(int interfaceId, int methodId, Object responseBody)'
      parameters:
        - id: interfaceId
          type: f75371fa
          description: <p>Schnittstellen-Id für die Akteur-Schnittstelle. </p>
        - id: methodId
          type: f75371fa
          description: <p>Methode-Id für die Akteur-Methode. </p>
        - id: responseBody
          type: '79317049'
          description: <p>Der Antworttext. </p>
      return:
        type: 1377799a
        description: <p>Der Rückgabewert des Methodenaufrufs als <ref refid="" kindref="compound">Objekt</ref>. </p>
  - uid: 'microsoft.servicefabric.services.remoting.builder._proxy_base.invoke(int,int,Object)'
    parent: microsoft.servicefabric.services.remoting.builder._proxy_base
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: 'invoke(int interfaceId, int methodId, Object requestMsgBodyValue)'
    nameWithType: 'ProxyBase.invoke(int interfaceId, int methodId, Object requestMsgBodyValue)'
    fullName: 'void microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke(int interfaceId, int methodId, Object requestMsgBodyValue)'
    type: Method
    summary: <p>Wird von der generierten Proxyklasse zum Senden der Nachricht auf das Remoteobjekt aufgerufen. </p>
    syntax:
      content: 'protected void invoke(int interfaceId, int methodId, Object requestMsgBodyValue)'
      parameters:
        - id: interfaceId
          type: f75371fa
          description: <p>Die ID der remote-Schnittstelle. </p>
        - id: methodId
          type: f75371fa
          description: <p>ID der remote-Methode Invokved sein. </p>
        - id: requestMsgBodyValue
          type: '79317049'
          description: <p>Der Nachrichtentext Remoteobjekt gesendet werden. </p>
  - uid: 'microsoft.servicefabric.services.remoting.builder._proxy_base.invokeAsync(int,int,Object,CancellationToken)'
    parent: microsoft.servicefabric.services.remoting.builder._proxy_base
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: 'invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)'
    nameWithType: 'ProxyBase.invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Object> microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)'
    type: Method
    summary: '<p>Wird aufgerufen, von der generierten Proxyklasse zum Senden der Anforderung an das Remoteobjekt und rufen Sie die Antwort zurück. </p>'
    syntax:
      content: 'protected CompletableFuture<Object> invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)'
      parameters:
        - id: interfaceId
          type: f75371fa
          description: <p>Die ID der remote-Schnittstelle. </p>
        - id: methodId
          type: f75371fa
          description: <p>Die ID der remote-Methode aufgerufen werden. </p>
        - id: requestMsgBodyValue
          type: '79317049'
          description: <p>Der Anforderungstext. </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 55aa5245
        description: '<p>Ein <ref refid="" kindref="compound">CompletableFuture</ref> , der asynchrone Aufruf Remoteobjekt asynchronen Vorgang darstellt. </p>'
  - uid: microsoft.servicefabric.services.remoting.builder._proxy_base.ProxyBase()
    parent: microsoft.servicefabric.services.remoting.builder._proxy_base
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: ProxyBase()
    nameWithType: ProxyBase.ProxyBase()
    fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.ProxyBase()
    type: Constructor
    summary: <p>Initialisiert eine neue Instanz der dem <xref href="microsoft.servicefabric.services.remoting.builder._proxy_base" data-throw-if-not-resolved="false"></xref> Klasse. </p>
    syntax:
      content: protected ProxyBase()
  - uid: microsoft.servicefabric.services.remoting.builder._proxy_base
    parent: microsoft.servicefabric.services.remoting.builder
    href: microsoft.servicefabric.services.remoting.builder._proxy_base.yml
    name: ProxyBase
    nameWithType: ProxyBase
    fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase
    type: Class
    summary: '<p>Die Basisklasse, die von Remoting-Code-Generator verwendet, um den Proxy für die Remote-Schnittstellen zu generieren. </p>'
    syntax:
      content: public class ProxyBase
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy
    parent: microsoft.servicefabric.services.remoting.client
    href: microsoft.servicefabric.services.remoting.client._service_proxy.yml
    name: ServiceProxy
    nameWithType: ServiceProxy
    fullName: microsoft.servicefabric.services.remoting.client.ServiceProxy
    type: Interface
    summary: <p>Dies ist der Client Side Basisschnittstelle für das Remoting. Das Framework bietet die Infrastruktur für den Remotezugriff für alle Dienstverträge IService durch Vererben <xref href="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false"></xref> und <xref href="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false"></xref>. </p>
    syntax:
      content: public interface ServiceProxy
  - uid: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory
    parent: microsoft.servicefabric.services.remoting.client
    href: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory.yml
    name: FabricServiceProxyFactory
    nameWithType: FabricServiceProxyFactory
    fullName: microsoft.servicefabric.services.remoting.client.FabricServiceProxyFactory
    type: Class
    summary: '<p>Gibt an, die Factory, die Proxys für die Remotekommunikation an den angegebenen Dienst erstellt. </p>'
    syntax:
      content: public class FabricServiceProxyFactory implements ServiceProxyFactory
  - uid: microsoft.servicefabric.services.remoting.builder._service_proxy_generator
    parent: microsoft.servicefabric.services.remoting.builder
    href: microsoft.servicefabric.services.remoting.builder._service_proxy_generator.yml
    name: ServiceProxyGenerator
    nameWithType: ServiceProxyGenerator
    fullName: microsoft.servicefabric.services.remoting.builder.ServiceProxyGenerator
    type: Class
    syntax:
      content: public class ServiceProxyGenerator
  - uid: microsoft.servicefabric.services.remoting._service
    parent: microsoft.servicefabric.services.remoting
    href: microsoft.servicefabric.services.remoting._service.yml
    name: Service
    nameWithType: Service
    fullName: microsoft.servicefabric.services.remoting.Service
    type: Interface
    summary: '<p>Dies ist die Markierungsschnittstelle zum Aktivieren von Remoting-Schnittstelle für Dienste. Ein <xref href="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false"></xref> bietet Remoting für alle Schnittstellen vom Dienst implementiert, die von dieser Schnittstelle ableiten. Die Remoteausführung Schnittstellen können über einen Proxyserver auf dem Client zugegriffen werden. </p>'
    syntax:
      content: public interface Service
  - uid: microsoft.servicefabric.services.client._service_partition_key
    parent: microsoft.servicefabric.services.client
    href: microsoft.servicefabric.services.client._service_partition_key.yml
    name: ServicePartitionKey
    nameWithType: ServicePartitionKey
    fullName: microsoft.servicefabric.services.client.ServicePartitionKey
    type: Class
    summary: <p>Definiert einen Schlüssel zum Adressieren einer Dienstpartition. </p>
    syntax:
      content: public class ServicePartitionKey
  - uid: microsoft.servicefabric.services.communication.client._target_replica_selector
    parent: microsoft.servicefabric.services.communication.client
    href: microsoft.servicefabric.services.communication.client._target_replica_selector.yml
    name: TargetReplicaSelector
    nameWithType: TargetReplicaSelector
    fullName: microsoft.servicefabric.services.communication.client.TargetReplicaSelector
    type: Enum
    summary: '<p>Diese Enumeration gibt an, wie der Zielreplikat oder die Instanz gewählt werden sollte, wenn einen Kommunikationskanal für eine bestimmte Partition zu erstellen. </p>'
    syntax:
      content: public enum TargetReplicaSelector
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy.getServiceInterfaceType()
    parent: microsoft.servicefabric.services.remoting.client._service_proxy
    href: microsoft.servicefabric.services.remoting.client._service_proxy.yml
    name: getServiceInterfaceType()
    nameWithType: ServiceProxy.getServiceInterfaceType()
    fullName: Class<?> microsoft.servicefabric.services.remoting.client.ServiceProxy.getServiceInterfaceType()
    type: Method
    summary: |-
      <p>Der Schnittstellentyp, der Remote ausgeführt wird.</p>
      <p></p>
    syntax:
      content: public Class<?> getServiceInterfaceType()
      return:
        type: a19781f8
        description: "<p>\r\n\r\n  <xref href=\"microsoft.servicefabric.services.remoting._service\" data-throw-if-not-resolved=\"false\"></xref>Schnittstellentyp </p>"
  - uid: microsoft.servicefabric.services.remoting.client._service_remoting_partition_client
    parent: microsoft.servicefabric.services.remoting.client
    href: microsoft.servicefabric.services.remoting.client._service_remoting_partition_client.yml
    name: ServiceRemotingPartitionClient
    nameWithType: ServiceRemotingPartitionClient
    fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingPartitionClient
    type: Interface
    summary: '<p>Definiert die Schnittstelle für den Client, die über Remoting, um ein bestimmtes Replikat einer Partition Dienst zu kommunizieren. </p>'
    syntax:
      content: public interface ServiceRemotingPartitionClient
  - uid: microsoft.servicefabric.services.remoting.client._service_proxy.getServicePartitionClient()
    parent: microsoft.servicefabric.services.remoting.client._service_proxy
    href: microsoft.servicefabric.services.remoting.client._service_proxy.yml
    name: getServicePartitionClient()
    nameWithType: ServiceProxy.getServicePartitionClient()
    fullName: ServiceRemotingPartitionClient microsoft.servicefabric.services.remoting.client.ServiceProxy.getServicePartitionClient()
    type: Method
    summary: |-
      <p>Die Partition-Dienstclient verwendet, um die Anforderungen an den Dienst zu senden.</p>
      <p></p>
    syntax:
      content: public ServiceRemotingPartitionClient getServicePartitionClient()
      return:
        type: microsoft.servicefabric.services.remoting.client._service_remoting_partition_client
        description: '<p>ServicePartitionClient verwendet werden, indem Sie die<xref href="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false"></xref></p>'
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p>Ein <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> wird verwendet, um die Benachrichtigung verteilt wird, dass Vorgänge abgebrochen werden sollen. Sie erstellen ein Abbruchtoken, das durch die Instanziierung einer <xref href="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false"></xref> -Objekt, das Abbruchtoken verwaltet entnommen seine <xref href="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false"></xref> Methode. Übergeben Sie dann das Abbruchtoken, das auf eine beliebige Anzahl von Vorgängen, die Nachricht vom Abbruch erhalten soll. Das Token kann nicht verwendet werden, um den Abbruch zu initiieren. Wenn das besitzende Objekt aufruft <xref href="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false"></xref>, auf das Abbruchtoken, das die abgebrochene Eigenschaft festgelegt ist auf "true". Die Objekte, die die Benachrichtigung empfangen können Antworten Verfolgungsinformationen geeignet ist. </p>'
    syntax:
      content: public class CancellationToken