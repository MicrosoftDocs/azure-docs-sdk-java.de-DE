### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    id: _fabric_transport_remoting_settings
    parent: microsoft.servicefabric.services.remoting.fabrictransport
    children:
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.FabricTransportRemotingSettings()
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getConnectTimeout()
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getDefault()
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getDefault(String)
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getInternalSettings()
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getKeepAliveTimeout()
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getMaxConcurrentCalls()
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getMaxMessageSize()
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getMaxQueueSize()
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getOperationTimeout()
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getSecurityCredentials()
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.loadFrom(String)
      - 'microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.loadFromConfigPackage(String,String)'
      - 'microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.loadFromFile(String,String)'
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setConnectTimeout(Duration)
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setKeepAliveTimeout(Duration)
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setMaxConcurrentCalls(Long)
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setMaxMessageSize(Long)
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setMaxQueueSize(Long)
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setOperationTimeout(Duration)
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setSecurityCredentials(SecurityCredentials)
      - microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.tryLoadFrom(String)
      - 'microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.tryLoadFromConfigPackage(String,String)'
      - 'microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.tryLoadFromFile(String,String)'
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: FabricTransportRemotingSettings
    nameWithType: FabricTransportRemotingSettings
    fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 8
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: '<p>Einstellungen, die die FabricTransport-Kommunikation konfiguriert. </p>'
    syntax: &ref_1
      content: public class FabricTransportRemotingSettings
    inheritance:
      - java.lang.Object
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.FabricTransportRemotingSettings()
    id: FabricTransportRemotingSettings()
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: FabricTransportRemotingSettings()
    nameWithType: FabricTransportRemotingSettings.FabricTransportRemotingSettings()
    fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.FabricTransportRemotingSettings()
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.FabricTransportRemotingSettings*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 13
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: <p>Erstellt ein neues <xref uid="microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings" data-throw-if-not-resolved="false">FabricTransportRemotingSettings</xref> mit Standardwerten. </p>
    syntax:
      content: public FabricTransportRemotingSettings()
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getConnectTimeout()
    id: getConnectTimeout()
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: getConnectTimeout()
    nameWithType: FabricTransportRemotingSettings.getConnectTimeout()
    fullName: Duration microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getConnectTimeout()
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getConnectTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 230
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>Verbinden Timeout gibt die maximale Zeitspanne für die Verbindung erfolgreich hergestellt werden.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Standardwert ConnectTimeout Timeoutwert ist als 5 Sekunden festgelegt. </p>"
    syntax:
      content: public Duration getConnectTimeout()
      return:
        type: e02a2de0
        description: <p>ConnectTimeout als <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref></p>
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getDefault()
    id: getDefault()
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: getDefault()
    nameWithType: FabricTransportRemotingSettings.getDefault()
    fullName: static FabricTransportRemotingSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getDefault()
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getDefault*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 148
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: |-
      <p>FabricTransportSettings gibt die Standardeinstellungen zurück. Lädt die Konfigurationsdatei aus standardmäßig Konfigurationspaket "Config", wenn nicht gefunden wird versuchen, von Standard-Config-Datei "ClientExeName.Settings.xml" vom Client Ausführungsverzeichnis zu laden.</p>
      <p></p>
    syntax:
      content: public static FabricTransportRemotingSettings getDefault()
      return:
        type: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
        description: <p>FabricTransportSettings </p>
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getDefault(String)
    id: getDefault(String)
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: getDefault(String sectionName)
    nameWithType: FabricTransportRemotingSettings.getDefault(String sectionName)
    fullName: static FabricTransportRemotingSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getDefault(String sectionName)
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getDefault*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 162
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: |-
      <p>FabricTransportSettings gibt die Standardeinstellungen zurück. Lädt die Konfigurationsdatei aus standardmäßig Konfigurationspaket "Config", wenn nicht gefunden wird versuchen, von Standard-Config-Datei "ClientExeName.Settings.xml" vom Client Ausführungsverzeichnis zu laden.</p>
      <p></p>
    syntax:
      content: public static FabricTransportRemotingSettings getDefault(String sectionName)
      parameters:
        - id: sectionName
          type: '26831127'
          description: <p>Der Name des Abschnitts in der Konfigurationsdatei. Wenn nicht gefundenen Abschnitt in der Konfigurationsdatei gibt er die Standardeinstellungen zurück. </p>
      return:
        type: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
        description: <p>FabricTransportSettings </p>
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getInternalSettings()
    id: getInternalSettings()
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: getInternalSettings()
    nameWithType: FabricTransportRemotingSettings.getInternalSettings()
    fullName: FabricTransportSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getInternalSettings()
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getInternalSettings*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 430
    package: microsoft.servicefabric.services.remoting.fabrictransport
    syntax:
      content: public FabricTransportSettings getInternalSettings()
      return:
        type: 50ea4c41
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getKeepAliveTimeout()
    id: getKeepAliveTimeout()
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: getKeepAliveTimeout()
    nameWithType: FabricTransportRemotingSettings.getKeepAliveTimeout()
    fullName: Duration microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getKeepAliveTimeout()
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getKeepAliveTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 289
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>KeepAliveTimeout ist, bietet eine Möglichkeit zum Konfigurieren der TCP-Keep-alive-Option.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Standardwert KeepAliveTimeout Timeoutwert als TimeSpan.Zero festgelegt ist. Gibt an, dass wir die Tcp Keepalive-Option deaktivieren. Wenn Sie Loadbalancer verwenden, müssen Sie möglicherweise konfigurieren, um die Loadbalancer zum Schließen der Verbindung einem bestimmten Zeitpunkt zu vermeiden. </p>"
    syntax:
      content: public Duration getKeepAliveTimeout()
      return:
        type: e02a2de0
        description: <p>KeepAliveTimeout als <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref></p>
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getMaxConcurrentCalls()
    id: getMaxConcurrentCalls()
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: getMaxConcurrentCalls()
    nameWithType: FabricTransportRemotingSettings.getMaxConcurrentCalls()
    fullName: Long microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getMaxConcurrentCalls()
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getMaxConcurrentCalls*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 379
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>Drosselungen für MaxConcurrentCalls stellt maximale Anzahl von Nachrichten Dienst aktiv Prozesse gleichzeitig.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Standardwerte Wert für den Drosselungen für MaxConcurrentCalls auf die Anzahl der Prozessoren ist. </p>"
    syntax:
      content: public Long getMaxConcurrentCalls()
      return:
        type: 34f09483
        description: <p>Drosselungen für MaxConcurrentCalls ist die Obergrenze aktiver Nachrichten im Dienst. </p>
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getMaxMessageSize()
    id: getMaxMessageSize()
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: getMaxMessageSize()
    nameWithType: FabricTransportRemotingSettings.getMaxMessageSize()
    fullName: Long microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getMaxMessageSize()
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getMaxMessageSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 320
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>MaxMessageSize stellt die maximale Größe für eine Nachricht, die in einem mit dieser Einstellung konfigurierten Kanal beim Nachrichtenempfang zulässig.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Standardwert für MaxMessageSize verwendet beträgt 4.194.304 Bytes </p>"
    syntax:
      content: public Long getMaxMessageSize()
      return:
        type: 34f09483
        description: <p>Maximale Größe der Nachricht in Bytes. </p>
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getMaxQueueSize()
    id: getMaxQueueSize()
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: getMaxQueueSize()
    nameWithType: FabricTransportRemotingSettings.getMaxQueueSize()
    fullName: Long microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getMaxQueueSize()
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getMaxQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 349
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>Die maximale Größe einer Warteschlange, die Nachrichten speichert, während sie für einen mit dieser Einstellung konfigurierten Endpunkt verarbeitet werden.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Standardwert ist 10.000 Nachrichten </p>"
    syntax:
      content: public Long getMaxQueueSize()
      return:
        type: 34f09483
        description: '<p>Max Size für eine Warteschlange, empfängt Nachrichten vom Kanal. </p>'
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getOperationTimeout()
    id: getOperationTimeout()
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: getOperationTimeout()
    nameWithType: FabricTransportRemotingSettings.getOperationTimeout()
    fullName: Duration microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getOperationTimeout()
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getOperationTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 258
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>Timeout des Vorgangs zur Regelung den gesamten Prozess des Sendens einer Nachricht, einschließlich, empfängt eine Antwortnachricht für einen Anforderung/Antwort-Dienstvorgang. Dieses Timeout gilt auch beim Senden von Antwortnachrichten von einer rückrufvertragsmethode.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Standardwert für das Timeout des Vorgangs ist als 5 Minuten festgelegt </p>"
    syntax:
      content: public Duration getOperationTimeout()
      return:
        type: e02a2de0
        description: <p>OperationTimeout als <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref></p>
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getSecurityCredentials()
    id: getSecurityCredentials()
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: getSecurityCredentials()
    nameWithType: FabricTransportRemotingSettings.getSecurityCredentials()
    fullName: SecurityCredentials microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getSecurityCredentials()
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getSecurityCredentials*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 409
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>Anmeldeinformationen für das Sichern der Kommunikation</p>\n<p>\r\n\r\n  <b>Hinweise:</b>Standardwert für SecurityCredentials ist keine SecurityCredential möglich Typ x509SecurityCredentail <xref uid=\"system.fabric._x509_credentials\" data-throw-if-not-resolved=\"false\">system.fabric.X509Credentials</xref>oder WindowsCredentials <xref uid=\"system.fabric._windows_credentials\" data-throw-if-not-resolved=\"false\"> system.fabric.WindowsCredentials</xref></p>"
    syntax:
      content: public SecurityCredentials getSecurityCredentials()
      return:
        type: system.fabric._security_credentials
        description: <p>SecurityCredentials als <xref uid="system.fabric._security_credentials" data-throw-if-not-resolved="false">system.fabric.SecurityCredentials</xref></p>
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.loadFrom(String)
    id: loadFrom(String)
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: loadFrom(String sectionName)
    nameWithType: FabricTransportRemotingSettings.loadFrom(String sectionName)
    fullName: static FabricTransportRemotingSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.loadFrom(String sectionName)
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.loadFrom*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 40
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>Lädt können die FabricTransport-Einstellungen aus einer SectionName angegeben, in der Konfigurationsdatei Konfigurationsdatei angegebenen mithilfe den Dateipfad oder den Namen des Konfigurationspakets in das Manifest angegeben sein. Zunächst wird versucht, mit ConfigPackageName Config zu laden. Wenn ConfigPackageName nicht angegeben ist wiederholen Sie dann aus dem Dateipfad geladen.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b> im folgenden sind die Namen der Parameter, die in der Konfigurationsdatei von Service Fabric Laden Sie die transporteinstellungen erkannt werden bereitgestellt werden soll. 1. MaxQueueSize - Wert in der Long-Wert. 2. MaxMessageSize - Wert in Bytes. 3. Drosselungen für MaxConcurrentCalls - Wert in der Long-Wert. 4. SecurityCredentials - SecurityCredentials-Wert. 5. OperationTimeoutInSeconds - Wert in Sekunden. 6. KeepAliveTimeoutInSeconds<itemizedlist><listitem><p>der Wert in Sekunden. </p></listitem></itemizedlist></p>"
    syntax:
      content: public static FabricTransportRemotingSettings loadFrom(String sectionName)
      parameters:
        - id: sectionName
          type: '26831127'
          description: <p>Der Name des Abschnitts in der Konfigurationsdatei. Wenn keine gefunden Abschnitt in der Konfigurationsdatei wird ArgumentException ausgelöst. </p>
      return:
        type: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
        description: <p>FabricTransportSettings </p>
  - uid: 'microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.loadFromConfigPackage(String,String)'
    id: 'loadFromConfigPackage(String,String)'
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: 'loadFromConfigPackage(String sectionName, String configPackageName)'
    nameWithType: 'FabricTransportRemotingSettings.loadFromConfigPackage(String sectionName, String configPackageName)'
    fullName: 'static FabricTransportRemotingSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.loadFromConfigPackage(String sectionName, String configPackageName)'
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.loadFromConfigPackage*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 216
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>Lädt können die FabricTransport-Einstellungen aus einer SectionName angegeben, in der Konfigurationsdatei Konfigurationsdatei angegebenen mithilfe den Dateipfad oder den Namen des Konfigurationspakets in das Manifest angegeben sein. Zunächst wird versucht, mit ConfigPackageName Config zu laden. Wenn ConfigPackageName nicht angegeben ist wiederholen Sie dann aus dem Dateipfad geladen.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b> im folgenden sind die Namen der Parameter, die in der Konfigurationsdatei von Service Fabric Laden Sie die transporteinstellungen erkannt werden bereitgestellt werden soll. 1. MaxQueueSize - Wert in der Long-Wert. 2. MaxMessageSize - Wert in Bytes. 3. Drosselungen für MaxConcurrentCalls - Wert in der Long-Wert. 4. SecurityCredentials - SecurityCredentials-Wert. 5. OperationTimeoutInSeconds - Wert in Sekunden. 6. KeepAliveTimeoutInSeconds<itemizedlist><listitem><p>der Wert in Sekunden. </p></listitem></itemizedlist></p>"
    syntax:
      content: 'public static FabricTransportRemotingSettings loadFromConfigPackage(String sectionName, String configPackageName)'
      parameters:
        - id: sectionName
          type: '26831127'
          description: <p>Der Name des Abschnitts in der Konfigurationsdatei. Wenn keine gefunden Abschnitt in der Konfigurationsdatei wird ArgumentException ausgelöst.</p>
        - id: configPackageName
          type: '26831127'
          description: '<p>Der Name des Konfigurationspakets. Wenn die Null oder leer, es für die Datei in den FilePath überprüft </p>'
      return:
        type: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
        description: <p>FabricTransportSettings </p>
  - uid: 'microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.loadFromFile(String,String)'
    id: 'loadFromFile(String,String)'
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: 'loadFromFile(String sectionName, String filePath)'
    nameWithType: 'FabricTransportRemotingSettings.loadFromFile(String sectionName, String filePath)'
    fullName: 'static FabricTransportRemotingSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.loadFromFile(String sectionName, String filePath)'
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.loadFromFile*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 189
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>Lädt können die FabricTransport-Einstellungen aus einer SectionName angegeben, in der Konfigurationsdatei Konfigurationsdatei angegebenen mithilfe den Dateipfad oder den Namen des Konfigurationspakets in das Manifest angegeben sein. Zunächst wird versucht, mit ConfigPackageName Config zu laden. Wenn ConfigPackageName nicht angegeben ist wiederholen Sie dann aus dem Dateipfad geladen.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b> im folgenden sind die Namen der Parameter, die in der Konfigurationsdatei von Service Fabric Laden Sie die transporteinstellungen erkannt werden bereitgestellt werden soll. 1. MaxQueueSize - Wert in der Long-Wert. 2. MaxMessageSize - Wert in Bytes. 3. Drosselungen für MaxConcurrentCalls - Wert in der Long-Wert. 4. SecurityCredentials - SecurityCredentials-Wert. 5. OperationTimeoutInSeconds - Wert in Sekunden. 6. KeepAliveTimeoutInSeconds<itemizedlist><listitem><p>der Wert in Sekunden. </p></listitem></itemizedlist></p>"
    syntax:
      content: 'public static FabricTransportRemotingSettings loadFromFile(String sectionName, String filePath)'
      parameters:
        - id: sectionName
          type: '26831127'
          description: <p>Der Name des Abschnitts in der Konfigurationsdatei. Wenn keine gefunden Abschnitt in der Konfigurationsdatei wird ArgumentException ausgelöst. </p>
        - id: filePath
          type: '26831127'
          description: '<p>Vollständiger Pfad der Datei, in dem die Einstellungen aus geladen werden. Wenn nicht angegeben, wird zuerst versucht, Standardwert Konfigurationspaket "Config" laden, wenn es gefunden anschließend Laden von Einstellungen für "ClientExeName.Settings.xml", die im Client Ausführungsverzeichnis vorhanden. </p>'
      return:
        type: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
        description: <p>FabricTransportSettings </p>
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setConnectTimeout(Duration)
    id: setConnectTimeout(Duration)
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: setConnectTimeout(Duration connectTimeout)
    nameWithType: FabricTransportRemotingSettings.setConnectTimeout(Duration connectTimeout)
    fullName: void microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.setConnectTimeout(Duration connectTimeout)
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setConnectTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 244
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>Verbinden Timeout gibt die maximale Zeitspanne für die Verbindung erfolgreich hergestellt werden.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Standardwert ConnectTimeout Timeoutwert ist als 5 Sekunden festgelegt. </p>"
    syntax:
      content: public void setConnectTimeout(Duration connectTimeout)
      parameters:
        - id: connectTimeout
          type: e02a2de0
          description: <p>ConnectTimeout als <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref></p>
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setKeepAliveTimeout(Duration)
    id: setKeepAliveTimeout(Duration)
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: setKeepAliveTimeout(Duration keepAliveTimeout)
    nameWithType: FabricTransportRemotingSettings.setKeepAliveTimeout(Duration keepAliveTimeout)
    fullName: void microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.setKeepAliveTimeout(Duration keepAliveTimeout)
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setKeepAliveTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 306
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>KeepAliveTimeout ist, bietet eine Möglichkeit zum Konfigurieren der TCP-Keep-alive-Option.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Standardwert KeepAliveTimeout Timeoutwert als TimeSpan.Zero festgelegt ist. Gibt an, dass wir die Tcp Keepalive-Option deaktivieren. Wenn Sie Loadbalancer verwenden, müssen Sie möglicherweise konfigurieren, um die Loadbalancer zum Schließen der Verbindung einem bestimmten Zeitpunkt zu vermeiden. </p>"
    syntax:
      content: public void setKeepAliveTimeout(Duration keepAliveTimeout)
      parameters:
        - id: keepAliveTimeout
          type: e02a2de0
          description: <p>als <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref></p>
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setMaxConcurrentCalls(Long)
    id: setMaxConcurrentCalls(Long)
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: setMaxConcurrentCalls(Long maxConcurrentCalls)
    nameWithType: FabricTransportRemotingSettings.setMaxConcurrentCalls(Long maxConcurrentCalls)
    fullName: void microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.setMaxConcurrentCalls(Long maxConcurrentCalls)
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setMaxConcurrentCalls*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 395
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>Drosselungen für MaxConcurrentCalls stellt maximale Anzahl von Nachrichten Dienst aktiv Prozesse gleichzeitig.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Standardwerte Wert für den Drosselungen für MaxConcurrentCalls auf die Anzahl der Prozessoren ist. </p>"
    syntax:
      content: public void setMaxConcurrentCalls(Long maxConcurrentCalls)
      parameters:
        - id: maxConcurrentCalls
          type: 34f09483
          description: <p>Drosselungen für MaxConcurrentCalls ist die Obergrenze aktiver Nachrichten im Dienst. </p>
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setMaxMessageSize(Long)
    id: setMaxMessageSize(Long)
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: setMaxMessageSize(Long maxMessageSize)
    nameWithType: FabricTransportRemotingSettings.setMaxMessageSize(Long maxMessageSize)
    fullName: void microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.setMaxMessageSize(Long maxMessageSize)
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setMaxMessageSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 335
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>MaxMessageSize stellt die maximale Größe für eine Nachricht, die in einem mit dieser Einstellung konfigurierten Kanal beim Nachrichtenempfang zulässig.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Standardwert für MaxMessageSize verwendet beträgt 4.194.304 Bytes </p>"
    syntax:
      content: public void setMaxMessageSize(Long maxMessageSize)
      parameters:
        - id: maxMessageSize
          type: 34f09483
          description: <p>Maximale Größe der Nachricht in Bytes. </p>
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setMaxQueueSize(Long)
    id: setMaxQueueSize(Long)
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: setMaxQueueSize(Long maxQueueSize)
    nameWithType: FabricTransportRemotingSettings.setMaxQueueSize(Long maxQueueSize)
    fullName: void microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.setMaxQueueSize(Long maxQueueSize)
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setMaxQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 364
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>Die maximale Größe einer Warteschlange, die Nachrichten speichert, während sie für einen mit dieser Einstellung konfigurierten Endpunkt verarbeitet werden.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Standardwert ist 10.000 Nachrichten </p>"
    syntax:
      content: public void setMaxQueueSize(Long maxQueueSize)
      parameters:
        - id: maxQueueSize
          type: 34f09483
          description: '<p>Max Size für eine Warteschlange, empfängt Nachrichten vom Kanal. </p>'
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setOperationTimeout(Duration)
    id: setOperationTimeout(Duration)
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: setOperationTimeout(Duration operationTimeout)
    nameWithType: FabricTransportRemotingSettings.setOperationTimeout(Duration operationTimeout)
    fullName: void microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.setOperationTimeout(Duration operationTimeout)
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setOperationTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 273
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>Timeout des Vorgangs zur Regelung den gesamten Prozess des Sendens einer Nachricht, einschließlich, empfängt eine Antwortnachricht für einen Anforderung/Antwort-Dienstvorgang. Dieses Timeout gilt auch beim Senden von Antwortnachrichten von einer rückrufvertragsmethode.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Standardwert für das Timeout des Vorgangs ist als 5 Minuten festgelegt </p>"
    syntax:
      content: public void setOperationTimeout(Duration operationTimeout)
      parameters:
        - id: operationTimeout
          type: e02a2de0
          description: <p>als <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref></p>
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setSecurityCredentials(SecurityCredentials)
    id: setSecurityCredentials(SecurityCredentials)
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: setSecurityCredentials(SecurityCredentials securityCredentials)
    nameWithType: FabricTransportRemotingSettings.setSecurityCredentials(SecurityCredentials securityCredentials)
    fullName: void microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.setSecurityCredentials(SecurityCredentials securityCredentials)
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setSecurityCredentials*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 424
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>Anmeldeinformationen für das Sichern der Kommunikation</p>\n<p>\r\n\r\n  <b>Hinweise:</b>Standardwert für SecurityCredentials ist keine SecurityCredential möglich Typ x509SecurityCredentail <xref uid=\"system.fabric._x509_credentials\" data-throw-if-not-resolved=\"false\">system.fabric.X509Credentials</xref> oder WindowsCredentials <xref uid=\"system.fabric._windows_credentials\" data-throw-if-not-resolved=\"false\"> system.fabric.WindowsCredentials</xref></p>"
    syntax:
      content: public void setSecurityCredentials(SecurityCredentials securityCredentials)
      parameters:
        - id: securityCredentials
          type: system.fabric._security_credentials
          description: <p>SecurityCredentials als <xref uid="system.fabric._security_credentials" data-throw-if-not-resolved="false">system.fabric.SecurityCredentials</xref></p>
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.tryLoadFrom(String)
    id: tryLoadFrom(String)
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: tryLoadFrom(String sectionName)
    nameWithType: FabricTransportRemotingSettings.tryLoadFrom(String sectionName)
    fullName: static FabricTransportRemotingSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.tryLoadFrom(String sectionName)
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.tryLoadFrom*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 65
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>Versuchen Sie, die FabricTransport-Einstellungen aus einer in der Konfigurationsdatei angegebenen SectionName zu laden. Konfigurationsdatei kann angegeben werden, mithilfe den Dateipfad oder den Namen des Konfigurationspakets in das Manifest angegeben. Zunächst wird versucht, mit ConfigPackageName Config zu laden. Wenn ConfigPackageName nicht angegeben ist wiederholen Sie dann aus dem Dateipfad geladen.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>im folgenden sind die Namen der Parameter, die in der Konfigurationsdatei von Service Fabric Laden Sie die transporteinstellungen erkannt werden bereitgestellt werden soll. 1. MaxQueueSize - Wert in der Long-Wert. 2. MaxMessageSize - Wert in Bytes. 3. Drosselungen für MaxConcurrentCalls - Wert in der Long-Wert. 4. SecurityCredentials - SecurityCredentials-Wert. 5. OperationTimeoutInSeconds - Wert in Sekunden. 6. KeepAliveTimeoutInSeconds<itemizedlist><listitem><p>der Wert in Sekunden. </p></listitem></itemizedlist></p>"
    syntax:
      content: public static FabricTransportRemotingSettings tryLoadFrom(String sectionName)
      parameters:
        - id: sectionName
          type: '26831127'
          description: <p>Der Name des Abschnitts in der Konfigurationsdatei. Wenn keine gefunden Abschnitt in der Konfigurationsdatei es "false" zurückgeben </p>
      return:
        type: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
        description: '<p>Boolescher Wert gibt an, ob die Einstellungen aus der Konfiguration erfolgreich geladen. Gibt true zurück, wenn von der Konfiguration erfolgreich laden, andernfalls "false" zurückgeben. </p>'
  - uid: 'microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.tryLoadFromConfigPackage(String,String)'
    id: 'tryLoadFromConfigPackage(String,String)'
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: 'tryLoadFromConfigPackage(String sectionName, String configPackageName)'
    nameWithType: 'FabricTransportRemotingSettings.tryLoadFromConfigPackage(String sectionName, String configPackageName)'
    fullName: 'static FabricTransportRemotingSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.tryLoadFromConfigPackage(String sectionName, String configPackageName)'
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.tryLoadFromConfigPackage*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 130
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>Versuchen Sie, die FabricTransport-Einstellungen aus einer in der Konfigurationsdatei angegebenen SectionName zu laden. Konfigurationsdatei kann angegeben werden, mithilfe den Dateipfad oder den Namen des Konfigurationspakets in das Manifest angegeben. Zunächst wird versucht, mit ConfigPackageName Config zu laden. Wenn ConfigPackageName nicht angegeben ist wiederholen Sie dann aus dem Dateipfad geladen.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>im folgenden sind die Namen der Parameter, die in der Konfigurationsdatei von Service Fabric Laden Sie die transporteinstellungen erkannt werden bereitgestellt werden soll. 1. MaxQueueSize - Wert in der Long-Wert. 2. MaxMessageSize - Wert in Bytes. 3. Drosselungen für MaxConcurrentCalls - Wert in der Long-Wert. 4. SecurityCredentials - SecurityCredentials-Wert. 5. OperationTimeoutInSeconds - Wert in Sekunden. 6. KeepAliveTimeoutInSeconds<itemizedlist><listitem><p>der Wert in Sekunden. </p></listitem></itemizedlist></p>"
    syntax:
      content: 'public static FabricTransportRemotingSettings tryLoadFromConfigPackage(String sectionName, String configPackageName)'
      parameters:
        - id: sectionName
          type: '26831127'
          description: <p>Der Name des Abschnitts in der Konfigurationsdatei. Wenn keine gefunden Abschnitt in der Konfigurationsdatei es "false" zurückgeben </p>
        - id: configPackageName
          type: '26831127'
          description: '<p>Der Name des Konfigurationspakets. Wenn die Null oder leer, es für die Datei in den FilePath überprüft </p>'
      return:
        type: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
        description: '<p>Boolescher Wert gibt an, ob die Einstellungen aus der Konfiguration erfolgreich geladen. Gibt true zurück, wenn von der Konfiguration erfolgreich laden, andernfalls "false" zurückgeben. </p>'
  - uid: 'microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.tryLoadFromFile(String,String)'
    id: 'tryLoadFromFile(String,String)'
    parent: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    langs:
      - java
    name: 'tryLoadFromFile(String sectionName, String filePath)'
    nameWithType: 'FabricTransportRemotingSettings.tryLoadFromFile(String sectionName, String filePath)'
    fullName: 'static FabricTransportRemotingSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.tryLoadFromFile(String sectionName, String filePath)'
    overload: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.tryLoadFromFile*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/fabrictransport/FabricTransportRemotingSettings.java
      startLine: 98
    package: microsoft.servicefabric.services.remoting.fabrictransport
    summary: "<p>Versuchen Sie, die FabricTransport-Einstellungen aus einer in der Konfigurationsdatei angegebenen SectionName zu laden. Konfigurationsdatei kann angegeben werden, mithilfe den Dateipfad oder den Namen des Konfigurationspakets in das Manifest angegeben. Zunächst wird versucht, mit ConfigPackageName Config zu laden. Wenn ConfigPackageName nicht angegeben ist wiederholen Sie dann aus dem Dateipfad geladen.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>im folgenden sind die Namen der Parameter, die in der Konfigurationsdatei von Service Fabric Laden Sie die transporteinstellungen erkannt werden bereitgestellt werden soll. 1. MaxQueueSize - Wert in der Long-Wert. 2. MaxMessageSize - Wert in Bytes. 3. Drosselungen für MaxConcurrentCalls - Wert in der Long-Wert. 4. SecurityCredentials - SecurityCredentials-Wert. 5. OperationTimeoutInSeconds - Wert in Sekunden. 6. KeepAliveTimeoutInSeconds<itemizedlist><listitem><p>der Wert in Sekunden. </p></listitem></itemizedlist></p>"
    syntax:
      content: 'public static FabricTransportRemotingSettings tryLoadFromFile(String sectionName, String filePath)'
      parameters:
        - id: sectionName
          type: '26831127'
          description: <p>Der Name des Abschnitts in der Konfigurationsdatei. Wenn keine gefunden Abschnitt in der Konfigurationsdatei es "false" zurückgeben </p>
        - id: filePath
          type: '26831127'
          description: '<p>Vollständiger Pfad der Datei, in dem die Einstellungen aus geladen werden. Wenn nicht angegeben, wird zuerst versucht, Standardwert Konfigurationspaket "Config" laden, wenn es gefunden anschließend Laden von Einstellungen für "ClientExeName.Settings.xml", die im Client Ausführungsverzeichnis vorhanden. </p>'
      return:
        type: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
        description: '<p>Boolescher Wert gibt an, ob die Einstellungen aus der Konfiguration erfolgreich geladen. Gibt true zurück, wenn von der Konfiguration erfolgreich laden, andernfalls "false" zurückgeben. </p>'
references:
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.FabricTransportRemotingSettings*
    name: FabricTransportRemotingSettings
    nameWithType: FabricTransportRemotingSettings.FabricTransportRemotingSettings
    fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.FabricTransportRemotingSettings
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getConnectTimeout*
    name: getConnectTimeout
    nameWithType: FabricTransportRemotingSettings.getConnectTimeout
    fullName: Duration microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getConnectTimeout
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setConnectTimeout*
    name: setConnectTimeout
    nameWithType: FabricTransportRemotingSettings.setConnectTimeout
    fullName: void microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.setConnectTimeout
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getOperationTimeout*
    name: getOperationTimeout
    nameWithType: FabricTransportRemotingSettings.getOperationTimeout
    fullName: Duration microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getOperationTimeout
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setOperationTimeout*
    name: setOperationTimeout
    nameWithType: FabricTransportRemotingSettings.setOperationTimeout
    fullName: void microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.setOperationTimeout
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getKeepAliveTimeout*
    name: getKeepAliveTimeout
    nameWithType: FabricTransportRemotingSettings.getKeepAliveTimeout
    fullName: Duration microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getKeepAliveTimeout
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setKeepAliveTimeout*
    name: setKeepAliveTimeout
    nameWithType: FabricTransportRemotingSettings.setKeepAliveTimeout
    fullName: void microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.setKeepAliveTimeout
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: 34f09483
    spec.java:
      - name: Long
        fullName: Long
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getMaxMessageSize*
    name: getMaxMessageSize
    nameWithType: FabricTransportRemotingSettings.getMaxMessageSize
    fullName: Long microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getMaxMessageSize
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setMaxMessageSize*
    name: setMaxMessageSize
    nameWithType: FabricTransportRemotingSettings.setMaxMessageSize
    fullName: void microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.setMaxMessageSize
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getMaxQueueSize*
    name: getMaxQueueSize
    nameWithType: FabricTransportRemotingSettings.getMaxQueueSize
    fullName: Long microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getMaxQueueSize
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setMaxQueueSize*
    name: setMaxQueueSize
    nameWithType: FabricTransportRemotingSettings.setMaxQueueSize
    fullName: void microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.setMaxQueueSize
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getMaxConcurrentCalls*
    name: getMaxConcurrentCalls
    nameWithType: FabricTransportRemotingSettings.getMaxConcurrentCalls
    fullName: Long microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getMaxConcurrentCalls
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setMaxConcurrentCalls*
    name: setMaxConcurrentCalls
    nameWithType: FabricTransportRemotingSettings.setMaxConcurrentCalls
    fullName: void microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.setMaxConcurrentCalls
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getSecurityCredentials*
    name: getSecurityCredentials
    nameWithType: FabricTransportRemotingSettings.getSecurityCredentials
    fullName: SecurityCredentials microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getSecurityCredentials
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.setSecurityCredentials*
    name: setSecurityCredentials
    nameWithType: FabricTransportRemotingSettings.setSecurityCredentials
    fullName: void microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.setSecurityCredentials
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: 50ea4c41
    spec.java:
      - name: FabricTransportSettings
        fullName: FabricTransportSettings
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getInternalSettings*
    name: getInternalSettings
    nameWithType: FabricTransportRemotingSettings.getInternalSettings
    fullName: FabricTransportSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getInternalSettings
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.loadFrom*
    name: loadFrom
    nameWithType: FabricTransportRemotingSettings.loadFrom
    fullName: static FabricTransportRemotingSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.loadFrom
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.tryLoadFrom*
    name: tryLoadFrom
    nameWithType: FabricTransportRemotingSettings.tryLoadFrom
    fullName: static FabricTransportRemotingSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.tryLoadFrom
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.tryLoadFromFile*
    name: tryLoadFromFile
    nameWithType: FabricTransportRemotingSettings.tryLoadFromFile
    fullName: static FabricTransportRemotingSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.tryLoadFromFile
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.tryLoadFromConfigPackage*
    name: tryLoadFromConfigPackage
    nameWithType: FabricTransportRemotingSettings.tryLoadFromConfigPackage
    fullName: static FabricTransportRemotingSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.tryLoadFromConfigPackage
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.getDefault*
    name: getDefault
    nameWithType: FabricTransportRemotingSettings.getDefault
    fullName: static FabricTransportRemotingSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.getDefault
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.loadFromFile*
    name: loadFromFile
    nameWithType: FabricTransportRemotingSettings.loadFromFile
    fullName: static FabricTransportRemotingSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.loadFromFile
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.loadFromConfigPackage*
    name: loadFromConfigPackage
    nameWithType: FabricTransportRemotingSettings.loadFromConfigPackage
    fullName: static FabricTransportRemotingSettings microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings.loadFromConfigPackage
    package: microsoft.servicefabric.services.remoting.fabrictransport
  - uid: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings
    parent: microsoft.servicefabric.services.remoting.fabrictransport
    href: microsoft.servicefabric.services.remoting.fabrictransport._fabric_transport_remoting_settings.yml
    name: FabricTransportRemotingSettings
    nameWithType: FabricTransportRemotingSettings
    fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportRemotingSettings
    type: Class
    summary: '<p>Einstellungen, die die FabricTransport-Kommunikation konfiguriert. </p>'
    syntax: *ref_1
  - uid: system.fabric._security_credentials
    parent: system.fabric
    href: system.fabric._security_credentials.yml
    name: SecurityCredentials
    nameWithType: SecurityCredentials
    fullName: system.fabric.SecurityCredentials
    type: Class
    summary: '<p>Eine abstrakte Basisklasse für Typen, die Anmeldeinformationen für die Sicherheit darstellen. </p>'
    syntax:
      content: public class SecurityCredentials
  - uid: system.fabric._x509_credentials
    parent: system.fabric
    href: system.fabric._x509_credentials.yml
    name: X509Credentials
    nameWithType: X509Credentials
    fullName: system.fabric.X509Credentials
    type: Class
    summary: '<p>Gibt die Sicherheitsanmeldeinformationen, die auf x. 509-Zertifikate basieren, die im Windows-Zertifikatspeicher befinden. </p>'
    syntax:
      content: public class X509Credentials
  - uid: system.fabric._windows_credentials
    parent: system.fabric
    href: system.fabric._windows_credentials.yml
    name: WindowsCredentials
    nameWithType: WindowsCredentials
    fullName: system.fabric.WindowsCredentials
    type: Class
    summary: <p>Darstellung der active Directory-Domäne-Anmeldeinformationen an. </p>
    syntax:
      content: public class WindowsCredentials