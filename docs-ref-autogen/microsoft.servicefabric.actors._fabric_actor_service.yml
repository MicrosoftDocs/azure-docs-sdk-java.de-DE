### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._fabric_actor_service
    id: _fabric_actor_service
    parent: microsoft.servicefabric.actors
    children:
      - microsoft.servicefabric.actors._fabric_actor_service.createServiceReplicaListeners()
      - microsoft.servicefabric.actors._fabric_actor_service.deleteActorAsync(ActorId)
      - 'microsoft.servicefabric.actors._fabric_actor_service.FabricActorService(StatefulServiceContext,ActorTypeInformation)'
      - 'microsoft.servicefabric.actors._fabric_actor_service.FabricActorService(StatefulServiceContext,ActorTypeInformation,BiFunction<FabricActorService, ActorId, ActorBase>)'
      - 'microsoft.servicefabric.actors._fabric_actor_service.FabricActorService(StatefulServiceContext,ActorTypeInformation,BiFunction<FabricActorService, ActorId, ActorBase>,BiFunction<ActorBase, ActorStateProvider, ActorStateManager>,ActorStateProvider,ActorServiceSettings)'
      - microsoft.servicefabric.actors._fabric_actor_service.getActorsAsync(ContinuationToken)
      - microsoft.servicefabric.actors._fabric_actor_service.getActorTypeInformation()
      - microsoft.servicefabric.actors._fabric_actor_service.getSettings()
      - microsoft.servicefabric.actors._fabric_actor_service.getStateProvider()
      - microsoft.servicefabric.actors._fabric_actor_service.onAbort()
      - 'microsoft.servicefabric.actors._fabric_actor_service.onChangeRoleAsync(ReplicaRole,CancellationToken)'
      - microsoft.servicefabric.actors._fabric_actor_service.onCloseAsync(CancellationToken)
      - microsoft.servicefabric.actors._fabric_actor_service.runAsync(CancellationToken)
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    langs:
      - java
    name: FabricActorService
    nameWithType: FabricActorService
    fullName: microsoft.servicefabric.actors.FabricActorService
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActorService.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActorService.java
      startLine: 27
    package: microsoft.servicefabric.actors
    summary: "<p>Stellt die Basisklasse für Microsoft Service Fabric-basierten zuverlässige Akteure Dienst dar. </p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Ableiten von dieser Klasse, die einen eigenen benutzerdefinierten Akteur-Dienst zu implementieren, wenn Sie alle Verhalten des Diensts für die Akteure außer Kraft setzen möchten. </p>"
    syntax: &ref_1
      content: public class FabricActorService extends StatefulServiceBase implements ActorService
    inheritance:
      - java.lang.Object
      - microsoft.servicefabric.services.runtime._stateful_service_base
    inheritedMembers:
      - microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync(BackupDescription)
      - 'microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync(BackupDescription,Duration)'
      - microsoft.servicefabric.services.runtime._stateful_service_base.getAddresses()
      - microsoft.servicefabric.services.runtime._stateful_service_base.getPartition()
      - microsoft.servicefabric.services.runtime._stateful_service_base.getServiceContext()
      - microsoft.servicefabric.services.runtime._stateful_service_base.getStateProviderReplica()
      - 'microsoft.servicefabric.services.runtime._stateful_service_base.onDataLossAsync(RestoreContext,CancellationToken)'
      - 'microsoft.servicefabric.services.runtime._stateful_service_base.onOpenAsync(ReplicaOpenMode,CancellationToken)'
      - 'microsoft.servicefabric.services.runtime._stateful_service_base.setAddresses(Map<String, String>)'
      - microsoft.servicefabric.services.runtime._stateful_service_base.setPartition(StatefulServicePartition)
      - 'microsoft.servicefabric.services.runtime._stateful_service_base.StatefulServiceBase(StatefulServiceContext,StateProviderReplica)'
  - uid: microsoft.servicefabric.actors._fabric_actor_service.createServiceReplicaListeners()
    id: createServiceReplicaListeners()
    parent: microsoft.servicefabric.actors._fabric_actor_service
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    langs:
      - java
    name: createServiceReplicaListeners()
    nameWithType: FabricActorService.createServiceReplicaListeners()
    fullName: List<ServiceReplicaListener> microsoft.servicefabric.actors.FabricActorService.createServiceReplicaListeners()
    overload: microsoft.servicefabric.actors._fabric_actor_service.createServiceReplicaListeners*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActorService.java
      startLine: 180
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Dienst-Replikat-Listener wird erstellt.</p>
      <p></p>
    syntax:
      content: protected List<ServiceReplicaListener> createServiceReplicaListeners()
      return:
        type: 5618da2dmicrosoft.servicefabric.services.communication.runtime._service_replica_listenera08ddfce
        description: '<p>Endpunkt Zeichenfolgenpaare wie {"Endpunkte": {"Listener1": "Endpoint1", "Listener2": "Endpoint2"...}} </p>'
  - uid: microsoft.servicefabric.actors._fabric_actor_service.deleteActorAsync(ActorId)
    id: deleteActorAsync(ActorId)
    parent: microsoft.servicefabric.actors._fabric_actor_service
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    langs:
      - java
    name: deleteActorAsync(ActorId actorId)
    nameWithType: FabricActorService.deleteActorAsync(ActorId actorId)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.FabricActorService.deleteActorAsync(ActorId actorId)
    overload: microsoft.servicefabric.actors._fabric_actor_service.deleteActorAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActorService.java
      startLine: 169
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Löscht eine <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Akteur</xref> aus der <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Akteur</xref> Dienst.</p>
      <p>
      Akteur active werden deaktiviert, und der Zustand von zustandsanbieter werden ebenfalls gelöscht. Ein Status des actorzustands wird von zustandsanbieter gelöscht werden. Wenn für eine nicht existierende Akteur-Id in das System Diese Methode aufgerufen wird, kann er nicht ausgeführt werden. </p>
    syntax:
      content: public CompletableFuture<?> deleteActorAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">Der Akteur-ID</xref> des Akteurs gelöscht werden soll. </p>"
      return:
        type: 16409f84
        description: '<p>Eine Aufgabe, die den asynchronen Vorgang des Aufrufs an Server darstellt. </p>'
    overridden: microsoft.servicefabric.actors._actor_service.deleteActorAsync(ActorId)
  - uid: 'microsoft.servicefabric.actors._fabric_actor_service.FabricActorService(StatefulServiceContext,ActorTypeInformation)'
    id: 'FabricActorService(StatefulServiceContext,ActorTypeInformation)'
    parent: microsoft.servicefabric.actors._fabric_actor_service
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    langs:
      - java
    name: 'FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo)'
    nameWithType: 'FabricActorService.FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo)'
    fullName: 'microsoft.servicefabric.actors.FabricActorService.FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo)'
    overload: microsoft.servicefabric.actors._fabric_actor_service.FabricActorService*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActorService.java
      startLine: 49
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Initialisiert eine neue Instanz der dem <xref uid="microsoft.servicefabric.actors._actor_service" data-throw-if-not-resolved="false">ActorService</xref> Klasse.</p>
      <p></p>
    syntax:
      content: 'public FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo)'
      parameters:
        - id: context
          type: system.fabric._stateful_service_context
          description: <p>Der Kontext der Akteur-Dienst wird unter ausgeführt werden. </p>
        - id: actorTypeInfo
          type: microsoft.servicefabric.actors._actor_type_information
          description: <p>Geben Sie die Informationen des Darstellers. </p>
  - uid: 'microsoft.servicefabric.actors._fabric_actor_service.FabricActorService(StatefulServiceContext,ActorTypeInformation,BiFunction<FabricActorService, ActorId, ActorBase>)'
    id: 'FabricActorService(StatefulServiceContext,ActorTypeInformation,BiFunction<FabricActorService, ActorId, ActorBase>)'
    parent: microsoft.servicefabric.actors._fabric_actor_service
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    langs:
      - java
    name: 'FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, BiFunction<FabricActorService, ActorId, ActorBase> actorFactory)'
    nameWithType: 'FabricActorService.FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, BiFunction<FabricActorService, ActorId, ActorBase> actorFactory)'
    fullName: 'microsoft.servicefabric.actors.FabricActorService.FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, BiFunction<FabricActorService, ActorId, ActorBase> actorFactory)'
    overload: microsoft.servicefabric.actors._fabric_actor_service.FabricActorService*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActorService.java
      startLine: 63
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Initialisiert eine neue Instanz der dem <xref uid="microsoft.servicefabric.actors._actor_service" data-throw-if-not-resolved="false">ActorService</xref> Klasse.</p>
      <p></p>
    syntax:
      content: 'public FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, BiFunction<FabricActorService, ActorId, ActorBase> actorFactory)'
      parameters:
        - id: context
          type: system.fabric._stateful_service_context
          description: <p>Der Kontext der Akteur-Dienst wird unter ausgeführt werden. </p>
        - id: actorTypeInfo
          type: microsoft.servicefabric.actors._actor_type_information
          description: <p>Geben Sie die Informationen des Darstellers. </p>
        - id: actorFactory
          type: 8ead6242microsoft.servicefabric.actors._fabric_actor_serviceb33c76fcmicrosoft.servicefabric.actors._actor_idb33c76fcmicrosoft.servicefabric.actors._actor_basea08ddfce
          description: <p>Eine Factorymethode zum Erstellen von Akteur-Objekten. </p>
  - uid: 'microsoft.servicefabric.actors._fabric_actor_service.FabricActorService(StatefulServiceContext,ActorTypeInformation,BiFunction<FabricActorService, ActorId, ActorBase>,BiFunction<ActorBase, ActorStateProvider, ActorStateManager>,ActorStateProvider,ActorServiceSettings)'
    id: 'FabricActorService(StatefulServiceContext,ActorTypeInformation,BiFunction<FabricActorService, ActorId, ActorBase>,BiFunction<ActorBase, ActorStateProvider, ActorStateManager>,ActorStateProvider,ActorServiceSettings)'
    parent: microsoft.servicefabric.actors._fabric_actor_service
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    langs:
      - java
    name: 'FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, BiFunction<FabricActorService, ActorId, ActorBase> actorFactory, BiFunction<ActorBase, ActorStateProvider, ActorStateManager> stateManagerFactory, ActorStateProvider stateProvider, ActorServiceSettings settings)'
    nameWithType: 'FabricActorService.FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, BiFunction<FabricActorService, ActorId, ActorBase> actorFactory, BiFunction<ActorBase, ActorStateProvider, ActorStateManager> stateManagerFactory, ActorStateProvider stateProvider, ActorServiceSettings settings)'
    fullName: 'microsoft.servicefabric.actors.FabricActorService.FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, BiFunction<FabricActorService, ActorId, ActorBase> actorFactory, BiFunction<ActorBase, ActorStateProvider, ActorStateManager> stateManagerFactory, ActorStateProvider stateProvider, ActorServiceSettings settings)'
    overload: microsoft.servicefabric.actors._fabric_actor_service.FabricActorService*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActorService.java
      startLine: 86
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Initialisiert eine neue Instanz der dem <xref uid="microsoft.servicefabric.actors._actor_service" data-throw-if-not-resolved="false">ActorService</xref> Klasse.</p>
      <p></p>
    syntax:
      content: 'public FabricActorService(StatefulServiceContext context, ActorTypeInformation actorTypeInfo, BiFunction<FabricActorService, ActorId, ActorBase> actorFactory, BiFunction<ActorBase, ActorStateProvider, ActorStateManager> stateManagerFactory, ActorStateProvider stateProvider, ActorServiceSettings settings)'
      parameters:
        - id: context
          type: system.fabric._stateful_service_context
          description: <p>Der Kontext der Akteur-Dienst wird unter ausgeführt werden. </p>
        - id: actorTypeInfo
          type: microsoft.servicefabric.actors._actor_type_information
          description: <p>Geben Sie die Informationen des Darstellers. </p>
        - id: actorFactory
          type: 8ead6242microsoft.servicefabric.actors._fabric_actor_serviceb33c76fcmicrosoft.servicefabric.actors._actor_idb33c76fcmicrosoft.servicefabric.actors._actor_basea08ddfce
          description: <p>Eine Factorymethode zum Erstellen von Akteur-Objekten. </p>
        - id: stateManagerFactory
          type: 8ead6242microsoft.servicefabric.actors._actor_baseb33c76fcmicrosoft.servicefabric.actors._actor_state_providerb33c76fcmicrosoft.servicefabric.actors._actor_state_managera08ddfce
          description: <p>Eine Factorymethode zum Erstellen <xref uid="microsoft.servicefabric.actors._actor_state_manager" data-throw-if-not-resolved="false">ActorStateManager</xref>. </p>
        - id: stateProvider
          type: microsoft.servicefabric.actors._actor_state_provider
          description: '<p>State-Anbieter, um den Status der Akteur-Objekte zu speichern. </p>'
        - id: settings
          type: microsoft.servicefabric.actors._actor_service_settings
          description: <p>Einstellungen zum Verhalten von konfiguriert <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Akteur</xref> Dienst. </p>
  - uid: microsoft.servicefabric.actors._fabric_actor_service.getActorsAsync(ContinuationToken)
    id: getActorsAsync(ContinuationToken)
    parent: microsoft.servicefabric.actors._fabric_actor_service
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    langs:
      - java
    name: getActorsAsync(ContinuationToken continuationToken)
    nameWithType: FabricActorService.getActorsAsync(ContinuationToken continuationToken)
    fullName: CompletableFuture<PagedResult<ActorInformation>> microsoft.servicefabric.actors.FabricActorService.getActorsAsync(ContinuationToken continuationToken)
    overload: microsoft.servicefabric.actors._fabric_actor_service.getActorsAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActorService.java
      startLine: 152
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft die Liste von Akteuren durch Abfragen des Akteur-Diensts ab.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<PagedResult<ActorInformation>> getActorsAsync(ContinuationToken continuationToken)
      parameters:
        - id: continuationToken
          type: microsoft.servicefabric.actors._continuation_token
          description: '<p>Ein Fortsetzungstoken, um die Ergebnisse von Abfragen zu starten. Ein null-Wert des Fortsetzungstokens bedeutet Zurückgeben von Werten Form Anfang starten. </p>'
      return:
        type: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_informatione7daa122
        description: '<p>Ein <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> , die den asynchronen Vorgang des Aufrufs an Server darstellt. </p>'
    overridden: microsoft.servicefabric.actors._actor_service.getActorsAsync(ContinuationToken)
  - uid: microsoft.servicefabric.actors._fabric_actor_service.getActorTypeInformation()
    id: getActorTypeInformation()
    parent: microsoft.servicefabric.actors._fabric_actor_service
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    langs:
      - java
    name: getActorTypeInformation()
    nameWithType: FabricActorService.getActorTypeInformation()
    fullName: ActorTypeInformation microsoft.servicefabric.actors.FabricActorService.getActorTypeInformation()
    overload: microsoft.servicefabric.actors._fabric_actor_service.getActorTypeInformation*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActorService.java
      startLine: 120
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft <xref uid="microsoft.servicefabric.actors._actor_type_information" data-throw-if-not-resolved="false">ActorTypeInformation</xref> für Akteur-Dienst.</p>
      <p></p>
    syntax:
      content: public ActorTypeInformation getActorTypeInformation()
      return:
        type: microsoft.servicefabric.actors._actor_type_information
        description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_type_information\" data-throw-if-not-resolved=\"false\">ActorTypeInformation</xref> für die der Akteur, der von dem Dienst Replikat gehostet wird. </p>"
  - uid: microsoft.servicefabric.actors._fabric_actor_service.getSettings()
    id: getSettings()
    parent: microsoft.servicefabric.actors._fabric_actor_service
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    langs:
      - java
    name: getSettings()
    nameWithType: FabricActorService.getSettings()
    fullName: ActorServiceSettings microsoft.servicefabric.actors.FabricActorService.getSettings()
    overload: microsoft.servicefabric.actors._fabric_actor_service.getSettings*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActorService.java
      startLine: 138
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft die Einstellungen für den Dienst Akteur ab.</p>
      <p></p>
    syntax:
      content: public ActorServiceSettings getSettings()
      return:
        type: microsoft.servicefabric.actors._actor_service_settings
        description: <p>Einstellungen für den Akteur-Dienst. </p>
  - uid: microsoft.servicefabric.actors._fabric_actor_service.getStateProvider()
    id: getStateProvider()
    parent: microsoft.servicefabric.actors._fabric_actor_service
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    langs:
      - java
    name: getStateProvider()
    nameWithType: FabricActorService.getStateProvider()
    fullName: ActorStateProvider microsoft.servicefabric.actors.FabricActorService.getStateProvider()
    overload: microsoft.servicefabric.actors._fabric_actor_service.getStateProvider*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActorService.java
      startLine: 129
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft eine <xref uid="microsoft.servicefabric.actors._actor_state_provider" data-throw-if-not-resolved="false">ActorStateProvider</xref> , die State-Anbieter für den Dienst Akteur darstellt.</p>
      <p></p>
    syntax:
      content: public ActorStateProvider getStateProvider()
      return:
        type: microsoft.servicefabric.actors._actor_state_provider
        description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref> , die State-Anbieter für den Dienst Akteur darstellt. </p>"
  - uid: microsoft.servicefabric.actors._fabric_actor_service.onAbort()
    id: onAbort()
    parent: microsoft.servicefabric.actors._fabric_actor_service
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    langs:
      - java
    name: onAbort()
    nameWithType: FabricActorService.onAbort()
    fullName: void microsoft.servicefabric.actors.FabricActorService.onAbort()
    overload: microsoft.servicefabric.actors._fabric_actor_service.onAbort*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActorService.java
      startLine: 258
    package: microsoft.servicefabric.actors
    summary: '<p>Überschreibt <xref uid="microsoft.servicefabric.services.runtime._stateful_service_base.onAbort()" data-throw-if-not-resolved="false">StatefulServiceBase#onAbort()</xref></p>'
    syntax:
      content: protected void onAbort()
  - uid: 'microsoft.servicefabric.actors._fabric_actor_service.onChangeRoleAsync(ReplicaRole,CancellationToken)'
    id: 'onChangeRoleAsync(ReplicaRole,CancellationToken)'
    parent: microsoft.servicefabric.actors._fabric_actor_service
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    langs:
      - java
    name: 'onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    nameWithType: 'FabricActorService.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.FabricActorService.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.actors._fabric_actor_service.onChangeRoleAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActorService.java
      startLine: 210
    package: microsoft.servicefabric.actors
    summary: '<p>Überschreibt <xref uid="microsoft.servicefabric.services.runtime._stateful_service_base.onChangeRoleAsync(ReplicaRole,CancellationToken)" data-throw-if-not-resolved="false">StatefulServiceBase #OnChangeRoleAsync(ReplicaRole, system.fabric.CancellationToken)</xref></p>'
    syntax:
      content: 'protected CompletableFuture<?> onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
      parameters:
        - id: newRole
          type: system.fabric._replica_role
          description: <p>Neue Rolle für das Replikat. </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 16409f84
        description: '<p>Eine Aufgabe, die den asynchronen Vorgang ausgeführt, wenn das Replikat das primäre Element wird darstellt. </p>'
  - uid: microsoft.servicefabric.actors._fabric_actor_service.onCloseAsync(CancellationToken)
    id: onCloseAsync(CancellationToken)
    parent: microsoft.servicefabric.actors._fabric_actor_service
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    langs:
      - java
    name: onCloseAsync(CancellationToken cancellationToken)
    nameWithType: FabricActorService.onCloseAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.FabricActorService.onCloseAsync(CancellationToken cancellationToken)
    overload: microsoft.servicefabric.actors._fabric_actor_service.onCloseAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActorService.java
      startLine: 247
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Überschreibt <xref uid="microsoft.servicefabric.services.runtime._stateful_service_base.onCloseAsync(CancellationToken)" data-throw-if-not-resolved="false">StatefulServiceBase#onCloseAsync(CancellationToken)</xref></p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> onCloseAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: <p>Das Token zum Überwachen von abbruchanforderungen. </p>
      return:
        type: 16409f84
        description: '<p>Eine Aufgabe, die den asynchronen Vorgang ausgeführt, wenn das Replikat geschlossenem darstellt. </p>'
  - uid: microsoft.servicefabric.actors._fabric_actor_service.runAsync(CancellationToken)
    id: runAsync(CancellationToken)
    parent: microsoft.servicefabric.actors._fabric_actor_service
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    langs:
      - java
    name: runAsync(CancellationToken cancellationToken)
    nameWithType: FabricActorService.runAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.FabricActorService.runAsync(CancellationToken cancellationToken)
    overload: microsoft.servicefabric.actors._fabric_actor_service.runAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/FabricActorService.java
      startLine: 195
    package: microsoft.servicefabric.actors
    summary: '<p>Überschreibt <xref uid="microsoft.servicefabric.services.runtime._stateful_service_base.runAsync(CancellationToken)" data-throw-if-not-resolved="false">StatefulServiceBase#runAsync(system.fabric.CancellationToken)</xref></p>'
    syntax:
      content: protected CompletableFuture<?> runAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 16409f84
        description: '<p>Eine Aufgabe, die den asynchronen Vorgang des Ladens von Erinnerungen, wenn das Replikat das primäre Element wird darstellt. </p>'
references:
  - uid: microsoft.servicefabric.actors._fabric_actor_service.FabricActorService*
    name: FabricActorService
    nameWithType: FabricActorService.FabricActorService
    fullName: microsoft.servicefabric.actors.FabricActorService.FabricActorService
    package: microsoft.servicefabric.actors
  - uid: 8ead6242microsoft.servicefabric.actors._fabric_actor_serviceb33c76fcmicrosoft.servicefabric.actors._actor_idb33c76fcmicrosoft.servicefabric.actors._actor_basea08ddfce
    spec.java:
      - name: BiFunction<
        fullName: BiFunction<
      - uid: microsoft.servicefabric.actors._fabric_actor_service
        name: FabricActorService
        fullName: microsoft.servicefabric.actors.FabricActorService
        href: microsoft.servicefabric.actors._fabric_actor_service.yml
      - name: ', '
        fullName: ', '
      - uid: microsoft.servicefabric.actors._actor_id
        name: ActorId
        fullName: microsoft.servicefabric.actors.ActorId
        href: microsoft.servicefabric.actors._actor_id.yml
      - name: ', '
        fullName: ', '
      - uid: microsoft.servicefabric.actors._actor_base
        name: ActorBase
        fullName: microsoft.servicefabric.actors.ActorBase
        href: microsoft.servicefabric.actors._actor_base.yml
      - name: '>'
        fullName: '>'
  - uid: 8ead6242microsoft.servicefabric.actors._actor_baseb33c76fcmicrosoft.servicefabric.actors._actor_state_providerb33c76fcmicrosoft.servicefabric.actors._actor_state_managera08ddfce
    spec.java:
      - name: BiFunction<
        fullName: BiFunction<
      - uid: microsoft.servicefabric.actors._actor_base
        name: ActorBase
        fullName: microsoft.servicefabric.actors.ActorBase
        href: microsoft.servicefabric.actors._actor_base.yml
      - name: ', '
        fullName: ', '
      - uid: microsoft.servicefabric.actors._actor_state_provider
        name: ActorStateProvider
        fullName: microsoft.servicefabric.actors.ActorStateProvider
        href: microsoft.servicefabric.actors._actor_state_provider.yml
      - name: ', '
        fullName: ', '
      - uid: microsoft.servicefabric.actors._actor_state_manager
        name: ActorStateManager
        fullName: microsoft.servicefabric.actors.ActorStateManager
        href: microsoft.servicefabric.actors._actor_state_manager.yml
      - name: '>'
        fullName: '>'
  - uid: microsoft.servicefabric.actors._fabric_actor_service.getActorTypeInformation*
    name: getActorTypeInformation
    nameWithType: FabricActorService.getActorTypeInformation
    fullName: ActorTypeInformation microsoft.servicefabric.actors.FabricActorService.getActorTypeInformation
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._fabric_actor_service.getStateProvider*
    name: getStateProvider
    nameWithType: FabricActorService.getStateProvider
    fullName: ActorStateProvider microsoft.servicefabric.actors.FabricActorService.getStateProvider
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._fabric_actor_service.getSettings*
    name: getSettings
    nameWithType: FabricActorService.getSettings
    fullName: ActorServiceSettings microsoft.servicefabric.actors.FabricActorService.getSettings
    package: microsoft.servicefabric.actors
  - uid: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_informatione7daa122
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: microsoft.servicefabric.actors._paged_result
        name: PagedResult
        fullName: microsoft.servicefabric.actors.PagedResult
        href: microsoft.servicefabric.actors._paged_result.yml
      - name: <
        fullName: <
      - uid: microsoft.servicefabric.actors._actor_information
        name: ActorInformation
        fullName: microsoft.servicefabric.actors.ActorInformation
        href: microsoft.servicefabric.actors._actor_information.yml
      - name: '>>'
        fullName: '>>'
  - uid: microsoft.servicefabric.actors._fabric_actor_service.getActorsAsync*
    name: getActorsAsync
    nameWithType: FabricActorService.getActorsAsync
    fullName: CompletableFuture<PagedResult<ActorInformation>> microsoft.servicefabric.actors.FabricActorService.getActorsAsync
    package: microsoft.servicefabric.actors
  - uid: 16409f84
    spec.java:
      - name: CompletableFuture<?>
        fullName: CompletableFuture<?>
  - uid: microsoft.servicefabric.actors._fabric_actor_service.deleteActorAsync*
    name: deleteActorAsync
    nameWithType: FabricActorService.deleteActorAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.FabricActorService.deleteActorAsync
    package: microsoft.servicefabric.actors
  - uid: 5618da2dmicrosoft.servicefabric.services.communication.runtime._service_replica_listenera08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: microsoft.servicefabric.services.communication.runtime._service_replica_listener
        name: ServiceReplicaListener
        fullName: microsoft.servicefabric.services.communication.runtime.ServiceReplicaListener
        href: microsoft.servicefabric.services.communication.runtime._service_replica_listener.yml
      - name: '>'
        fullName: '>'
  - uid: microsoft.servicefabric.actors._fabric_actor_service.createServiceReplicaListeners*
    name: createServiceReplicaListeners
    nameWithType: FabricActorService.createServiceReplicaListeners
    fullName: List<ServiceReplicaListener> microsoft.servicefabric.actors.FabricActorService.createServiceReplicaListeners
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._fabric_actor_service.runAsync*
    name: runAsync
    nameWithType: FabricActorService.runAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.FabricActorService.runAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._fabric_actor_service.onChangeRoleAsync*
    name: onChangeRoleAsync
    nameWithType: FabricActorService.onChangeRoleAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.FabricActorService.onChangeRoleAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._fabric_actor_service.onCloseAsync*
    name: onCloseAsync
    nameWithType: FabricActorService.onCloseAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.FabricActorService.onCloseAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._fabric_actor_service.onAbort*
    name: onAbort
    nameWithType: FabricActorService.onAbort
    fullName: void microsoft.servicefabric.actors.FabricActorService.onAbort
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync(BackupDescription)
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: backupAsync(BackupDescription backupDescription)
    nameWithType: StatefulServiceBase.backupAsync(BackupDescription backupDescription)
    fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync(BackupDescription backupDescription)
    type: Method
    summary: |-
      <p>Führt eine Sicherung alle zuverlässige Status, die von diesem verwaltet <xref uid="microsoft.servicefabric.services.runtime._stateful_service_base" data-throw-if-not-resolved="false">StatefulServiceBase</xref>.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<?> backupAsync(BackupDescription backupDescription)
      parameters:
        - id: backupDescription
          type: microsoft.servicefabric.data._backup_description
          description: <p>Ein <xref uid="" data-throw-if-not-resolved="false">BackupDescription</xref> beschreiben die Anforderung für die Sicherung. </p>
      return:
        type: 16409f84
        description: '<p>Eine Aufgabe, die den asynchronen backup-Vorgang darstellt. </p>'
  - uid: 'microsoft.servicefabric.services.runtime._stateful_service_base.backupAsync(BackupDescription,Duration)'
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: 'backupAsync(BackupDescription backupDescription, Duration timeout)'
    nameWithType: 'StatefulServiceBase.backupAsync(BackupDescription backupDescription, Duration timeout)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync(BackupDescription backupDescription, Duration timeout)'
    type: Method
    summary: |-
      <p>Führt eine Sicherung alle zuverlässige Status, die von diesem verwaltet <xref uid="microsoft.servicefabric.services.runtime._stateful_service_base" data-throw-if-not-resolved="false">StatefulServiceBase</xref>.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> backupAsync(BackupDescription backupDescription, Duration timeout)'
      parameters:
        - id: backupDescription
          type: microsoft.servicefabric.data._backup_description
          description: <p>Ein <xref uid="" data-throw-if-not-resolved="false">BackupDescription</xref> beschreiben die Anforderung für die Sicherung. </p>
        - id: timeout
          type: e02a2de0
          description: <p>Das Timeout für diesen Vorgang. </p>
      return:
        type: 16409f84
        description: '<p>Eine Aufgabe, die den asynchronen backup-Vorgang darstellt. </p>'
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.getAddresses()
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: getAddresses()
    nameWithType: StatefulServiceBase.getAddresses()
    fullName: 'Map<String, String> microsoft.servicefabric.services.runtime.StatefulServiceBase.getAddresses()'
    type: Method
    summary: |-
      <p>Ruft alle Adressen der Liste für dieses Replikat Dienst als (ListenerName Endpunkt) Schlüssel-Wert-Paar.</p>
      <p></p>
    syntax:
      content: 'protected Map<String, String> getAddresses()'
      return:
        type: 689c8cb5
        description: <p>Ein <xref uid="" data-throw-if-not-resolved="false">Zuordnung</xref> Liste der Adressen als (ListenerName Endpunkt) mit Schlüssel / Wert-Paar. </p>
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.getPartition()
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: getPartition()
    nameWithType: StatefulServiceBase.getPartition()
    fullName: StatefulServicePartition microsoft.servicefabric.services.runtime.StatefulServiceBase.getPartition()
    type: Method
    summary: |-
      <p>Welche aktuellen Dienst Replikat gehört Dienstpartition.</p>
      <p></p>
    syntax:
      content: protected StatefulServicePartition getPartition()
      return:
        type: system.fabric._stateful_service_partition
        description: '<p>Ein <xref uid="" data-throw-if-not-resolved="false">StatefulServicePartition</xref> , die die Partition, zu der dieser Dienst Replikat gehört, darstellt. </p>'
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.getServiceContext()
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: getServiceContext()
    nameWithType: StatefulServiceBase.getServiceContext()
    fullName: StatefulServiceContext microsoft.servicefabric.services.runtime.StatefulServiceBase.getServiceContext()
    type: Method
    summary: |-
      <p>Ruft den Dienstkontext, in denen dieses zustandsbehafteten Dienst unter ab. Es enthält Informationen wie bei ReplicaId "," PartitionId "" usw. ServiceName.</p>
      <p></p>
    syntax:
      content: public StatefulServiceContext getServiceContext()
      return:
        type: system.fabric._stateful_service_context
        description: '<p>Ein <xref uid="" data-throw-if-not-resolved="false">StatefulServiceContext</xref> , beschreibt der Kontext. </p>'
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.getStateProviderReplica()
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: getStateProviderReplica()
    nameWithType: StatefulServiceBase.getStateProviderReplica()
    fullName: StateProviderReplica microsoft.servicefabric.services.runtime.StatefulServiceBase.getStateProviderReplica()
    type: Method
    syntax:
      content: protected StateProviderReplica getStateProviderReplica()
      return:
        type: microsoft.servicefabric.data._state_provider_replica
  - uid: 'microsoft.servicefabric.services.runtime._stateful_service_base.onDataLossAsync(RestoreContext,CancellationToken)'
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: 'onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)'
    nameWithType: 'StatefulServiceBase.onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Boolean> microsoft.servicefabric.services.runtime.StatefulServiceBase.onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)'
    type: Method
    summary: |-
      <p>Diese Methode wird während der potenziellen Datenverlust aufgerufen. Sie können diese Methode, um den Dienst bei einem Datenverlust wiederherzustellen überschreiben.</p>
      <p></p>
    syntax:
      content: 'protected CompletableFuture<Boolean> onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)'
      parameters:
        - id: context
          type: microsoft.servicefabric.data._restore_context
          description: <p>Ein <xref uid="" data-throw-if-not-resolved="false">RestoreContext</xref> zum Wiederherstellen des Diensts verwendet werden. </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 7e53ac82
        description: '<p>Eine Aufgabe, die den asynchronen Restore-Vorgang darstellt. "True" gibt an, dass der Zustand wiederhergestellt wurde. False gibt an, dass das Replikat Zustand nicht geändert wurde. </p>'
  - uid: 'microsoft.servicefabric.services.runtime._stateful_service_base.onOpenAsync(ReplicaOpenMode,CancellationToken)'
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: 'onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)'
    nameWithType: 'StatefulServiceBase.onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)'
    type: Method
    summary: |-
      <p>Diese Methode wird als abschließenden Schritt des Öffnens des Diensts aufgerufen. Überschreiben Sie diese Methode, um benachrichtigt zu werden, dass für dieses Replikat interne Komponenten öffnen abgeschlossen wurde.</p>
      <p></p>
    syntax:
      content: 'protected CompletableFuture<?> onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)'
      parameters:
        - id: openMode
          type: system.fabric._replica_open_mode
          description: <p>für dieses Replikat Dienst. </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 16409f84
        description: '<p>Ein <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> , ausstehenden Vorgang darstellt. </p>'
  - uid: 'microsoft.servicefabric.services.runtime._stateful_service_base.setAddresses(Map<String, String>)'
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: 'setAddresses(Map<String, String> addresses)'
    nameWithType: 'StatefulServiceBase.setAddresses(Map<String, String> addresses)'
    fullName: 'void microsoft.servicefabric.services.runtime.StatefulServiceBase.setAddresses(Map<String, String> addresses)'
    type: Method
    summary: |-
      <p>Sets-Liste aller Adressen für diese dienstreplikats als (ListenerName Endpunkt) Schlüssel / Wert-Paar.</p>
      <p></p>
    syntax:
      content: 'protected void setAddresses(Map<String, String> addresses)'
      parameters:
        - id: addresses
          type: 689c8cb5
          description: <p>Ein <xref uid="" data-throw-if-not-resolved="false">Zuordnung</xref> Liste der Adressen als (ListenerName Endpunkt) mit Schlüssel / Wert-Paar. </p>
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.setPartition(StatefulServicePartition)
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: setPartition(StatefulServicePartition partition)
    nameWithType: StatefulServiceBase.setPartition(StatefulServicePartition partition)
    fullName: void microsoft.servicefabric.services.runtime.StatefulServiceBase.setPartition(StatefulServicePartition partition)
    type: Method
    summary: |-
      <p>Welche aktuellen Dienst Replikat gehört Dienstpartition.</p>
      <p></p>
    syntax:
      content: protected void setPartition(StatefulServicePartition partition)
      parameters:
        - id: partition
          type: system.fabric._stateful_service_partition
          description: '<p>Ein <xref uid="" data-throw-if-not-resolved="false">StatefulServicePartition</xref> , die die Partition, zu der dieser Dienst Replikat gehört, darstellt. </p>'
  - uid: 'microsoft.servicefabric.services.runtime._stateful_service_base.StatefulServiceBase(StatefulServiceContext,StateProviderReplica)'
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: 'StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)'
    nameWithType: 'StatefulServiceBase.StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)'
    fullName: 'microsoft.servicefabric.services.runtime.StatefulServiceBase.StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)'
    type: Constructor
    summary: |-
      <p>Erstellt ein neues <xref uid="microsoft.servicefabric.services.runtime._stateful_service" data-throw-if-not-resolved="false">StatefulService</xref>.</p>
      <p></p>
    syntax:
      content: 'protected StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)'
      parameters:
        - id: serviceContext
          type: system.fabric._stateful_service_context
          description: '<p>Ein <xref uid="" data-throw-if-not-resolved="false">StatefulServiceContext</xref> , beschreibt der Kontext. </p>'
        - id: stateProviderReplica
          type: microsoft.servicefabric.data._state_provider_replica
          description: '<p>Ein <xref uid="" data-throw-if-not-resolved="false">StateProviderReplica</xref> , die ein Replikat des zuverlässigen Zustand Anbieter darstellt. </p>'
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base
    parent: microsoft.servicefabric.services.runtime
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: StatefulServiceBase
    nameWithType: StatefulServiceBase
    fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase
    type: Class
    summary: <p>Stellt die Basisklasse für Microsoft Service Fabric basierend statusbehaftete zuverlässige Dienst. </p>
    syntax:
      content: public class StatefulServiceBase
  - uid: microsoft.servicefabric.actors._actor_service
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_service.yml
    name: ActorService
    nameWithType: ActorService
    fullName: microsoft.servicefabric.actors.ActorService
    type: Interface
    summary: '<p>Definiert die Schnittstelle enthält Methoden, die zur aufgerufen werden können <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Akteur</xref> -Dienstebene. </p>'
    syntax:
      content: public interface ActorService extends Service
  - uid: microsoft.servicefabric.actors._actor_state_provider
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_state_provider.yml
    name: ActorStateProvider
    nameWithType: ActorStateProvider
    fullName: microsoft.servicefabric.actors.ActorStateProvider
    type: Interface
    summary: '<p>Stellt die Schnittstelle, die ein Akteur State-Anbieter für Akteur-Laufzeit für die Kommunikation zu implementieren muss. </p>'
    syntax:
      content: public interface ActorStateProvider extends StateProviderReplica
  - uid: microsoft.servicefabric.actors._actor_service_settings
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_service_settings.yml
    name: ActorServiceSettings
    nameWithType: ActorServiceSettings
    fullName: microsoft.servicefabric.actors.ActorServiceSettings
    type: Class
    summary: <p>Einstellungen zum Verhalten von konfiguriert <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Akteur</xref> Dienst. </p>
    syntax:
      content: public class ActorServiceSettings
  - uid: microsoft.servicefabric.actors._actor_base
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_base.yml
    name: ActorBase
    nameWithType: ActorBase
    fullName: microsoft.servicefabric.actors.ActorBase
    type: Class
    summary: "<p>Stellt die Basisklasse für Akteure. <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Akteur</xref></p>\n<p>\r\n\r\n  <b>Hinweise:</b>Dies ist ein Basistyp für Akteur, bietet die Funktionalität, die durch Ableiten von Akteur implementiert Akteure gemeinsam ist <xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Akteur</xref> der Zustand in den Garbage Collections der Akteur und Fail-Failover beibehalten wird. Speichern und Abrufen des Zustands wird von der Akteur-State-Anbieter bereitgestellt <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref>. </p>"
    syntax:
      content: public class ActorBase
  - uid: microsoft.servicefabric.actors._actor_state_manager
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    name: ActorStateManager
    nameWithType: ActorStateManager
    fullName: microsoft.servicefabric.actors.ActorStateManager
    type: Interface
    summary: '<p>Stellt die Schnittstelle, die Status-Manager für <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Akteur</xref> implementiert. </p>'
    syntax:
      content: public interface ActorStateManager
  - uid: microsoft.servicefabric.actors._actor_type_information
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_type_information.yml
    name: ActorTypeInformation
    nameWithType: ActorTypeInformation
    fullName: microsoft.servicefabric.actors.ActorTypeInformation
    type: Class
    summary: <p>Enthält Informationen zum Implementieren von eines Akteurs Typ an. </p>
    syntax:
      content: public class ActorTypeInformation
  - uid: system.fabric._replica_role
    parent: system.fabric
    href: system.fabric._replica_role.yml
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: system.fabric.ReplicaRole
    type: Enum
    summary: <p>Definiert die replikatrolle </p>
    syntax:
      content: public enum ReplicaRole
  - uid: system.fabric._stateful_service_context
    parent: system.fabric
    href: system.fabric._stateful_service_context.yml
    name: StatefulServiceContext
    nameWithType: StatefulServiceContext
    fullName: system.fabric.StatefulServiceContext
    type: Class
    syntax:
      content: public class StatefulServiceContext
  - uid: microsoft.servicefabric.actors._fabric_actor_service
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._fabric_actor_service.yml
    name: FabricActorService
    nameWithType: FabricActorService
    fullName: microsoft.servicefabric.actors.FabricActorService
    type: Class
    summary: "<p>Stellt die Basisklasse für Microsoft Service Fabric-basierten zuverlässige Akteure Dienst dar. </p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Ableiten von dieser Klasse, die einen eigenen benutzerdefinierten Akteur-Dienst zu implementieren, wenn Sie alle Verhalten des Diensts für die Akteure außer Kraft setzen möchten. </p>"
    syntax: *ref_1
  - uid: microsoft.servicefabric.actors._actor_id
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_id.yml
    name: ActorId
    nameWithType: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    type: Class
    summary: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">Der Akteur-ID</xref> ist die Identität der Akteur innerhalb eines Diensts Akteur. Akteure können festgestellt werden, indem <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.String</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.util.UUID</xref> oder lang. </p>"
    syntax:
      content: public class ActorId
  - uid: microsoft.servicefabric.actors._actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor.yml
    name: Actor
    nameWithType: Actor
    fullName: microsoft.servicefabric.actors.Actor
    type: Interface
    summary: <p>Die Basisschnittstelle für das zuverlässige Akteur Schnittstellen erben. </p>
    syntax:
      content: public interface Actor
  - uid: microsoft.servicefabric.actors._paged_result
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._paged_result.yml
    name: PagedResult<T>
    nameWithType: PagedResult<T>
    fullName: microsoft.servicefabric.actors.PagedResult<T>
    type: Class
    summary: |-
      <p>Das Ergebnis des actoraufrufen, die Abfrage darstellt.</p>
      <p></p>
    syntax:
      content: public class PagedResult<T>
      typeParameters:
        - type: 8ce1ecb9
          description: '<p>Der Typ der Elemente, die dieses Abfrageergebnis enthält. </p>'
  - uid: microsoft.servicefabric.actors._actor_information
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_information.yml
    name: ActorInformation
    nameWithType: ActorInformation
    fullName: microsoft.servicefabric.actors.ActorInformation
    type: Class
    summary: <p>Stellt die Informationen zu einem Akteur zurückgegebenes <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Akteur</xref> Methodenaufruf abzufragen. </p>
    syntax:
      content: public class ActorInformation
  - uid: microsoft.servicefabric.actors._actor_service.getActorsAsync(ContinuationToken)
    parent: microsoft.servicefabric.actors._actor_service
    href: microsoft.servicefabric.actors._actor_service.yml
    name: getActorsAsync(ContinuationToken continuationToken)
    nameWithType: ActorService.getActorsAsync(ContinuationToken continuationToken)
    fullName: CompletableFuture<PagedResult<ActorInformation>> microsoft.servicefabric.actors.ActorService.getActorsAsync(ContinuationToken continuationToken)
    type: Method
    summary: |-
      <p>Ruft die Liste von Akteuren durch Abfragen des Akteur-Diensts ab.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<PagedResult<ActorInformation>> getActorsAsync(ContinuationToken continuationToken)
      parameters:
        - id: continuationToken
          type: microsoft.servicefabric.actors._continuation_token
          description: '<p>Ein Fortsetzungstoken, um die Ergebnisse von Abfragen zu starten. Ein null-Wert des Fortsetzungstokens bedeutet Zurückgeben von Werten Form Anfang starten. </p>'
      return:
        type: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_informatione7daa122
        description: '<p>Ein Future, das den asynchronen Vorgang des Aufrufs an Server darstellt. </p>'
  - uid: microsoft.servicefabric.actors._continuation_token
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._continuation_token.yml
    name: ContinuationToken
    nameWithType: ContinuationToken
    fullName: microsoft.servicefabric.actors.ContinuationToken
    type: Class
    summary: "<p>Stellt ein Fortsetzungstoken für Abfragevorgänge dar. </p>\n<p>\r\n\r\n  <b>Hinweise:</b>eine Methode, die möglicherweise eine Teilmenge der Ergebnisse über Zurückgeben einer <xref uid=\"microsoft.servicefabric.actors._paged_result\" data-throw-if-not-resolved=\"false\">PagedResult</xref> Objekt gibt auch ein Fortsetzungstoken zurück, in das Objekt, das in einem nachfolgenden Aufruf verwendet werden kann, um den nächsten Satz verfügbarer Ergebnisse zurückzugeben. </p>"
    syntax:
      content: public class ContinuationToken
  - uid: microsoft.servicefabric.actors._actor_service.deleteActorAsync(ActorId)
    parent: microsoft.servicefabric.actors._actor_service
    href: microsoft.servicefabric.actors._actor_service.yml
    name: deleteActorAsync(ActorId actorId)
    nameWithType: ActorService.deleteActorAsync(ActorId actorId)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorService.deleteActorAsync(ActorId actorId)
    type: Method
    summary: |-
      <p>Löscht eine <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Akteur</xref> aus der <xref uid="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false">Akteur</xref> Dienst.</p>
      <p>
      Akteur active werden deaktiviert, und der Zustand von zustandsanbieter werden ebenfalls gelöscht. Ein Status des actorzustands wird von zustandsanbieter gelöscht werden. Wenn für eine nicht existierende Akteur-Id in das System Diese Methode aufgerufen wird, kann er nicht ausgeführt werden. </p>
    syntax:
      content: public CompletableFuture<?> deleteActorAsync(ActorId actorId)
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\">Der Akteur-ID</xref> des Akteurs gelöscht werden soll. </p>"
      return:
        type: 16409f84
        description: '<p>Eine Aufgabe, die den asynchronen Vorgang des Aufrufs an Server darstellt. </p>'
  - uid: microsoft.servicefabric.services.communication.runtime._service_replica_listener
    parent: microsoft.servicefabric.services.communication.runtime
    href: microsoft.servicefabric.services.communication.runtime._service_replica_listener.yml
    name: ServiceReplicaListener
    nameWithType: ServiceReplicaListener
    fullName: microsoft.servicefabric.services.communication.runtime.ServiceReplicaListener
    type: Class
    summary: '<p>Stellt den Listener für die Kommunikation und dessen Eigenschaften für einen Zustandsbehafteten Dienstreplikats dar. Endpunkte, die vom Listener Kommunikation ausgegeben werden der Name des Listeners Kommunikation zugeordnet. </p>'
    syntax:
      content: public class ServiceReplicaListener
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p>Ein <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> wird verwendet, um die Benachrichtigung verteilt wird, dass Vorgänge abgebrochen werden sollen. Sie erstellen ein Abbruchtoken, das durch die Instanziierung einer <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> -Objekt, das Abbruchtoken verwaltet entnommen seine <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken() </xref> Methode. Übergeben Sie dann das Abbruchtoken, das auf eine beliebige Anzahl von Vorgängen, die Nachricht vom Abbruch erhalten soll. Das Token kann nicht verwendet werden, um den Abbruch zu initiieren. Wenn das besitzende Objekt aufruft <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, auf das Abbruchtoken, das die abgebrochene Eigenschaft festgelegt ist auf "true". Die Objekte, die die Benachrichtigung empfangen können Antworten Verfolgungsinformationen geeignet ist. </p>'
    syntax:
      content: public class CancellationToken
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.runAsync(CancellationToken)
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: runAsync(CancellationToken cancellationToken)
    nameWithType: StatefulServiceBase.runAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.runAsync(CancellationToken cancellationToken)
    type: Method
    summary: |-
      <p>Dienste, die ausgeführt wird, wenn er hat die primäre und Schreibstatus, hat eine Verarbeitungsschleife implementieren soll überschreiben nur Sie diese Methode mit ihrer Logik.</p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> runAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 16409f84
        description: '<p>Ein <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> , ausstehenden Vorgang darstellt. </p>'
  - uid: 'microsoft.servicefabric.services.runtime._stateful_service_base.onChangeRoleAsync(ReplicaRole,CancellationToken)'
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: 'onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    nameWithType: 'StatefulServiceBase.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    type: Method
    summary: |-
      <p>Diese Methode wird aufgerufen, als der letzte Schritt vor dem Abschluss <xref uid="system.fabric._stateful_service_replica.changeRoleAsync(ReplicaRole,CancellationToken)" data-throw-if-not-resolved="false">system.fabric.StatefulServiceReplica#changeRoleAsync (ReplicaRole, CancellationToken)</xref> . Überschreiben Sie diese Methode, um benachrichtigt zu werden, dass ChangeRole für dieses Replikat interne Komponenten abgeschlossen wurde.</p>
      <p></p>
    syntax:
      content: 'protected CompletableFuture<?> onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
      parameters:
        - id: newRole
          type: system.fabric._replica_role
          description: <p>für dieses Replikat Dienst. </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 16409f84
        description: '<p>Ein <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> , ausstehenden Vorgang darstellt. </p>'
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.onCloseAsync(CancellationToken)
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: onCloseAsync(CancellationToken cancellationToken)
    nameWithType: StatefulServiceBase.onCloseAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<?> microsoft.servicefabric.services.runtime.StatefulServiceBase.onCloseAsync(CancellationToken cancellationToken)
    type: Method
    summary: |-
      <p>Diese Methode wird als abschließenden Schritt schließen Sie den Dienst aufgerufen. Überschreiben Sie diese Methode, um benachrichtigt zu werden, dass für dieses Replikat interne Komponenten schließen abgeschlossen wurde.</p>
      <p></p>
    syntax:
      content: protected CompletableFuture<?> onCloseAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 16409f84
        description: '<p>Ein <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> , ausstehenden Vorgang darstellt. </p>'
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base.onAbort()
    parent: microsoft.servicefabric.services.runtime._stateful_service_base
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: onAbort()
    nameWithType: StatefulServiceBase.onAbort()
    fullName: void microsoft.servicefabric.services.runtime.StatefulServiceBase.onAbort()
    type: Method
    summary: '<p>Benachrichtigung, dass der Dienst abgebrochen wird. Coredispatcher möglicherweise wie der Abbruch nicht im Pfad Abbruch gewartet wird gleichzeitig mit der Ausführung dieser Methode wird ausgeführt. </p>'
    syntax:
      content: protected void onAbort()
  - uid: microsoft.servicefabric.services.remoting._service_remoting_listener
    parent: microsoft.servicefabric.services.remoting
    href: microsoft.servicefabric.services.remoting._service_remoting_listener.yml
    name: ServiceRemotingListener
    nameWithType: ServiceRemotingListener
    fullName: microsoft.servicefabric.services.remoting.ServiceRemotingListener
    type: Interface
    summary: '<p>Definiert eine Basisklasse Kommunikationsschnittstelle, die Schnittstelle Remoting für Zustandslose und zustandsbehaftete Dienste ermöglicht. </p>'
    syntax:
      content: public interface ServiceRemotingListener