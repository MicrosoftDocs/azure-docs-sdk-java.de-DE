### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
    id: _https_connection
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    children:
      - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connect()
      - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.getResponseHeaders()
      - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.getResponseStatus()
      - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.HttpsConnection()
      - 'com.microsoft.azure.sdk.iot.device.transport.https._https_connection.HttpsConnection(URL,HttpsMethod)'
      - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readError()
      - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readInput()
      - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setReadTimeoutMillis(int)
      - 'com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setRequestHeader(String,String)'
      - com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setRequestMethod(HttpsMethod)
      - 'com.microsoft.azure.sdk.iot.device.transport.https._https_connection.writeOutput(byte [])'
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
    langs:
      - java
    name: HttpsConnection
    nameWithType: HttpsConnection
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
    type: Class
    source:
      remote: &ref_0
        path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
      startLine: 30
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>Ein Wrapper für die Java SE-Klasse <xref uid="" data-throw-if-not-resolved="false">HttpsURLConnection</xref>. Wird verwendet, um Kompatibilitätsprobleme zu vermeiden, wenn Tests mit den pseudoframework JMockit sowie einige nicht dokumentierte Nebeneffekte zu vermeiden, wenn HttpsURLConnection verwenden. </p>
      <p>Die zugrunde liegende <xref uid="" data-throw-if-not-resolved="false">HttpsURLConnection</xref> transparent von Java verwaltet wird. Wiederverwenden von Verbindungen, für jedes Mal <xref uid="com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connect()" data-throw-if-not-resolved="false">connect()</xref> aufgerufen wird, wird die Eingabe Streams (Eingabestream oder fehlerdatenstroms, wenn der Eingabedatenstrom nicht möglich ist) vollständig gelesen werden müssen. Andernfalls werden die Daten verbleiben in den Stream und die Verbindung nicht wiederverwendet werden handeln. </p>
    syntax:
      content: public class HttpsConnection
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connect()
    id: connect()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
    langs:
      - java
    name: connect()
    nameWithType: HttpsConnection.connect()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connect*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
      startLine: 77
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>Sendet die Anforderung an die URL, die im Konstruktor angegeben.</p>
      <p></p>
    syntax: &ref_1
      content: public void connect()
    exceptions:
      - type: cbf33bbe
        description: '<p>Wenn die Verbindung nicht hergestellt werden konnte, oder der Server hat mit einem ungültigen Statuscode geantwortet. </p>'
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.getResponseHeaders()
    id: getResponseHeaders()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
    langs:
      - java
    name: getResponseHeaders()
    nameWithType: HttpsConnection.getResponseHeaders()
    fullName: 'Map<String, List<String>> com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders()'
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.getResponseHeaders*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
      startLine: 248
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>Gibt die Antwortheader als eine <xref uid="" data-throw-if-not-resolved="false">Zuordnung</xref>, wobei der Schlüssel der Feldname Header wird und die Werte den Werten der Feldname Header zugeordnet entsprechen.</p>
      <p></p>
    syntax:
      content: 'public Map<String, List<String>> getResponseHeaders()'
      return:
        type: b2319095
        description: <p>die Antwortheader. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.getResponseStatus()
    id: getResponseStatus()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
    langs:
      - java
    name: getResponseStatus()
    nameWithType: HttpsConnection.getResponseStatus()
    fullName: int com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.getResponseStatus*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
      startLine: 233
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>Gibt den Statuscode der Antwort zurück.</p>
      <p></p>
    syntax:
      content: public int getResponseStatus()
      return:
        type: f75371fa
        description: <p>der Statuscode der Antwort.</p>
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn keine Antwort empfangen wurde. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.HttpsConnection()
    id: HttpsConnection()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
    langs:
      - java
    name: HttpsConnection()
    nameWithType: HttpsConnection.HttpsConnection()
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection()
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.HttpsConnection*
    type: Constructor
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
      startLine: 298
    package: com.microsoft.azure.sdk.iot.device.transport.https
    syntax:
      content: protected HttpsConnection()
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_connection.HttpsConnection(URL,HttpsMethod)'
    id: 'HttpsConnection(URL,HttpsMethod)'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
    langs:
      - java
    name: 'HttpsConnection(URL url, HttpsMethod method)'
    nameWithType: 'HttpsConnection.HttpsConnection(URL url, HttpsMethod method)'
    fullName: 'com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL url, HttpsMethod method)'
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.HttpsConnection*
    type: Constructor
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
      startLine: 50
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>Der Konstruktor. Öffnet eine Verbindung zur angegebenen URL.</p>
      <p></p>
    syntax:
      content: 'public HttpsConnection(URL url, HttpsMethod method)'
      parameters:
        - id: url
          type: a891b3e6
          description: <p>die URL für die HTTPS-Verbindung. </p>
        - id: method
          type: com.microsoft.azure.sdk.iot.device.transport.https._https_method
          description: <p>die HTTPS-Methode (d. h. GET).</p>
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn die Verbindung nicht geöffnet werden konnte. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readError()
    id: readError()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
    langs:
      - java
    name: readError()
    nameWithType: HttpsConnection.readError()
    fullName: 'byte [] com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError()'
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readError*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
      startLine: 208
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>Liest aus dem Fehlerstream, und gibt den Grund für Fehler zurück.</p>
      <p></p>
    syntax:
      content: 'public byte [] readError()'
      return:
        type: ccd9418d
        description: <p>Der Grund für Fehler.</p>
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn der Eingabedatenstrom konnte nicht zugegriffen werden z. B. wenn der Server nicht erreicht werden konnte. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readInput()
    id: readInput()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
    langs:
      - java
    name: readInput()
    nameWithType: HttpsConnection.readInput()
    fullName: 'byte [] com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput()'
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readInput*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
      startLine: 188
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>Liest aus dem Eingabestream (Antwortstream) und gibt die Antwort zurück.</p>
      <p></p>
    syntax:
      content: 'public byte [] readInput()'
      return:
        type: ccd9418d
        description: <p>der Antworttext.</p>
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn der Eingabedatenstrom konnte nicht zugegriffen werden z. B. wenn der Server nicht erreicht werden konnte. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setReadTimeoutMillis(int)
    id: setReadTimeoutMillis(int)
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
    langs:
      - java
    name: setReadTimeoutMillis(int timeout)
    nameWithType: HttpsConnection.setReadTimeoutMillis(int timeout)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeoutMillis(int timeout)
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setReadTimeoutMillis*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
      startLine: 143
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>Legt das Lesetimeout in Millisekunden an. Das Lesetimeout ist die Anzahl der Millisekunden, nachdem der Server eine Anforderung erhält und bevor der Server wieder Daten sendet.</p>
      <p></p>
    syntax:
      content: public void setReadTimeoutMillis(int timeout)
      parameters:
        - id: timeout
          type: f75371fa
          description: <p>Das Lesetimeout. </p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setRequestHeader(String,String)'
    id: 'setRequestHeader(String,String)'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
    langs:
      - java
    name: 'setRequestHeader(String field, String value)'
    nameWithType: 'HttpsConnection.setRequestHeader(String field, String value)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader(String field, String value)'
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setRequestHeader*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
      startLine: 130
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>Legt die Anforderungsheaderfeld auf den angegebenen Wert fest.</p>
      <p></p>
    syntax:
      content: 'public void setRequestHeader(String field, String value)'
      parameters:
        - id: field
          type: '26831127'
          description: <p>der Name des Header-Feld. </p>
        - id: value
          type: '26831127'
          description: <p>der Wert des Felds. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setRequestMethod(HttpsMethod)
    id: setRequestMethod(HttpsMethod)
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
    langs:
      - java
    name: setRequestMethod(HttpsMethod method)
    nameWithType: HttpsConnection.setRequestMethod(HttpsMethod method)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod(HttpsMethod method)
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setRequestMethod*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
      startLine: 100
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>Legt die Anforderungsmethode (d. h. POST) an.</p>
      <p></p>
    syntax:
      content: public void setRequestMethod(HttpsMethod method)
      parameters:
        - id: method
          type: com.microsoft.azure.sdk.iot.device.transport.https._https_method
          description: <p>die Anforderungsmethode.</p>
    exceptions:
      - type: 3c87bd19
        description: '<p>Wenn die Anforderung verfügt derzeit über einen nicht leeren Text und die neue Methode keiner POST- oder PUT. Grund hierfür ist, Java''s <xref uid="" data-throw-if-not-resolved="false">HttpsURLConnection</xref> die HTTPS-Methode im Hintergrund auf POST oder PUT konvertiert werden, wenn die Anforderung ein Text geschrieben wird. </p>'
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.https._https_connection.writeOutput(byte [])'
    id: 'writeOutput(byte [])'
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
    langs:
      - java
    name: 'writeOutput(byte[] body)'
    nameWithType: 'HttpsConnection.writeOutput(byte[] body)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput(byte[] body)'
    overload: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.writeOutput*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsConnection.java
      startLine: 159
    package: com.microsoft.azure.sdk.iot.device.transport.https
    summary: |-
      <p>Speichert den Text mit der Anforderung gesendet wird.</p>
      <p></p>
    syntax:
      content: 'public void writeOutput(byte[] body)'
      parameters:
        - id: body
          type: ccd9418d
          description: <p>Der Anforderungstext.</p>
    exceptions:
      - type: 3c87bd19
        description: '<p>Wenn die Anforderung derzeit keine Methode POST oder PUT-Anforderung verwendet, und der Text nicht leer ist. Grund hierfür ist, Java''s <xref uid="" data-throw-if-not-resolved="false">HttpsURLConnection</xref> die HTTPS-Methode im Hintergrund auf POST oder PUT konvertiert werden, wenn die Anforderung ein Text geschrieben wird. </p>'
references:
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: a891b3e6
    spec.java:
      - name: URL
        fullName: URL
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.HttpsConnection*
    name: HttpsConnection
    nameWithType: HttpsConnection.HttpsConnection
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connect*
    name: connect
    nameWithType: HttpsConnection.connect
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setRequestMethod*
    name: setRequestMethod
    nameWithType: HttpsConnection.setRequestMethod
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setRequestHeader*
    name: setRequestHeader
    nameWithType: HttpsConnection.setRequestHeader
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.setReadTimeoutMillis*
    name: setReadTimeoutMillis
    nameWithType: HttpsConnection.setReadTimeoutMillis
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeoutMillis
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.writeOutput*
    name: writeOutput
    nameWithType: HttpsConnection.writeOutput
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readInput*
    name: readInput
    nameWithType: HttpsConnection.readInput
    fullName: 'byte [] com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput'
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.readError*
    name: readError
    nameWithType: HttpsConnection.readError
    fullName: 'byte [] com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError'
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.getResponseStatus*
    name: getResponseStatus
    nameWithType: HttpsConnection.getResponseStatus
    fullName: int com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: b2319095
    spec.java:
      - name: 'Map<String, List<String>>'
        fullName: 'Map<String, List<String>>'
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.getResponseHeaders*
    name: getResponseHeaders
    nameWithType: HttpsConnection.getResponseHeaders
    fullName: 'Map<String, List<String>> com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders'
    package: com.microsoft.azure.sdk.iot.device.transport.https
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.connect()
    parent: com.microsoft.azure.sdk.iot.device.transport.https._https_connection
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_connection.yml
    name: connect()
    nameWithType: HttpsConnection.connect()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()
    type: Method
    summary: |-
      <p>Sendet die Anforderung an die URL, die im Konstruktor angegeben.</p>
      <p></p>
    syntax: *ref_1
  - uid: com.microsoft.azure.sdk.iot.device.transport.https._https_method
    parent: com.microsoft.azure.sdk.iot.device.transport.https
    href: com.microsoft.azure.sdk.iot.device.transport.https._https_method.yml
    name: HttpsMethod
    nameWithType: HttpsMethod
    fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
    type: Enum
    summary: <p>Die HTTPS-Anforderungsmethode (d. h. GET). </p>
    syntax:
      content: public enum HttpsMethod