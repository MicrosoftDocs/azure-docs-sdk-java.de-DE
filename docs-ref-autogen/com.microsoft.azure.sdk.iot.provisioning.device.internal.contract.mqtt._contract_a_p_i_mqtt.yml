### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    id: _contract_a_p_i_mqtt
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    children:
      - 'com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.authenticateWithProvisioningService(RequestData,ResponseCallback,Object)'
      - com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.close()
      - com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.connectionEstablished()
      - com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.connectionLost(Throwable)
      - com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.ContractAPIMqtt(ProvisioningDeviceClientConfig)
      - 'com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.getRegistrationStatus(RequestData,ResponseCallback,Object)'
      - com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.messageReceived(MqttMessage)
      - com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.open(RequestData)
      - 'com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.requestNonceForTPM(RequestData,ResponseCallback,Object)'
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: ContractAPIMqtt
    nameWithType: ContractAPIMqtt
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt
    type: Class
    source:
      remote: &ref_0
        path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 21
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    syntax:
      content: public class ContractAPIMqtt extends ProvisioningDeviceClientContract implements MqttListener
    inheritance:
      - java.lang.Object
      - com.microsoft.azure.sdk.iot.provisioning.device.internal.contract_1060281c1c676e5850e536ff61c0b32c1
    inheritedMembers:
      - com.microsoft.azure.sdk.iot.provisioning.device.internal.contract_1060281c1c676e5850e536ff61c0b32c1.createProvisioningContract(ProvisioningDeviceClientConfig)
  - uid: 'com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.authenticateWithProvisioningService(RequestData,ResponseCallback,Object)'
    id: 'authenticateWithProvisioningService(RequestData,ResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: 'authenticateWithProvisioningService(RequestData requestData, ResponseCallback responseCallback, Object callbackContext)'
    nameWithType: 'ContractAPIMqtt.authenticateWithProvisioningService(RequestData requestData, ResponseCallback responseCallback, Object callbackContext)'
    fullName: 'synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.authenticateWithProvisioningService(RequestData requestData, ResponseCallback responseCallback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.authenticateWithProvisioningService*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 173
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: '<p><span data-ttu-id="026c6-101">Anforderungen-Hub, um diese Verbindung zu authentifizieren und den Registrierungsprozess erneut MQTT zu beginnen</span><span class="sxs-lookup"><span data-stu-id="026c6-101">Requests hub to authenticate this connection and start the registration process over MQTT</span></span> </p>'
    syntax:
      content: 'public synchronized void authenticateWithProvisioningService(RequestData requestData, ResponseCallback responseCallback, Object callbackContext)'
      parameters:
        - id: requestData
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal.task._request_data
          description: "<p><span data-ttu-id=\"026c6-102\">Ein nicht<code>null \r\n\r\n    </code> Wert mit allen erforderlichen Anforderungsdaten</span><span class=\"sxs-lookup\"><span data-stu-id=\"026c6-102\">A non<code>null \r\n\r\n    </code> value with all the required request data</span></span> </p>"
        - id: responseCallback
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract._response_callback
          description: "<p><span data-ttu-id=\"026c6-103\">Ein nicht<code>null \r\n\r\n    </code> Wert für den Rückruf</span><span class=\"sxs-lookup\"><span data-stu-id=\"026c6-103\">A non<code>null \r\n\r\n    </code> value for the callback</span></span> </p>"
        - id: callbackContext
          type: '79317049'
          description: "<p><span data-ttu-id=\"026c6-104\">Ein Objekt zum Kontext.</span><span class=\"sxs-lookup\"><span data-stu-id=\"026c6-104\">An object for context.</span></span> <span data-ttu-id=\"026c6-105\">Werden können<code>null \r\n\r\n    </code></span><span class=\"sxs-lookup\"><span data-stu-id=\"026c6-105\">Can be<code>null \r\n\r\n    </code></span></span></p>"
      return:
        type: 5c0b90ca
    exceptions:
      - type: 352f005b
        description: "<p><span data-ttu-id=\"026c6-106\">Wenn einer der Parameter ungültig sind (<code>null \r\n\r\n    </code> oder leer)</span><span class=\"sxs-lookup\"><span data-stu-id=\"026c6-106\">If any of the parameters are invalid (<code>null \r\n\r\n    </code> or empty)</span></span> </p>"
      - type: c577ab43
        description: <p><span data-ttu-id="026c6-107">Wenn die API-Aufrufe an den Transport ist fehlgeschlagen</span><span class="sxs-lookup"><span data-stu-id="026c6-107">If any of the API calls to transport fail</span></span> </p>
      - type: dcc21490
        description: <p><span data-ttu-id="026c6-108">Wenn Hub wieder mit einem ungültigen Status reagiert</span><span class="sxs-lookup"><span data-stu-id="026c6-108">If hub responds back with an invalid status</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.close()
    id: close()
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: close()
    nameWithType: ContractAPIMqtt.close()
    fullName: synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.close()
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.close*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 149
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: '<p><span data-ttu-id="026c6-109">Gibt an, dass um die Verbindung zu schließen.</span><span class="sxs-lookup"><span data-stu-id="026c6-109">Indicates to close the connection</span></span> </p>'
    syntax:
      content: public synchronized void close()
      return:
        type: 5c0b90ca
    exceptions:
      - type: 1e2d9f84
        description: '<p><span data-ttu-id="026c6-110">wird ausgelöst, wenn ein Fehler beim Trennen</span><span class="sxs-lookup"><span data-stu-id="026c6-110">thrown if a failure in disconnect</span></span> </p>'
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.connectionEstablished()
    id: connectionEstablished()
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: connectionEstablished()
    nameWithType: ContractAPIMqtt.connectionEstablished()
    fullName: void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.connectionEstablished()
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.connectionEstablished*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 306
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: '<p><span data-ttu-id="026c6-111">Wird aufgerufen, wenn PAHO stellt eine Verbindung mit einem Server her</span><span class="sxs-lookup"><span data-stu-id="026c6-111">Called when PAHO establishes a connection to a server</span></span> </p>'
    syntax:
      content: public void connectionEstablished()
    overridden: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.connectionEstablished()
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.connectionLost(Throwable)
    id: connectionLost(Throwable)
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: connectionLost(Throwable throwable)
    nameWithType: ContractAPIMqtt.connectionLost(Throwable throwable)
    fullName: void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.connectionLost(Throwable throwable)
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.connectionLost*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 311
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: '<p><span data-ttu-id="026c6-112">Vom PAHO aufgerufen, wenn die Verbindung unterbrochen wird</span><span class="sxs-lookup"><span data-stu-id="026c6-112">Called by PAHO when the connection is lost</span></span> </p>'
    syntax:
      content: public void connectionLost(Throwable throwable)
      parameters:
        - id: throwable
          type: a04fafd7
    overridden: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.connectionLost(Throwable)
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.ContractAPIMqtt(ProvisioningDeviceClientConfig)
    id: ContractAPIMqtt(ProvisioningDeviceClientConfig)
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: ContractAPIMqtt(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
    nameWithType: ContractAPIMqtt.ContractAPIMqtt(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.ContractAPIMqtt(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.ContractAPIMqtt*
    type: Constructor
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 47
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: <p><span data-ttu-id="026c6-113">Dieser Konstruktor erstellt eine Instanz der Klasse Mqtt und initialisiert Membervariablen</span><span class="sxs-lookup"><span data-stu-id="026c6-113">This constructor creates an instance of Mqtt class and initializes member variables</span></span> </p>
    syntax:
      content: public ContractAPIMqtt(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
      parameters:
        - id: provisioningDeviceClientConfig
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal._provisioning_device_client_config
          description: "<p><span data-ttu-id=\"026c6-114\">Konfiguration für die Bereitstellung verwendet werden kann nicht<code>null \r\n\r\n    </code> .</span><span class=\"sxs-lookup\"><span data-stu-id=\"026c6-114\">Config used for provisioning Cannot be<code>null \r\n\r\n    </code> .</span></span> </p>"
    exceptions:
      - type: 352f005b
        description: '<p><span data-ttu-id="026c6-115">wird ausgelöst, wenn eines der Eingabeparameter ungültig ist.</span><span class="sxs-lookup"><span data-stu-id="026c6-115">is thrown when any of the input parameters are invalid</span></span> </p>'
  - uid: 'com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.getRegistrationStatus(RequestData,ResponseCallback,Object)'
    id: 'getRegistrationStatus(RequestData,ResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: 'getRegistrationStatus(RequestData requestData, ResponseCallback responseCallback, Object callbackContext)'
    nameWithType: 'ContractAPIMqtt.getRegistrationStatus(RequestData requestData, ResponseCallback responseCallback, Object callbackContext)'
    fullName: 'synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.getRegistrationStatus(RequestData requestData, ResponseCallback responseCallback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.getRegistrationStatus*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 209
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: <p><span data-ttu-id="026c6-116">Ruft den Registrierungsstatus über MQTT</span><span class="sxs-lookup"><span data-stu-id="026c6-116">Gets the registration status over MQTT</span></span> </p>
    syntax:
      content: 'public synchronized void getRegistrationStatus(RequestData requestData, ResponseCallback responseCallback, Object callbackContext)'
      parameters:
        - id: requestData
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal.task._request_data
          description: "<p><span data-ttu-id=\"026c6-117\">Ein nicht<code>null \r\n\r\n    </code> Wert mit der Anforderungsdaten</span><span class=\"sxs-lookup\"><span data-stu-id=\"026c6-117\">A non<code>null \r\n\r\n    </code> value with all the request data</span></span> </p>"
        - id: responseCallback
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract._response_callback
          description: "<p><span data-ttu-id=\"026c6-118\">Ein nicht<code>null \r\n\r\n    </code> Wert für den Rückruf</span><span class=\"sxs-lookup\"><span data-stu-id=\"026c6-118\">A non<code>null \r\n\r\n    </code> value for the callback</span></span> </p>"
        - id: callbackContext
          type: '79317049'
          description: "<p><span data-ttu-id=\"026c6-119\">Ein Objekt zum Kontext.</span><span class=\"sxs-lookup\"><span data-stu-id=\"026c6-119\">An object for context.</span></span> <span data-ttu-id=\"026c6-120\">Werden können<code>null \r\n\r\n    </code></span><span class=\"sxs-lookup\"><span data-stu-id=\"026c6-120\">Can be<code>null \r\n\r\n    </code></span></span></p>"
      return:
        type: 5c0b90ca
    exceptions:
      - type: 352f005b
        description: "<p><span data-ttu-id=\"026c6-121\">Wenn einer der Parameter ungültig sind (<code>null \r\n\r\n    </code> oder leer)</span><span class=\"sxs-lookup\"><span data-stu-id=\"026c6-121\">If any of the parameters are invalid (<code>null \r\n\r\n    </code> or empty)</span></span> </p>"
      - type: c577ab43
        description: <p><span data-ttu-id="026c6-122">Wenn die API-Aufrufe an den Transport ist fehlgeschlagen</span><span class="sxs-lookup"><span data-stu-id="026c6-122">If any of the API calls to transport fail</span></span> </p>
      - type: dcc21490
        description: <p><span data-ttu-id="026c6-123">Wenn Hub wieder mit einem ungültigen Status reagiert</span><span class="sxs-lookup"><span data-stu-id="026c6-123">If hub responds back with an invalid status</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.messageReceived(MqttMessage)
    id: messageReceived(MqttMessage)
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: messageReceived(MqttMessage message)
    nameWithType: ContractAPIMqtt.messageReceived(MqttMessage message)
    fullName: void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.messageReceived(MqttMessage message)
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.messageReceived*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 294
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: '<p><span data-ttu-id="026c6-124">Wird aufgerufen, wenn die Nachricht vom PAHO empfangen Ruft</span><span class="sxs-lookup"><span data-stu-id="026c6-124">Called when the message gets received by PAHO</span></span> </p>'
    syntax:
      content: public void messageReceived(MqttMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_message
    overridden: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.messageReceived(MqttMessage)
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.open(RequestData)
    id: open(RequestData)
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: open(RequestData requestData)
    nameWithType: ContractAPIMqtt.open(RequestData requestData)
    fullName: synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.open(RequestData requestData)
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.open*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 108
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: '<p><span data-ttu-id="026c6-125">Gibt an, müssen MQTT-Verbindung öffnen</span><span class="sxs-lookup"><span data-stu-id="026c6-125">Indicates need to open MQTT connection</span></span> </p>'
    syntax:
      content: public synchronized void open(RequestData requestData)
      parameters:
        - id: requestData
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal.task._request_data
          description: '<p><span data-ttu-id="026c6-126">Daten, die für die Initialisierung der Verbindung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="026c6-126">Data used for the connection initialization</span></span> </p>'
      return:
        type: 5c0b90ca
    exceptions:
      - type: 1e2d9f84
        description: '<p><span data-ttu-id="026c6-127">wird ausgelöst, wenn eines der Eingabeparameter ungültig ist.</span><span class="sxs-lookup"><span data-stu-id="026c6-127">is thrown when any of the input parameters are invalid</span></span> </p>'
  - uid: 'com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.requestNonceForTPM(RequestData,ResponseCallback,Object)'
    id: 'requestNonceForTPM(RequestData,ResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.yml
    langs:
      - java
    name: 'requestNonceForTPM(RequestData requestData, ResponseCallback responseCallback, Object authorizationCallbackContext)'
    nameWithType: 'ContractAPIMqtt.requestNonceForTPM(RequestData requestData, ResponseCallback responseCallback, Object authorizationCallbackContext)'
    fullName: 'synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.requestNonceForTPM(RequestData requestData, ResponseCallback responseCallback, Object authorizationCallbackContext)'
    overload: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.requestNonceForTPM*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-device-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/device/internal/contract/mqtt/ContractAPIMqtt.java
      startLine: 260
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
    summary: <p><span data-ttu-id="026c6-128">Anforderungen Hub Bereitstellen einer Geräteschlüssel um Authentifizierung über MQTT (nur für TPM) zu starten.</span><span class="sxs-lookup"><span data-stu-id="026c6-128">Requests hub to provide a device key to begin authentication over MQTT (Only for TPM)</span></span> </p>
    syntax:
      content: 'public synchronized void requestNonceForTPM(RequestData requestData, ResponseCallback responseCallback, Object authorizationCallbackContext)'
      parameters:
        - id: requestData
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal.task._request_data
        - id: responseCallback
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract._response_callback
          description: "<p><span data-ttu-id=\"026c6-129\">Ein nicht<code>null \r\n\r\n    </code> Wert für den Rückruf</span><span class=\"sxs-lookup\"><span data-stu-id=\"026c6-129\">A non<code>null \r\n\r\n    </code> value for the callback</span></span> </p>"
        - id: authorizationCallbackContext
          type: '79317049'
          description: "<p><span data-ttu-id=\"026c6-130\">Ein Objekt zum Kontext.</span><span class=\"sxs-lookup\"><span data-stu-id=\"026c6-130\">An object for context.</span></span> <span data-ttu-id=\"026c6-131\">Werden können<code>null \r\n\r\n    </code></span><span class=\"sxs-lookup\"><span data-stu-id=\"026c6-131\">Can be<code>null \r\n\r\n    </code></span></span></p>"
      return:
        type: 5c0b90ca
    exceptions:
      - type: 352f005b
        description: "<p><span data-ttu-id=\"026c6-132\">Wenn einer der Parameter ungültig sind (<code>null \r\n\r\n    </code> oder leer)</span><span class=\"sxs-lookup\"><span data-stu-id=\"026c6-132\">If any of the parameters are invalid (<code>null \r\n\r\n    </code> or empty)</span></span> </p>"
      - type: c577ab43
        description: <p><span data-ttu-id="026c6-133">Wenn die API-Aufrufe an den Transport ist fehlgeschlagen</span><span class="sxs-lookup"><span data-stu-id="026c6-133">If any of the API calls to transport fail</span></span> </p>
      - type: dcc21490
        description: <p><span data-ttu-id="026c6-134">Wenn Hub wieder mit einem ungültigen Status reagiert</span><span class="sxs-lookup"><span data-stu-id="026c6-134">If hub responds back with an invalid status</span></span> </p>
references:
  - uid: 352f005b
    spec.java:
      - name: ProvisioningDeviceClientException
        fullName: ProvisioningDeviceClientException
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.ContractAPIMqtt*
    name: ContractAPIMqtt
    nameWithType: ContractAPIMqtt.ContractAPIMqtt
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.ContractAPIMqtt
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: 1e2d9f84
    spec.java:
      - name: ProvisioningDeviceConnectionException
        fullName: ProvisioningDeviceConnectionException
  - uid: 5c0b90ca
    spec.java:
      - name: synchronized void
        fullName: synchronized void
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.open*
    name: open
    nameWithType: ContractAPIMqtt.open
    fullName: synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.open
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.close*
    name: close
    nameWithType: ContractAPIMqtt.close
    fullName: synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.close
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: c577ab43
    spec.java:
      - name: ProvisioningDeviceTransportException
        fullName: ProvisioningDeviceTransportException
  - uid: dcc21490
    spec.java:
      - name: ProvisioningDeviceHubException
        fullName: ProvisioningDeviceHubException
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.authenticateWithProvisioningService*
    name: authenticateWithProvisioningService
    nameWithType: ContractAPIMqtt.authenticateWithProvisioningService
    fullName: synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.authenticateWithProvisioningService
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.getRegistrationStatus*
    name: getRegistrationStatus
    nameWithType: ContractAPIMqtt.getRegistrationStatus
    fullName: synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.getRegistrationStatus
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.requestNonceForTPM*
    name: requestNonceForTPM
    nameWithType: ContractAPIMqtt.requestNonceForTPM
    fullName: synchronized void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.requestNonceForTPM
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.messageReceived*
    name: messageReceived
    nameWithType: ContractAPIMqtt.messageReceived
    fullName: void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.messageReceived
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.connectionEstablished*
    name: connectionEstablished
    nameWithType: ContractAPIMqtt.connectionEstablished
    fullName: void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.connectionEstablished
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: a04fafd7
    spec.java:
      - name: Throwable
        fullName: Throwable
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt._contract_a_p_i_mqtt.connectionLost*
    name: connectionLost
    nameWithType: ContractAPIMqtt.connectionLost
    fullName: void com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt.ContractAPIMqtt.connectionLost
    package: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.mqtt
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract_1060281c1c676e5850e536ff61c0b32c1.createProvisioningContract(ProvisioningDeviceClientConfig)
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract_1060281c1c676e5850e536ff61c0b32c1
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract_1060281c1c676e5850e536ff61c0b32c1.yml
    name: createProvisioningContract(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
    nameWithType: ProvisioningDeviceClientContract.createProvisioningContract(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
    fullName: static ProvisioningDeviceClientContract com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.ProvisioningDeviceClientContract.createProvisioningContract(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
    type: Method
    summary: <p><span data-ttu-id="026c6-135">Statische Methode zum Erstellen von Verträgen mit dem Dienst über das angegebene Protokoll</span><span class="sxs-lookup"><span data-stu-id="026c6-135">Static method to create contracts with the service over the specified protocol</span></span> </p>
    syntax:
      content: public static ProvisioningDeviceClientContract createProvisioningContract(ProvisioningDeviceClientConfig provisioningDeviceClientConfig)
      parameters:
        - id: provisioningDeviceClientConfig
          type: com.microsoft.azure.sdk.iot.provisioning.device.internal._provisioning_device_client_config
          description: <p><span data-ttu-id="026c6-136">Konfiguration für die Bereitstellung verwendet</span><span class="sxs-lookup"><span data-stu-id="026c6-136">Config used for provisioning</span></span> </p>
      return:
        type: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract_1060281c1c676e5850e536ff61c0b32c1
        description: <p><span data-ttu-id="026c6-137">Die relevanten vertragsimplementierung für das angeforderte Protokoll</span><span class="sxs-lookup"><span data-stu-id="026c6-137">Implementation of the relevant contract for the requested protocol</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract_1060281c1c676e5850e536ff61c0b32c1
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract_1060281c1c676e5850e536ff61c0b32c1.yml
    name: ProvisioningDeviceClientContract
    nameWithType: ProvisioningDeviceClientContract
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.ProvisioningDeviceClientContract
    type: Class
    syntax:
      content: public class ProvisioningDeviceClientContract
  - uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener
    parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt
    href: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.yml
    name: MqttListener
    nameWithType: MqttListener
    fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttListener
    type: Interface
    syntax:
      content: public interface MqttListener
  - uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_connection
    parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt
    href: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_connection.yml
    name: MqttConnection
    nameWithType: MqttConnection
    fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttConnection
    type: Class
    syntax:
      content: public class MqttConnection
  - uid: com.microsoft.azure.sdk.iot.deps.util._object_lock
    parent: com.microsoft.azure.sdk.iot.deps.util
    href: com.microsoft.azure.sdk.iot.deps.util._object_lock.yml
    name: ObjectLock
    nameWithType: ObjectLock
    fullName: com.microsoft.azure.sdk.iot.deps.util.ObjectLock
    type: Class
    summary: <p><span data-ttu-id="026c6-138">Diese Klasse ermöglicht imitieren des Wartevorgangs Basisklasse und benachrichtigen die Funktionen</span><span class="sxs-lookup"><span data-stu-id="026c6-138">This class enables mocking of the base class wait and notify functions</span></span> </p>
    syntax:
      content: public class ObjectLock
  - uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_message
    parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt
    href: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_message.yml
    name: MqttMessage
    nameWithType: MqttMessage
    fullName: com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttMessage
    type: Class
    syntax:
      content: public class MqttMessage
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal._provisioning_device_client_config
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal._provisioning_device_client_config.yml
    name: ProvisioningDeviceClientConfig
    nameWithType: ProvisioningDeviceClientConfig
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.ProvisioningDeviceClientConfig
    type: Class
    syntax:
      content: public class ProvisioningDeviceClientConfig
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptionsd36cafd51885aee2517556b0ba23cbd3
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptions
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptionsd36cafd51885aee2517556b0ba23cbd3.yml
    name: ProvisioningDeviceClientException
    nameWithType: ProvisioningDeviceClientException
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptions.ProvisioningDeviceClientException
    type: Class
    syntax:
      content: public class ProvisioningDeviceClientException
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.task._request_data
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.task
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.task._request_data.yml
    name: RequestData
    nameWithType: RequestData
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.task.RequestData
    type: Class
    syntax:
      content: public class RequestData
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptions7a80624b1e6fbd89436aedac142fb79c
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptions
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptions7a80624b1e6fbd89436aedac142fb79c.yml
    name: ProvisioningDeviceConnectionException
    nameWithType: ProvisioningDeviceConnectionException
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.exceptions.ProvisioningDeviceConnectionException
    type: Class
    syntax:
      content: public class ProvisioningDeviceConnectionException
  - uid: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract._response_callback
    parent: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract
    href: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract._response_callback.yml
    name: ResponseCallback
    nameWithType: ResponseCallback
    fullName: com.microsoft.azure.sdk.iot.provisioning.device.internal.contract.ResponseCallback
    type: Interface
    syntax:
      content: public interface ResponseCallback
  - uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.messageReceived(MqttMessage)
    parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener
    href: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.yml
    name: messageReceived(MqttMessage message)
    nameWithType: MqttListener.messageReceived(MqttMessage message)
    fullName: void com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttListener.messageReceived(MqttMessage message)
    type: Method
    summary: '<p><span data-ttu-id="026c6-139">Wird aufgerufen, wenn die Nachricht vom PAHO empfangen Ruft</span><span class="sxs-lookup"><span data-stu-id="026c6-139">Called when the message gets received by PAHO</span></span> </p>'
    syntax:
      content: public void messageReceived(MqttMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_message
  - uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.connectionEstablished()
    parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener
    href: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.yml
    name: connectionEstablished()
    nameWithType: MqttListener.connectionEstablished()
    fullName: void com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttListener.connectionEstablished()
    type: Method
    summary: '<p><span data-ttu-id="026c6-140">Wird aufgerufen, wenn PAHO stellt eine Verbindung mit einem Server her</span><span class="sxs-lookup"><span data-stu-id="026c6-140">Called when PAHO establishes a connection to a server</span></span> </p>'
    syntax:
      content: public void connectionEstablished()
  - uid: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.connectionLost(Throwable)
    parent: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener
    href: com.microsoft.azure.sdk.iot.deps.transport.mqtt._mqtt_listener.yml
    name: connectionLost(Throwable throwable)
    nameWithType: MqttListener.connectionLost(Throwable throwable)
    fullName: void com.microsoft.azure.sdk.iot.deps.transport.mqtt.MqttListener.connectionLost(Throwable throwable)
    type: Method
    summary: '<p><span data-ttu-id="026c6-141">Vom PAHO aufgerufen, wenn die Verbindung unterbrochen wird</span><span class="sxs-lookup"><span data-stu-id="026c6-141">Called by PAHO when the connection is lost</span></span> </p>'
    syntax:
      content: public void connectionLost(Throwable throwable)
      parameters:
        - id: throwable
          type: a04fafd7