### YamlMime:ManagedReference
items:
  - uid: system.fabric._replicator
    id: _replicator
    parent: system.fabric
    children:
      - system.fabric._replicator.abort()
      - 'system.fabric._replicator.changeRoleAsync(Epoch,ReplicaRole,CancellationToken)'
      - system.fabric._replicator.closeAsync(CancellationToken)
      - system.fabric._replicator.getCatchUpCapability()
      - system.fabric._replicator.getCurrentProgress()
      - system.fabric._replicator.openAsync(CancellationToken)
      - 'system.fabric._replicator.updateEpochAsync(Epoch,CancellationToken)'
    href: system.fabric._replicator.yml
    langs:
      - java
    name: Replicator
    nameWithType: Replicator
    fullName: system.fabric.Replicator
    type: Interface
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/Replicator.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/Replicator.java
      startLine: 11
    package: system.fabric
    syntax:
      content: public interface Replicator extends PrimaryReplicator
    inheritedMembers:
      - 'system.fabric._primary_replicator.buildReplicaAsync(ReplicaInformation,CancellationToken)'
      - system.fabric._primary_replicator.onDataLossAsync(CancellationToken)
      - system.fabric._primary_replicator.removeReplica(long)
      - 'system.fabric._primary_replicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration,ReplicaSetConfiguration)'
      - system.fabric._primary_replicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration)
      - 'system.fabric._primary_replicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode,CancellationToken)'
  - uid: system.fabric._replicator.abort()
    id: abort()
    parent: system.fabric._replicator
    href: system.fabric._replicator.yml
    langs:
      - java
    name: abort()
    nameWithType: Replicator.abort()
    fullName: void system.fabric.Replicator.abort()
    overload: system.fabric._replicator.abort*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Replicator.java
      startLine: 20
    package: system.fabric
    syntax:
      content: public void abort()
  - uid: 'system.fabric._replicator.changeRoleAsync(Epoch,ReplicaRole,CancellationToken)'
    id: 'changeRoleAsync(Epoch,ReplicaRole,CancellationToken)'
    parent: system.fabric._replicator
    href: system.fabric._replicator.yml
    langs:
      - java
    name: 'changeRoleAsync(Epoch epoch, ReplicaRole role, CancellationToken cancellationToken)'
    nameWithType: 'Replicator.changeRoleAsync(Epoch epoch, ReplicaRole role, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture system.fabric.Replicator.changeRoleAsync(Epoch epoch, ReplicaRole role, CancellationToken cancellationToken)'
    overload: system.fabric._replicator.changeRoleAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Replicator.java
      startLine: 15
    package: system.fabric
    syntax:
      content: 'public CompletableFuture changeRoleAsync(Epoch epoch, ReplicaRole role, CancellationToken cancellationToken)'
      parameters:
        - id: epoch
          type: system.fabric._epoch
        - id: role
          type: system.fabric._replica_role
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 5f2aaa64
  - uid: system.fabric._replicator.closeAsync(CancellationToken)
    id: closeAsync(CancellationToken)
    parent: system.fabric._replicator
    href: system.fabric._replicator.yml
    langs:
      - java
    name: closeAsync(CancellationToken cancellationToken)
    nameWithType: Replicator.closeAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture system.fabric.Replicator.closeAsync(CancellationToken cancellationToken)
    overload: system.fabric._replicator.closeAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Replicator.java
      startLine: 18
    package: system.fabric
    syntax:
      content: public CompletableFuture closeAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 5f2aaa64
  - uid: system.fabric._replicator.getCatchUpCapability()
    id: getCatchUpCapability()
    parent: system.fabric._replicator
    href: system.fabric._replicator.yml
    langs:
      - java
    name: getCatchUpCapability()
    nameWithType: Replicator.getCatchUpCapability()
    fullName: long system.fabric.Replicator.getCatchUpCapability()
    overload: system.fabric._replicator.getCatchUpCapability*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Replicator.java
      startLine: 24
    package: system.fabric
    syntax:
      content: public long getCatchUpCapability()
      return:
        type: 0364520f
  - uid: system.fabric._replicator.getCurrentProgress()
    id: getCurrentProgress()
    parent: system.fabric._replicator
    href: system.fabric._replicator.yml
    langs:
      - java
    name: getCurrentProgress()
    nameWithType: Replicator.getCurrentProgress()
    fullName: long system.fabric.Replicator.getCurrentProgress()
    overload: system.fabric._replicator.getCurrentProgress*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Replicator.java
      startLine: 22
    package: system.fabric
    syntax:
      content: public long getCurrentProgress()
      return:
        type: 0364520f
  - uid: system.fabric._replicator.openAsync(CancellationToken)
    id: openAsync(CancellationToken)
    parent: system.fabric._replicator
    href: system.fabric._replicator.yml
    langs:
      - java
    name: openAsync(CancellationToken cancellationToken)
    nameWithType: Replicator.openAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<String> system.fabric.Replicator.openAsync(CancellationToken cancellationToken)
    overload: system.fabric._replicator.openAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Replicator.java
      startLine: 13
    package: system.fabric
    syntax:
      content: public CompletableFuture<String> openAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 06be942d
  - uid: 'system.fabric._replicator.updateEpochAsync(Epoch,CancellationToken)'
    id: 'updateEpochAsync(Epoch,CancellationToken)'
    parent: system.fabric._replicator
    href: system.fabric._replicator.yml
    langs:
      - java
    name: 'updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)'
    nameWithType: 'Replicator.updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture system.fabric.Replicator.updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)'
    overload: system.fabric._replicator.updateEpochAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Replicator.java
      startLine: 26
    package: system.fabric
    syntax:
      content: 'public CompletableFuture updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)'
      parameters:
        - id: epoch
          type: system.fabric._epoch
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 5f2aaa64
references:
  - uid: 06be942d
    spec.java:
      - name: CompletableFuture<String>
        fullName: CompletableFuture<String>
  - uid: system.fabric._replicator.openAsync*
    name: openAsync
    nameWithType: Replicator.openAsync
    fullName: CompletableFuture<String> system.fabric.Replicator.openAsync
    package: system.fabric
  - uid: 5f2aaa64
    spec.java:
      - name: CompletableFuture
        fullName: CompletableFuture
  - uid: system.fabric._replicator.changeRoleAsync*
    name: changeRoleAsync
    nameWithType: Replicator.changeRoleAsync
    fullName: CompletableFuture system.fabric.Replicator.changeRoleAsync
    package: system.fabric
  - uid: system.fabric._replicator.closeAsync*
    name: closeAsync
    nameWithType: Replicator.closeAsync
    fullName: CompletableFuture system.fabric.Replicator.closeAsync
    package: system.fabric
  - uid: system.fabric._replicator.abort*
    name: abort
    nameWithType: Replicator.abort
    fullName: void system.fabric.Replicator.abort
    package: system.fabric
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._replicator.getCurrentProgress*
    name: getCurrentProgress
    nameWithType: Replicator.getCurrentProgress
    fullName: long system.fabric.Replicator.getCurrentProgress
    package: system.fabric
  - uid: system.fabric._replicator.getCatchUpCapability*
    name: getCatchUpCapability
    nameWithType: Replicator.getCatchUpCapability
    fullName: long system.fabric.Replicator.getCatchUpCapability
    package: system.fabric
  - uid: system.fabric._replicator.updateEpochAsync*
    name: updateEpochAsync
    nameWithType: Replicator.updateEpochAsync
    fullName: CompletableFuture system.fabric.Replicator.updateEpochAsync
    package: system.fabric
  - uid: 'system.fabric._primary_replicator.buildReplicaAsync(ReplicaInformation,CancellationToken)'
    parent: system.fabric._primary_replicator
    href: system.fabric._primary_replicator.yml
    name: 'buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)'
    nameWithType: 'PrimaryReplicator.buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture system.fabric.PrimaryReplicator.buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)'
    type: Method
    summary: |-
      <p>Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)'
      parameters:
        - id: replicaInfo
          type: system.fabric._replica_information
          description: '<p>Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden. </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref href=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\"></xref>Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 5f2aaa64
        description: '<p>Eine Aufgabe, die den asynchronen Vorgang darstellt. </p>'
  - uid: system.fabric._primary_replicator.onDataLossAsync(CancellationToken)
    parent: system.fabric._primary_replicator
    href: system.fabric._primary_replicator.yml
    name: onDataLossAsync(CancellationToken cancellationToken)
    nameWithType: PrimaryReplicator.onDataLossAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Boolean> system.fabric.PrimaryReplicator.onDataLossAsync(CancellationToken cancellationToken)
    type: Method
    summary: |-
      <p>Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Boolean> onDataLossAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref href=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\"></xref>Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 7e53ac82
        description: '<p>Eine CompletableFuture, die den asynchronen Vorgang darstellt. </p>'
  - uid: system.fabric._primary_replicator.removeReplica(long)
    parent: system.fabric._primary_replicator
    href: system.fabric._primary_replicator.yml
    name: removeReplica(long replicaId)
    nameWithType: PrimaryReplicator.removeReplica(long replicaId)
    fullName: void system.fabric.PrimaryReplicator.removeReplica(long replicaId)
    type: Method
    summary: "<p>Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</p>\n<p></p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold> dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden. </p>"
    syntax:
      content: public void removeReplica(long replicaId)
      parameters:
        - id: replicaId
          type: 0364520f
          description: '<p>Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</p>'
  - uid: 'system.fabric._primary_replicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration,ReplicaSetConfiguration)'
    parent: system.fabric._primary_replicator
    href: system.fabric._primary_replicator.yml
    name: 'updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)'
    nameWithType: 'PrimaryReplicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)'
    fullName: 'void system.fabric.PrimaryReplicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)'
    type: Method
    summary: |-
      <p>Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</p>
      <p></p>
    syntax:
      content: 'public void updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)'
      parameters:
        - id: currentConfiguration
          type: system.fabric._replica_set_configuration
          description: <p>Nur zur internen Verwendung. </p>
        - id: previousConfiguration
          type: system.fabric._replica_set_configuration
          description: <p>Nur zur internen Verwendung. </p>
  - uid: system.fabric._primary_replicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration)
    parent: system.fabric._primary_replicator
    href: system.fabric._primary_replicator.yml
    name: updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
    nameWithType: PrimaryReplicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
    fullName: void system.fabric.PrimaryReplicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
    type: Method
    summary: "<p>Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</p>\n<p></p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold> dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden. </p>"
    syntax:
      content: public void updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
      parameters:
        - id: currentConfiguration
          type: system.fabric._replica_set_configuration
          description: '<p>Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</p>'
  - uid: 'system.fabric._primary_replicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode,CancellationToken)'
    parent: system.fabric._primary_replicator
    href: system.fabric._primary_replicator.yml
    name: 'waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)'
    nameWithType: 'PrimaryReplicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture system.fabric.PrimaryReplicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)'
    type: Method
    summary: |-
      <p>Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)'
      parameters:
        - id: quorumMode
          type: system.fabric._replica_set_quorum_mode
          description: <p>Nur zur internen Verwendung. </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref href=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\"></xref>Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 5f2aaa64
        description: <p>Nur zur internen Verwendung. </p>
  - uid: system.fabric._primary_replicator
    parent: system.fabric
    href: system.fabric._primary_replicator.yml
    name: PrimaryReplicator
    nameWithType: PrimaryReplicator
    fullName: system.fabric.PrimaryReplicator
    type: Interface
    summary: '<p>Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden. </p>'
    syntax:
      content: public interface PrimaryReplicator
  - uid: system.fabric._fabric_replicator
    parent: system.fabric
    href: system.fabric._fabric_replicator.yml
    name: FabricReplicator
    nameWithType: FabricReplicator
    fullName: system.fabric.FabricReplicator
    type: Class
    summary: "<p>Repliziert den Status für hohe Verfügbarkeit und Zuverlässigkeit. </p>\n<p>\r\n\r\n  <bold>Hinweise:</bold>stellt die Standardimplementierung von der <xref href=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\"></xref>, und <xref href=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\"></xref> Schnittstellen, die Benutzerdienste werden, zusammen mit ihrer Implementierung von verwendet können der <xref href=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\"></xref> Schnittstelle. Eine Instanz von der <ref refid=\"\" kindref=\"compound\">system.fabric.FabricReplicator</ref> Klasse abgerufen wird, über die <xref href=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\"></xref> -Methode, die in umgewandelt werden kann <xref href=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\"></xref> für die Verwendung. </p>"
    syntax:
      content: public class FabricReplicator implements Replicator
  - uid: system.fabric._j_internal_fabric_replicator
  - uid: system.fabric._fabric_replicator.openAsync(CancellationToken)
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    name: openAsync(CancellationToken cancellationToken)
    nameWithType: FabricReplicator.openAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<String> system.fabric.FabricReplicator.openAsync(CancellationToken cancellationToken)
    type: Method
    syntax:
      content: public CompletableFuture<String> openAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 06be942d
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p>Ein <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> wird verwendet, um die Benachrichtigung verteilt wird, dass Vorgänge abgebrochen werden sollen. Sie erstellen ein Abbruchtoken, das durch die Instanziierung einer <xref href="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false"></xref> -Objekt, das Abbruchtoken verwaltet entnommen seine <xref href="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false"></xref> Methode. Übergeben Sie dann das Abbruchtoken, das auf eine beliebige Anzahl von Vorgängen, die Nachricht vom Abbruch erhalten soll. Das Token kann nicht verwendet werden, um den Abbruch zu initiieren. Wenn das besitzende Objekt aufruft <xref href="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false"></xref>, auf das Abbruchtoken, das die abgebrochene Eigenschaft festgelegt ist auf "true". Die Objekte, die die Benachrichtigung empfangen können Antworten Verfolgungsinformationen geeignet ist. </p>'
    syntax:
      content: public class CancellationToken
  - uid: system.fabric.exception._fabric_exception
    parent: system.fabric.exception
    href: system.fabric.exception._fabric_exception.yml
    name: FabricException
    nameWithType: FabricException
    fullName: system.fabric.exception.FabricException
    type: Class
    syntax:
      content: public class FabricException
  - uid: 'system.fabric._fabric_replicator.changeRoleAsync(Epoch,ReplicaRole,CancellationToken)'
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    name: 'changeRoleAsync(Epoch epoch, ReplicaRole role, CancellationToken cancellationToken)'
    nameWithType: 'FabricReplicator.changeRoleAsync(Epoch epoch, ReplicaRole role, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture system.fabric.FabricReplicator.changeRoleAsync(Epoch epoch, ReplicaRole role, CancellationToken cancellationToken)'
    type: Method
    syntax:
      content: 'public CompletableFuture changeRoleAsync(Epoch epoch, ReplicaRole role, CancellationToken cancellationToken)'
      parameters:
        - id: epoch
          type: system.fabric._epoch
        - id: role
          type: system.fabric._replica_role
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 5f2aaa64
  - uid: system.fabric._epoch
    parent: system.fabric
    href: system.fabric._epoch.yml
    name: Epoch
    nameWithType: Epoch
    fullName: system.fabric.Epoch
    type: Class
    summary: "<p>Stellt die aktuelle Version der Service Fabric-Partition an. </p>\n<p>\r\n\r\n  <bold>Hinweise:</bold>ein <xref href=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\"></xref> ist eine Konfiguration Zahl für die Partition als Ganzes. Beim Festlegen der Konfiguration des Replikats Änderungen, z. B., wenn das primäre Replikat ändert, werden die Vorgänge, die vom neuen primären Replikat repliziert werden als ein neues werden bezeichnet <xref href=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\"></xref> aus. der von dem alten primären Replikat gesendet wurden. Die Tatsache, die dass das primäre geändert hat ist nicht direkt sichtbar auf sekundäre Replikate, die nicht durch einen Fehler in der Regel betroffen sind, die das ursprüngliche primäre Replikat betroffen. Um nachzuverfolgen, dass sich das primäre Replikat geändert wurde, an das sekundäre Replikat übertragen werden. Diese Kommunikation erfolgt über die <xref href=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> Methode. Die meisten Dienste können die Details der inneren Felder ignorieren die <xref href=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\"></xref> wie es in der Regel ausreichend ist zu wissen, dass die <xref href=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\"></xref> wurde geändert und Epochs, um zu bestimmen, relative Reihenfolge der Vorgänge und-Ereignisse im System zu vergleichen. Zu diesem Zweck sind Vergleichsoperationen bereitgestellt. </p>"
    syntax:
      content: public class Epoch
  - uid: system.fabric._replica_role
    parent: system.fabric
    href: system.fabric._replica_role.yml
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: system.fabric.ReplicaRole
    type: Enum
    syntax:
      content: public enum ReplicaRole
  - uid: system.fabric._fabric_replicator.closeAsync(CancellationToken)
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    name: closeAsync(CancellationToken cancellationToken)
    nameWithType: FabricReplicator.closeAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture system.fabric.FabricReplicator.closeAsync(CancellationToken cancellationToken)
    type: Method
    syntax:
      content: public CompletableFuture closeAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 5f2aaa64
  - uid: system.fabric._fabric_replicator.abort()
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    name: abort()
    nameWithType: FabricReplicator.abort()
    fullName: void system.fabric.FabricReplicator.abort()
    type: Method
    syntax:
      content: public void abort()
  - uid: system.fabric._fabric_replicator.getCurrentProgress()
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    name: getCurrentProgress()
    nameWithType: FabricReplicator.getCurrentProgress()
    fullName: long system.fabric.FabricReplicator.getCurrentProgress()
    type: Method
    syntax:
      content: public long getCurrentProgress()
      return:
        type: 0364520f
  - uid: system.fabric._fabric_replicator.getCatchUpCapability()
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    name: getCatchUpCapability()
    nameWithType: FabricReplicator.getCatchUpCapability()
    fullName: long system.fabric.FabricReplicator.getCatchUpCapability()
    type: Method
    syntax:
      content: public long getCatchUpCapability()
      return:
        type: 0364520f
  - uid: 'system.fabric._fabric_replicator.updateEpochAsync(Epoch,CancellationToken)'
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    name: 'updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)'
    nameWithType: 'FabricReplicator.updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture system.fabric.FabricReplicator.updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)'
    type: Method
    syntax:
      content: 'public CompletableFuture updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)'
      parameters:
        - id: epoch
          type: system.fabric._epoch
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 5f2aaa64