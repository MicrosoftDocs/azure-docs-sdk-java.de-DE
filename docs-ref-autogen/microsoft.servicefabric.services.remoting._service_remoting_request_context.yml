### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.services.remoting._service_remoting_request_context
    id: _service_remoting_request_context
    parent: microsoft.servicefabric.services.remoting
    children:
      - microsoft.servicefabric.services.remoting._service_remoting_request_context.getCallbackClient()
    href: microsoft.servicefabric.services.remoting._service_remoting_request_context.yml
    langs:
      - java
    name: ServiceRemotingRequestContext
    nameWithType: ServiceRemotingRequestContext
    fullName: microsoft.servicefabric.services.remoting.ServiceRemotingRequestContext
    type: Interface
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingRequestContext.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingRequestContext.java
      startLine: 6
    package: microsoft.servicefabric.services.remoting
    summary: '<p>Definiert die Schnittstelle, die implementiert werden muss, um die Anforderungskontext für die IServiceRemotingMessageHandler bereitzustellen. </p>'
    syntax:
      content: public interface ServiceRemotingRequestContext
  - uid: microsoft.servicefabric.services.remoting._service_remoting_request_context.getCallbackClient()
    id: getCallbackClient()
    parent: microsoft.servicefabric.services.remoting._service_remoting_request_context
    href: microsoft.servicefabric.services.remoting._service_remoting_request_context.yml
    langs:
      - java
    name: getCallbackClient()
    nameWithType: ServiceRemotingRequestContext.getCallbackClient()
    fullName: ServiceRemotingCallbackClient microsoft.servicefabric.services.remoting.ServiceRemotingRequestContext.getCallbackClient()
    overload: microsoft.servicefabric.services.remoting._service_remoting_request_context.getCallbackClient*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingRequestContext.java
      startLine: 14
    package: microsoft.servicefabric.services.remoting
    summary: |-
      <p>Ruft die kanalschnittstelle verwendet werden soll, bei denen Service Aufrufe an den Client initiieren möchte, ab.</p>
      <p></p>
    syntax:
      content: public ServiceRemotingCallbackClient getCallbackClient()
      return:
        type: microsoft.servicefabric.services.remoting._service_remoting_callback_client
        description: <p>Remoting Rückruf-client </p>
references:
  - uid: microsoft.servicefabric.services.remoting._service_remoting_request_context.getCallbackClient*
    name: getCallbackClient
    nameWithType: ServiceRemotingRequestContext.getCallbackClient
    fullName: ServiceRemotingCallbackClient microsoft.servicefabric.services.remoting.ServiceRemotingRequestContext.getCallbackClient
    package: microsoft.servicefabric.services.remoting
  - uid: microsoft.servicefabric.services.communication.fabrictransport.runtime._f81ae579a2c4496dcba5eb16b88f07e6a
  - uid: microsoft.servicefabric.services.remoting._service_remoting_callback_client
    parent: microsoft.servicefabric.services.remoting
    href: microsoft.servicefabric.services.remoting._service_remoting_callback_client.yml
    name: ServiceRemotingCallbackClient
    nameWithType: ServiceRemotingCallbackClient
    fullName: microsoft.servicefabric.services.remoting.ServiceRemotingCallbackClient
    type: Interface
    summary: '<p>Definiert die Schnittstelle, die für das Bereitstellen von Rückrufmechanismus den Remoting-Listener an den Client implementiert werden muss. </p>'
    syntax:
      content: public interface ServiceRemotingCallbackClient