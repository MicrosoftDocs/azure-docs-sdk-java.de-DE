### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key
    id: _key_vault_key
    parent: com.microsoft.azure.keyvault.extensions
    children:
      - com.microsoft.azure.keyvault.extensions._key_vault_key.close()
      - 'com.microsoft.azure.keyvault.extensions._key_vault_key.decryptAsync(byte [],byte [],byte [],byte [],String)'
      - 'com.microsoft.azure.keyvault.extensions._key_vault_key.encryptAsync(byte [],byte [],byte [],String)'
      - com.microsoft.azure.keyvault.extensions._key_vault_key.getDefaultEncryptionAlgorithm()
      - com.microsoft.azure.keyvault.extensions._key_vault_key.getDefaultKeyWrapAlgorithm()
      - com.microsoft.azure.keyvault.extensions._key_vault_key.getDefaultSignatureAlgorithm()
      - com.microsoft.azure.keyvault.extensions._key_vault_key.getKid()
      - 'com.microsoft.azure.keyvault.extensions._key_vault_key.KeyVaultKey(KeyVaultClient,KeyBundle)'
      - 'com.microsoft.azure.keyvault.extensions._key_vault_key.signAsync(byte [],String)'
      - 'com.microsoft.azure.keyvault.extensions._key_vault_key.unwrapKeyAsync(byte [],String)'
      - 'com.microsoft.azure.keyvault.extensions._key_vault_key.verifyAsync(byte [],byte [],String)'
      - 'com.microsoft.azure.keyvault.extensions._key_vault_key.wrapKeyAsync(byte [],String)'
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    langs:
      - java
    name: KeyVaultKey
    nameWithType: KeyVaultKey
    fullName: com.microsoft.azure.keyvault.extensions.KeyVaultKey
    type: Class
    source:
      remote: &ref_0
        path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/KeyVaultKey.java
        branch: bb950b2a0255c017040501de0c19e4849361ca1d
        repo: 'https://github.com/Azure/azure-keyvault-java'
      path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/KeyVaultKey.java
      startLine: 41
    package: com.microsoft.azure.keyvault.extensions
    summary: '<p>Der Key Vault-Schlüssel, der Kryptografievorgänge durchführt. </p>'
    syntax:
      content: public class KeyVaultKey implements IKey
    inheritance:
      - java.lang.Object
      - Closeable
      - com.microsoft.azure.keyvault.core._i_key
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.close()
    id: close()
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    langs:
      - java
    name: close()
    nameWithType: KeyVaultKey.close()
    fullName: void com.microsoft.azure.keyvault.extensions.KeyVaultKey.close()
    overload: com.microsoft.azure.keyvault.extensions._key_vault_key.close*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/KeyVaultKey.java
      startLine: 112
    package: com.microsoft.azure.keyvault.extensions
    syntax:
      content: public void close()
  - uid: 'com.microsoft.azure.keyvault.extensions._key_vault_key.decryptAsync(byte [],byte [],byte [],byte [],String)'
    id: 'decryptAsync(byte [],byte [],byte [],byte [],String)'
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    langs:
      - java
    name: 'decryptAsync(byte[] ciphertext, byte[] iv, byte[] authenticationData, byte[] authenticationTag, String algorithm)'
    nameWithType: 'KeyVaultKey.decryptAsync(byte[] ciphertext, byte[] iv, byte[] authenticationData, byte[] authenticationTag, String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.extensions.KeyVaultKey.decryptAsync(byte[] ciphertext, byte[] iv, byte[] authenticationData, byte[] authenticationTag, String algorithm)'
    overload: com.microsoft.azure.keyvault.extensions._key_vault_key.decryptAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/KeyVaultKey.java
      startLine: 158
    package: com.microsoft.azure.keyvault.extensions
    summary: |-
      <p>Entschlüsselt den angegebenen Verschlüsselungstext. Beachten Sie, dass nicht alle Algorithmen erfordern oder alle Parameter zu unterstützen.</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> decryptAsync(byte[] ciphertext, byte[] iv, byte[] authenticationData, byte[] authenticationTag, String algorithm)'
      parameters:
        - id: ciphertext
          type: ccd9418d
          description: <p>Der Verschlüsselungstext entschlüsselt </p>
        - id: iv
          type: ccd9418d
          description: <p>Der Initialisierungsvektor (optional bei manchen Algorithmen) </p>
        - id: authenticationData
          type: ccd9418d
          description: <p>Zusätzliche Authentifizierungsdaten (optional bei manchen Algorithmen) </p>
        - id: authenticationTag
          type: ccd9418d
          description: <p>Das authentifizierungstag "aus der Encrypt-Vorgang (optional bei manchen Algorithmen) </p>
        - id: algorithm
          type: '26831127'
          description: '<p>Der Verschlüsselungsalgorithmus zu verwenden, muss angegeben werden </p>'
      return:
        type: dfd3b0c8
        description: '<p>Eine ListenableFuture, die nur-Text enthält. </p>'
    overridden: 'com.microsoft.azure.keyvault.core._i_key.decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p>der Algorithmus ist ungültig </p>
  - uid: 'com.microsoft.azure.keyvault.extensions._key_vault_key.encryptAsync(byte [],byte [],byte [],String)'
    id: 'encryptAsync(byte [],byte [],byte [],String)'
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    langs:
      - java
    name: 'encryptAsync(byte[] plaintext, byte[] iv, byte[] authenticationData, String algorithm)'
    nameWithType: 'KeyVaultKey.encryptAsync(byte[] plaintext, byte[] iv, byte[] authenticationData, String algorithm)'
    fullName: 'ListenableFuture<Triple<byte[], byte[], String>> com.microsoft.azure.keyvault.extensions.KeyVaultKey.encryptAsync(byte[] plaintext, byte[] iv, byte[] authenticationData, String algorithm)'
    overload: com.microsoft.azure.keyvault.extensions._key_vault_key.encryptAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/KeyVaultKey.java
      startLine: 179
    package: com.microsoft.azure.keyvault.extensions
    summary: |-
      <p>Verschlüsselt den angegebenen nur-Text. Beachten Sie, dass nicht alle Algorithmen erfordern oder alle Parameter zu unterstützen.</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Triple<byte[], byte[], String>> encryptAsync(byte[] plaintext, byte[] iv, byte[] authenticationData, String algorithm)'
      parameters:
        - id: plaintext
          type: ccd9418d
          description: <p>Der Klartext verschlüsselt </p>
        - id: iv
          type: ccd9418d
          description: <p>Der Initialisierungsvektor (optional bei manchen Algorithmen) </p>
        - id: authenticationData
          type: ccd9418d
          description: <p>Zusätzliche Authentifizierungsdaten (optional bei manchen Algorithmen) </p>
        - id: algorithm
          type: '26831127'
          description: '<p>Der Verschlüsselungsalgorithmus zu verwenden, wird standardmäßig auf die Schlüssel DefaultEncryptionAlgorithm </p>'
      return:
        type: 7356d169
        description: '<p>Eine ListenableFuture mit verschlüsseltem Text, der authentifizierungstag und den Algorithmus, der verwendet wurde </p>'
    overridden: 'com.microsoft.azure.keyvault.core._i_key.encryptAsync(final byte [],final byte [],final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p>der Algorithmus ist ungültig </p>
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.getDefaultEncryptionAlgorithm()
    id: getDefaultEncryptionAlgorithm()
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    langs:
      - java
    name: getDefaultEncryptionAlgorithm()
    nameWithType: KeyVaultKey.getDefaultEncryptionAlgorithm()
    fullName: String com.microsoft.azure.keyvault.extensions.KeyVaultKey.getDefaultEncryptionAlgorithm()
    overload: com.microsoft.azure.keyvault.extensions._key_vault_key.getDefaultEncryptionAlgorithm*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/KeyVaultKey.java
      startLine: 119
    package: com.microsoft.azure.keyvault.extensions
    summary: |-
      <p>Der standardmäßige Verschlüsselungsalgorithmus für diesen Schlüssel, die die Darstellung von Json Web Key-Algorithmen, RFC7513 verwenden.</p>
      <p></p>
    syntax:
      content: public String getDefaultEncryptionAlgorithm()
      return:
        type: '26831127'
        description: <p>Der standardmäßige Verschlüsselungsalgorithmus für diesen Schlüssel. </p>
    overridden: com.microsoft.azure.keyvault.core._i_key.getDefaultEncryptionAlgorithm()
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.getDefaultKeyWrapAlgorithm()
    id: getDefaultKeyWrapAlgorithm()
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    langs:
      - java
    name: getDefaultKeyWrapAlgorithm()
    nameWithType: KeyVaultKey.getDefaultKeyWrapAlgorithm()
    fullName: String com.microsoft.azure.keyvault.extensions.KeyVaultKey.getDefaultKeyWrapAlgorithm()
    overload: com.microsoft.azure.keyvault.extensions._key_vault_key.getDefaultKeyWrapAlgorithm*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/KeyVaultKey.java
      startLine: 128
    package: com.microsoft.azure.keyvault.extensions
    summary: |-
      <p>Der Standard-Key Wrap-Algorithmus für diesen Schlüssel, die die Darstellung von Json Web Key-Algorithmen, RFC7513 verwenden.</p>
      <p></p>
    syntax:
      content: public String getDefaultKeyWrapAlgorithm()
      return:
        type: '26831127'
        description: <p>Der Standardschlüssel wrap-Algorithmus für diesen Schlüssel. </p>
    overridden: com.microsoft.azure.keyvault.core._i_key.getDefaultKeyWrapAlgorithm()
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.getDefaultSignatureAlgorithm()
    id: getDefaultSignatureAlgorithm()
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    langs:
      - java
    name: getDefaultSignatureAlgorithm()
    nameWithType: KeyVaultKey.getDefaultSignatureAlgorithm()
    fullName: String com.microsoft.azure.keyvault.extensions.KeyVaultKey.getDefaultSignatureAlgorithm()
    overload: com.microsoft.azure.keyvault.extensions._key_vault_key.getDefaultSignatureAlgorithm*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/KeyVaultKey.java
      startLine: 138
    package: com.microsoft.azure.keyvault.extensions
    summary: |-
      <p>Die standardmäßige Signaturalgorithmus für diesen Schlüssel, die die Darstellung von Json Web Key-Algorithmen, RFC7513 verwenden.</p>
      <p></p>
    syntax:
      content: public String getDefaultSignatureAlgorithm()
      return:
        type: '26831127'
        description: <p>Die standardmäßige Signaturalgorithmus für diesen Schlüssel. </p>
    overridden: com.microsoft.azure.keyvault.core._i_key.getDefaultSignatureAlgorithm()
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.getKid()
    id: getKid()
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    langs:
      - java
    name: getKid()
    nameWithType: KeyVaultKey.getKid()
    fullName: String com.microsoft.azure.keyvault.extensions.KeyVaultKey.getKid()
    overload: com.microsoft.azure.keyvault.extensions._key_vault_key.getKid*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/KeyVaultKey.java
      startLine: 148
    package: com.microsoft.azure.keyvault.extensions
    summary: |-
      <p>Der Schlüssel eindeutige Bezeichner für diesen Schlüssel.</p>
      <p></p>
    syntax:
      content: public String getKid()
      return:
        type: '26831127'
        description: <p>Der Schlüsselbezeichner </p>
    overridden: com.microsoft.azure.keyvault.core._i_key.getKid()
  - uid: 'com.microsoft.azure.keyvault.extensions._key_vault_key.KeyVaultKey(KeyVaultClient,KeyBundle)'
    id: 'KeyVaultKey(KeyVaultClient,KeyBundle)'
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    langs:
      - java
    name: 'KeyVaultKey(KeyVaultClient client, KeyBundle keyBundle)'
    nameWithType: 'KeyVaultKey.KeyVaultKey(KeyVaultClient client, KeyBundle keyBundle)'
    fullName: 'com.microsoft.azure.keyvault.extensions.KeyVaultKey.KeyVaultKey(KeyVaultClient client, KeyBundle keyBundle)'
    overload: com.microsoft.azure.keyvault.extensions._key_vault_key.KeyVaultKey*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/KeyVaultKey.java
      startLine: 80
    package: com.microsoft.azure.keyvault.extensions
    syntax:
      content: 'protected KeyVaultKey(KeyVaultClient client, KeyBundle keyBundle)'
      parameters:
        - id: client
          type: com.microsoft.azure.keyvault._key_vault_client
        - id: keyBundle
          type: com.microsoft.azure.keyvault.models._key_bundle
  - uid: 'com.microsoft.azure.keyvault.extensions._key_vault_key.signAsync(byte [],String)'
    id: 'signAsync(byte [],String)'
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    langs:
      - java
    name: 'signAsync(byte[] digest, String algorithm)'
    nameWithType: 'KeyVaultKey.signAsync(byte[] digest, String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.extensions.KeyVaultKey.signAsync(byte[] digest, String algorithm)'
    overload: com.microsoft.azure.keyvault.extensions._key_vault_key.signAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/KeyVaultKey.java
      startLine: 217
    package: com.microsoft.azure.keyvault.extensions
    summary: |-
      <p>Registriert den angegebenen Hashwert des angegebenen Algorithmus oder die Schlüssel DefaultSignatureAlgorithm verwenden, wenn kein Algorithmus angegeben wird.</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> signAsync(byte[] digest, String algorithm)'
      parameters:
        - id: digest
          type: ccd9418d
          description: <p>Der Digest anmelden </p>
        - id: algorithm
          type: '26831127'
          description: <p>Die zu verwendenden Signaturalgorithmus </p>
      return:
        type: 32be89a6
        description: '<p>Eine ListenableFuture, enthält die Signatur und der verwendete Algorithmus. </p>'
    overridden: 'com.microsoft.azure.keyvault.core._i_key.signAsync(final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p>der Algorithmus ist ungültig </p>
  - uid: 'com.microsoft.azure.keyvault.extensions._key_vault_key.unwrapKeyAsync(byte [],String)'
    id: 'unwrapKeyAsync(byte [],String)'
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    langs:
      - java
    name: 'unwrapKeyAsync(byte[] ciphertext, String algorithm)'
    nameWithType: 'KeyVaultKey.unwrapKeyAsync(byte[] ciphertext, String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.extensions.KeyVaultKey.unwrapKeyAsync(byte[] ciphertext, String algorithm)'
    overload: com.microsoft.azure.keyvault.extensions._key_vault_key.unwrapKeyAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/KeyVaultKey.java
      startLine: 197
    package: com.microsoft.azure.keyvault.extensions
    summary: |-
      <p>Entpackt (entschlüsselt) dem angegebenen Encryped Schlüsselmaterial.</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> unwrapKeyAsync(byte[] ciphertext, String algorithm)'
      parameters:
        - id: encryptedKey
          type: ccd9418d
          description: <p>Der verschlüsselte Schlüssel zum Entschlüsseln </p>
        - id: algorithm
          type: '26831127'
          description: '<p>Der Algorithmus zu verwenden, muss angegeben werden </p>'
      return:
        type: dfd3b0c8
        description: <p>Ein mit dem entpackte Schlüssel ListenableFuture </p>
    overridden: 'com.microsoft.azure.keyvault.core._i_key.unwrapKeyAsync(final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p>der Algorithmus ist ungültig </p>
  - uid: 'com.microsoft.azure.keyvault.extensions._key_vault_key.verifyAsync(byte [],byte [],String)'
    id: 'verifyAsync(byte [],byte [],String)'
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    langs:
      - java
    name: 'verifyAsync(byte[] digest, byte[] signature, String algorithm)'
    nameWithType: 'KeyVaultKey.verifyAsync(byte[] digest, byte[] signature, String algorithm)'
    fullName: 'ListenableFuture<Boolean> com.microsoft.azure.keyvault.extensions.KeyVaultKey.verifyAsync(byte[] digest, byte[] signature, String algorithm)'
    overload: com.microsoft.azure.keyvault.extensions._key_vault_key.verifyAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/KeyVaultKey.java
      startLine: 237
    package: com.microsoft.azure.keyvault.extensions
    summary: |-
      <p>Überprüft den angegebenen Signaturwert, der mit dem angegebenen Hashwert und den Algorithmus an.</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Boolean> verifyAsync(byte[] digest, byte[] signature, String algorithm)'
      parameters:
        - id: digest
          type: ccd9418d
          description: <p>Die Digest-Eingabe </p>
        - id: signature
          type: ccd9418d
          description: <p>Die Signatur überprüfen </p>
        - id: algorithm
          type: '26831127'
          description: '<p>Der Algorithmus zu verwenden, muss angegeben werden </p>'
      return:
        type: 8779baad
        description: '<p>Eine ListenableFuture, enthält die Signatur und der verwendete Algorithmus. </p>'
    overridden: 'com.microsoft.azure.keyvault.core._i_key.verifyAsync(final byte [],final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p>der Algorithmus ist ungültig </p>
  - uid: 'com.microsoft.azure.keyvault.extensions._key_vault_key.wrapKeyAsync(byte [],String)'
    id: 'wrapKeyAsync(byte [],String)'
    parent: com.microsoft.azure.keyvault.extensions._key_vault_key
    href: com.microsoft.azure.keyvault.extensions._key_vault_key.yml
    langs:
      - java
    name: 'wrapKeyAsync(byte[] plaintext, String algorithm)'
    nameWithType: 'KeyVaultKey.wrapKeyAsync(byte[] plaintext, String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.extensions.KeyVaultKey.wrapKeyAsync(byte[] plaintext, String algorithm)'
    overload: com.microsoft.azure.keyvault.extensions._key_vault_key.wrapKeyAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-keyvault-extensions/src/main/java/com/microsoft/azure/keyvault/extensions/KeyVaultKey.java
      startLine: 188
    package: com.microsoft.azure.keyvault.extensions
    summary: |-
      <p>Umschließt (verschlüsselt) des angegebenen symmetrischen Schlüsselmaterials mit den angegebenen Algorithmus oder die Schlüssel DefaultKeyWrapAlgorithm, falls keiner angegeben ist.</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> wrapKeyAsync(byte[] plaintext, String algorithm)'
      parameters:
        - id: key
          type: ccd9418d
          description: <p>Der symmetrische Schlüssel zum Umschließen </p>
        - id: algorithm
          type: '26831127'
          description: '<p>Der einbindungsalgorithmus zu verwenden, wird standardmäßig auf die Schlüssel DefaultKeyWrapAlgorithm </p>'
      return:
        type: 32be89a6
        description: '<p>ListenableFuture mit den verschlüsselten Schlüssel und den Algorithmus, der verwendet wurde </p>'
    overridden: 'com.microsoft.azure.keyvault.core._i_key.wrapKeyAsync(final byte [],final String)'
    exceptions:
      - type: 456eb9d1
        description: <p>der Algorithmus ist ungültig </p>
references:
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.KeyVaultKey*
    name: KeyVaultKey
    nameWithType: KeyVaultKey.KeyVaultKey
    fullName: com.microsoft.azure.keyvault.extensions.KeyVaultKey.KeyVaultKey
    package: com.microsoft.azure.keyvault.extensions
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.close*
    name: close
    nameWithType: KeyVaultKey.close
    fullName: void com.microsoft.azure.keyvault.extensions.KeyVaultKey.close
    package: com.microsoft.azure.keyvault.extensions
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.getDefaultEncryptionAlgorithm*
    name: getDefaultEncryptionAlgorithm
    nameWithType: KeyVaultKey.getDefaultEncryptionAlgorithm
    fullName: String com.microsoft.azure.keyvault.extensions.KeyVaultKey.getDefaultEncryptionAlgorithm
    package: com.microsoft.azure.keyvault.extensions
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.getDefaultKeyWrapAlgorithm*
    name: getDefaultKeyWrapAlgorithm
    nameWithType: KeyVaultKey.getDefaultKeyWrapAlgorithm
    fullName: String com.microsoft.azure.keyvault.extensions.KeyVaultKey.getDefaultKeyWrapAlgorithm
    package: com.microsoft.azure.keyvault.extensions
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.getDefaultSignatureAlgorithm*
    name: getDefaultSignatureAlgorithm
    nameWithType: KeyVaultKey.getDefaultSignatureAlgorithm
    fullName: String com.microsoft.azure.keyvault.extensions.KeyVaultKey.getDefaultSignatureAlgorithm
    package: com.microsoft.azure.keyvault.extensions
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.getKid*
    name: getKid
    nameWithType: KeyVaultKey.getKid
    fullName: String com.microsoft.azure.keyvault.extensions.KeyVaultKey.getKid
    package: com.microsoft.azure.keyvault.extensions
  - uid: 456eb9d1
    spec.java:
      - name: NoSuchAlgorithmException
        fullName: NoSuchAlgorithmException
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: dfd3b0c8
    spec.java:
      - name: 'ListenableFuture<byte[]>'
        fullName: 'ListenableFuture<byte[]>'
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.decryptAsync*
    name: decryptAsync
    nameWithType: KeyVaultKey.decryptAsync
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.extensions.KeyVaultKey.decryptAsync'
    package: com.microsoft.azure.keyvault.extensions
  - uid: 7356d169
    spec.java:
      - name: 'ListenableFuture<Triple<byte[], byte[], String>>'
        fullName: 'ListenableFuture<Triple<byte[], byte[], String>>'
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.encryptAsync*
    name: encryptAsync
    nameWithType: KeyVaultKey.encryptAsync
    fullName: 'ListenableFuture<Triple<byte[], byte[], String>> com.microsoft.azure.keyvault.extensions.KeyVaultKey.encryptAsync'
    package: com.microsoft.azure.keyvault.extensions
  - uid: 32be89a6
    spec.java:
      - name: 'ListenableFuture<Pair<byte[], String>>'
        fullName: 'ListenableFuture<Pair<byte[], String>>'
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.wrapKeyAsync*
    name: wrapKeyAsync
    nameWithType: KeyVaultKey.wrapKeyAsync
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.extensions.KeyVaultKey.wrapKeyAsync'
    package: com.microsoft.azure.keyvault.extensions
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.unwrapKeyAsync*
    name: unwrapKeyAsync
    nameWithType: KeyVaultKey.unwrapKeyAsync
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.extensions.KeyVaultKey.unwrapKeyAsync'
    package: com.microsoft.azure.keyvault.extensions
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.signAsync*
    name: signAsync
    nameWithType: KeyVaultKey.signAsync
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.extensions.KeyVaultKey.signAsync'
    package: com.microsoft.azure.keyvault.extensions
  - uid: 8779baad
    spec.java:
      - name: ListenableFuture<Boolean>
        fullName: ListenableFuture<Boolean>
  - uid: com.microsoft.azure.keyvault.extensions._key_vault_key.verifyAsync*
    name: verifyAsync
    nameWithType: KeyVaultKey.verifyAsync
    fullName: ListenableFuture<Boolean> com.microsoft.azure.keyvault.extensions.KeyVaultKey.verifyAsync
    package: com.microsoft.azure.keyvault.extensions
  - uid: com.microsoft.azure.keyvault.core._i_key
    parent: com.microsoft.azure.keyvault.core
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: IKey
    nameWithType: IKey
    fullName: com.microsoft.azure.keyvault.core.IKey
    type: Interface
    summary: <p>Eine Schnittstelle für die Darstellung von kryptografischer Schlüsseln mit Microsoft Azure Key Vault-Bibliotheken. </p>
    syntax:
      content: public interface IKey
  - uid: com.microsoft.azure.keyvault._key_vault_client
    parent: com.microsoft.azure.keyvault
    href: com.microsoft.azure.keyvault._key_vault_client.yml
    name: KeyVaultClient
    nameWithType: KeyVaultClient
    fullName: com.microsoft.azure.keyvault.KeyVaultClient
    type: Class
    summary: <p>Initialisiert eine neue Instanz der dem <xref href="com.microsoft.azure.keyvault._key_vault_client" data-throw-if-not-resolved="false"></xref> Klasse. </p>
    syntax:
      content: public class KeyVaultClient
  - uid: com.microsoft.azure.keyvault.models._key_bundle
    parent: com.microsoft.azure.keyvault.models
    href: com.microsoft.azure.keyvault.models._key_bundle.yml
    name: KeyBundle
    nameWithType: KeyBundle
    fullName: com.microsoft.azure.keyvault.models.KeyBundle
    type: Class
    summary: <p>Ein <xref href="com.microsoft.azure.keyvault.models._key_bundle" data-throw-if-not-resolved="false"></xref> bestehend aus einem WebKey sowie seiner Attribute. </p>
    syntax:
      content: public class KeyBundle
  - uid: com.microsoft.azure.keyvault.core._i_key.getDefaultEncryptionAlgorithm()
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: getDefaultEncryptionAlgorithm()
    nameWithType: IKey.getDefaultEncryptionAlgorithm()
    fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultEncryptionAlgorithm()
    type: Method
    summary: |-
      <p>Der standardmäßige Verschlüsselungsalgorithmus für diesen Schlüssel, die die Darstellung von Json Web Key-Algorithmen, RFC7513 verwenden.</p>
      <p></p>
    syntax:
      content: public String getDefaultEncryptionAlgorithm()
      return:
        type: '26831127'
        description: <p>Der standardmäßige Verschlüsselungsalgorithmus für diesen Schlüssel. </p>
  - uid: com.microsoft.azure.keyvault.core._i_key.getDefaultKeyWrapAlgorithm()
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: getDefaultKeyWrapAlgorithm()
    nameWithType: IKey.getDefaultKeyWrapAlgorithm()
    fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultKeyWrapAlgorithm()
    type: Method
    summary: |-
      <p>Der Standard-Key Wrap-Algorithmus für diesen Schlüssel, die die Darstellung von Json Web Key-Algorithmen, RFC7513 verwenden.</p>
      <p></p>
    syntax:
      content: public String getDefaultKeyWrapAlgorithm()
      return:
        type: '26831127'
        description: <p>Der Standardschlüssel wrap-Algorithmus für diesen Schlüssel. </p>
  - uid: com.microsoft.azure.keyvault.core._i_key.getDefaultSignatureAlgorithm()
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: getDefaultSignatureAlgorithm()
    nameWithType: IKey.getDefaultSignatureAlgorithm()
    fullName: String com.microsoft.azure.keyvault.core.IKey.getDefaultSignatureAlgorithm()
    type: Method
    summary: |-
      <p>Die standardmäßige Signaturalgorithmus für diesen Schlüssel, die die Darstellung von Json Web Key-Algorithmen, RFC7513 verwenden.</p>
      <p></p>
    syntax:
      content: public String getDefaultSignatureAlgorithm()
      return:
        type: '26831127'
        description: <p>Die standardmäßige Signaturalgorithmus für diesen Schlüssel. </p>
  - uid: com.microsoft.azure.keyvault.core._i_key.getKid()
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: getKid()
    nameWithType: IKey.getKid()
    fullName: String com.microsoft.azure.keyvault.core.IKey.getKid()
    type: Method
    summary: |-
      <p>Der Schlüssel eindeutige Bezeichner für diesen Schlüssel.</p>
      <p></p>
    syntax:
      content: public String getKid()
      return:
        type: '26831127'
        description: <p>Der Schlüsselbezeichner </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.decryptAsync(final byte [],final byte [],final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    nameWithType: 'IKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.core.IKey.decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
    type: Method
    summary: |-
      <p>Entschlüsselt den angegebenen Verschlüsselungstext. Beachten Sie, dass nicht alle Algorithmen erfordern oder alle Parameter zu unterstützen.</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> decryptAsync(final byte[] ciphertext, final byte[] iv, final byte[] authenticationData, final byte[] authenticationTag, final String algorithm)'
      parameters:
        - id: ciphertext
          type: f549433f
          description: <p>Der Verschlüsselungstext entschlüsselt </p>
        - id: iv
          type: f549433f
          description: <p>Der Initialisierungsvektor (optional bei manchen Algorithmen) </p>
        - id: authenticationData
          type: f549433f
          description: <p>Zusätzliche Authentifizierungsdaten (optional bei manchen Algorithmen) </p>
        - id: authenticationTag
          type: f549433f
          description: <p>Das authentifizierungstag "aus der Encrypt-Vorgang (optional bei manchen Algorithmen) </p>
        - id: algorithm
          type: 3d93591e
          description: '<p>Der Verschlüsselungsalgorithmus zu verwenden, muss angegeben werden </p>'
      return:
        type: dfd3b0c8
        description: '<p>Eine ListenableFuture, die nur-Text enthält. </p>'
  - uid: 'com.microsoft.azure.keyvault.core._i_key.encryptAsync(final byte [],final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    nameWithType: 'IKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    fullName: 'ListenableFuture<Triple<byte[], byte[], String>> com.microsoft.azure.keyvault.core.IKey.encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
    type: Method
    summary: |-
      <p>Verschlüsselt den angegebenen nur-Text. Beachten Sie, dass nicht alle Algorithmen erfordern oder alle Parameter zu unterstützen.</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Triple<byte[], byte[], String>> encryptAsync(final byte[] plaintext, final byte[] iv, final byte[] authenticationData, final String algorithm)'
      parameters:
        - id: plaintext
          type: f549433f
          description: <p>Der Klartext verschlüsselt </p>
        - id: iv
          type: f549433f
          description: <p>Der Initialisierungsvektor (optional bei manchen Algorithmen) </p>
        - id: authenticationData
          type: f549433f
          description: <p>Zusätzliche Authentifizierungsdaten (optional bei manchen Algorithmen) </p>
        - id: algorithm
          type: 3d93591e
          description: '<p>Der Verschlüsselungsalgorithmus zu verwenden, wird standardmäßig auf die Schlüssel DefaultEncryptionAlgorithm </p>'
      return:
        type: 7356d169
        description: '<p>Eine ListenableFuture mit verschlüsseltem Text, der authentifizierungstag und den Algorithmus, der verwendet wurde </p>'
  - uid: 'com.microsoft.azure.keyvault.core._i_key.wrapKeyAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'wrapKeyAsync(final byte[] key, final String algorithm)'
    nameWithType: 'IKey.wrapKeyAsync(final byte[] key, final String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.core.IKey.wrapKeyAsync(final byte[] key, final String algorithm)'
    type: Method
    summary: |-
      <p>Umschließt (verschlüsselt) des angegebenen symmetrischen Schlüsselmaterials mit den angegebenen Algorithmus oder die Schlüssel DefaultKeyWrapAlgorithm, falls keiner angegeben ist.</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> wrapKeyAsync(final byte[] key, final String algorithm)'
      parameters:
        - id: key
          type: f549433f
          description: <p>Der symmetrische Schlüssel zum Umschließen </p>
        - id: algorithm
          type: 3d93591e
          description: '<p>Der einbindungsalgorithmus zu verwenden, wird standardmäßig auf die Schlüssel DefaultKeyWrapAlgorithm </p>'
      return:
        type: 32be89a6
        description: '<p>ListenableFuture mit den verschlüsselten Schlüssel und den Algorithmus, der verwendet wurde </p>'
  - uid: 'com.microsoft.azure.keyvault.core._i_key.unwrapKeyAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    nameWithType: 'IKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    fullName: 'ListenableFuture<byte[]> com.microsoft.azure.keyvault.core.IKey.unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
    type: Method
    summary: |-
      <p>Entpackt (entschlüsselt) dem angegebenen Encryped Schlüsselmaterial.</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<byte[]> unwrapKeyAsync(final byte[] encryptedKey, final String algorithm)'
      parameters:
        - id: encryptedKey
          type: f549433f
          description: <p>Der verschlüsselte Schlüssel zum Entschlüsseln </p>
        - id: algorithm
          type: 3d93591e
          description: '<p>Der Algorithmus zu verwenden, muss angegeben werden </p>'
      return:
        type: dfd3b0c8
        description: <p>Ein mit dem entpackte Schlüssel ListenableFuture </p>
  - uid: 'com.microsoft.azure.keyvault.core._i_key.signAsync(final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'signAsync(final byte[] digest, final String algorithm)'
    nameWithType: 'IKey.signAsync(final byte[] digest, final String algorithm)'
    fullName: 'ListenableFuture<Pair<byte[], String>> com.microsoft.azure.keyvault.core.IKey.signAsync(final byte[] digest, final String algorithm)'
    type: Method
    summary: |-
      <p>Registriert den angegebenen Hashwert des angegebenen Algorithmus oder die Schlüssel DefaultSignatureAlgorithm verwenden, wenn kein Algorithmus angegeben wird.</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Pair<byte[], String>> signAsync(final byte[] digest, final String algorithm)'
      parameters:
        - id: digest
          type: f549433f
          description: <p>Der Digest anmelden </p>
        - id: algorithm
          type: 3d93591e
          description: <p>Die zu verwendenden Signaturalgorithmus </p>
      return:
        type: 32be89a6
        description: '<p>Eine ListenableFuture, enthält die Signatur und der verwendete Algorithmus. </p>'
  - uid: 'com.microsoft.azure.keyvault.core._i_key.verifyAsync(final byte [],final byte [],final String)'
    parent: com.microsoft.azure.keyvault.core._i_key
    href: com.microsoft.azure.keyvault.core._i_key.yml
    name: 'verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    nameWithType: 'IKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    fullName: 'ListenableFuture<Boolean> com.microsoft.azure.keyvault.core.IKey.verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
    type: Method
    summary: |-
      <p>Überprüft den angegebenen Signaturwert, der mit dem angegebenen Hashwert und den Algorithmus an.</p>
      <p></p>
    syntax:
      content: 'public ListenableFuture<Boolean> verifyAsync(final byte[] digest, final byte[] signature, final String algorithm)'
      parameters:
        - id: digest
          type: f549433f
          description: <p>Die Digest-Eingabe </p>
        - id: signature
          type: f549433f
          description: <p>Die Signatur überprüfen </p>
        - id: algorithm
          type: 3d93591e
          description: '<p>Der Algorithmus zu verwenden, muss angegeben werden </p>'
      return:
        type: 8779baad
        description: '<p>Eine ListenableFuture, enthält die Signatur und der verwendete Algorithmus. </p>'