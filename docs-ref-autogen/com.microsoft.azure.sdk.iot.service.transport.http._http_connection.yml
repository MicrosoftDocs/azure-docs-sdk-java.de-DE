### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    id: _http_connection
    parent: com.microsoft.azure.sdk.iot.service.transport.http
    children:
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.body
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect()
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connection
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.getResponseHeaders()
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.getResponseStatus()
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.HttpConnection()
      - 'com.microsoft.azure.sdk.iot.service.transport.http._http_connection.HttpConnection(URL,HttpMethod)'
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readError()
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readInput()
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readInputStream(InputStream)
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setReadTimeoutMillis(int)
      - 'com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setRequestHeader(String,String)'
      - com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setRequestMethod(HttpMethod)
      - 'com.microsoft.azure.sdk.iot.service.transport.http._http_connection.writeOutput(byte [])'
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: HttpConnection
    nameWithType: HttpConnection
    fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection
    type: Class
    source:
      remote: &ref_0
        path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 28
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p>Ein Wrapper für die Java SE-Klasse HttpsURLConnection. Wird verwendet, um Kompatibilitätsprobleme zu vermeiden, wenn Tests mit den pseudoframework JMockit sowie einige nicht dokumentierte Nebeneffekte zu vermeiden, wenn HttpsURLConnection verwenden. </p>
      <p>Die zugrunde liegenden HttpsURLConnection wird transparent von Java verwaltet. Wiederverwenden von Verbindungen, für jedes Mal <xref uid="com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect()" data-throw-if-not-resolved="false">connect()</xref> aufgerufen wird, wird die Eingabe Streams (Eingabestream oder fehlerdatenstroms, wenn der Eingabedatenstrom nicht möglich ist) vollständig gelesen werden müssen. Andernfalls werden die Daten verbleiben in den Stream und die Verbindung nicht wiederverwendet werden handeln. </p>
    syntax:
      content: public class HttpConnection
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.body
    id: body
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: body
    nameWithType: HttpConnection.body
    fullName: 'byte [] com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.body'
    type: Field
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 38
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: <p>der Text. Im Hintergrund ruft HttpsURLConnection <xref uid="com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect()" data-throw-if-not-resolved="false">connect()</xref> Wenn wird in der Ausgabestream geschrieben. Wir den Textkörper puffert und das Schreiben in den Ausgabestream bis zurückstellen <xref uid="com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect()" data-throw-if-not-resolved="false">connect()</xref> aufgerufen wird. </p>
    syntax:
      content: 'protected byte [] body'
      return:
        type: ccd9418d
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect()
    id: connect()
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: connect()
    nameWithType: HttpConnection.connect()
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect()
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 89
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p>Sendet die Anforderung an die URL, die im Konstruktor angegeben.</p>
      <p></p>
    syntax: &ref_1
      content: public void connect()
    exceptions:
      - type: cbf33bbe
        description: '<p>Diese Ausnahme wird ausgelöst, wenn die Verbindung nicht hergestellt werden konnte, oder der Server hat mit einem ungültigen Status-Code zurückgegeben. </p>'
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connection
    id: connection
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: connection
    nameWithType: HttpConnection.connection
    fullName: final HttpsURLConnection com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connection
    type: Field
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 31
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: <p>Die zugrunde liegende HTTPS-Verbindung. </p>
    syntax:
      content: protected final HttpsURLConnection connection
      return:
        type: 9d854a40
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.getResponseHeaders()
    id: getResponseHeaders()
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: getResponseHeaders()
    nameWithType: HttpConnection.getResponseHeaders()
    fullName: 'Map<String, List<String>> com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders()'
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.getResponseHeaders*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 261
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p>Gibt die Antwortheader als Karte, wo der Schlüssel wird der Feldname Header und die Werte entsprechen den Werten der Feldname Header zugeordnet.</p>
      <p></p>
    syntax:
      content: 'public Map<String, List<String>> getResponseHeaders()'
      return:
        type: b2319095
        description: <p>die Antwortheader.</p>
    exceptions:
      - type: cbf33bbe
        description: '<p>Diese Ausnahme wird ausgelöst, wenn keine Antwort empfangen wurde. </p>'
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.getResponseStatus()
    id: getResponseStatus()
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: getResponseStatus()
    nameWithType: HttpConnection.getResponseStatus()
    fullName: int com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus()
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.getResponseStatus*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 245
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p>Gibt den Statuscode der Antwort zurück.</p>
      <p></p>
    syntax:
      content: public int getResponseStatus()
      return:
        type: f75371fa
        description: <p>der Statuscode der Antwort.</p>
    exceptions:
      - type: cbf33bbe
        description: '<p>Diese Ausnahme wird ausgelöst, wenn keine Antwort empfangen wurde. </p>'
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.HttpConnection()
    id: HttpConnection()
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: HttpConnection()
    nameWithType: HttpConnection.HttpConnection()
    fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection()
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.HttpConnection*
    type: Constructor
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 299
    package: com.microsoft.azure.sdk.iot.service.transport.http
    syntax:
      content: protected HttpConnection()
  - uid: 'com.microsoft.azure.sdk.iot.service.transport.http._http_connection.HttpConnection(URL,HttpMethod)'
    id: 'HttpConnection(URL,HttpMethod)'
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: 'HttpConnection(URL url, HttpMethod method)'
    nameWithType: 'HttpConnection.HttpConnection(URL url, HttpMethod method)'
    fullName: 'com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection(URL url, HttpMethod method)'
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.HttpConnection*
    type: Constructor
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 48
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p>Der Konstruktor. Öffnet eine Verbindung zur angegebenen URL.</p>
      <p></p>
    syntax:
      content: 'public HttpConnection(URL url, HttpMethod method)'
      parameters:
        - id: url
          type: a891b3e6
          description: <p>die URL für die HTTPS-Verbindung. </p>
        - id: method
          type: com.microsoft.azure.sdk.iot.service.transport.http._http_method
          description: <p>die HTTPS-Methode (d. h. GET).</p>
    exceptions:
      - type: cbf33bbe
        description: '<p>Diese Ausnahme wird ausgelöst, wenn die Verbindung nicht geöffnet werden konnte. </p>'
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readError()
    id: readError()
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: readError()
    nameWithType: HttpConnection.readError()
    fullName: 'byte [] com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError()'
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readError*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 220
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p>Liest aus dem Fehlerstream, und gibt den Grund für Fehler zurück.</p>
      <p></p>
    syntax:
      content: 'public byte [] readError()'
      return:
        type: ccd9418d
        description: <p>Der Grund für Fehler.</p>
    exceptions:
      - type: cbf33bbe
        description: '<p>Diese Ausnahme wird ausgelöst, wenn der Eingabedatenstrom nicht werden z. B. zugegriffen konnte Wenn der Server nicht erreicht werden konnte. </p>'
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readInput()
    id: readInput()
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: readInput()
    nameWithType: HttpConnection.readInput()
    fullName: 'byte [] com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput()'
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readInput*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 200
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p>Liest aus dem Eingabestream (Antwortstream) und gibt die Antwort zurück.</p>
      <p></p>
    syntax:
      content: 'public byte [] readInput()'
      return:
        type: ccd9418d
        description: <p>der Antworttext.</p>
    exceptions:
      - type: cbf33bbe
        description: '<p>Diese Ausnahme wird ausgelöst, wenn der Eingabedatenstrom nicht werden z. B. zugegriffen konnte Wenn der Server nicht erreicht werden konnte. </p>'
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readInputStream(InputStream)
    id: readInputStream(InputStream)
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: readInputStream(InputStream stream)
    nameWithType: HttpConnection.readInputStream(InputStream stream)
    fullName: 'static byte [] com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream(InputStream stream)'
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readInputStream*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 277
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p>Der Eingabestreams liest, bis der Datenstrom leer ist.</p>
      <p></p>
    syntax:
      content: 'protected static byte [] readInputStream(InputStream stream)'
      parameters:
        - id: stream
          type: 76fcb9b7
          description: <p>Der Eingabestream.</p>
      return:
        type: ccd9418d
        description: <p>Der Inhalt des Eingabedatenstroms.</p>
    exceptions:
      - type: cbf33bbe
        description: '<p>Diese Ausnahme wird ausgelöst, wenn der Eingabedatenstrom aus nicht gelesen werden konnten. </p>'
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setReadTimeoutMillis(int)
    id: setReadTimeoutMillis(int)
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: setReadTimeoutMillis(int timeout)
    nameWithType: HttpConnection.setReadTimeoutMillis(int timeout)
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis(int timeout)
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setReadTimeoutMillis*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 155
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p>Legt das Lesetimeout in Millisekunden an. Das Lesetimeout ist die Anzahl der Millisekunden, nachdem der Server eine Anforderung erhält und bevor der Server wieder Daten sendet.</p>
      <p></p>
    syntax:
      content: public void setReadTimeoutMillis(int timeout)
      parameters:
        - id: timeout
          type: f75371fa
          description: <p>Das Lesetimeout. </p>
  - uid: 'com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setRequestHeader(String,String)'
    id: 'setRequestHeader(String,String)'
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: 'setRequestHeader(String field, String value)'
    nameWithType: 'HttpConnection.setRequestHeader(String field, String value)'
    fullName: 'void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader(String field, String value)'
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setRequestHeader*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 142
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p>Legt die Anforderungsheaderfeld auf den angegebenen Wert fest.</p>
      <p></p>
    syntax:
      content: 'public void setRequestHeader(String field, String value)'
      parameters:
        - id: field
          type: '26831127'
          description: <p>der Name des Header-Feld. </p>
        - id: value
          type: '26831127'
          description: <p>der Wert des Felds. </p>
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setRequestMethod(HttpMethod)
    id: setRequestMethod(HttpMethod)
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: setRequestMethod(HttpMethod method)
    nameWithType: HttpConnection.setRequestMethod(HttpMethod method)
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod(HttpMethod method)
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setRequestMethod*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 112
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p>Legt die Anforderungsmethode (d. h. POST) an.</p>
      <p></p>
    syntax:
      content: public void setRequestMethod(HttpMethod method)
      parameters:
        - id: method
          type: com.microsoft.azure.sdk.iot.service.transport.http._http_method
          description: <p>die Anforderungsmethode.</p>
    exceptions:
      - type: 3c87bd19
        description: '<p>Diese Ausnahme wird ausgelöst, wenn die Anforderung zurzeit einen nicht leeren Text und die neue Methode enthält ist nicht an einen POST- oder PUT. Dies ist da Java''s HttpsURLConnection konvertiert die HTTPS-Methode im Hintergrund auf POST oder PUT-Anforderung, wenn die Anforderung ein Text geschrieben wird. </p>'
  - uid: 'com.microsoft.azure.sdk.iot.service.transport.http._http_connection.writeOutput(byte [])'
    id: 'writeOutput(byte [])'
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    langs:
      - java
    name: 'writeOutput(byte[] body)'
    nameWithType: 'HttpConnection.writeOutput(byte[] body)'
    fullName: 'void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput(byte[] body)'
    overload: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.writeOutput*
    type: Method
    source:
      remote: *ref_0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/http/HttpConnection.java
      startLine: 171
    package: com.microsoft.azure.sdk.iot.service.transport.http
    summary: |-
      <p>Speichert den Text mit der Anforderung gesendet wird.</p>
      <p></p>
    syntax:
      content: 'public void writeOutput(byte[] body)'
      parameters:
        - id: body
          type: ccd9418d
          description: <p>Anforderungstext</p>
    exceptions:
      - type: 3c87bd19
        description: '<p>Wenn die Anforderung derzeit keine Methode POST oder PUT-Anforderung verwendet, und der Text nicht leer ist. Dies ist da Java''s HttpsURLConnection konvertiert die HTTPS-Methode im Hintergrund auf POST oder PUT-Anforderung, wenn die Anforderung ein Text geschrieben wird. </p>'
references:
  - uid: 9d854a40
    spec.java:
      - name: final HttpsURLConnection
        fullName: final HttpsURLConnection
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: a891b3e6
    spec.java:
      - name: URL
        fullName: URL
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.HttpConnection*
    name: HttpConnection
    nameWithType: HttpConnection.HttpConnection
    fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.HttpConnection
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect*
    name: connect
    nameWithType: HttpConnection.connect
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setRequestMethod*
    name: setRequestMethod
    nameWithType: HttpConnection.setRequestMethod
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestMethod
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setRequestHeader*
    name: setRequestHeader
    nameWithType: HttpConnection.setRequestHeader
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setRequestHeader
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.setReadTimeoutMillis*
    name: setReadTimeoutMillis
    nameWithType: HttpConnection.setReadTimeoutMillis
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.setReadTimeoutMillis
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.writeOutput*
    name: writeOutput
    nameWithType: HttpConnection.writeOutput
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.writeOutput
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readInput*
    name: readInput
    nameWithType: HttpConnection.readInput
    fullName: 'byte [] com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInput'
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readError*
    name: readError
    nameWithType: HttpConnection.readError
    fullName: 'byte [] com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readError'
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.getResponseStatus*
    name: getResponseStatus
    nameWithType: HttpConnection.getResponseStatus
    fullName: int com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseStatus
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: b2319095
    spec.java:
      - name: 'Map<String, List<String>>'
        fullName: 'Map<String, List<String>>'
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.getResponseHeaders*
    name: getResponseHeaders
    nameWithType: HttpConnection.getResponseHeaders
    fullName: 'Map<String, List<String>> com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.getResponseHeaders'
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: 76fcb9b7
    spec.java:
      - name: InputStream
        fullName: InputStream
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.readInputStream*
    name: readInputStream
    nameWithType: HttpConnection.readInputStream
    fullName: 'static byte [] com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.readInputStream'
    package: com.microsoft.azure.sdk.iot.service.transport.http
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.connect()
    parent: com.microsoft.azure.sdk.iot.service.transport.http._http_connection
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_connection.yml
    name: connect()
    nameWithType: HttpConnection.connect()
    fullName: void com.microsoft.azure.sdk.iot.service.transport.http.HttpConnection.connect()
    type: Method
    summary: |-
      <p>Sendet die Anforderung an die URL, die im Konstruktor angegeben.</p>
      <p></p>
    syntax: *ref_1
  - uid: com.microsoft.azure.sdk.iot.service.transport.http._http_method
    parent: com.microsoft.azure.sdk.iot.service.transport.http
    href: com.microsoft.azure.sdk.iot.service.transport.http._http_method.yml
    name: HttpMethod
    nameWithType: HttpMethod
    fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
    type: Enum
    summary: <p>Die HTTPS-Anforderungsmethode (d. h. GET). </p>
    syntax:
      content: public enum HttpMethod