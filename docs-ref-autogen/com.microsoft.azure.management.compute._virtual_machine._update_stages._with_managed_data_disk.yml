### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk
    id: _with_managed_data_disk
    parent: com.microsoft.azure.management.compute
    children:
      - com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withExistingDataDisk(Disk)
      - 'com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withExistingDataDisk(Disk,int,CachingTypes)'
      - 'com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withExistingDataDisk(Disk,int,int,CachingTypes)'
      - com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withNewDataDisk(Creatable<Disk>)
      - 'com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withNewDataDisk(Creatable<Disk>,int,CachingTypes)'
      - com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withNewDataDisk(int)
      - 'com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withNewDataDisk(int,int,CachingTypes)'
      - 'com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withNewDataDisk(int,int,CachingTypes,StorageAccountTypes)'
      - com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withoutDataDisk(int)
    href: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.yml
    langs:
      - java
    name: VirtualMachine.UpdateStages.WithManagedDataDisk
    nameWithType: VirtualMachine.UpdateStages.WithManagedDataDisk
    fullName: com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk
    type: Interface
    source:
      remote: &ref_0
        path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/VirtualMachine.java
        branch: v1.3.0
        repo: 'https://github.com/Azure/azure-sdk-for-java'
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/VirtualMachine.java
      startLine: 1737
    package: com.microsoft.azure.management.compute
    summary: <p>Die Stufe der ein Update der virtuellen Maschine an einen verwalteten Datenträger zu ermöglichen. </p>
    syntax:
      content: public interface WithManagedDataDisk
  - uid: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withExistingDataDisk(Disk)
    id: withExistingDataDisk(Disk)
    parent: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk
    href: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.yml
    langs:
      - java
    name: withExistingDataDisk(Disk disk)
    nameWithType: VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(Disk disk)
    fullName: Update com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(Disk disk)
    overload: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withExistingDataDisk*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/VirtualMachine.java
      startLine: 1796
    package: com.microsoft.azure.management.compute
    summary: |-
      <p>Ordnet einem vorhandenen verwalteten Quelldatenträger mit dem virtuellen Computer an.</p>
      <p></p>
    syntax:
      content: public Update withExistingDataDisk(Disk disk)
      parameters:
        - id: disk
          type: com.microsoft.azure.management.compute._disk
          description: <p>eine verwaltete Datenträger </p>
      return:
        type: com.microsoft.azure.management.compute._virtual_machine._update
        description: <p>die nächste Phase des Updates </p>
  - uid: 'com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withExistingDataDisk(Disk,int,CachingTypes)'
    id: 'withExistingDataDisk(Disk,int,CachingTypes)'
    parent: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk
    href: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.yml
    langs:
      - java
    name: 'withExistingDataDisk(Disk disk, int lun, CachingTypes cachingType)'
    nameWithType: 'VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(Disk disk, int lun, CachingTypes cachingType)'
    fullName: 'Update com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(Disk disk, int lun, CachingTypes cachingType)'
    overload: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withExistingDataDisk*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/VirtualMachine.java
      startLine: 1806
    package: com.microsoft.azure.management.compute
    summary: |-
      <p>Gibt eine vorhandene verwaltet Quelldatenträger und Einstellungen an.</p>
      <p></p>
    syntax:
      content: 'public Update withExistingDataDisk(Disk disk, int lun, CachingTypes cachingType)'
      parameters:
        - id: disk
          type: com.microsoft.azure.management.compute._disk
          description: <p>verwalteter Datenträger </p>
        - id: lun
          type: f75371fa
          description: <p>der Datenträger-LUN </p>
        - id: cachingType
          type: com.microsoft.azure.management.compute._caching_types
          description: <p>ein Zwischenspeichern </p>
      return:
        type: com.microsoft.azure.management.compute._virtual_machine._update
        description: <p>die nächste Phase des Updates </p>
  - uid: 'com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withExistingDataDisk(Disk,int,int,CachingTypes)'
    id: 'withExistingDataDisk(Disk,int,int,CachingTypes)'
    parent: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk
    href: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.yml
    langs:
      - java
    name: 'withExistingDataDisk(Disk disk, int newSizeInGB, int lun, CachingTypes cachingType)'
    nameWithType: 'VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(Disk disk, int newSizeInGB, int lun, CachingTypes cachingType)'
    fullName: 'Update com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk(Disk disk, int newSizeInGB, int lun, CachingTypes cachingType)'
    overload: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withExistingDataDisk*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/VirtualMachine.java
      startLine: 1819
    package: com.microsoft.azure.management.compute
    summary: |-
      <p>Gibt eine vorhandene verwaltet Quelldatenträger und Einstellungen an.</p>
      <p></p>
    syntax:
      content: 'public Update withExistingDataDisk(Disk disk, int newSizeInGB, int lun, CachingTypes cachingType)'
      parameters:
        - id: disk
          type: com.microsoft.azure.management.compute._disk
          description: <p>eine verwaltete Datenträger </p>
        - id: newSizeInGB
          type: f75371fa
          description: <p>Ändern der Größe der Datenträgers Größe in GB </p>
        - id: lun
          type: f75371fa
          description: <p>der Datenträger-LUN </p>
        - id: cachingType
          type: com.microsoft.azure.management.compute._caching_types
          description: <p>ein Zwischenspeichern </p>
      return:
        type: com.microsoft.azure.management.compute._virtual_machine._update
        description: <p>die nächste Phase des Updates </p>
  - uid: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withNewDataDisk(Creatable<Disk>)
    id: withNewDataDisk(Creatable<Disk>)
    parent: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk
    href: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.yml
    langs:
      - java
    name: withNewDataDisk(Creatable<Disk> creatable)
    nameWithType: VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk(Creatable<Disk> creatable)
    fullName: Update com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk(Creatable<Disk> creatable)
    overload: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withNewDataDisk*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/VirtualMachine.java
      startLine: 1745
    package: com.microsoft.azure.management.compute
    summary: |-
      <p>Gibt an, dass ein verwalteter Datenträger muss explizit mit der angegebenen Definition erstellt und mit dem virtuellen Computer als Datenträger angefügt werden.</p>
      <p></p>
    syntax:
      content: public Update withNewDataDisk(Creatable<Disk> creatable)
      parameters:
        - id: creatable
          type: com.microsoft.azure.management.resources.fluentcore.model._creatable78504a52com.microsoft.azure.management.compute._diska08ddfce
          description: <p>eine Definition erstellbar Datenträger </p>
      return:
        type: com.microsoft.azure.management.compute._virtual_machine._update
        description: <p>die nächste Phase des Updates </p>
  - uid: 'com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withNewDataDisk(Creatable<Disk>,int,CachingTypes)'
    id: 'withNewDataDisk(Creatable<Disk>,int,CachingTypes)'
    parent: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk
    href: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.yml
    langs:
      - java
    name: 'withNewDataDisk(Creatable<Disk> creatable, int lun, CachingTypes cachingType)'
    nameWithType: 'VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk(Creatable<Disk> creatable, int lun, CachingTypes cachingType)'
    fullName: 'Update com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk(Creatable<Disk> creatable, int lun, CachingTypes cachingType)'
    overload: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withNewDataDisk*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/VirtualMachine.java
      startLine: 1756
    package: com.microsoft.azure.management.compute
    summary: |-
      <p>Gibt an, dass ein verwalteter Datenträger muss explizit mit der angegebenen Definition erstellt und mit dem virtuellen Computer als Datenträger angefügt werden.</p>
      <p></p>
    syntax:
      content: 'public Update withNewDataDisk(Creatable<Disk> creatable, int lun, CachingTypes cachingType)'
      parameters:
        - id: creatable
          type: com.microsoft.azure.management.resources.fluentcore.model._creatable78504a52com.microsoft.azure.management.compute._diska08ddfce
          description: <p>eine Definition erstellbar Datenträger </p>
        - id: lun
          type: f75371fa
          description: <p>der Datenträger-LUN </p>
        - id: cachingType
          type: com.microsoft.azure.management.compute._caching_types
          description: '<p>ein Datenträger, die caching-Typ </p>'
      return:
        type: com.microsoft.azure.management.compute._virtual_machine._update
        description: <p>die nächste Phase des Updates </p>
  - uid: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withNewDataDisk(int)
    id: withNewDataDisk(int)
    parent: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk
    href: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.yml
    langs:
      - java
    name: withNewDataDisk(int sizeInGB)
    nameWithType: VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk(int sizeInGB)
    fullName: Update com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk(int sizeInGB)
    overload: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withNewDataDisk*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/VirtualMachine.java
      startLine: 1764
    package: com.microsoft.azure.management.compute
    summary: |-
      <p>Gibt an, dass es sich bei ein verwalteter Datenträger mit der angegebenen Größe implizit erstellt werden muss.</p>
      <p></p>
    syntax:
      content: public Update withNewDataDisk(int sizeInGB)
      parameters:
        - id: sizeInGB
          type: f75371fa
          description: <p>die Größe des verwalteten Datenträgers </p>
      return:
        type: com.microsoft.azure.management.compute._virtual_machine._update
        description: <p>die nächste Phase des Updates </p>
  - uid: 'com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withNewDataDisk(int,int,CachingTypes)'
    id: 'withNewDataDisk(int,int,CachingTypes)'
    parent: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk
    href: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.yml
    langs:
      - java
    name: 'withNewDataDisk(int sizeInGB, int lun, CachingTypes cachingType)'
    nameWithType: 'VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk(int sizeInGB, int lun, CachingTypes cachingType)'
    fullName: 'Update com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk(int sizeInGB, int lun, CachingTypes cachingType)'
    overload: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withNewDataDisk*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/VirtualMachine.java
      startLine: 1774
    package: com.microsoft.azure.management.compute
    summary: |-
      <p>Gibt an, dass es sich bei ein verwalteter Datenträger mit den angegebenen Einstellungen implizit erstellt werden muss.</p>
      <p></p>
    syntax:
      content: 'public Update withNewDataDisk(int sizeInGB, int lun, CachingTypes cachingType)'
      parameters:
        - id: sizeInGB
          type: f75371fa
          description: <p>die Größe des verwalteten Datenträgers </p>
        - id: lun
          type: f75371fa
          description: <p>der Datenträger-LUN </p>
        - id: cachingType
          type: com.microsoft.azure.management.compute._caching_types
          description: <p>ein Zwischenspeichern </p>
      return:
        type: com.microsoft.azure.management.compute._virtual_machine._update
        description: <p>die nächste Phase des Updates </p>
  - uid: 'com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withNewDataDisk(int,int,CachingTypes,StorageAccountTypes)'
    id: 'withNewDataDisk(int,int,CachingTypes,StorageAccountTypes)'
    parent: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk
    href: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.yml
    langs:
      - java
    name: 'withNewDataDisk(int sizeInGB, int lun, CachingTypes cachingType, StorageAccountTypes storageAccountType)'
    nameWithType: 'VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk(int sizeInGB, int lun, CachingTypes cachingType, StorageAccountTypes storageAccountType)'
    fullName: 'Update com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk(int sizeInGB, int lun, CachingTypes cachingType, StorageAccountTypes storageAccountType)'
    overload: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withNewDataDisk*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/VirtualMachine.java
      startLine: 1785
    package: com.microsoft.azure.management.compute
    summary: |-
      <p>Gibt an, dass es sich bei ein verwalteter Datenträger mit den angegebenen Einstellungen implizit erstellt werden muss.</p>
      <p></p>
    syntax:
      content: 'public Update withNewDataDisk(int sizeInGB, int lun, CachingTypes cachingType, StorageAccountTypes storageAccountType)'
      parameters:
        - id: sizeInGB
          type: f75371fa
          description: <p>die Größe des verwalteten Datenträgers </p>
        - id: lun
          type: f75371fa
          description: <p>der Datenträger-LUN </p>
        - id: cachingType
          type: com.microsoft.azure.management.compute._caching_types
          description: <p>ein Zwischenspeichern </p>
        - id: storageAccountType
          type: com.microsoft.azure.management.compute._storage_account_types
          description: <p>eine speicherkontotyp </p>
      return:
        type: com.microsoft.azure.management.compute._virtual_machine._update
        description: <p>die nächste Phase des Updates </p>
  - uid: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withoutDataDisk(int)
    id: withoutDataDisk(int)
    parent: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk
    href: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.yml
    langs:
      - java
    name: withoutDataDisk(int lun)
    nameWithType: VirtualMachine.UpdateStages.WithManagedDataDisk.withoutDataDisk(int lun)
    fullName: Update com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withoutDataDisk(int lun)
    overload: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withoutDataDisk*
    type: Method
    source:
      remote: *ref_0
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/VirtualMachine.java
      startLine: 1830
    package: com.microsoft.azure.management.compute
    summary: |-
      <p>Trennt einen verwaltete Datenträger mit der angegebenen LUN vom virtuellen Computer an.</p>
      <p></p>
    syntax:
      content: public Update withoutDataDisk(int lun)
      parameters:
        - id: lun
          type: f75371fa
          description: <p>der Datenträger-LUN </p>
      return:
        type: com.microsoft.azure.management.compute._virtual_machine._update
        description: <p>die nächste Phase des Updates </p>
references:
  - uid: com.microsoft.azure.management.resources.fluentcore.model._creatable78504a52com.microsoft.azure.management.compute._diska08ddfce
    spec.java:
      - uid: com.microsoft.azure.management.resources.fluentcore.model._creatable
        name: Creatable
        fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable
        href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
      - name: <
        fullName: <
      - uid: com.microsoft.azure.management.compute._disk
        name: Disk
        fullName: com.microsoft.azure.management.compute.Disk
        href: com.microsoft.azure.management.compute._disk.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withNewDataDisk*
    name: withNewDataDisk
    nameWithType: VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk
    fullName: Update com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withNewDataDisk
    package: com.microsoft.azure.management.compute
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withExistingDataDisk*
    name: withExistingDataDisk
    nameWithType: VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk
    fullName: Update com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withExistingDataDisk
    package: com.microsoft.azure.management.compute
  - uid: com.microsoft.azure.management.compute._virtual_machine._update_stages._with_managed_data_disk.withoutDataDisk*
    name: withoutDataDisk
    nameWithType: VirtualMachine.UpdateStages.WithManagedDataDisk.withoutDataDisk
    fullName: Update com.microsoft.azure.management.compute.VirtualMachine.UpdateStages.WithManagedDataDisk.withoutDataDisk
    package: com.microsoft.azure.management.compute
  - uid: com.microsoft.azure.management.compute._virtual_machine._update
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._virtual_machine._update.yml
    name: VirtualMachine.Update
    nameWithType: VirtualMachine.Update
    fullName: com.microsoft.azure.management.compute.VirtualMachine.Update
    type: Interface
    summary: '<p>Die Vorlage für eine Update-Vorgang mit den Einstellungen aus, die geändert werden können. </p>'
    syntax:
      content: 'public interface Update extends Appliable<VirtualMachine>,Resource.UpdateWithTags<Update>,VirtualMachine.UpdateStages.WithUnmanagedDataDisk,VirtualMachine.UpdateStages.WithManagedDataDisk,VirtualMachine.UpdateStages.WithSecondaryNetworkInterface,VirtualMachine.UpdateStages.WithExtension,VirtualMachine.UpdateStages.WithBootDiagnostics,VirtualMachine.UpdateStages.WithManagedServiceIdentity'
  - uid: com.microsoft.azure.management.resources.fluentcore.model._creatable
    parent: com.microsoft.azure.management.resources.fluentcore.model
    href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
    name: Creatable<T>
    nameWithType: Creatable<T>
    fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>
    type: Interface
    summary: |-
      <p>Die Definition der Ressource, an dem erstellt werden, mithilfe der abschließenden Phase <xref uid="com.microsoft.azure.management.resources.fluentcore.model._creatable.create()" data-throw-if-not-resolved="false">eine Signatures-Auflistung</xref>.</p>
      <p></p>
    syntax:
      content: 'public interface Creatable<T> extends Indexable,HasName'
      typeParameters:
        - type: 8ce1ecb9
          description: <p>der fluent-Typ der zu erstellenden Ressource </p>
  - uid: com.microsoft.azure.management.compute._disk
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._disk.yml
    name: Disk
    nameWithType: Disk
    fullName: com.microsoft.azure.management.compute.Disk
    type: Interface
    summary: <p>Eine unveränderliche clientseitige Darstellung einer <xref uid="com.microsoft.azure.management._azure" data-throw-if-not-resolved="false">Azure</xref> verwalteten Datenträger. </p>
    syntax:
      content: 'public interface Disk extends GroupableResource<ComputeManager, DiskInner>,Refreshable<Disk>,Updatable<Disk.Update>'
  - uid: com.microsoft.azure.management.compute._caching_types
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._caching_types.yml
    name: CachingTypes
    nameWithType: CachingTypes
    fullName: com.microsoft.azure.management.compute.CachingTypes
    type: Enum
    summary: <p>Definiert Werte für <xref uid="com.microsoft.azure.management.compute._caching_types" data-throw-if-not-resolved="false">CachingTypes</xref>. </p>
    syntax:
      content: public enum CachingTypes
  - uid: com.microsoft.azure.management.compute._storage_account_types
    parent: com.microsoft.azure.management.compute
    href: com.microsoft.azure.management.compute._storage_account_types.yml
    name: StorageAccountTypes
    nameWithType: StorageAccountTypes
    fullName: com.microsoft.azure.management.compute.StorageAccountTypes
    type: Enum
    summary: <p>Definiert Werte für <xref uid="com.microsoft.azure.management.compute._storage_account_types" data-throw-if-not-resolved="false">StorageAccountTypes</xref>. </p>
    syntax:
      content: public enum StorageAccountTypes