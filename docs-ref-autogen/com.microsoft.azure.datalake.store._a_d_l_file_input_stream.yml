### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    id: _a_d_l_file_input_stream
    parent: com.microsoft.azure.datalake.store
    children:
      - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.available()
      - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.close()
      - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.getPos()
      - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.length()
      - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.mark(int)
      - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.markSupported()
      - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read()
      - 'com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read(byte [])'
      - 'com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read(byte [],int,int)'
      - 'com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read(long,byte [],int,int)'
      - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.readFromService()
      - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.reset()
      - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.seek(long)
      - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.setBufferSize(int)
      - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.skip(long)
      - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.slurpFullFile()
      - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.unbuffer()
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: ADLFileInputStream
    nameWithType: ADLFileInputStream
    fullName: com.microsoft.azure.datalake.store.ADLFileInputStream
    type: Class
    source:
      remote: &ref_0
        path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
        branch: master
        repo: 'https://github.com/azure/azure-data-lake-store-java'
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 29
    package: com.microsoft.azure.datalake.store
    summary: "<p>\r\n\r\n  <xref href=\"com.microsoft.azure.datalake.store._a_d_l_file_input_stream\" data-throw-if-not-resolved=\"false\"></xref>kann verwendet werden, um Daten aus einer geöffneten Datei auf ADL lesen. Es ist eine Pufferung Stream, der liest Daten aus dem Server in einem Massenvorgang aus, und klicken Sie dann erfüllt, die Benutzer Lesevorgänge aus dem Puffer. Standardpuffergröße beträgt 4MB.</p>\n\n<p>\r\n\r\n  <bold>Threadsicherheit</bold>: Methoden in dieser Klasse sind nicht threadsicher. </p>"
    syntax: &ref_1
      content: public class ADLFileInputStream
    inheritance:
      - java.lang.Object
      - InputStream
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.available()
    id: available()
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: available()
    nameWithType: ADLFileInputStream.available()
    fullName: int com.microsoft.azure.datalake.store.ADLFileInputStream.available()
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.available*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 304
    package: com.microsoft.azure.datalake.store
    summary: |-
      <p>Gibt die verbleibende Anzahl von Bytes aus dem Puffer gelesen werden, ohne den Server aufrufen</p>
      <p></p>
    syntax:
      content: public int available()
      return:
        type: f75371fa
        description: <p>die Anzahl der Bytes availabel </p>
    exceptions:
      - type: cbf33bbe
        description: <p>löst <xref href="com.microsoft.azure.datalake.store._a_d_l_exception" data-throw-if-not-resolved="false"></xref> Wenn Aufruf ein Fehler auftritt </p>
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.close()
    id: close()
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: close()
    nameWithType: ADLFileInputStream.close()
    fullName: void com.microsoft.azure.datalake.store.ADLFileInputStream.close()
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.close*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 346
    package: com.microsoft.azure.datalake.store
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.getPos()
    id: getPos()
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: getPos()
    nameWithType: ADLFileInputStream.getPos()
    fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.getPos()
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.getPos*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 327
    package: com.microsoft.azure.datalake.store
    summary: <p>Ruft die Position des Cursors innerhalb der Datei </p>
    syntax:
      content: public long getPos()
      return:
        type: 0364520f
        description: <p>Position des Cursors </p>
    exceptions:
      - type: cbf33bbe
        description: '<p>löst <ref refid="" kindref="compound">IOException</ref> , wenn ein Fehler auftritt </p>'
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.length()
    id: length()
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: length()
    nameWithType: ADLFileInputStream.length()
    fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.length()
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.length*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 317
    package: com.microsoft.azure.datalake.store
    summary: |-
      <p>Gibt die Länge der Datei, der in diesem Datenstrom bezieht. Beachten Sie, dass die zurückgegebene Länge die Länge der ersten ist, die der Datenstrom geöffnet wurde. Insbesondere wenn nachfolgende stattgefunden haben in der Datei, fügt sie nicht in die zurückgegebene Länge wiedergegeben werden.</p>
      <p></p>
    syntax:
      content: public long length()
      return:
        type: 0364520f
        description: <p>die Länge der Datei. </p>
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn der Stream geschlossen ist. </p>
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.mark(int)
    id: mark(int)
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: mark(int readlimit)
    nameWithType: ADLFileInputStream.mark(int readlimit)
    fullName: synchronized void com.microsoft.azure.datalake.store.ADLFileInputStream.mark(int readlimit)
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.mark*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 359
    package: com.microsoft.azure.datalake.store
    summary: <p>Durch diesen Stream unterstützt nicht. Löst <ref refid="" kindref="compound">UnsupportedOperationException</ref></p>
    syntax:
      content: public synchronized void mark(int readlimit)
      parameters:
        - id: readlimit
          type: f75371fa
          description: <p>ignoriert </p>
      return:
        type: 5c0b90ca
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.markSupported()
    id: markSupported()
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: markSupported()
    nameWithType: ADLFileInputStream.markSupported()
    fullName: boolean com.microsoft.azure.datalake.store.ADLFileInputStream.markSupported()
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.markSupported*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 377
    package: com.microsoft.azure.datalake.store
    summary: |-
      <p>Ruft ab, ob markieren und Zurücksetzen von unterstützt werden<programlisting><codeline><highlight class="normal">ADLFileInputStream<sp> </sp> </highlight> </codeline> </programlisting> . Gibt immer "false" zurück.</p>
      <p></p>
    syntax:
      content: public boolean markSupported()
      return:
        type: 4fc6e284
        description: <p>immer<programlisting><codeline><highlight class="normal">"false"<sp></sp></highlight></codeline></programlisting></p>
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read()
    id: read()
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: read()
    nameWithType: ADLFileInputStream.read()
    fullName: int com.microsoft.azure.datalake.store.ADLFileInputStream.read()
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 59
    package: com.microsoft.azure.datalake.store
    syntax:
      content: public int read()
      return:
        type: f75371fa
  - uid: 'com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read(byte [])'
    id: 'read(byte [])'
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: 'read(byte[] b)'
    nameWithType: 'ADLFileInputStream.read(byte[] b)'
    fullName: 'int com.microsoft.azure.datalake.store.ADLFileInputStream.read(byte[] b)'
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 67
    package: com.microsoft.azure.datalake.store
    syntax:
      content: 'public int read(byte[] b)'
      parameters:
        - id: b
          type: ccd9418d
      return:
        type: f75371fa
  - uid: 'com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read(byte [],int,int)'
    id: 'read(byte [],int,int)'
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: 'read(byte[] b, int off, int len)'
    nameWithType: 'ADLFileInputStream.read(byte[] b, int off, int len)'
    fullName: 'int com.microsoft.azure.datalake.store.ADLFileInputStream.read(byte[] b, int off, int len)'
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 75
    package: com.microsoft.azure.datalake.store
    syntax:
      content: 'public int read(byte[] b, int off, int len)'
      parameters:
        - id: b
          type: ccd9418d
        - id: 'off'
          type: f75371fa
        - id: len
          type: f75371fa
      return:
        type: f75371fa
  - uid: 'com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read(long,byte [],int,int)'
    id: 'read(long,byte [],int,int)'
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: 'read(long position, byte[] b, int offset, int length)'
    nameWithType: 'ADLFileInputStream.read(long position, byte[] b, int offset, int length)'
    fullName: 'int com.microsoft.azure.datalake.store.ADLFileInputStream.read(long position, byte[] b, int offset, int length)'
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 181
    package: com.microsoft.azure.datalake.store
    summary: |-
      <p>Bis zu der angegebene Anzahl von Bytes, aus einer bestimmten Position in einer Datei gelesen, und geben die Anzahl der gelesenen Bytes zurück. Dies ändert sich nicht auf den aktuellen Offset einer Datei aus.</p>
      <p></p>
    syntax:
      content: 'public int read(long position, byte[] b, int offset, int length)'
      parameters:
        - id: position
          type: 0364520f
          description: <p>Positionieren Sie in der Datei zum Lesen aus </p>
        - id: b
          type: ccd9418d
          description: '<p>Byte []-Puffer in lesen </p>'
        - id: offset
          type: f75371fa
          description: '<p>Offset in der Byte-Puffer, an dem die Daten gelesen </p>'
        - id: length
          type: f75371fa
          description: <p>Anzahl der zu lesenden bytes </p>
      return:
        type: f75371fa
        description: '<p>die Anzahl der gelesenen Bytes tatsächlich, die kleiner als der angeforderten Bytes sein kann. Wenn die<programlisting><codeline><highlight class="normal">Position<sp> </sp> </highlight> </codeline> </programlisting> ist am oder nach dem Ende der Datei, wird-1 zurückgegeben. </p>'
    exceptions:
      - type: cbf33bbe
        description: '<p>wird ausgelöst, wenn ein Fehler beim Lesen </p>'
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.readFromService()
    id: readFromService()
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: readFromService()
    nameWithType: ADLFileInputStream.readFromService()
    fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.readFromService()
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.readFromService*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 114
    package: com.microsoft.azure.datalake.store
    summary: |-
      <p>Lesen von Dienst versucht, zu lesen<programlisting><codeline><highlight class="normal">Blocksize<sp> </sp> </highlight> </codeline> </programlisting> Bytes vom Dienst. Gibt tatsächlich wie viele Bytes gelesen wurden, ist möglicherweise kleiner als die Blockgröße.</p>
      <p></p>
    syntax:
      content: protected long readFromService()
      return:
        type: 0364520f
        description: <p>Anzahl der tatsächlich gelesenen bytes </p>
    exceptions:
      - type: com.microsoft.azure.datalake.store._a_d_l_exception
        description: <p>Wenn Fehler </p>
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.reset()
    id: reset()
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: reset()
    nameWithType: ADLFileInputStream.reset()
    fullName: synchronized void com.microsoft.azure.datalake.store.ADLFileInputStream.reset()
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.reset*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 367
    package: com.microsoft.azure.datalake.store
    summary: <p>Durch diesen Stream unterstützt nicht. Löst <ref refid="" kindref="compound">UnsupportedOperationException</ref></p>
    syntax:
      content: public synchronized void reset()
      return:
        type: 5c0b90ca
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.seek(long)
    id: seek(long)
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: seek(long n)
    nameWithType: ADLFileInputStream.seek(long n)
    fullName: void com.microsoft.azure.datalake.store.ADLFileInputStream.seek(long n)
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.seek*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 234
    package: com.microsoft.azure.datalake.store
    summary: <p>Suche auf angegebenen Position im Stream. </p>
    syntax:
      content: public void seek(long n)
      parameters:
        - id: 'n'
          type: 0364520f
          description: <p>Position gesucht </p>
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn ein Fehler auftritt </p>
      - type: aeb5e715
        description: <p>Wenn beim Suchen nach dem Dateiende. </p>
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.setBufferSize(int)
    id: setBufferSize(int)
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: setBufferSize(int newSize)
    nameWithType: ADLFileInputStream.setBufferSize(int newSize)
    fullName: void com.microsoft.azure.datalake.store.ADLFileInputStream.setBufferSize(int newSize)
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.setBufferSize*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 280
    package: com.microsoft.azure.datalake.store
    summary: <p>Legt die Größe des internen Puffers read (der Standardwert ist 4MB). </p>
    syntax:
      content: public void setBufferSize(int newSize)
      parameters:
        - id: newSize
          type: f75371fa
          description: <p>angeforderte Größe des Puffers </p>
    exceptions:
      - type: com.microsoft.azure.datalake.store._a_d_l_exception
        description: <p>Wenn ein Fehler auftritt </p>
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.skip(long)
    id: skip(long)
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: skip(long n)
    nameWithType: ADLFileInputStream.skip(long n)
    fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.skip(long n)
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.skip*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 256
    package: com.microsoft.azure.datalake.store
    syntax:
      content: public long skip(long n)
      parameters:
        - id: 'n'
          type: 0364520f
      return:
        type: 0364520f
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.slurpFullFile()
    id: slurpFullFile()
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: slurpFullFile()
    nameWithType: ADLFileInputStream.slurpFullFile()
    fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.slurpFullFile()
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.slurpFullFile*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 139
    package: com.microsoft.azure.datalake.store
    summary: |-
      <p>Liest die gesamte Datei in Puffer an. Der Wert ist nützlich, wenn kleine Dateien zu lesen.</p>
      <p></p>
    syntax:
      content: protected long slurpFullFile()
      return:
        type: 0364520f
        description: <p>Anzahl der tatsächlich gelesenen bytes </p>
    exceptions:
      - type: cbf33bbe
        description: '<p>IOException auslöst, wenn ein Fehler auftritt </p>'
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.unbuffer()
    id: unbuffer()
    parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    langs:
      - java
    name: unbuffer()
    nameWithType: ADLFileInputStream.unbuffer()
    fullName: void com.microsoft.azure.datalake.store.ADLFileInputStream.unbuffer()
    overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.unbuffer*
    type: Method
    source:
      remote: *ref_0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      startLine: 336
    package: com.microsoft.azure.datalake.store
    summary: <p>Erklärt den Puffer. Die nächste Lesevorgang werden Daten vom Server abgerufen. </p>
    syntax:
      content: public void unbuffer()
    exceptions:
      - type: cbf33bbe
        description: '<p>löst <ref refid="" kindref="compound">IOException</ref> , wenn ein Fehler auftritt </p>'
references:
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read*
    name: read
    nameWithType: ADLFileInputStream.read
    fullName: int com.microsoft.azure.datalake.store.ADLFileInputStream.read
    package: com.microsoft.azure.datalake.store
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: aeb5e715
    spec.java:
      - name: EOFException
        fullName: EOFException
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.seek*
    name: seek
    nameWithType: ADLFileInputStream.seek
    fullName: void com.microsoft.azure.datalake.store.ADLFileInputStream.seek
    package: com.microsoft.azure.datalake.store
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.skip*
    name: skip
    nameWithType: ADLFileInputStream.skip
    fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.skip
    package: com.microsoft.azure.datalake.store
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.setBufferSize*
    name: setBufferSize
    nameWithType: ADLFileInputStream.setBufferSize
    fullName: void com.microsoft.azure.datalake.store.ADLFileInputStream.setBufferSize
    package: com.microsoft.azure.datalake.store
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.available*
    name: available
    nameWithType: ADLFileInputStream.available
    fullName: int com.microsoft.azure.datalake.store.ADLFileInputStream.available
    package: com.microsoft.azure.datalake.store
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.length*
    name: length
    nameWithType: ADLFileInputStream.length
    fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.length
    package: com.microsoft.azure.datalake.store
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.getPos*
    name: getPos
    nameWithType: ADLFileInputStream.getPos
    fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.getPos
    package: com.microsoft.azure.datalake.store
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.unbuffer*
    name: unbuffer
    nameWithType: ADLFileInputStream.unbuffer
    fullName: void com.microsoft.azure.datalake.store.ADLFileInputStream.unbuffer
    package: com.microsoft.azure.datalake.store
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.close*
    name: close
    nameWithType: ADLFileInputStream.close
    fullName: void com.microsoft.azure.datalake.store.ADLFileInputStream.close
    package: com.microsoft.azure.datalake.store
  - uid: 5c0b90ca
    spec.java:
      - name: synchronized void
        fullName: synchronized void
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.mark*
    name: mark
    nameWithType: ADLFileInputStream.mark
    fullName: synchronized void com.microsoft.azure.datalake.store.ADLFileInputStream.mark
    package: com.microsoft.azure.datalake.store
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.reset*
    name: reset
    nameWithType: ADLFileInputStream.reset
    fullName: synchronized void com.microsoft.azure.datalake.store.ADLFileInputStream.reset
    package: com.microsoft.azure.datalake.store
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.markSupported*
    name: markSupported
    nameWithType: ADLFileInputStream.markSupported
    fullName: boolean com.microsoft.azure.datalake.store.ADLFileInputStream.markSupported
    package: com.microsoft.azure.datalake.store
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.readFromService*
    name: readFromService
    nameWithType: ADLFileInputStream.readFromService
    fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.readFromService
    package: com.microsoft.azure.datalake.store
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.slurpFullFile*
    name: slurpFullFile
    nameWithType: ADLFileInputStream.slurpFullFile
    fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.slurpFullFile
    package: com.microsoft.azure.datalake.store
  - uid: com.microsoft.azure.datalake.store._a_d_l_store_client
    parent: com.microsoft.azure.datalake.store
    href: com.microsoft.azure.datalake.store._a_d_l_store_client.yml
    name: ADLStoreClient
    nameWithType: ADLStoreClient
    fullName: com.microsoft.azure.datalake.store.ADLStoreClient
    type: Class
    summary: "<p>\r\n\r\n  <programlisting>\r\n\r\n    <codeline>\r\n\r\n      <highlight class=\"normal\">ADLStoreClient<sp> </sp> </highlight> \r\n\r\n    </codeline> \r\n\r\n  </programlisting> Klasse stellt einen Client zu Azure Data Lake dar. Es kann zum Ausführen von Operationen für Dateien und Verzeichnisse verwendet werden. </p>"
    syntax:
      content: public class ADLStoreClient
  - uid: com.microsoft.azure.datalake.store._directory_entry
    parent: com.microsoft.azure.datalake.store
    href: com.microsoft.azure.datalake.store._directory_entry.yml
    name: DirectoryEntry
    nameWithType: DirectoryEntry
    fullName: com.microsoft.azure.datalake.store.DirectoryEntry
    type: Class
    summary: <p>der Verzeichnis-Enrty (eine Datei oder ein Verzeichnis) im ADL FileSystem-Metadaten. </p>
    syntax:
      content: public class DirectoryEntry
  - uid: com.microsoft.azure.datalake.store._a_d_l_exception
    parent: com.microsoft.azure.datalake.store
    href: com.microsoft.azure.datalake.store._a_d_l_exception.yml
    name: ADLException
    nameWithType: ADLException
    fullName: com.microsoft.azure.datalake.store.ADLException
    type: Class
    summary: '<p>Der Ausnahmetyp von Azure Data Lake-SDK-Methoden zurückgegeben. Leitet sich von <ref refid="" kindref="compound">IOException</ref>. Enthält diverse weitere Felder, die Informationen über den Erfolg oder Fehlschlagen eines Server-Aufrufs. </p>'
    syntax:
      content: public class ADLException
  - uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
    parent: com.microsoft.azure.datalake.store
    href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
    name: ADLFileInputStream
    nameWithType: ADLFileInputStream
    fullName: com.microsoft.azure.datalake.store.ADLFileInputStream
    type: Class
    summary: "<p>\r\n\r\n  <xref href=\"com.microsoft.azure.datalake.store._a_d_l_file_input_stream\" data-throw-if-not-resolved=\"false\"></xref>kann verwendet werden, um Daten aus einer geöffneten Datei auf ADL lesen. Es ist eine Pufferung Stream, der liest Daten aus dem Server in einem Massenvorgang aus, und klicken Sie dann erfüllt, die Benutzer Lesevorgänge aus dem Puffer. Standardpuffergröße beträgt 4MB.</p>\n\n<p>\r\n\r\n  <bold>Threadsicherheit</bold>: Methoden in dieser Klasse sind nicht threadsicher. </p>"
    syntax: *ref_1