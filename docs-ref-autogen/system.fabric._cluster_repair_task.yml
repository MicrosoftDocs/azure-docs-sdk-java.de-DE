### YamlMime:ManagedReference
items:
  - uid: system.fabric._cluster_repair_task
    id: _cluster_repair_task
    parent: system.fabric
    children:
      - 'system.fabric._cluster_repair_task.ClusterRepairTask(String,String)'
    href: system.fabric._cluster_repair_task.yml
    langs:
      - java
    name: ClusterRepairTask
    nameWithType: ClusterRepairTask
    fullName: system.fabric.ClusterRepairTask
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ClusterRepairTask.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterRepairTask.java
      startLine: 6
    package: system.fabric
    summary: '<p>Stellt eine reparaturaufgabe, die Cluster-Bereich aufweist. Diese Klasse unterstützt die Service Fabric-Plattform. Es ist nicht vorgesehen, direkt aus Ihrem Code aufgerufen werden. </p>'
    syntax:
      content: public class ClusterRepairTask extends RepairTask
    inheritance:
      - java.lang.Object
      - system.fabric._repair_task
    inheritedMembers:
      - system.fabric._repair_task.getAction()
      - system.fabric._repair_task.getApprovedTimestamp()
      - system.fabric._repair_task.getClaimedTimestamp()
      - system.fabric._repair_task.getCompletedTimestamp()
      - system.fabric._repair_task.getCreatedTimestamp()
      - system.fabric._repair_task.getDescription()
      - system.fabric._repair_task.getExecutingTimestamp()
      - system.fabric._repair_task.getExecutor()
      - system.fabric._repair_task.getExecutorData()
      - system.fabric._repair_task.getFlags()
      - system.fabric._repair_task.getImpact()
      - system.fabric._repair_task.getPreparingTimestamp()
      - system.fabric._repair_task.getRestoringTimestamp()
      - system.fabric._repair_task.getResultCode()
      - system.fabric._repair_task.getResultDetails()
      - system.fabric._repair_task.getResultStatus()
      - system.fabric._repair_task.getScope()
      - system.fabric._repair_task.getState()
      - system.fabric._repair_task.getTarget()
      - system.fabric._repair_task.getTaskId()
      - system.fabric._repair_task.getVersion()
      - system.fabric._repair_task.RepairTask(RepairScopeIdentifier)
      - system.fabric._repair_task.setDescription(String)
      - system.fabric._repair_task.setExecutor(String)
      - system.fabric._repair_task.setExecutorData(String)
      - system.fabric._repair_task.setImpact(RepairImpactDescription)
      - 'system.fabric._repair_task.setInternalValues(String,long,String,int,long,String,RepairTargetDescription,RepairImpactDescription,String,String,int,int,String,long,long,long,long,long,long,long,long,long,long,long,long,long,long)'
      - system.fabric._repair_task.setResultCode(int)
      - system.fabric._repair_task.setResultDetails(String)
      - system.fabric._repair_task.setResultStatus(RepairTaskResult)
      - system.fabric._repair_task.setState(RepairTaskState)
      - system.fabric._repair_task.setTarget(RepairTargetDescription)
      - system.fabric._repair_task.setVersion(long)
  - uid: 'system.fabric._cluster_repair_task.ClusterRepairTask(String,String)'
    id: 'ClusterRepairTask(String,String)'
    parent: system.fabric._cluster_repair_task
    href: system.fabric._cluster_repair_task.yml
    langs:
      - java
    name: 'ClusterRepairTask(String taskId, String action)'
    nameWithType: 'ClusterRepairTask.ClusterRepairTask(String taskId, String action)'
    fullName: 'system.fabric.ClusterRepairTask.ClusterRepairTask(String taskId, String action)'
    overload: system.fabric._cluster_repair_task.ClusterRepairTask*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ClusterRepairTask.java
      startLine: 15
    package: system.fabric
    summary: |-
      <p>Initialisiert eine neue Instanz der dem <xref uid="" data-throw-if-not-resolved="false">system.fabric.ClusterRepairTask</xref> Klasse.</p>
      <p></p>
    syntax:
      content: 'public ClusterRepairTask(String taskId, String action)'
      parameters:
        - id: taskId
          type: '26831127'
          description: <p>Die ID des Tasks "Reparieren". </p>
        - id: action
          type: '26831127'
          description: <p>Die Aktion zum Reparieren angefordert wird. </p>
references:
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric._cluster_repair_task.ClusterRepairTask*
    name: ClusterRepairTask
    nameWithType: ClusterRepairTask.ClusterRepairTask
    fullName: system.fabric.ClusterRepairTask.ClusterRepairTask
    package: system.fabric
  - uid: system.fabric._repair_task.getAction()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getAction()
    nameWithType: RepairTask.getAction()
    fullName: String system.fabric.RepairTask.getAction()
    type: Method
    summary: |-
      <p>Ruft den angeforderten Reparaturversuch ab.</p>
      <p></p>
    syntax:
      content: public String getAction()
      return:
        type: '26831127'
        description: <p>Der angeforderte Reparaturversuch. </p>
  - uid: system.fabric._repair_task.getApprovedTimestamp()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getApprovedTimestamp()
    nameWithType: RepairTask.getApprovedTimestamp()
    fullName: Calendar system.fabric.RepairTask.getApprovedTimestamp()
    type: Method
    summary: |-
      <p>Ruft den Zeitpunkt, wenn die reparaturaufgabe Status "genehmigt" eingegeben.</p>
      <p></p>
    syntax:
      content: public Calendar getApprovedTimestamp()
      return:
        type: bb22f98f
        description: '<p>Die Zeit, wenn die reparaturaufgabe Status "genehmigt" eingegeben. </p>'
  - uid: system.fabric._repair_task.getClaimedTimestamp()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getClaimedTimestamp()
    nameWithType: RepairTask.getClaimedTimestamp()
    fullName: Calendar system.fabric.RepairTask.getClaimedTimestamp()
    type: Method
    summary: |-
      <p>Ruft den Zeitpunkt, wenn die reparaturaufgabe den Claimed-Status angenommen hat.</p>
      <p></p>
    syntax:
      content: public Calendar getClaimedTimestamp()
      return:
        type: bb22f98f
        description: '<p>Die Zeit, wenn die reparaturaufgabe den Claimed-Status angenommen hat. </p>'
  - uid: system.fabric._repair_task.getCompletedTimestamp()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getCompletedTimestamp()
    nameWithType: RepairTask.getCompletedTimestamp()
    fullName: Calendar system.fabric.RepairTask.getCompletedTimestamp()
    type: Method
    summary: |-
      <p>Ruft den Zeitpunkt, wenn die reparaturaufgabe den Status "Completed" eingegeben.</p>
      <p></p>
    syntax:
      content: public Calendar getCompletedTimestamp()
      return:
        type: bb22f98f
        description: '<p>Die Zeit, wenn die reparaturaufgabe den Status "Completed" eingegeben. </p>'
  - uid: system.fabric._repair_task.getCreatedTimestamp()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getCreatedTimestamp()
    nameWithType: RepairTask.getCreatedTimestamp()
    fullName: Calendar system.fabric.RepairTask.getCreatedTimestamp()
    type: Method
    summary: |-
      <p>Ruft den Zeitpunkt, wenn die reparaturaufgabe Created-Zustand eingegeben.</p>
      <p></p>
    syntax:
      content: public Calendar getCreatedTimestamp()
      return:
        type: bb22f98f
        description: '<p>Die Zeit, wenn die reparaturaufgabe Created-Zustand eingegeben. </p>'
  - uid: system.fabric._repair_task.getDescription()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getDescription()
    nameWithType: RepairTask.getDescription()
    fullName: String system.fabric.RepairTask.getDescription()
    type: Method
    summary: |-
      <p>Ruft eine Beschreibung des Zwecks oder andere nur zu Informationszwecken Details des Tasks "Reparieren".</p>
      <p></p>
    syntax:
      content: public String getDescription()
      return:
        type: '26831127'
        description: <p>Eine Beschreibung der Zweck und andere informative Details des Tasks "Reparieren". </p>
  - uid: system.fabric._repair_task.getExecutingTimestamp()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getExecutingTimestamp()
    nameWithType: RepairTask.getExecutingTimestamp()
    fullName: Calendar system.fabric.RepairTask.getExecutingTimestamp()
    type: Method
    summary: |-
      <p>Ruft den Zeitpunkt, wenn die reparaturaufgabe ausgeführten Zustand eingegeben.</p>
      <p></p>
    syntax:
      content: public Calendar getExecutingTimestamp()
      return:
        type: bb22f98f
        description: '<p>Die Zeit, wenn die reparaturaufgabe ausgeführten Zustand eingegeben. </p>'
  - uid: system.fabric._repair_task.getExecutor()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getExecutor()
    nameWithType: RepairTask.getExecutor()
    fullName: String system.fabric.RepairTask.getExecutor()
    type: Method
    summary: |-
      <p>Ruft den Namen der Executor für die Reparatur.</p>
      <p></p>
    syntax:
      content: public String getExecutor()
      return:
        type: '26831127'
        description: <p>Der Name der Executor für die Reparatur. </p>
  - uid: system.fabric._repair_task.getExecutorData()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getExecutorData()
    nameWithType: RepairTask.getExecutorData()
    fullName: String system.fabric.RepairTask.getExecutorData()
    type: Method
    summary: |-
      <p>Ruft eine Zeichenfolge mit Daten, die der Executor für die Reparatur verwenden können, um den internen Zustand zu speichern.</p>
      <p></p>
    syntax:
      content: public String getExecutorData()
      return:
        type: '26831127'
        description: '<p>Eine Datenzeichenfolge, die der Executor für die Reparatur verwenden können, um den internen Zustand zu speichern. </p>'
  - uid: system.fabric._repair_task.getFlags()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getFlags()
    nameWithType: RepairTask.getFlags()
    fullName: RepairTaskFlags system.fabric.RepairTask.getFlags()
    type: Method
    summary: |-
      <p>Ruft die Flags ab, mit die erhalten weitere Informationen über den Status des Tasks "Reparieren".</p>
      <p></p>
    syntax:
      content: public RepairTaskFlags getFlags()
      return:
        type: system.fabric.repair._repair_task_flags
        description: '<p>Die Flags, die zusätzliche Details über den Status des Tasks "Reparieren" enthalten. </p>'
  - uid: system.fabric._repair_task.getImpact()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getImpact()
    nameWithType: RepairTask.getImpact()
    fullName: RepairImpactDescription system.fabric.RepairTask.getImpact()
    type: Method
    summary: "<p>Ruft ein Objekt, das die Auswirkungen der Reparatur beschreibt.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Auswirkung muss angegeben werden, von der Executor für die Reparatur beim Übergang in den Zustand vorbereiten. Die auswirkungsobjekts bestimmt, welche Aktionen, die das System zur Vorbereitung der Auswirkungen der Reparatur, vor der Ausführung der Reparatur genehmigen dauert. </p>"
    syntax:
      content: public RepairImpactDescription getImpact()
      return:
        type: system.fabric._repair_impact_description
        description: '<p>Ein <xref uid="system.fabric._repair_impact_description" data-throw-if-not-resolved="false">system.fabric.RepairImpactDescription</xref> Objekt, das die Auswirkungen der Reparatur beschreibt. </p>'
  - uid: system.fabric._repair_task.getPreparingTimestamp()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getPreparingTimestamp()
    nameWithType: RepairTask.getPreparingTimestamp()
    fullName: Calendar system.fabric.RepairTask.getPreparingTimestamp()
    type: Method
    summary: |-
      <p>Ruft den Zeitpunkt, wenn die reparaturaufgabe den Preparing-Status angenommen hat.</p>
      <p></p>
    syntax:
      content: public Calendar getPreparingTimestamp()
      return:
        type: bb22f98f
        description: '<p>Die Zeit, wenn die reparaturaufgabe den Preparing-Status angenommen hat. </p>'
  - uid: system.fabric._repair_task.getRestoringTimestamp()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getRestoringTimestamp()
    nameWithType: RepairTask.getRestoringTimestamp()
    fullName: Calendar system.fabric.RepairTask.getRestoringTimestamp()
    type: Method
    summary: |-
      <p>Ruft den Zeitpunkt, wenn die reparaturaufgabe Wiederherstellungsstatus eingegeben.</p>
      <p></p>
    syntax:
      content: public Calendar getRestoringTimestamp()
      return:
        type: bb22f98f
        description: '<p>Die Zeit, wenn die reparaturaufgabe Wiederherstellungsstatus eingegeben. </p>'
  - uid: system.fabric._repair_task.getResultCode()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getResultCode()
    nameWithType: RepairTask.getResultCode()
    fullName: int system.fabric.RepairTask.getResultCode()
    type: Method
    summary: |-
      <p>Ruft einen Wert, der zusätzliche Informationen über das Ergebnis der Taskausführung reparieren.</p>
      <p></p>
    syntax:
      content: public int getResultCode()
      return:
        type: f75371fa
        description: '<p>Ein Wert, der zusätzliche Informationen über das Ergebnis der Taskausführung reparieren. </p>'
  - uid: system.fabric._repair_task.getResultDetails()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getResultDetails()
    nameWithType: RepairTask.getResultDetails()
    fullName: String system.fabric.RepairTask.getResultDetails()
    type: Method
    summary: |-
      <p>Ruft eine Zeichenfolge, die zusätzliche Informationen über das Ergebnis der Taskausführung reparieren.</p>
      <p></p>
    syntax:
      content: public String getResultDetails()
      return:
        type: '26831127'
        description: '<p>Eine Zeichenfolge, die zusätzliche Informationen über das Ergebnis der Taskausführung reparieren. </p>'
  - uid: system.fabric._repair_task.getResultStatus()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getResultStatus()
    nameWithType: RepairTask.getResultStatus()
    fullName: RepairTaskResult system.fabric.RepairTask.getResultStatus()
    type: Method
    summary: |-
      <p>Ruft einen Wert, der das Gesamtergebnis der Taskausführung reparieren beschreiben.</p>
      <p></p>
    syntax:
      content: public RepairTaskResult getResultStatus()
      return:
        type: system.fabric.repair._repair_task_result
        description: '<p>Ein <xref uid="system.fabric.repair._repair_task_result" data-throw-if-not-resolved="false">system.fabric.repair.RepairTaskResult</xref> Wert, der das Gesamtergebnis der Taskausführung Reparatur beschreibt. </p>'
  - uid: system.fabric._repair_task.getScope()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getScope()
    nameWithType: RepairTask.getScope()
    fullName: RepairScopeIdentifier system.fabric.RepairTask.getScope()
    type: Method
    summary: "<p>Ruft ein Objekt beschreibt den Bereich des Tasks \"Reparieren\".</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Bereich Aufgabe Reparieren bestimmt die Ressource, mit denen der Zugriff Überprüfungen ausgeführt werden, wenn die reparaturaufgabe erstellt, geändert, gelöscht oder abgerufen wird. Entitäten, die durch eine Reparatur betroffene müssen innerhalb des Bereichs des Tasks \"Reparieren\" enthalten sein. Beispielsweise erfordern Reparaturen diese Auswirkungen auf die Knoten an, dass die reparaturaufgabe unter dem Bereich der Cluster erstellt werden. </p>"
    syntax:
      content: public RepairScopeIdentifier getScope()
      return:
        type: system.fabric._repair_scope_identifier
        description: '<p>Ein <xref uid="system.fabric._repair_scope_identifier" data-throw-if-not-resolved="false">system.fabric.RepairScopeIdentifier</xref> -Objekt, das den Bereich des Tasks "Reparieren" beschreibt. </p>'
  - uid: system.fabric._repair_task.getState()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getState()
    nameWithType: RepairTask.getState()
    fullName: RepairTaskState system.fabric.RepairTask.getState()
    type: Method
    summary: |-
      <p>Ruft den Workflowstatus des Tasks "Reparieren".</p>
      <p></p>
    syntax:
      content: public RepairTaskState getState()
      return:
        type: system.fabric.repair._repair_task_state
        description: <p>Der Workflowstatus des Tasks "Reparieren". </p>
  - uid: system.fabric._repair_task.getTarget()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getTarget()
    nameWithType: RepairTask.getTarget()
    fullName: RepairTargetDescription system.fabric.RepairTask.getTarget()
    type: Method
    summary: "<p>Ruft ein Objekt beschreibt die Entitäten, die der angeforderten Reparaturversuch abzielt.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Ziel ist möglicherweise null, wenn die Aktion zum Reparieren keine Informationen über bestimmte Ziele erforderlich ist. </p>"
    syntax:
      content: public RepairTargetDescription getTarget()
      return:
        type: system.fabric._repair_target_description
        description: '<p>Ein Objekt, welche Entitäten beschreibt der angeforderten Reparaturversuch überprüft. </p>'
  - uid: system.fabric._repair_task.getTaskId()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getTaskId()
    nameWithType: RepairTask.getTaskId()
    fullName: String system.fabric.RepairTask.getTaskId()
    type: Method
    summary: |-
      <p>Ruft den Bezeichner des Tasks "Reparieren".</p>
      <p></p>
    syntax:
      content: public String getTaskId()
      return:
        type: '26831127'
        description: <p>Der Bezeichner des Tasks "Reparieren". </p>
  - uid: system.fabric._repair_task.getVersion()
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: getVersion()
    nameWithType: RepairTask.getVersion()
    fullName: long system.fabric.RepairTask.getVersion()
    type: Method
    summary: "<p>Ruft die Version des Tasks \"Reparieren\".</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>beim Erstellen eines neuen Reparaturtasks muss die Version auf 0 (null) festgelegt werden. Beim Aktualisieren von reparaturaufträgen über die UpdateRepairExecutionStateAsync-Methode wird die Version für Überprüfungen auf vollständige Parallelität verwendet. Wenn die Version auf NULL gesetzt wird, wird das Update nicht für Write-Konflikte überprüfen. Wenn die Version auf einen Wert ungleich 0 (null) festgelegt ist, wird das Update nur erfolgreich, wenn die tatsächliche aktuelle Version des Tasks \"Reparieren\" mit diesem Wert übereinstimmt. </p>"
    syntax:
      content: public long getVersion()
      return:
        type: 0364520f
        description: <p>Die Version des Tasks "Reparieren". </p>
  - uid: system.fabric._repair_task.RepairTask(RepairScopeIdentifier)
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: RepairTask(RepairScopeIdentifier scope)
    nameWithType: RepairTask.RepairTask(RepairScopeIdentifier scope)
    fullName: system.fabric.RepairTask.RepairTask(RepairScopeIdentifier scope)
    type: Constructor
    syntax:
      content: public RepairTask(RepairScopeIdentifier scope)
      parameters:
        - id: scope
          type: system.fabric._repair_scope_identifier
  - uid: system.fabric._repair_task.setDescription(String)
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: setDescription(String description)
    nameWithType: RepairTask.setDescription(String description)
    fullName: void system.fabric.RepairTask.setDescription(String description)
    type: Method
    summary: |-
      <p>Eine Beschreibung des Zwecks oder andere nur zu Informationszwecken Details des Tasks "Reparieren" fest.</p>
      <p></p>
    syntax:
      content: public void setDescription(String description)
      parameters:
        - id: description
          type: '26831127'
          description: <p>Eine Beschreibung der Zweck und andere informative Details des Tasks "Reparieren". </p>
  - uid: system.fabric._repair_task.setExecutor(String)
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: setExecutor(String executor)
    nameWithType: RepairTask.setExecutor(String executor)
    fullName: void system.fabric.RepairTask.setExecutor(String executor)
    type: Method
    summary: |-
      <p>Legt den Namen der Executor für die Reparatur.</p>
      <p></p>
    syntax:
      content: public void setExecutor(String executor)
      parameters:
        - id: executor
          type: '26831127'
          description: <p>Der Name der Executor für die Reparatur. </p>
  - uid: system.fabric._repair_task.setExecutorData(String)
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: setExecutorData(String executorData)
    nameWithType: RepairTask.setExecutorData(String executorData)
    fullName: void system.fabric.RepairTask.setExecutorData(String executorData)
    type: Method
    summary: |-
      <p>Legt eine Zeichenfolge, die der Executor für die Reparatur verwenden können, um den internen Zustand zu speichern.</p>
      <p></p>
    syntax:
      content: public void setExecutorData(String executorData)
      parameters:
        - id: executorData
          type: '26831127'
          description: '<p>Eine Datenzeichenfolge, die der Executor für die Reparatur verwenden können, um den internen Zustand zu speichern. </p>'
  - uid: system.fabric._repair_task.setImpact(RepairImpactDescription)
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: setImpact(RepairImpactDescription impact)
    nameWithType: RepairTask.setImpact(RepairImpactDescription impact)
    fullName: void system.fabric.RepairTask.setImpact(RepairImpactDescription impact)
    type: Method
    summary: "<p>Legt ein Objekt, das die Auswirkungen der Reparatur beschreibt.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Auswirkung muss angegeben werden, von der Executor für die Reparatur beim Übergang in den Zustand vorbereiten. Die auswirkungsobjekts bestimmt, welche Aktionen, die das System zur Vorbereitung der Auswirkungen der Reparatur, vor der Ausführung der Reparatur genehmigen dauert. </p>"
    syntax:
      content: public void setImpact(RepairImpactDescription impact)
      parameters:
        - id: impact
          type: system.fabric._repair_impact_description
          description: '<p>Ein <xref uid="system.fabric._repair_impact_description" data-throw-if-not-resolved="false">system.fabric.RepairImpactDescription</xref> Objekt, das die Auswirkungen der Reparatur beschreibt. </p>'
  - uid: 'system.fabric._repair_task.setInternalValues(String,long,String,int,long,String,RepairTargetDescription,RepairImpactDescription,String,String,int,int,String,long,long,long,long,long,long,long,long,long,long,long,long,long,long)'
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: 'setInternalValues(String taskId, long version, String description, int state, long flag, String action, RepairTargetDescription target, RepairImpactDescription impact, String executor, String executorData, int resultStatus, int resultCode, String resultDetails, long createdTimestampTicksLow, long createdTimestampTicksHigh, long claimedTimestampTicksLow, long claimedTimestampTicksHigh, long preparingTimestampTicksLow, long preparingTimestampTicksHigh, long approvedTimestampTicksLow, long approvedTimestampTicksHigh, long executingTimestampTicksLow, long executingTimestampTicksHigh, long restoringTimestampTicksLow, long restoringTimestampTicksHigh, long completedTimestampTicksLow, long completedTimestampTicksHigh)'
    nameWithType: 'RepairTask.setInternalValues(String taskId, long version, String description, int state, long flag, String action, RepairTargetDescription target, RepairImpactDescription impact, String executor, String executorData, int resultStatus, int resultCode, String resultDetails, long createdTimestampTicksLow, long createdTimestampTicksHigh, long claimedTimestampTicksLow, long claimedTimestampTicksHigh, long preparingTimestampTicksLow, long preparingTimestampTicksHigh, long approvedTimestampTicksLow, long approvedTimestampTicksHigh, long executingTimestampTicksLow, long executingTimestampTicksHigh, long restoringTimestampTicksLow, long restoringTimestampTicksHigh, long completedTimestampTicksLow, long completedTimestampTicksHigh)'
    fullName: 'void system.fabric.RepairTask.setInternalValues(String taskId, long version, String description, int state, long flag, String action, RepairTargetDescription target, RepairImpactDescription impact, String executor, String executorData, int resultStatus, int resultCode, String resultDetails, long createdTimestampTicksLow, long createdTimestampTicksHigh, long claimedTimestampTicksLow, long claimedTimestampTicksHigh, long preparingTimestampTicksLow, long preparingTimestampTicksHigh, long approvedTimestampTicksLow, long approvedTimestampTicksHigh, long executingTimestampTicksLow, long executingTimestampTicksHigh, long restoringTimestampTicksLow, long restoringTimestampTicksHigh, long completedTimestampTicksLow, long completedTimestampTicksHigh)'
    type: Method
    syntax:
      content: 'protected void setInternalValues(String taskId, long version, String description, int state, long flag, String action, RepairTargetDescription target, RepairImpactDescription impact, String executor, String executorData, int resultStatus, int resultCode, String resultDetails, long createdTimestampTicksLow, long createdTimestampTicksHigh, long claimedTimestampTicksLow, long claimedTimestampTicksHigh, long preparingTimestampTicksLow, long preparingTimestampTicksHigh, long approvedTimestampTicksLow, long approvedTimestampTicksHigh, long executingTimestampTicksLow, long executingTimestampTicksHigh, long restoringTimestampTicksLow, long restoringTimestampTicksHigh, long completedTimestampTicksLow, long completedTimestampTicksHigh)'
      parameters:
        - id: taskId
          type: '26831127'
        - id: version
          type: 0364520f
        - id: description
          type: '26831127'
        - id: state
          type: f75371fa
        - id: flag
          type: 0364520f
        - id: action
          type: '26831127'
        - id: target
          type: system.fabric._repair_target_description
        - id: impact
          type: system.fabric._repair_impact_description
        - id: executor
          type: '26831127'
        - id: executorData
          type: '26831127'
        - id: resultStatus
          type: f75371fa
        - id: resultCode
          type: f75371fa
        - id: resultDetails
          type: '26831127'
        - id: createdTimestampTicksLow
          type: 0364520f
        - id: createdTimestampTicksHigh
          type: 0364520f
        - id: claimedTimestampTicksLow
          type: 0364520f
        - id: claimedTimestampTicksHigh
          type: 0364520f
        - id: preparingTimestampTicksLow
          type: 0364520f
        - id: preparingTimestampTicksHigh
          type: 0364520f
        - id: approvedTimestampTicksLow
          type: 0364520f
        - id: approvedTimestampTicksHigh
          type: 0364520f
        - id: executingTimestampTicksLow
          type: 0364520f
        - id: executingTimestampTicksHigh
          type: 0364520f
        - id: restoringTimestampTicksLow
          type: 0364520f
        - id: restoringTimestampTicksHigh
          type: 0364520f
        - id: completedTimestampTicksLow
          type: 0364520f
        - id: completedTimestampTicksHigh
          type: 0364520f
  - uid: system.fabric._repair_task.setResultCode(int)
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: setResultCode(int resultCode)
    nameWithType: RepairTask.setResultCode(int resultCode)
    fullName: void system.fabric.RepairTask.setResultCode(int resultCode)
    type: Method
    summary: |-
      <p>Legt einen Wert, der zusätzliche Informationen über das Ergebnis der Taskausführung reparieren.</p>
      <p></p>
    syntax:
      content: public void setResultCode(int resultCode)
      parameters:
        - id: resultCode
          type: f75371fa
          description: '<p>Ein Wert, der zusätzliche Informationen über das Ergebnis der Taskausführung reparieren. </p>'
  - uid: system.fabric._repair_task.setResultDetails(String)
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: setResultDetails(String resultDetails)
    nameWithType: RepairTask.setResultDetails(String resultDetails)
    fullName: void system.fabric.RepairTask.setResultDetails(String resultDetails)
    type: Method
    summary: |-
      <p>Legt eine Zeichenfolge, die zusätzliche Informationen über das Ergebnis der Taskausführung reparieren.</p>
      <p></p>
    syntax:
      content: public void setResultDetails(String resultDetails)
      parameters:
        - id: resultDetails
          type: '26831127'
          description: '<p>Eine Zeichenfolge, die zusätzliche Informationen über das Ergebnis der Taskausführung reparieren. </p>'
  - uid: system.fabric._repair_task.setResultStatus(RepairTaskResult)
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: setResultStatus(RepairTaskResult resultStatus)
    nameWithType: RepairTask.setResultStatus(RepairTaskResult resultStatus)
    fullName: void system.fabric.RepairTask.setResultStatus(RepairTaskResult resultStatus)
    type: Method
    summary: |-
      <p>Legt einen Wert, der das Gesamtergebnis der Taskausführung reparieren beschreiben.</p>
      <p></p>
    syntax:
      content: public void setResultStatus(RepairTaskResult resultStatus)
      parameters:
        - id: resultStatus
          type: system.fabric.repair._repair_task_result
          description: '<p>Ein <xref uid="system.fabric.repair._repair_task_result" data-throw-if-not-resolved="false">system.fabric.repair.RepairTaskResult</xref> Wert, der das Gesamtergebnis der Taskausführung Reparatur beschreibt. </p>'
  - uid: system.fabric._repair_task.setState(RepairTaskState)
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: setState(RepairTaskState state)
    nameWithType: RepairTask.setState(RepairTaskState state)
    fullName: void system.fabric.RepairTask.setState(RepairTaskState state)
    type: Method
    summary: |-
      <p>Legt den Workflowzustand des Tasks "Reparieren".</p>
      <p></p>
    syntax:
      content: public void setState(RepairTaskState state)
      parameters:
        - id: state
          type: system.fabric.repair._repair_task_state
          description: <p>Der Workflowstatus des Tasks "Reparieren". </p>
  - uid: system.fabric._repair_task.setTarget(RepairTargetDescription)
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: setTarget(RepairTargetDescription target)
    nameWithType: RepairTask.setTarget(RepairTargetDescription target)
    fullName: void system.fabric.RepairTask.setTarget(RepairTargetDescription target)
    type: Method
    summary: "<p>Legt ein Objekt, beschreibt die Entitäten, die der angeforderten Reparaturversuch abzielt.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Ziel ist möglicherweise null, wenn die Aktion zum Reparieren keine Informationen über bestimmte Ziele erforderlich ist. </p>"
    syntax:
      content: public void setTarget(RepairTargetDescription target)
      parameters:
        - id: target
          type: system.fabric._repair_target_description
          description: '<p>Ein Objekt, welche Entitäten beschreibt der angeforderten Reparaturversuch überprüft. </p>'
  - uid: system.fabric._repair_task.setVersion(long)
    parent: system.fabric._repair_task
    href: system.fabric._repair_task.yml
    name: setVersion(long version)
    nameWithType: RepairTask.setVersion(long version)
    fullName: void system.fabric.RepairTask.setVersion(long version)
    type: Method
    summary: "<p>Legt die Version des Tasks \"Reparieren\".</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>beim Erstellen eines neuen Reparaturtasks muss die Version auf 0 (null) festgelegt werden. Beim Aktualisieren von reparaturaufträgen über die UpdateRepairExecutionStateAsync-Methode wird die Version für Überprüfungen auf vollständige Parallelität verwendet. Wenn die Version auf NULL gesetzt wird, wird das Update nicht für Write-Konflikte überprüfen. Wenn die Version auf einen Wert ungleich 0 (null) festgelegt ist, wird das Update nur erfolgreich, wenn die tatsächliche aktuelle Version des Tasks \"Reparieren\" mit diesem Wert übereinstimmt. </p>"
    syntax:
      content: public void setVersion(long version)
      parameters:
        - id: version
          type: 0364520f
          description: <p>Die Version des Tasks "Reparieren". </p>
  - uid: system.fabric._repair_task
    parent: system.fabric
    href: system.fabric._repair_task.yml
    name: RepairTask
    nameWithType: RepairTask
    fullName: system.fabric.RepairTask
    type: Class
    summary: '<p>Stellt eine Aufgabe, reparieren, die erläutert, welche Art von Repair angefordert wurde, was ihren Status ist und was das endgültige Ergebnis war. Diese Klasse unterstützt die Service Fabric-Plattform. Es ist nicht vorgesehen, direkt aus Ihrem Code aufgerufen werden. </p>'
    syntax:
      content: public class RepairTask