### YamlMime:ManagedReference
items:
  - uid: system.fabric._state_provider
    id: _state_provider
    parent: system.fabric
    children:
      - system.fabric._state_provider.getCopyContext()
      - 'system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)'
      - system.fabric._state_provider.getLastCommittedSequenceNumber()
      - system.fabric._state_provider.onDataLossAsync(CancellationToken)
      - 'system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)'
    href: system.fabric._state_provider.yml
    langs:
      - java
    name: StateProvider
    nameWithType: StateProvider
    fullName: system.fabric.StateProvider
    type: Interface
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/StateProvider.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/StateProvider.java
      startLine: 7
    package: system.fabric
    summary: '<p><span data-ttu-id="878a7-101">Definiert das Verhalten, das ein Dienst implementieren muss, um die Interaktion mit der <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>.</span><span class="sxs-lookup"><span data-stu-id="878a7-101">Defines the behavior that a service must implement to interact with the <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>.</span></span> </p>'
    syntax:
      content: public interface StateProvider
  - uid: system.fabric._state_provider.getCopyContext()
    id: getCopyContext()
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    langs:
      - java
    name: getCopyContext()
    nameWithType: StateProvider.getCopyContext()
    fullName: OperationDataStream system.fabric.StateProvider.getCopyContext()
    overload: system.fabric._state_provider.getCopyContext*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StateProvider.java
      startLine: 97
    package: system.fabric
    summary: "<p><span data-ttu-id=\"878a7-102\">Kontext auf einem sekundären Replikat erhält, nachdem es erstellt und geöffnet, um den Kontext mit dem primären Replikat zu senden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-102\">Obtains context on a Secondary replica after it is created and opened to send context to the Primary replica.</span></span></p>\n<p><span data-ttu-id=\"878a7-103\">\r\n\r\n  <b>Hinweise:</b>das primäre Replikat analysiert den Kontext und zurücksendet Status über <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState (SequenceNumber, OperationDataStream)</xref> .</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-103\">\r\n\r\n  <b>Remarks:</b>The Primary replica analyzes the context and sends back state via <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> .</span></span> <span data-ttu-id=\"878a7-104\"><xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> für neu erstellte im Leerlauf sekundären Replikate aufgerufen wird, und bietet einen Mechanismus zum asynchron eine bidirektionale Konversation mit dem primären Replikat hergestellt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-104\"><xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> is called on newly created, idle Secondary replicas and provides a mechanism to asynchronously establish a bidirectional conversation with the Primary replica.</span></span> <span data-ttu-id=\"878a7-105\">Das sekundäre Replikat sendet <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> Objekte, die mit dem das primäre Replikat den Status des Sammelns von Kontext auf dem sekundären Replikat bestimmen kann.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-105\">The Secondary replica sends <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> objects with which the Primary replica can determine the progress of collecting context on the Secondary replica.</span></span> <span data-ttu-id=\"878a7-106\">Das primäre Replikat sendet seinerseits den erforderlichen Zustand zurück.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-106\">The Primary replica responds by sending the required state back.</span></span> <span data-ttu-id=\"878a7-107\">Finden Sie unter <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState (SequenceNumber, OperationDataStream)</xref> an das primäre Replikat für die andere Hälfte des Austausches.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-107\">See <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> at the Primary replica for the other half of the exchange.</span></span> <span data-ttu-id=\"878a7-108\">Für InMemory-Dienste die <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> Methode wird nicht aufgerufen, da der Status der sekundären Replikate bekannt ist (sie sind leer und benötigen alle Status).</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-108\">For in-memory services, the <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> method is not called, as the state of the Secondary replicas is known (they are empty and will require all of the state).</span></span> </p>"
    syntax: &ref_3
      content: public OperationDataStream getCopyContext()
      return:
        type: system.fabric._operation_data_stream
        description: <p><span data-ttu-id="878a7-109">Gibt <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref>.</span><span class="sxs-lookup"><span data-stu-id="878a7-109">Returns <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref>.</span></span> </p>
  - uid: 'system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)'
    id: 'getCopyState(SequenceNumber,OperationDataStream)'
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    langs:
      - java
    name: 'getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    nameWithType: 'StateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    fullName: 'OperationDataStream system.fabric.StateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    overload: system.fabric._state_provider.getCopyState*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StateProvider.java
      startLine: 132
    package: system.fabric
    summary: "<p><span data-ttu-id=\"878a7-110\">Ruft die Status für ein primäres Replikat, das erforderlich sind, um ein sekundäres Replikat zu erstellen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-110\">Obtains state on a Primary replica that is required to build a Secondary replica.</span></span></p>\n<p><span data-ttu-id=\"878a7-111\">\r\n\r\n  <b>Hinweise:</b>genauso <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> ermöglicht das sekundäre Replikat das primäre Replikat über Kontext an ein <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>, <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState (SequenceNumber, OperationDataStream)</xref> ermöglicht das primäre Replikat antwortet ein <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-111\">\r\n\r\n  <b>Remarks:</b>Just as <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> enables the Secondary replica to send context to the Primary replica via an <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>, <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> enables the Primary replica to respond with an <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>.</span></span> <span data-ttu-id=\"878a7-112\">Der Datenstrom enthält Objekte, die an das sekundäre Replikat über übermittelt werden die <xref uid=\"system.fabric._state_replicator.getCopyStream()\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#getCopyStream()</xref> Methode der <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> Klasse.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-112\">The stream contains objects that are delivered to the Secondary replica via the <xref uid=\"system.fabric._state_replicator.getCopyStream()\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#getCopyStream()</xref> method of the <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> class.</span></span> <span data-ttu-id=\"878a7-113\">Implementieren Sie die Objekte <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> und die angegebenen Daten enthalten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-113\">The objects implement <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> and contain the specified data.</span></span> <span data-ttu-id=\"878a7-114\">Wenn das primäre Replikat dieser Aufruf empfängt, sollte er erstellen und Zurückgeben einer anderen <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref> enthält <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-114\">When the Primary replica receives this call, it should create and return another <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref> that contains <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref>.</span></span> <span data-ttu-id=\"878a7-115\"><xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> des datensynchronisierungsstatus darstellt, die das sekundäre Replikat</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-115\"><xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> represents the data/state that the Secondary replica</span></span> </p>"
    syntax: &ref_2
      content: 'public OperationDataStream getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
      parameters:
        - id: upToSequenceNumber
          type: system.fabric._sequence_number
          description: '<p><span data-ttu-id="878a7-116">Die maximale letzte Sequenznummer (LSN), die im Stream über Kopiervorgang platziert werden, sollten die <xref uid="system.fabric._state_replicator.getCopyStream()" data-throw-if-not-resolved="false">system.fabric.StateReplicator#getCopyStream()</xref> Methode.</span><span class="sxs-lookup"><span data-stu-id="878a7-116">The maximum last sequence number (LSN) that should be placed in the copy stream via the <xref uid="system.fabric._state_replicator.getCopyStream()" data-throw-if-not-resolved="false">system.fabric.StateReplicator#getCopyStream()</xref> method.</span></span> <span data-ttu-id="878a7-117">LSNs, die größer als diese Zahl werden an das sekundäre Replikat als Teil der replikationsdatenstrom über übermittelt die <xref uid="system.fabric._state_replicator.getReplicationStream()" data-throw-if-not-resolved="false">system.fabric.StateReplicator#getReplicationStream()</xref> Methode.</span><span class="sxs-lookup"><span data-stu-id="878a7-117">LSNs greater than this number are delivered to the Secondary replica as a part of the replication stream via the <xref uid="system.fabric._state_replicator.getReplicationStream()" data-throw-if-not-resolved="false">system.fabric.StateReplicator#getReplicationStream()</xref> method.</span></span> </p>'
        - id: copyContext
          type: system.fabric._operation_data_stream
          description: '<p><span data-ttu-id="878a7-118">Ein <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref> , enthält die <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">system.fabric.OperationData</xref> Objekte, die vom sekundären Replikat erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="878a7-118">An <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref> that contains the <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">system.fabric.OperationData</xref> objects that are created by the Secondary replica.</span></span> <span data-ttu-id="878a7-119">erfordert die Stand</span><span class="sxs-lookup"><span data-stu-id="878a7-119">requires to catch up to the provided</span></span> </p>'
      return:
        type: system.fabric._operation_data_stream
        description: <p><span data-ttu-id="878a7-120">Gibt <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref>.</span><span class="sxs-lookup"><span data-stu-id="878a7-120">Returns <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref>.</span></span> </p>
  - uid: system.fabric._state_provider.getLastCommittedSequenceNumber()
    id: getLastCommittedSequenceNumber()
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    langs:
      - java
    name: getLastCommittedSequenceNumber()
    nameWithType: StateProvider.getLastCommittedSequenceNumber()
    fullName: long system.fabric.StateProvider.getLastCommittedSequenceNumber()
    overload: system.fabric._state_provider.getLastCommittedSequenceNumber*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StateProvider.java
      startLine: 13
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="878a7-121">Ruft die letzte Sequenznummer, die der Dienst ein Commit ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="878a7-121">Obtains the last sequence number that the service has committed.</span></span></p>
      <p></p>
    syntax:
      content: public long getLastCommittedSequenceNumber()
      return:
        type: 0364520f
        description: <p><span data-ttu-id="878a7-122">Long-Wert.</span><span class="sxs-lookup"><span data-stu-id="878a7-122">Returns long.</span></span> </p>
  - uid: system.fabric._state_provider.onDataLossAsync(CancellationToken)
    id: onDataLossAsync(CancellationToken)
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    langs:
      - java
    name: onDataLossAsync(CancellationToken cancellationToken)
    nameWithType: StateProvider.onDataLossAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Boolean> system.fabric.StateProvider.onDataLossAsync(CancellationToken cancellationToken)
    overload: system.fabric._state_provider.onDataLossAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StateProvider.java
      startLine: 74
    package: system.fabric
    summary: "<p><span data-ttu-id=\"878a7-123\">Gibt an, dass ein schreibquorums Replikate in dieser Replikatsatz verloren gegangen ist und daher Datenverlust aufgetreten sind.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-123\">Indicates that a write quorum of replicas in this replica set has been lost, and that therefore data loss might have occurred.</span></span> <span data-ttu-id=\"878a7-124\">Die Replikatgruppe besteht aus der Mehrheit der Replikate, die das primäre Replikat enthält.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-124\">The replica set consists of a majority of replicas, which includes the Primary replica.</span></span></p>\n<p><span data-ttu-id=\"878a7-125\">\r\n\r\n  <b>Beschreibung:</b>bei die Service Fabric-Laufzeit einen Fehler des ein Quorum der Replikate, der das primäre Replikat enthält berücksichtigt, wählt ein neues primäres Replikat und sofort ruft diese Methode auf dem neuen primären Replikat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-125\">\r\n\r\n  <b>Remarks:</b>When the Service Fabric runtime observes the failure of a quorum of replicas, which includes the Primary replica, it elects a new Primary replica and immediately calls this method on the new Primary replica.</span></span> <span data-ttu-id=\"878a7-126\">Ein primäres Replikat, das eines möglichen Datenverlusts informiert ist die Möglichkeit, den Zustand aus einer externen Datenquelle wiederherstellen oder kann weiterhin mit dem Status ausgeführt wird, die derzeit.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-126\">A Primary replica that is informed of possible data loss can choose to restore its state from some external data source or can continue to run with the state that it currently has.</span></span> <span data-ttu-id=\"878a7-127\">Wenn der Dienst mit seinem aktuellen Zustand ausgeführt werden weiterhin, sollte es \"false\" von dieser Methode zurückgeben, der gibt an, dass keine Änderung vorgenommen wurde.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-127\">If the service continues to run with its current state, it should return false from this method, which indicates that no state change has been made.</span></span> <span data-ttu-id=\"878a7-128\">Wenn es wiederhergestellt oder geändert Datenbankzustands, z. B. unvollständige Arbeit ein Rollback sollte \"true\" zurückgeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-128\">If it has restored or altered its state, such as rolling back incomplete work, it should return true.</span></span> <span data-ttu-id=\"878a7-129\">Wenn \"true\" zurückgegeben wird, muss der Status in den anderen Replikaten angenommen werden, falsch zu sein.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-129\">If true is returned, then the state in other replicas must be assumed to be incorrect.</span></span> <span data-ttu-id=\"878a7-130\">Aus diesem Grund die Service Fabric-Laufzeit die anderen Replikaten in der Replikatgruppe entfernt und erneut erstellt werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-130\">Therefore, the Service Fabric runtime removes the other replicas from the replica set and recreates them.</span></span> </p>"
    syntax:
      content: public CompletableFuture<Boolean> onDataLossAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"878a7-131\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-131\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 7e53ac82
        description: '<p><span data-ttu-id="878a7-132">Gibt <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> des Typs <xref uid="" data-throw-if-not-resolved="false">java.lang.Boolean</xref>, Wert, der angibt, ob die State-Anbieter als Teil der Verarbeitung dieser benachrichtigungs seinen Status geändert wurde</span><span class="sxs-lookup"><span data-stu-id="878a7-132">Returns <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> of type <xref uid="" data-throw-if-not-resolved="false">java.lang.Boolean</xref>, that indicates whether the state provider as part of processing this notification has changed its state</span></span> </p>'
  - uid: 'system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)'
    id: 'updateEpochAsync(Epoch,SequenceNumber,CancellationToken)'
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    langs:
      - java
    name: 'updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    nameWithType: 'StateProvider.updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> system.fabric.StateProvider.updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    overload: system.fabric._state_provider.updateEpochAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/StateProvider.java
      startLine: 44
    package: system.fabric
    summary: "<p><span data-ttu-id=\"878a7-133\">Ein Replikat zeigt an, dass die Konfiguration einer Replikatgruppe aufgrund einer Änderung der geändert oder ändern, mit dem primären Replikat versucht.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-133\">Indicates to a replica that the configuration of a replica set has changed due to a change or attempted change to the Primary replica.</span></span> <span data-ttu-id=\"878a7-134\">Die Änderung tritt aufgrund eines Fehlers oder Lastenausgleich des vorherigen primären Replikats.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-134\">The change occurs due to failure or load balancing of the previous Primary replica.</span></span> <span data-ttu-id=\"878a7-135\"><xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> Änderungen fungieren als ein Hindernis durch Segmentieren Vorgänge in die genaue Konfiguration Zeiträume, in dem sie von einem bestimmten primären Replikat gesendet wurden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-135\"><xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> changes act as a barrier by segmenting operations into the exact configuration periods in which they were sent by a specific Primary replica.</span></span></p>\n<p><span data-ttu-id=\"878a7-136\">\r\n\r\n  <b>Hinweise:</b>die Informationen in den <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync (Epoche SequenceNumber, CancellationToken)</xref> -Methode ermöglicht dem Dienst um einen Vektor Status aufrecht eine Liste der einzelnen Epoche ist die das Replikat empfangen wurde, und die maximale LSN, die sie enthalten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-136\">\r\n\r\n  <b>Remarks:</b>The information in the <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync(Epoch, SequenceNumber, CancellationToken)</xref> method enables the service to maintain a progress vector, which is a list of each epoch that the replica has received, and the maximum LSN that they contained.</span></span> <span data-ttu-id=\"878a7-137\">Die Bearbeitung Vektordaten werden zusammen mit den aktuellen angewendeten maximale LSN eignet sich für ein sekundäres Replikat während des Kopiervorgangs zu senden, um den Status des Replikats zu beschreiben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-137\">The progress vector data along with the current applied maximum LSN is useful for a Secondary replica to send during the copy operation to describe the state of the replica.</span></span> <span data-ttu-id=\"878a7-138\">Vergleichen von Fortschritt Vektoren, die während des Kopiervorgangs von sekundären Replikaten empfangen werden kann primäre Replikaten zu bestimmen, ob das sekundäre Replikat auf dem neuesten Stand ist, welchen Status an das sekundäre Replikat gesendet werden muss und gibt an, ob das sekundäre Replikat \"false\" Fortschritt erzielt hat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-138\">Comparing progress vectors that are received from Secondary replicas during the copy operation enables Primary replicas to determine whether the Secondary replica is up-to-date, what state must be sent to the Secondary replica, and whether the Secondary replica has made false progress.</span></span> <span data-ttu-id=\"878a7-139\">\"False\" Status bedeutet, dass ein sekundäres Replikat meldet wurde eine LSN in einer vorherigen Epoche größer als die LSN, die das primäre Replikat in seinen Fortschritt Vektor verfügt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-139\">False progress means that a secondary replica reports an LSN in a previous epoch was greater than the LSN that the Primary replica has in its progress vector.</span></span> </p>"
    syntax: &ref_1
      content: 'public CompletableFuture<?> updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
      parameters:
        - id: epoch
          type: system.fabric._epoch
          description: <p><span data-ttu-id="878a7-140">Die neue <xref uid="system.fabric._epoch" data-throw-if-not-resolved="false">system.fabric.Epoch</xref>.</span><span class="sxs-lookup"><span data-stu-id="878a7-140">The new <xref uid="system.fabric._epoch" data-throw-if-not-resolved="false">system.fabric.Epoch</xref>.</span></span> </p>
        - id: previousEpochLastSequenceNumber
          type: system.fabric._sequence_number
          description: <p><span data-ttu-id="878a7-141">Die maximale Sequenznummer (LSN) in der vorherigen Epoche.</span><span class="sxs-lookup"><span data-stu-id="878a7-141">The maximum sequence number (LSN) in the previous epoch.</span></span> </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"878a7-142\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-142\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 16409f84
        description: <p><span data-ttu-id="878a7-143">Gibt <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>.</span><span class="sxs-lookup"><span data-stu-id="878a7-143">Returns <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>.</span></span> </p>
references:
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._state_provider.getLastCommittedSequenceNumber*
    name: getLastCommittedSequenceNumber
    nameWithType: StateProvider.getLastCommittedSequenceNumber
    fullName: long system.fabric.StateProvider.getLastCommittedSequenceNumber
    package: system.fabric
  - uid: 16409f84
    spec.java:
      - name: CompletableFuture<?>
        fullName: CompletableFuture<?>
  - uid: system.fabric._state_provider.updateEpochAsync*
    name: updateEpochAsync
    nameWithType: StateProvider.updateEpochAsync
    fullName: CompletableFuture<?> system.fabric.StateProvider.updateEpochAsync
    package: system.fabric
  - uid: 7e53ac82
    spec.java:
      - name: CompletableFuture<Boolean>
        fullName: CompletableFuture<Boolean>
  - uid: system.fabric._state_provider.onDataLossAsync*
    name: onDataLossAsync
    nameWithType: StateProvider.onDataLossAsync
    fullName: CompletableFuture<Boolean> system.fabric.StateProvider.onDataLossAsync
    package: system.fabric
  - uid: system.fabric._state_provider.getCopyContext*
    name: getCopyContext
    nameWithType: StateProvider.getCopyContext
    fullName: OperationDataStream system.fabric.StateProvider.getCopyContext
    package: system.fabric
  - uid: system.fabric._state_provider.getCopyState*
    name: getCopyState
    nameWithType: StateProvider.getCopyState
    fullName: OperationDataStream system.fabric.StateProvider.getCopyState
    package: system.fabric
  - uid: microsoft.servicefabric.actors._null_actor_state_provider
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: VolatileActorStateProvider
    nameWithType: VolatileActorStateProvider
    fullName: microsoft.servicefabric.actors.VolatileActorStateProvider
    type: Class
    summary: "<p><span data-ttu-id=\"878a7-144\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref> Implementierung für flüchtige Persistenz Einstufige</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-144\">\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_state_provider\" data-throw-if-not-resolved=\"false\">ActorStateProvider</xref> implementation for Volatile persistence i.e</span></span> <span data-ttu-id=\"878a7-145\"><xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Akteur</xref> Zustand ist nur im Arbeitsspeicher beibehalten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-145\"><xref uid=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\">Actor</xref> state is kept in-memory only.</span></span> </p>"
    syntax:
      content: public class VolatileActorStateProvider
  - uid: system.fabric._atomic_group_state_provider
    parent: system.fabric
    href: system.fabric._atomic_group_state_provider.yml
    name: AtomicGroupStateProvider
    nameWithType: AtomicGroupStateProvider
    fullName: system.fabric.AtomicGroupStateProvider
    type: Interface
    syntax:
      content: public interface AtomicGroupStateProvider extends StateProvider
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.getLastCommittedSequenceNumber()
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: getLastCommittedSequenceNumber()
    nameWithType: VolatileActorStateProvider.getLastCommittedSequenceNumber()
    fullName: long microsoft.servicefabric.actors.VolatileActorStateProvider.getLastCommittedSequenceNumber()
    type: Method
    summary: "<p><span data-ttu-id=\"878a7-146\">Ruft die letzte Sequenznummer, die der Dienst ein Commit ausgeführt wurde.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-146\">Obtains the last sequence number that the service has committed.</span></span></p>\n<p><span data-ttu-id=\"878a7-147\">\r\n\r\n  <b>Beschreibung:</b>diese Methode wird von einem Dienst aufgerufen, wenn zuerst gestartet wurde, gestartet werden soll, für den Fall, dass sie persistenten Status hat und vermutlich Daten verloren gehen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-147\">\r\n\r\n  <b>Remarks:</b>This method is called on a service when it first starts up, in case it has any persistent state, and when data loss is suspected.</span></span> <span data-ttu-id=\"878a7-148\">Beim Start eines zustandsbehafteten dienstreplikats, hat er die Option zum Wiederherstellen von Daten, die beibehalten wurden möglicherweise von früheren Updates.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-148\">When a stateful service replica starts up, it has the option to restore any data that might have persisted from previous updates.</span></span> <span data-ttu-id=\"878a7-149\">Wenn ein Zustand, der auf diese Weise wiederhergestellt werden, ist seines aktuellen Fortschritts die letzte geschriebene Sequenznummer für diese Daten an.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-149\">If it restores some state in this manner, its current progress is the last written sequence number for that data.</span></span> <span data-ttu-id=\"878a7-150\">Volatile-Dienst kann einfach 0 zurückgeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-150\">A volatile service can simply return 0.</span></span> <span data-ttu-id=\"878a7-151\">Beachten Sie, dass diese Methode nicht aufgerufen wird, um eine neue primäre Wahl während eines Failovers, zu bestimmen, da der aktuelle Status für die ein Commit ausgeführt wurde bereits bekannt ist die <xref uid=\"\" data-throw-if-not-resolved=\"false\">FabricReplicator</xref> Klasse zu diesem Zeitpunkt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-151\">Note that this method is not called to determine a new primary election during fail-over, because the current committed progress is already known by the <xref uid=\"\" data-throw-if-not-resolved=\"false\">FabricReplicator</xref> class at that time.</span></span> </p>"
    syntax:
      content: public long getLastCommittedSequenceNumber()
      return:
        type: 0364520f
        description: <p><span data-ttu-id="878a7-152">Long-Wert.</span><span class="sxs-lookup"><span data-stu-id="878a7-152">Returns long.</span></span> </p>
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: 'updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    nameWithType: 'VolatileActorStateProvider.updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.actors.VolatileActorStateProvider.updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    type: Method
    summary: "<p><span data-ttu-id=\"878a7-153\">Ein Replikat zeigt an, dass die Konfiguration einer Replikatgruppe aufgrund einer Änderung der geändert oder ändern, mit dem primären Replikat versucht.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-153\">Indicates to a replica that the configuration of a replica set has changed due to a change or attempted change to the Primary replica.</span></span> <span data-ttu-id=\"878a7-154\">Die Änderung tritt aufgrund eines Fehlers oder Lastenausgleich des vorherigen primären Replikats.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-154\">The change occurs due to failure or load balancing of the previous Primary replica.</span></span> <span data-ttu-id=\"878a7-155\">Epoche Änderungen fungieren als einer Barrier-Klasse, indem Sie segmentieren Vorgänge in die genaue Konfiguration Zeiträume, in denen sie von einem bestimmten primären Replikat gesendet wurden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-155\">Epoch changes act as a barrier by segmenting operations into the exact configuration periods in which they were sent by a specific Primary replica.</span></span></p>\n<p><span data-ttu-id=\"878a7-156\">\r\n\r\n  <b>Beschreibung:</b>diese Methode wird aufgerufen, weil das primäre Replikat der Replikatgruppe geändert hat, oder eine Änderung Angriffsversuch.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-156\">\r\n\r\n  <b>Remarks:</b>This method is called because the Primary replica of the replica set has changed, or a change was attempted.</span></span> <span data-ttu-id=\"878a7-157\">Sekundäre Replikate empfangen diese Methode, wenn sie sind im Begriff, das neue primäre Replikat oder, wenn sie nicht zum neuen primären Replikat sind, sie erhalten sie beim Versuch, das neue primäre Replikat aus dem replikationsdatenstrom den ersten Vorgang entnommen werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-157\">Secondary replicas receive this method either when they are about to become the new Primary replica, or, if they are not the new Primary replica, they receive it when they attempt to get the first operation from the new Primary replica from the replication stream.</span></span> <span data-ttu-id=\"878a7-158\">Diese Methode möglicherweise von primäre Replikaten gelegentlich angezeigt werden, wenn versucht wird, das primäre Replikat auszutauschen, was nicht gelingt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-158\">Primary replicas might occasionally receive this method if there is an attempt to swap the Primary replica, which fails.</span></span> <span data-ttu-id=\"878a7-159\">Die Informationen in den <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">StateProvider #UpdateEpochAsync(Epoch, SequenceNumber, CancellationToken)</xref> -Methode ermöglicht dem Dienst einen Vektor Status verwalten, die eine Liste der einzelnen Epoche enthalten, die das Replikat empfangen hat ist, und die Maximale LSN, die sie enthalten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-159\">The information in the <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">StateProvider#updateEpochAsync(Epoch, SequenceNumber, CancellationToken)</xref> method enables the service to maintain a progress vector, which is a list of each epoch that the replica has received, and the maximum LSN that they contained.</span></span> <span data-ttu-id=\"878a7-160\">Die Bearbeitung Vektordaten werden zusammen mit den aktuellen angewendeten maximale LSN eignet sich für ein sekundäres Replikat zu beschreiben, wie weit der Vorgang fortgeschritten ist während des Kopiervorgangs zu senden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-160\">The progress vector data along with the current applied maximum LSN is useful for a Secondary replica to send during the copy operation to describe how far the operation has progressed.</span></span> <span data-ttu-id=\"878a7-161\">Vergleichen von Fortschritt Vektoren, die während des Kopiervorgangs von sekundären Replikaten empfangen werden kann primäre Replikaten zu bestimmen, ob das sekundäre Replikat auf dem neuesten Stand ist, welchen Status an das sekundäre Replikat gesendet werden muss und gibt an, ob das sekundäre Replikat \"false\" Fortschritt erzielt hat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-161\">Comparing progress vectors that are received from Secondary replicas during the copy operation enables Primary replicas to determine whether the Secondary replica is up-to-date, what state must be sent to the Secondary replica, and whether the Secondary replica has made false progress.</span></span> <span data-ttu-id=\"878a7-162\">\"False\" Status bedeutet, dass es sich bei eine LSN in einer vorherigen Epoche größer als die LSN war, in denen das primäre Replikat empfängt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-162\">False progress means that an LSN in a previous epoch was greater than the LSN that the Primary replica receives.</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<?> updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
      parameters:
        - id: epoch
          type: system.fabric._epoch
          description: <p><span data-ttu-id="878a7-163">Die neue <xref uid="" data-throw-if-not-resolved="false">Epoche</xref>.</span><span class="sxs-lookup"><span data-stu-id="878a7-163">The new <xref uid="" data-throw-if-not-resolved="false">Epoch</xref>.</span></span> </p>
        - id: previousEpochLastSequenceNumber
          type: system.fabric._sequence_number
          description: '<p><span data-ttu-id="878a7-164">Die maximale Sequenznummer (LSN), die in der vorherigen Epoche beobachtet wurden sollten.</span><span class="sxs-lookup"><span data-stu-id="878a7-164">The maximum sequence number (LSN) that should have been observed in the previous epoch.</span></span> </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"878a7-165\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-165\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 16409f84
        description: <p><span data-ttu-id="878a7-166">Gibt die Aufgabe zurück.</span><span class="sxs-lookup"><span data-stu-id="878a7-166">Returns Task.</span></span> </p>
  - uid: system.fabric._epoch
    parent: system.fabric
    href: system.fabric._epoch.yml
    name: Epoch
    nameWithType: Epoch
    fullName: system.fabric.Epoch
    type: Class
    summary: "<p><span data-ttu-id=\"878a7-167\">Stellt die aktuelle Version der Service Fabric-Partition an.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-167\">Represents the current version of the partition in Service Fabric.</span></span> </p>\n<p><span data-ttu-id=\"878a7-168\">\r\n\r\n  <b>Hinweise:</b>ein <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> ist eine Konfiguration Zahl für die Partition als Ganzes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-168\">\r\n\r\n  <b>Remarks:</b>An <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> is a configuration number for the partition as a whole.</span></span> <span data-ttu-id=\"878a7-169\">Beim Festlegen der Konfiguration des Replikats Änderungen, z. B., wenn das primäre Replikat ändert, werden die Vorgänge, die vom neuen primären Replikat repliziert werden als ein neues werden bezeichnet <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> aus, die von der alten primären Datenbank gesendet wurden. das Replikat ist.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-169\">When the configuration of the replica set changes, for example when the Primary replica changes, the operations that are replicated from the new Primary replica are said to be a new <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> from the ones which were sent by the old Primary replica.</span></span> <span data-ttu-id=\"878a7-170\">Die Tatsache, die dass das primäre geändert hat ist nicht direkt sichtbar auf sekundäre Replikate, die nicht durch einen Fehler in der Regel betroffen sind, die das ursprüngliche primäre Replikat betroffen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-170\">The fact that the Primary has changed is not directly visible to Secondary replicas, which are usually unaffected by the failure that affected the original Primary replica.</span></span> <span data-ttu-id=\"878a7-171\">Um nachzuverfolgen, dass sich das primäre Replikat geändert wurde, an das sekundäre Replikat übertragen werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-171\">To track that the Primary replica has changed has to be communicated to the Secondary replica.</span></span> <span data-ttu-id=\"878a7-172\">Diese Kommunikation erfolgt über die <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync (system.fabric.Epoch, system.fabric.SequenceNumber, system.fabric.CancellationToken)</xref> Methode.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-172\">This communication occurs via the <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync(system.fabric.Epoch, system.fabric.SequenceNumber, system.fabric.CancellationToken)</xref> method.</span></span> <span data-ttu-id=\"878a7-173\">Die meisten Dienste können die Details der inneren Felder ignorieren die <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> wie es in der Regel ausreichend ist zu wissen, dass die <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> wurde geändert und Epochs, um zu bestimmen, relative Reihenfolge der Vorgänge zu vergleichen und Ereignisse im System.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-173\">Most services can ignore the details of the inner fields of the <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> as it is usually sufficient to know that the <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> has changed and to compare Epochs to determine relative ordering of operations and events in the system.</span></span> <span data-ttu-id=\"878a7-174\">Zu diesem Zweck sind Vergleichsoperationen bereitgestellt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-174\">Comparison operations are provided for this purpose.</span></span> </p>"
    syntax:
      content: public class Epoch
  - uid: system.fabric._sequence_number
    parent: system.fabric
    href: system.fabric._sequence_number.yml
    name: SequenceNumber
    nameWithType: SequenceNumber
    fullName: system.fabric.SequenceNumber
    type: Class
    syntax:
      content: public class SequenceNumber
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p><span data-ttu-id="878a7-175">Ein <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> wird verwendet, um die Benachrichtigung verteilt wird, dass Vorgänge abgebrochen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="878a7-175">A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> is used to propagate notification that operations should be canceled.</span></span> <span data-ttu-id="878a7-176">Sie erstellen ein Abbruchtoken, das durch die Instanziierung einer <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> -Objekt, das Abbruchtoken verwaltet entnommen seine <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken() </xref> Methode.</span><span class="sxs-lookup"><span data-stu-id="878a7-176">You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method.</span></span> <span data-ttu-id="878a7-177">Übergeben Sie dann das Abbruchtoken, das auf eine beliebige Anzahl von Vorgängen, die Nachricht vom Abbruch erhalten soll.</span><span class="sxs-lookup"><span data-stu-id="878a7-177">You then pass the cancellation token to any number of operations that should receive notice of cancellation.</span></span> <span data-ttu-id="878a7-178">Das Token kann nicht verwendet werden, um den Abbruch zu initiieren.</span><span class="sxs-lookup"><span data-stu-id="878a7-178">The token cannot be used to initiate cancellation.</span></span> <span data-ttu-id="878a7-179">Wenn das besitzende Objekt aufruft <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, auf das Abbruchtoken, das die abgebrochene Eigenschaft festgelegt ist auf "true".</span><span class="sxs-lookup"><span data-stu-id="878a7-179">When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true.</span></span> <span data-ttu-id="878a7-180">Die Objekte, die die Benachrichtigung empfangen können Antworten Verfolgungsinformationen geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="878a7-180">The objects that receive the notification can respond in whatever manner is appropriate.</span></span> </p>'
    syntax:
      content: public class CancellationToken
  - uid: 'system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)'
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    name: 'updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    nameWithType: 'StateProvider.updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> system.fabric.StateProvider.updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    type: Method
    summary: "<p><span data-ttu-id=\"878a7-181\">Ein Replikat zeigt an, dass die Konfiguration einer Replikatgruppe aufgrund einer Änderung der geändert oder ändern, mit dem primären Replikat versucht.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-181\">Indicates to a replica that the configuration of a replica set has changed due to a change or attempted change to the Primary replica.</span></span> <span data-ttu-id=\"878a7-182\">Die Änderung tritt aufgrund eines Fehlers oder Lastenausgleich des vorherigen primären Replikats.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-182\">The change occurs due to failure or load balancing of the previous Primary replica.</span></span> <span data-ttu-id=\"878a7-183\"><xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> Änderungen fungieren als ein Hindernis durch Segmentieren Vorgänge in die genaue Konfiguration Zeiträume, in dem sie von einem bestimmten primären Replikat gesendet wurden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-183\"><xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> changes act as a barrier by segmenting operations into the exact configuration periods in which they were sent by a specific Primary replica.</span></span></p>\n<p><span data-ttu-id=\"878a7-184\">\r\n\r\n  <b>Hinweise:</b>die Informationen in den <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync (Epoche SequenceNumber, CancellationToken)</xref> -Methode ermöglicht dem Dienst um einen Vektor Status aufrecht eine Liste der einzelnen Epoche ist die das Replikat empfangen wurde, und die maximale LSN, die sie enthalten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-184\">\r\n\r\n  <b>Remarks:</b>The information in the <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync(Epoch, SequenceNumber, CancellationToken)</xref> method enables the service to maintain a progress vector, which is a list of each epoch that the replica has received, and the maximum LSN that they contained.</span></span> <span data-ttu-id=\"878a7-185\">Die Bearbeitung Vektordaten werden zusammen mit den aktuellen angewendeten maximale LSN eignet sich für ein sekundäres Replikat während des Kopiervorgangs zu senden, um den Status des Replikats zu beschreiben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-185\">The progress vector data along with the current applied maximum LSN is useful for a Secondary replica to send during the copy operation to describe the state of the replica.</span></span> <span data-ttu-id=\"878a7-186\">Vergleichen von Fortschritt Vektoren, die während des Kopiervorgangs von sekundären Replikaten empfangen werden kann primäre Replikaten zu bestimmen, ob das sekundäre Replikat auf dem neuesten Stand ist, welchen Status an das sekundäre Replikat gesendet werden muss und gibt an, ob das sekundäre Replikat \"false\" Fortschritt erzielt hat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-186\">Comparing progress vectors that are received from Secondary replicas during the copy operation enables Primary replicas to determine whether the Secondary replica is up-to-date, what state must be sent to the Secondary replica, and whether the Secondary replica has made false progress.</span></span> <span data-ttu-id=\"878a7-187\">\"False\" Status bedeutet, dass ein sekundäres Replikat meldet wurde eine LSN in einer vorherigen Epoche größer als die LSN, die das primäre Replikat in seinen Fortschritt Vektor verfügt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-187\">False progress means that a secondary replica reports an LSN in a previous epoch was greater than the LSN that the Primary replica has in its progress vector.</span></span> </p>"
    syntax: *ref_1
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.onDataLossAsync(CancellationToken)
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: onDataLossAsync(CancellationToken cancellationToken)
    nameWithType: VolatileActorStateProvider.onDataLossAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Boolean> microsoft.servicefabric.actors.VolatileActorStateProvider.onDataLossAsync(CancellationToken cancellationToken)
    type: Method
    summary: "<p><span data-ttu-id=\"878a7-188\">Gibt an, dass ein schreibquorums Replikate in dieser Replikatsatz verloren gegangen ist und daher Datenverlust aufgetreten sind.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-188\">Indicates that a write quorum of replicas in this replica set has been lost, and that therefore data loss might have occurred.</span></span> <span data-ttu-id=\"878a7-189\">Die Replikatgruppe besteht aus der Mehrheit der Replikate, die das primäre Replikat enthält.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-189\">The replica set consists of a majority of replicas, which includes the Primary replica.</span></span></p>\n<p><span data-ttu-id=\"878a7-190\">\r\n\r\n  <b>Beschreibung:</b>bei die Service Fabric-Laufzeit einen Fehler des ein Quorum der Replikate, der das primäre Replikat enthält berücksichtigt, wählt ein neues primäres Replikat und sofort ruft diese Methode auf dem neuen primären Replikat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-190\">\r\n\r\n  <b>Remarks:</b>When the Service Fabric runtime observes the failure of a quorum of replicas, which includes the Primary replica, it elects a new Primary replica and immediately calls this method on the new Primary replica.</span></span> <span data-ttu-id=\"878a7-191\">Ein primäres Replikat, das eines möglichen Datenverlusts informiert ist die Möglichkeit, den Zustand aus einer externen Datenquelle wiederherstellen oder kann weiterhin mit dem Status ausgeführt wird, die derzeit.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-191\">A Primary replica that is informed of possible data loss can choose to restore its state from some external data source or can continue to run with the state that it currently has.</span></span> <span data-ttu-id=\"878a7-192\">Wenn der Dienst mit seinem aktuellen Zustand ausgeführt werden weiterhin, sollte es \"false\" von dieser Methode zurückgeben, der gibt an, dass keine Änderung vorgenommen wurde.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-192\">If the service continues to run with its current state, it should return false from this method, which indicates that no state change has been made.</span></span> <span data-ttu-id=\"878a7-193\">Wenn es wiederhergestellt oder geändert Datenbankzustands, z. B. unvollständige Arbeit ein Rollback sollte \"true\" zurückgeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-193\">If it has restored or altered its state, such as rolling back incomplete work, it should return true.</span></span> <span data-ttu-id=\"878a7-194\">Wenn \"true\" zurückgegeben wird, muss der Status in den anderen Replikaten angenommen werden, falsch zu sein.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-194\">If true is returned, then the state in other replicas must be assumed to be incorrect.</span></span> <span data-ttu-id=\"878a7-195\">Aus diesem Grund die Service Fabric-Laufzeit die anderen Replikaten in der Replikatgruppe entfernt und erneut erstellt werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-195\">Therefore, the Service Fabric runtime removes the other replicas from the replica set and recreates them.</span></span> </p>"
    syntax:
      content: public CompletableFuture<Boolean> onDataLossAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"878a7-196\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-196\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 7e53ac82
        description: '<p><span data-ttu-id="878a7-197">Gibt <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.CompletableFuture</xref> des Typs <xref uid="" data-throw-if-not-resolved="false">java.lang.Boolean</xref>, Wert, der angibt, ob der Zustand geändert hat.</span><span class="sxs-lookup"><span data-stu-id="878a7-197">Returns <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.CompletableFuture</xref> of type <xref uid="" data-throw-if-not-resolved="false">java.lang.Boolean</xref>, that indicates whether state changed.</span></span> <span data-ttu-id="878a7-198">Die Methode gibt "true", falls es sich ändert, oder wenn es nicht geändert hat, gibt die Methode "false" zurück.</span><span class="sxs-lookup"><span data-stu-id="878a7-198">When it changed, the method returns true or when it did not change, the method returns false.</span></span> </p>'
  - uid: system.fabric._operation_data_stream
    parent: system.fabric
    href: system.fabric._operation_data_stream.yml
    name: OperationDataStream
    nameWithType: OperationDataStream
    fullName: system.fabric.OperationDataStream
    type: Interface
    syntax:
      content: public interface OperationDataStream
  - uid: microsoft.servicefabric.actors._volatile_actor_state_provider.getCopyContext()
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: getCopyContext()
    nameWithType: VolatileActorStateProvider.getCopyContext()
    fullName: OperationDataStream microsoft.servicefabric.actors.VolatileActorStateProvider.getCopyContext()
    type: Method
    summary: "<p><span data-ttu-id=\"878a7-199\">Kontext auf einem sekundären Replikat erhält, nachdem es erstellt und geöffnet, um den Kontext mit dem primären Replikat zu senden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-199\">Obtains context on a Secondary replica after it is created and opened to send context to the Primary replica.</span></span></p>\n<p><span data-ttu-id=\"878a7-200\">\r\n\r\n  <b>Hinweise:</b>das primäre Replikat analysiert den Kontext und zurücksendet Status über <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">StateProvider #GetCopyState(SequenceNumber, OperationDataStream)</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-200\">\r\n\r\n  <b>Remarks:</b>The Primary replica analyzes the context and sends back state via <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref>.</span></span> <span data-ttu-id=\"878a7-201\"><xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyContext()</xref> für neu erstellte im Leerlauf sekundären Replikate aufgerufen wird, und bietet einen Mechanismus zum asynchron eine bidirektionale Konversation mit dem primären Replikat hergestellt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-201\"><xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyContext()</xref> is called on newly created, idle Secondary replicas and provides a mechanism to asynchronously establish a bidirectional conversation with the Primary replica.</span></span> <span data-ttu-id=\"878a7-202\">Das sekundäre Replikat sendet <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationData</xref> Objekte, die mit dem das primäre Replikat den Status des Sammelns von Kontext auf dem sekundären Replikat bestimmen kann.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-202\">The Secondary replica sends <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationData</xref> objects with which the Primary replica can determine the progress of collecting context on the Secondary replica.</span></span> <span data-ttu-id=\"878a7-203\">Das primäre Replikat sendet seinerseits den erforderlichen Zustand zurück.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-203\">The Primary replica responds by sending the required state back.</span></span> <span data-ttu-id=\"878a7-204\">Finden Sie unter <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">StateProvider #GetCopyState(SequenceNumber, OperationDataStream)</xref> an das primäre Replikat für die andere Hälfte des Austausches.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-204\">See <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> at the Primary replica for the other half of the exchange.</span></span> <span data-ttu-id=\"878a7-205\">Für InMemory-Dienste die <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyContext()</xref> Methode wird nicht aufgerufen, da der Status der sekundären Replikate bekannt ist (sie sind leer und benötigen alle Status).</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-205\">For in-memory services, the <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyContext()</xref> method is not called, as the state of the Secondary replicas is known (they are empty and will require all of the state).</span></span> </p>"
    syntax:
      content: public OperationDataStream getCopyContext()
      return:
        type: system.fabric._operation_data_stream
        description: <p><span data-ttu-id="878a7-206">Gibt <xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref>.</span><span class="sxs-lookup"><span data-stu-id="878a7-206">Returns <xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref>.</span></span> </p>
  - uid: 'system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)'
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    name: 'getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    nameWithType: 'StateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    fullName: 'OperationDataStream system.fabric.StateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    type: Method
    summary: "<p><span data-ttu-id=\"878a7-207\">Ruft die Status für ein primäres Replikat, das erforderlich sind, um ein sekundäres Replikat zu erstellen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-207\">Obtains state on a Primary replica that is required to build a Secondary replica.</span></span></p>\n<p><span data-ttu-id=\"878a7-208\">\r\n\r\n  <b>Hinweise:</b>genauso <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> ermöglicht das sekundäre Replikat das primäre Replikat über Kontext an ein <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>, <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState (SequenceNumber, OperationDataStream)</xref> ermöglicht das primäre Replikat antwortet ein <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-208\">\r\n\r\n  <b>Remarks:</b>Just as <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> enables the Secondary replica to send context to the Primary replica via an <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>, <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> enables the Primary replica to respond with an <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>.</span></span> <span data-ttu-id=\"878a7-209\">Der Datenstrom enthält Objekte, die an das sekundäre Replikat über übermittelt werden die <xref uid=\"system.fabric._state_replicator.getCopyStream()\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#getCopyStream()</xref> Methode der <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> Klasse.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-209\">The stream contains objects that are delivered to the Secondary replica via the <xref uid=\"system.fabric._state_replicator.getCopyStream()\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#getCopyStream()</xref> method of the <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> class.</span></span> <span data-ttu-id=\"878a7-210\">Implementieren Sie die Objekte <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> und die angegebenen Daten enthalten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-210\">The objects implement <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> and contain the specified data.</span></span> <span data-ttu-id=\"878a7-211\">Wenn das primäre Replikat dieser Aufruf empfängt, sollte er erstellen und Zurückgeben einer anderen <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref> enthält <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-211\">When the Primary replica receives this call, it should create and return another <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref> that contains <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref>.</span></span> <span data-ttu-id=\"878a7-212\"><xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> des datensynchronisierungsstatus darstellt, die das sekundäre Replikat</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-212\"><xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> represents the data/state that the Secondary replica</span></span> </p>"
    syntax: *ref_2
  - uid: system.fabric._state_provider.getCopyContext()
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    name: getCopyContext()
    nameWithType: StateProvider.getCopyContext()
    fullName: OperationDataStream system.fabric.StateProvider.getCopyContext()
    type: Method
    summary: "<p><span data-ttu-id=\"878a7-213\">Kontext auf einem sekundären Replikat erhält, nachdem es erstellt und geöffnet, um den Kontext mit dem primären Replikat zu senden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-213\">Obtains context on a Secondary replica after it is created and opened to send context to the Primary replica.</span></span></p>\n<p><span data-ttu-id=\"878a7-214\">\r\n\r\n  <b>Hinweise:</b>das primäre Replikat analysiert den Kontext und zurücksendet Status über <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState (SequenceNumber, OperationDataStream)</xref> .</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-214\">\r\n\r\n  <b>Remarks:</b>The Primary replica analyzes the context and sends back state via <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> .</span></span> <span data-ttu-id=\"878a7-215\"><xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> für neu erstellte im Leerlauf sekundären Replikate aufgerufen wird, und bietet einen Mechanismus zum asynchron eine bidirektionale Konversation mit dem primären Replikat hergestellt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-215\"><xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> is called on newly created, idle Secondary replicas and provides a mechanism to asynchronously establish a bidirectional conversation with the Primary replica.</span></span> <span data-ttu-id=\"878a7-216\">Das sekundäre Replikat sendet <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> Objekte, die mit dem das primäre Replikat den Status des Sammelns von Kontext auf dem sekundären Replikat bestimmen kann.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-216\">The Secondary replica sends <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> objects with which the Primary replica can determine the progress of collecting context on the Secondary replica.</span></span> <span data-ttu-id=\"878a7-217\">Das primäre Replikat sendet seinerseits den erforderlichen Zustand zurück.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-217\">The Primary replica responds by sending the required state back.</span></span> <span data-ttu-id=\"878a7-218\">Finden Sie unter <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState (SequenceNumber, OperationDataStream)</xref> an das primäre Replikat für die andere Hälfte des Austausches.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-218\">See <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> at the Primary replica for the other half of the exchange.</span></span> <span data-ttu-id=\"878a7-219\">Für InMemory-Dienste die <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> Methode wird nicht aufgerufen, da der Status der sekundären Replikate bekannt ist (sie sind leer und benötigen alle Status).</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-219\">For in-memory services, the <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> method is not called, as the state of the Secondary replicas is known (they are empty and will require all of the state).</span></span> </p>"
    syntax: *ref_3
  - uid: system.fabric._operation_data
    parent: system.fabric
    href: system.fabric._operation_data.yml
    name: OperationData
    nameWithType: OperationData
    fullName: system.fabric.OperationData
    type: Class
    syntax:
      content: public class OperationData
  - uid: 'microsoft.servicefabric.actors._volatile_actor_state_provider.getCopyState(SequenceNumber,OperationDataStream)'
    parent: microsoft.servicefabric.actors._volatile_actor_state_provider
    href: microsoft.servicefabric.actors._volatile_actor_state_provider.yml
    name: 'getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    nameWithType: 'VolatileActorStateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    fullName: 'OperationDataStream microsoft.servicefabric.actors.VolatileActorStateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    type: Method
    summary: "<p><span data-ttu-id=\"878a7-220\">Ruft die Status für ein primäres Replikat, das erforderlich sind, um ein sekundäres Replikat zu erstellen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-220\">Obtains state on a Primary replica that is required to build a Secondary replica.</span></span></p>\n<p><span data-ttu-id=\"878a7-221\">\r\n\r\n  <b>Hinweise:</b>genauso <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyContext()</xref> ermöglicht das sekundäre Replikat das primäre Replikat über Kontext an ein <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationDataStream</xref>, <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\"> StateProvider #GetCopyState(SequenceNumber, OperationDataStream)</xref> ermöglicht das primäre Replikat antwortet ein <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationDataStream</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-221\">\r\n\r\n  <b>Remarks:</b>Just as <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyContext()</xref> enables the Secondary replica to send context to the Primary replica via an <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationDataStream</xref>, <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> enables the Primary replica to respond with an <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationDataStream</xref>.</span></span> <span data-ttu-id=\"878a7-222\">Der Datenstrom enthält Objekte, die an das sekundäre Replikat über übermittelt werden die <xref uid=\"system.fabric._state_replicator.getCopyStream()\" data-throw-if-not-resolved=\"false\">StateReplicator#getCopyStream()</xref> Methode der <xref uid=\"\" data-throw-if-not-resolved=\"false\">FabricReplicator</xref> Klasse.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-222\">The stream contains objects that are delivered to the Secondary replica via the <xref uid=\"system.fabric._state_replicator.getCopyStream()\" data-throw-if-not-resolved=\"false\">StateReplicator#getCopyStream()</xref> method of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">FabricReplicator</xref> class.</span></span> <span data-ttu-id=\"878a7-223\">Implementieren Sie die Objekte <xref uid=\"\" data-throw-if-not-resolved=\"false\">Vorgang</xref> und die angegebenen Daten enthalten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-223\">The objects implement <xref uid=\"\" data-throw-if-not-resolved=\"false\">Operation</xref> and contain the specified data.</span></span> <span data-ttu-id=\"878a7-224\">Wenn das primäre Replikat dieser Aufruf empfängt, sollte er erstellen und Zurückgeben einer anderen <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationDataStream</xref> enthält <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationData</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-224\">When the Primary replica receives this call, it should create and return another <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationDataStream</xref> that contains <xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationData</xref>.</span></span> <span data-ttu-id=\"878a7-225\"><xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationData</xref> des datensynchronisierungsstatus darstellt, die das sekundäre Replikat</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-225\"><xref uid=\"\" data-throw-if-not-resolved=\"false\">OperationData</xref> represents the data/state that the Secondary replica</span></span> </p>"
    syntax:
      content: 'public OperationDataStream getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
      parameters:
        - id: upToSequenceNumber
          type: system.fabric._sequence_number
          description: '<p><span data-ttu-id="878a7-226">Die maximale letzte Sequenznummer (LSN), die im Stream über Kopiervorgang platziert werden, sollten die <xref uid="system.fabric._state_replicator.getCopyStream()" data-throw-if-not-resolved="false">StateReplicator#getCopyStream()</xref> Methode.</span><span class="sxs-lookup"><span data-stu-id="878a7-226">The maximum last sequence number (LSN) that should be placed in the copy stream via the <xref uid="system.fabric._state_replicator.getCopyStream()" data-throw-if-not-resolved="false">StateReplicator#getCopyStream()</xref> method.</span></span> <span data-ttu-id="878a7-227">LSNs, die größer als diese Zahl werden an das sekundäre Replikat als Teil der replikationsdatenstrom über übermittelt die <xref uid="system.fabric._state_replicator.getReplicationStream()" data-throw-if-not-resolved="false">StateReplicator#getReplicationStream()</xref> Methode.</span><span class="sxs-lookup"><span data-stu-id="878a7-227">LSNs greater than this number are delivered to the Secondary replica as a part of the replication stream via the <xref uid="system.fabric._state_replicator.getReplicationStream()" data-throw-if-not-resolved="false">StateReplicator#getReplicationStream()</xref> method.</span></span> </p>'
        - id: copyContext
          type: system.fabric._operation_data_stream
          description: '<p><span data-ttu-id="878a7-228">Ein <xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref> , enthält die <xref uid="" data-throw-if-not-resolved="false">OperationData</xref> Objekte, die vom sekundären Replikat erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="878a7-228">An <xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref> that contains the <xref uid="" data-throw-if-not-resolved="false">OperationData</xref> objects that are created by the Secondary replica.</span></span> <span data-ttu-id="878a7-229">erfordert die Stand</span><span class="sxs-lookup"><span data-stu-id="878a7-229">requires to catch up to the provided</span></span> </p>'
      return:
        type: system.fabric._operation_data_stream
        description: <p><span data-ttu-id="878a7-230">Gibt <xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref>.</span><span class="sxs-lookup"><span data-stu-id="878a7-230">Returns <xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref>.</span></span> </p>
  - uid: system.fabric._state_replicator.getCopyStream()
    parent: system.fabric._state_replicator
    href: system.fabric._state_replicator.yml
    name: getCopyStream()
    nameWithType: StateReplicator.getCopyStream()
    fullName: OperationStream system.fabric.StateReplicator.getCopyStream()
    type: Method
    summary: <p><span data-ttu-id="878a7-231">Ruft kopieren stream</span><span class="sxs-lookup"><span data-stu-id="878a7-231">Gets copy stream</span></span> </p>
    syntax:
      content: public OperationStream getCopyStream()
      return:
        type: system.fabric._operation_stream
        description: '<p><span data-ttu-id="878a7-232">Enthält die zurückgegebene CopyStream <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> Objekten implementiert, <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Vorgang</xref>.</span><span class="sxs-lookup"><span data-stu-id="878a7-232">The returned CopyStream contains <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects that implement <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref>.</span></span> <span data-ttu-id="878a7-233">Die <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> -Objekte werden abgerufen, von der CopyState <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">OperationDataStream</xref> , die das primäre Replikat zurückgibt <xref uid="system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)" data-throw-if-not-resolved="false">StateProvider #GetCopyState(SequenceNumber, OperationDataStream)</xref>.</span><span class="sxs-lookup"><span data-stu-id="878a7-233">The <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects are obtained from the CopyState <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">OperationDataStream</xref> that the Primary replica returns from <xref uid="system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)" data-throw-if-not-resolved="false">StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref>.</span></span> <span data-ttu-id="878a7-234">Wenn ein Replikat erstellt und auf den aktuellen Stand ist, erhalten die CopyStream und sollte beginnen zu senden, anwenden und bestätigen das Kopieren von Objekten, die implementieren <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Vorgang</xref>.</span><span class="sxs-lookup"><span data-stu-id="878a7-234">When a replica is created and has to catch up, it should obtain the CopyStream and begin to send, apply, and acknowledge the Copy objects that implement <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref>.</span></span> <span data-ttu-id="878a7-235">Parallel, reagiert das Replikat auf den entsprechenden <xref uid="system.fabric._state_provider.getCopyContext()" data-throw-if-not-resolved="false">StateProvider#getCopyContext()</xref> und <xref uid="" data-throw-if-not-resolved="false">OperationDataStream#getNextAsync(CancellationToken)</xref>aufrufen.</span><span class="sxs-lookup"><span data-stu-id="878a7-235">In parallel, the replica responds to the corresponding <xref uid="system.fabric._state_provider.getCopyContext()" data-throw-if-not-resolved="false">StateProvider#getCopyContext()</xref> and <xref uid="" data-throw-if-not-resolved="false">OperationDataStream#getNextAsync(CancellationToken)</xref>calls.</span></span> <span data-ttu-id="878a7-236">Der Datenstrom ist leer, wenn das zurückgegebene <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Vorgang</xref> Methode ist null.</span><span class="sxs-lookup"><span data-stu-id="878a7-236">The stream is empty when the returned <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref> method is null.</span></span> </p>'
  - uid: system.fabric._state_replicator.getReplicationStream()
    parent: system.fabric._state_replicator
    href: system.fabric._state_replicator.yml
    name: getReplicationStream()
    nameWithType: StateReplicator.getReplicationStream()
    fullName: OperationStream system.fabric.StateReplicator.getReplicationStream()
    type: Method
    summary: <p><span data-ttu-id="878a7-237">Ruft die replikationsdatenstrom ab.</span><span class="sxs-lookup"><span data-stu-id="878a7-237">Gets replication stream.</span></span> </p>
    syntax:
      content: public OperationStream getReplicationStream()
      return:
        type: system.fabric._operation_stream
        description: '<p><span data-ttu-id="878a7-238">Implementiert die ReplicationStream <xref uid="system.fabric._operation_stream" data-throw-if-not-resolved="false">OperationStream</xref>.</span><span class="sxs-lookup"><span data-stu-id="878a7-238">The ReplicationStream implements <xref uid="system.fabric._operation_stream" data-throw-if-not-resolved="false">OperationStream</xref>.</span></span> <span data-ttu-id="878a7-239">Enthält die ReplicationStream <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> Objekten implementiert, <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Vorgang</xref>.</span><span class="sxs-lookup"><span data-stu-id="878a7-239">The ReplicationStream contains <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects that implement <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref>.</span></span> <span data-ttu-id="878a7-240">Die Objekte werden vom primären Replikat über bereitgestellt <xref uid="system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)" data-throw-if-not-resolved="false">StateReplicator #ReplicateAsync(OperationData, SequenceNumber, CancellationToken)</xref>.</span><span class="sxs-lookup"><span data-stu-id="878a7-240">The objects are provided by the Primary replica via <xref uid="system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)" data-throw-if-not-resolved="false">StateReplicator#replicateAsync(OperationData, SequenceNumber, CancellationToken)</xref>.</span></span> <span data-ttu-id="878a7-241">Im Allgemeinen sollte ein sekundäres Replikat senden <xref uid="" data-throw-if-not-resolved="false">OperationStream#getOperationAsync(CancellationToken)</xref>.</span><span class="sxs-lookup"><span data-stu-id="878a7-241">Generally a Secondary replica should send <xref uid="" data-throw-if-not-resolved="false">OperationStream#getOperationAsync(CancellationToken)</xref>.</span></span> <span data-ttu-id="878a7-242">Service Fabric Services dazu nicht notwendig, in der Regel Dienste sollten alle übertragen <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> Objekten aus der Kopie zuerst zu streamen, übertragen und dann Vorgänge aus dem replikationsdatenstrom.</span><span class="sxs-lookup"><span data-stu-id="878a7-242">Although Service Fabric does not require services to do so, generally services should transfer all <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">OperationData</xref> objects out of the copy stream first, and then transfer operations out of the replication stream.</span></span> <span data-ttu-id="878a7-243">Die Übertragung von beide Kopien parallel wird unterstützt, aber erhöht die Komplexität des Anwendens der Zustand ordnungsgemäß aktualisiert und wird nur für erweiterte Dienste empfohlen.</span><span class="sxs-lookup"><span data-stu-id="878a7-243">The transfer from both copies in parallel is supported but increases the complexity of applying state updates correctly and is recommended only for advanced services.</span></span> <span data-ttu-id="878a7-244">Der Datenstrom ist leer, wenn das zurückgegebene <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Vorgang</xref> Methode ist null.</span><span class="sxs-lookup"><span data-stu-id="878a7-244">The stream is empty when the returned <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">Operation</xref> method is null.</span></span> </p>'
  - uid: system.fabric._fabric_replicator
    parent: system.fabric
    href: system.fabric._fabric_replicator.yml
    name: FabricReplicator
    nameWithType: FabricReplicator
    fullName: system.fabric.FabricReplicator
    type: Class
    summary: "<p><span data-ttu-id=\"878a7-245\">Repliziert den Status für hohe Verfügbarkeit und Zuverlässigkeit.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-245\">Replicates state for high availability and reliability.</span></span> </p>\n<p><span data-ttu-id=\"878a7-246\">\r\n\r\n  <b>Hinweise:</b>stellt die Standardimplementierung von der <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>, <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator</xref>, und <xref uid=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.PrimaryReplicator </xref> Schnittstellen, die Benutzerdienste werden, zusammen mit ihrer Implementierung von verwendet können der <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref> Schnittstelle.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-246\">\r\n\r\n  <b>Remarks:</b>Provides the default implementation of the <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>, <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator</xref>, and <xref uid=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.PrimaryReplicator</xref> interfaces, which user services can use, along with their implementation of the <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref> interface.</span></span> <span data-ttu-id=\"878a7-247\">Eine Instanz von der <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> Klasse abgerufen wird, über die <xref uid=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServicePartition#createReplicator (system.fabric.StateProvider, system.fabric.ReplicatorSettings) </xref> -Methode, die in umgewandelt werden kann <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> für die Verwendung.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-247\">An instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> class is obtained via the <xref uid=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServicePartition#createReplicator( system.fabric.StateProvider, system.fabric.ReplicatorSettings)</xref> method, which can be cast to <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> for use.</span></span> </p>"
    syntax:
      content: public class FabricReplicator implements Replicator
  - uid: system.fabric._operation
    parent: system.fabric
    href: system.fabric._operation.yml
    name: Operation
    nameWithType: Operation
    fullName: system.fabric.Operation
    type: Interface
    summary: "<p><span data-ttu-id=\"878a7-248\">\r\n\r\n  <b>Hinweise:</b>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> ist die Basisschnittstelle, die Änderungen beschreibt, die an ein sekundäres Replikat übermittelt werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-248\">\r\n\r\n  <b>Remarks:</b>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> is the base interface that describes state changes that are delivered to a Secondary replica.</span></span> <span data-ttu-id=\"878a7-249\">Sie enthalten die <xref uid=\"system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#replicateAsync (OperationData SequenceNumber, system.fabric.CancellationToken)</xref> und identifizieren Sie die Sequenznummer und andere Informationen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"878a7-249\">They contain the <xref uid=\"system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#replicateAsync(OperationData, SequenceNumber, system.fabric.CancellationToken)</xref> and the sequence number and other identifying information.</span></span> </p>"
    syntax:
      content: public interface Operation