### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher
    id: _service_remoting_dispatcher
    parent: microsoft.servicefabric.services.remoting.runtime
    children:
      - 'microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.handleOneWay(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])'
      - 'microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.requestResponseAsync(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])'
      - 'microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.ServiceRemotingDispatcher(ServiceContext,Service)'
    href: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.yml
    langs:
      - java
    name: ServiceRemotingDispatcher
    nameWithType: ServiceRemotingDispatcher
    fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceRemotingDispatcher.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceRemotingDispatcher.java
      startLine: 19
    package: microsoft.servicefabric.services.remoting.runtime
    syntax:
      content: public class ServiceRemotingDispatcher implements ServiceRemotingMessageHandler
    inheritance:
      - java.lang.Object
      - microsoft.servicefabric.services.remoting._service_remoting_message_handler
  - uid: 'microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.handleOneWay(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])'
    id: 'handleOneWay(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])'
    parent: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher
    href: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.yml
    langs:
      - java
    name: 'handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)'
    nameWithType: 'ServiceRemotingDispatcher.handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)'
    fullName: 'void microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)'
    overload: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.handleOneWay*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceRemotingDispatcher.java
      startLine: 55
    package: microsoft.servicefabric.services.remoting.runtime
    summary: |-
      <p>Eine unidirektionale Nachricht vom Client verarbeitet.</p>
      <p></p>
    syntax:
      content: 'public void handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)'
      parameters:
        - id: requestContext
          type: microsoft.servicefabric.services.remoting._service_remoting_request_context
          description: <p>Anforderungskontext - enthält zusätzliche Informationen zur Anforderung </p>
        - id: messageHeaders
          type: microsoft.servicefabric.services.remoting._service_remoting_message_headers
          description: <p>Anforderungsnachrichtenheadern </p>
        - id: requestBody
          type: ccd9418d
          description: <p>Nachrichtentext </p>
    overridden: 'microsoft.servicefabric.services.remoting._service_remoting_message_handler.handleOneWay(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])'
  - uid: 'microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.requestResponseAsync(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])'
    id: 'requestResponseAsync(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])'
    parent: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher
    href: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.yml
    langs:
      - java
    name: 'requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)'
    nameWithType: 'ServiceRemotingDispatcher.requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)'
    fullName: 'CompletableFuture<byte[]> microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)'
    overload: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.requestResponseAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceRemotingDispatcher.java
      startLine: 43
    package: microsoft.servicefabric.services.remoting.runtime
    summary: |-
      <p>Verarbeitet eine Nachricht vom Client, der eine Antwort vom Dienst erforderlich sind.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<byte[]> requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)'
      parameters:
        - id: requestContext
          type: microsoft.servicefabric.services.remoting._service_remoting_request_context
          description: <p>Anforderungskontext - enthält zusätzliche Informationen zur Anforderung </p>
        - id: messageHeaders
          type: microsoft.servicefabric.services.remoting._service_remoting_message_headers
          description: <p>Anforderungsnachrichtenheadern </p>
        - id: requestBody
          type: ccd9418d
          description: <p>Nachrichtentext </p>
      return:
        type: 5fe2dfa4
        description: <p>Antworttext </p>
    overridden: 'microsoft.servicefabric.services.remoting._service_remoting_message_handler.requestResponseAsync(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])'
  - uid: 'microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.ServiceRemotingDispatcher(ServiceContext,Service)'
    id: 'ServiceRemotingDispatcher(ServiceContext,Service)'
    parent: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher
    href: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.yml
    langs:
      - java
    name: 'ServiceRemotingDispatcher(ServiceContext serviceContext, Service service)'
    nameWithType: 'ServiceRemotingDispatcher.ServiceRemotingDispatcher(ServiceContext serviceContext, Service service)'
    fullName: 'microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.ServiceRemotingDispatcher(ServiceContext serviceContext, Service service)'
    overload: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.ServiceRemotingDispatcher*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceRemotingDispatcher.java
      startLine: 25
    package: microsoft.servicefabric.services.remoting.runtime
    syntax:
      content: 'public ServiceRemotingDispatcher(ServiceContext serviceContext, Service service)'
      parameters:
        - id: serviceContext
          type: system.fabric._service_context
        - id: service
          type: microsoft.servicefabric.services.remoting._service
references:
  - uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.ServiceRemotingDispatcher*
    name: ServiceRemotingDispatcher
    nameWithType: ServiceRemotingDispatcher.ServiceRemotingDispatcher
    fullName: microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.ServiceRemotingDispatcher
    package: microsoft.servicefabric.services.remoting.runtime
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: 5fe2dfa4
    spec.java:
      - name: 'CompletableFuture<byte[]>'
        fullName: 'CompletableFuture<byte[]>'
  - uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.requestResponseAsync*
    name: requestResponseAsync
    nameWithType: ServiceRemotingDispatcher.requestResponseAsync
    fullName: 'CompletableFuture<byte[]> microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.requestResponseAsync'
    package: microsoft.servicefabric.services.remoting.runtime
  - uid: microsoft.servicefabric.services.remoting.runtime._service_remoting_dispatcher.handleOneWay*
    name: handleOneWay
    nameWithType: ServiceRemotingDispatcher.handleOneWay
    fullName: void microsoft.servicefabric.services.remoting.runtime.ServiceRemotingDispatcher.handleOneWay
    package: microsoft.servicefabric.services.remoting.runtime
  - uid: microsoft.servicefabric.services.remoting._service_remoting_message_handler
    parent: microsoft.servicefabric.services.remoting
    href: microsoft.servicefabric.services.remoting._service_remoting_message_handler.yml
    name: ServiceRemotingMessageHandler
    nameWithType: ServiceRemotingMessageHandler
    fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler
    type: Interface
    summary: '<p>Definiert die Schnittstelle, die von implementiert werden muss, die <xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref> zum Empfangen von Nachrichten aus dem Remoting-Transport. </p>'
    syntax:
      content: public interface ServiceRemotingMessageHandler
  - uid: microsoft.servicefabric.actors._actor_service_remoting_dispatcher
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_service_remoting_dispatcher.yml
    name: ActorServiceRemotingDispatcher
    nameWithType: ActorServiceRemotingDispatcher
    fullName: microsoft.servicefabric.actors.ActorServiceRemotingDispatcher
    type: Class
    summary: '<p>Stellt eine Implementierung von <xref uid="" data-throw-if-not-resolved="false">ServiceRemotingMessageHandler</xref> können, die dispatch-Nachrichten mit einem Akteur-Dienst und den Akteuren, die in der Dienst gehostet. </p>'
    syntax:
      content: public class ActorServiceRemotingDispatcher extends ServiceRemotingDispatcher
  - uid: microsoft.servicefabric.services.remoting._service
    parent: microsoft.servicefabric.services.remoting
    href: microsoft.servicefabric.services.remoting._service.yml
    name: Service
    nameWithType: Service
    fullName: microsoft.servicefabric.services.remoting.Service
    type: Interface
    summary: '<p>Dies ist die Markierungsschnittstelle zum Aktivieren von Remoting-Schnittstelle für Dienste. Ein <xref uid="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false">ServiceRemotingListener</xref> bietet Remoting für alle Schnittstellen vom Dienst implementiert, die von dieser Schnittstelle ableiten. Die Remoteausführung Schnittstellen können über einen Proxyserver auf dem Client zugegriffen werden. </p>'
    syntax:
      content: public interface Service
  - uid: microsoft.servicefabric.services.remoting.builder._service_method_dispatcher_base
    parent: microsoft.servicefabric.services.remoting.builder
    href: microsoft.servicefabric.services.remoting.builder._service_method_dispatcher_base.yml
    name: ServiceMethodDispatcherBase
    nameWithType: ServiceMethodDispatcherBase
    fullName: microsoft.servicefabric.services.remoting.builder.ServiceMethodDispatcherBase
    type: Class
    syntax:
      content: public class ServiceMethodDispatcherBase extends MethodDispatcherBaseWithSerializer
  - uid: system.fabric._service_context
    parent: system.fabric
    href: system.fabric._service_context.yml
    name: ServiceContext
    nameWithType: ServiceContext
    fullName: system.fabric.ServiceContext
    type: Class
    summary: '<p>Stellt den Kontext, in denen der Dienst unter dar. </p>'
    syntax:
      content: public class ServiceContext
  - uid: 'microsoft.servicefabric.services.remoting._service_remoting_message_handler.requestResponseAsync(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])'
    parent: microsoft.servicefabric.services.remoting._service_remoting_message_handler
    href: microsoft.servicefabric.services.remoting._service_remoting_message_handler.yml
    name: 'requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)'
    nameWithType: 'ServiceRemotingMessageHandler.requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)'
    fullName: 'CompletableFuture<byte[]> microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler.requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)'
    type: Method
    summary: |-
      <p>Verarbeitet eine Nachricht vom Client, der eine Antwort vom Dienst erforderlich sind.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<byte[]> requestResponseAsync(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)'
      parameters:
        - id: requestContext
          type: microsoft.servicefabric.services.remoting._service_remoting_request_context
          description: <p>Anforderungskontext - enthält zusätzliche Informationen zur Anforderung </p>
        - id: messageHeaders
          type: microsoft.servicefabric.services.remoting._service_remoting_message_headers
          description: <p>Anforderungsnachrichtenheadern </p>
        - id: requestBody
          type: ccd9418d
          description: <p>Nachrichtentext </p>
      return:
        type: 5fe2dfa4
        description: <p>Antworttext </p>
  - uid: microsoft.servicefabric.services.remoting._service_remoting_request_context
    parent: microsoft.servicefabric.services.remoting
    href: microsoft.servicefabric.services.remoting._service_remoting_request_context.yml
    name: ServiceRemotingRequestContext
    nameWithType: ServiceRemotingRequestContext
    fullName: microsoft.servicefabric.services.remoting.ServiceRemotingRequestContext
    type: Interface
    summary: '<p>Definiert die Schnittstelle, die implementiert werden muss, um die Anforderungskontext für die IServiceRemotingMessageHandler bereitzustellen. </p>'
    syntax:
      content: public interface ServiceRemotingRequestContext
  - uid: microsoft.servicefabric.services.remoting._service_remoting_message_headers
    parent: microsoft.servicefabric.services.remoting
    href: microsoft.servicefabric.services.remoting._service_remoting_message_headers.yml
    name: ServiceRemotingMessageHeaders
    nameWithType: ServiceRemotingMessageHeaders
    fullName: microsoft.servicefabric.services.remoting.ServiceRemotingMessageHeaders
    type: Class
    summary: '<p>Gibt die Header an, die zusammen mit einer Meldung ServiceRemoting gesendet werden. </p>'
    syntax:
      content: public class ServiceRemotingMessageHeaders
  - uid: 'microsoft.servicefabric.services.remoting._service_remoting_message_handler.handleOneWay(ServiceRemotingRequestContext,ServiceRemotingMessageHeaders,byte [])'
    parent: microsoft.servicefabric.services.remoting._service_remoting_message_handler
    href: microsoft.servicefabric.services.remoting._service_remoting_message_handler.yml
    name: 'handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)'
    nameWithType: 'ServiceRemotingMessageHandler.handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)'
    fullName: 'void microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler.handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)'
    type: Method
    summary: |-
      <p>Eine unidirektionale Nachricht vom Client verarbeitet.</p>
      <p></p>
    syntax:
      content: 'public void handleOneWay(ServiceRemotingRequestContext requestContext, ServiceRemotingMessageHeaders messageHeaders, byte[] requestBody)'
      parameters:
        - id: requestContext
          type: microsoft.servicefabric.services.remoting._service_remoting_request_context
          description: <p>Anforderungskontext - enthält zusätzliche Informationen zur Anforderung </p>
        - id: messageHeaders
          type: microsoft.servicefabric.services.remoting._service_remoting_message_headers
          description: <p>Anforderungsnachrichtenheadern </p>
        - id: requestBody
          type: ccd9418d
          description: <p>Nachrichtentext </p>
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p>Ein <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> wird verwendet, um die Benachrichtigung verteilt wird, dass Vorgänge abgebrochen werden sollen. Sie erstellen ein Abbruchtoken, das durch die Instanziierung einer <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> -Objekt, das Abbruchtoken verwaltet entnommen seine <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken() </xref> Methode. Übergeben Sie dann das Abbruchtoken, das auf eine beliebige Anzahl von Vorgängen, die Nachricht vom Abbruch erhalten soll. Das Token kann nicht verwendet werden, um den Abbruch zu initiieren. Wenn das besitzende Objekt aufruft <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, auf das Abbruchtoken, das die abgebrochene Eigenschaft festgelegt ist auf "true". Die Objekte, die die Benachrichtigung empfangen können Antworten Verfolgungsinformationen geeignet ist. </p>'
    syntax:
      content: public class CancellationToken