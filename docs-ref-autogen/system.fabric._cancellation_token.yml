### YamlMime:ManagedReference
items:
  - uid: system.fabric._cancellation_token
    id: _cancellation_token
    parent: system.fabric
    children:
      - system.fabric._cancellation_token.canBeCancelled()
      - system.fabric._cancellation_token.close()
      - system.fabric._cancellation_token.getDefault()
      - system.fabric._cancellation_token.isCancelled()
      - system.fabric._cancellation_token.registerCancellationCallback(Runnable)
      - 'system.fabric._cancellation_token.registerCancellationCallback(String,Runnable)'
      - system.fabric._cancellation_token.throwIfCancellationRequested()
      - system.fabric._cancellation_token.unregisterCancellationCallback(Runnable)
      - 'system.fabric._cancellation_token.unregisterCancellationCallback(String,Runnable)'
    href: system.fabric._cancellation_token.yml
    langs:
      - java
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/CancellationToken.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationToken.java
      startLine: 18
    package: system.fabric
    summary: '<p><span data-ttu-id="f16b5-101">Ein <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> wird verwendet, um die Benachrichtigung verteilt wird, dass Vorgänge abgebrochen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f16b5-101">A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> is used to propagate notification that operations should be canceled.</span></span> <span data-ttu-id="f16b5-102">Sie erstellen ein Abbruchtoken, das durch die Instanziierung einer <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> -Objekt, das Abbruchtoken verwaltet entnommen seine <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken() </xref> Methode.</span><span class="sxs-lookup"><span data-stu-id="f16b5-102">You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method.</span></span> <span data-ttu-id="f16b5-103">Übergeben Sie dann das Abbruchtoken, das auf eine beliebige Anzahl von Vorgängen, die Nachricht vom Abbruch erhalten soll.</span><span class="sxs-lookup"><span data-stu-id="f16b5-103">You then pass the cancellation token to any number of operations that should receive notice of cancellation.</span></span> <span data-ttu-id="f16b5-104">Das Token kann nicht verwendet werden, um den Abbruch zu initiieren.</span><span class="sxs-lookup"><span data-stu-id="f16b5-104">The token cannot be used to initiate cancellation.</span></span> <span data-ttu-id="f16b5-105">Wenn das besitzende Objekt aufruft <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, auf das Abbruchtoken, das die abgebrochene Eigenschaft festgelegt ist auf "true".</span><span class="sxs-lookup"><span data-stu-id="f16b5-105">When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true.</span></span> <span data-ttu-id="f16b5-106">Die Objekte, die die Benachrichtigung empfangen können Antworten Verfolgungsinformationen geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="f16b5-106">The objects that receive the notification can respond in whatever manner is appropriate.</span></span> </p>'
    syntax: &ref_2
      content: public class CancellationToken
    inheritance:
      - java.lang.Object
      - AutoCloseable
  - uid: system.fabric._cancellation_token.canBeCancelled()
    id: canBeCancelled()
    parent: system.fabric._cancellation_token
    href: system.fabric._cancellation_token.yml
    langs:
      - java
    name: canBeCancelled()
    nameWithType: CancellationToken.canBeCancelled()
    fullName: boolean system.fabric.CancellationToken.canBeCancelled()
    overload: system.fabric._cancellation_token.canBeCancelled*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationToken.java
      startLine: 34
    package: system.fabric
    summary: '<p><span data-ttu-id="f16b5-107">Gibt an, ob das Abbruchtoken, das abgebrochen werden kann.</span><span class="sxs-lookup"><span data-stu-id="f16b5-107">Specifies if the Cancellation token can be cancelled or not.</span></span> <span data-ttu-id="f16b5-108">Wenn die <xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> erstellt, wobei <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref>, und klicken Sie dann das Token kann abgebrochen mit <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false"> system.fabric.CancellationTokenSource#cancel()</xref> Methode.</span><span class="sxs-lookup"><span data-stu-id="f16b5-108">If the <xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> is created using <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref>, then the token can cancelled using <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref> method.</span></span> <span data-ttu-id="f16b5-109">Wenn die <xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> erstellt, wobei <xref uid="system.fabric._cancellation_token.getDefault()" data-throw-if-not-resolved="false">system.fabric.CancellationToken#getDefault()</xref>, und klicken Sie dann nicht abgebrochen werden kann.</span><span class="sxs-lookup"><span data-stu-id="f16b5-109">If the <xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> is created using <xref uid="system.fabric._cancellation_token.getDefault()" data-throw-if-not-resolved="false">system.fabric.CancellationToken#getDefault()</xref>, then it can not be cancelled.</span></span> <span data-ttu-id="f16b5-110">Es dient lediglich als eine dummy-Token.</span><span class="sxs-lookup"><span data-stu-id="f16b5-110">It simply acts as a dummy token.</span></span> </p>'
    syntax:
      content: public boolean canBeCancelled()
      return:
        type: 4fc6e284
        description: '<p><span data-ttu-id="f16b5-111">Gibt "true" zurück, wenn das Token abgebrochen, andernfalls "false" werden kann.</span><span class="sxs-lookup"><span data-stu-id="f16b5-111">Returns true if the token can be cancelled, else false.</span></span> </p>'
  - uid: system.fabric._cancellation_token.close()
    id: close()
    parent: system.fabric._cancellation_token
    href: system.fabric._cancellation_token.yml
    langs:
      - java
    name: close()
    nameWithType: CancellationToken.close()
    fullName: void system.fabric.CancellationToken.close()
    overload: system.fabric._cancellation_token.close*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationToken.java
      startLine: 105
    package: system.fabric
    syntax:
      content: public void close()
  - uid: system.fabric._cancellation_token.getDefault()
    id: getDefault()
    parent: system.fabric._cancellation_token
    href: system.fabric._cancellation_token.yml
    langs:
      - java
    name: getDefault()
    nameWithType: CancellationToken.getDefault()
    fullName: static CancellationToken system.fabric.CancellationToken.getDefault()
    overload: system.fabric._cancellation_token.getDefault*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationToken.java
      startLine: 61
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="f16b5-112">Erstellt und gibt ein token Abbruch-Objekt.</span><span class="sxs-lookup"><span data-stu-id="f16b5-112">Creates and returns a Cancellation token object.</span></span> <span data-ttu-id="f16b5-113">Diese Methode sollte verwendet werden, wenn die <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> Abbruch nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="f16b5-113">This method should be used when the <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> doesn't support cancellation.</span></span> <span data-ttu-id="f16b5-114">Nur über erstellt Abbruchtoken <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">CancellationTokenSource#getToken()</xref> Abbrüche unterstützt.</span><span class="sxs-lookup"><span data-stu-id="f16b5-114">Only Cancellation tokens created through <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">CancellationTokenSource#getToken()</xref> supports cancellations.</span></span></p>
      <p></p>
    syntax: &ref_1
      content: public static CancellationToken getDefault()
      return:
        type: system.fabric._cancellation_token
        description: "<p><span data-ttu-id=\"f16b5-115\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">CancellationToken</xref>\r\n\r\n</span><span class=\"sxs-lookup\"><span data-stu-id=\"f16b5-115\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">CancellationToken</xref>\r\n\r\n</span></span></p>"
  - uid: system.fabric._cancellation_token.isCancelled()
    id: isCancelled()
    parent: system.fabric._cancellation_token
    href: system.fabric._cancellation_token.yml
    langs:
      - java
    name: isCancelled()
    nameWithType: CancellationToken.isCancelled()
    fullName: boolean system.fabric.CancellationToken.isCancelled()
    overload: system.fabric._cancellation_token.isCancelled*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationToken.java
      startLine: 50
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="f16b5-116">Ruft ab, ob für dieses Token ein Abbruch angefordert wurde.</span><span class="sxs-lookup"><span data-stu-id="f16b5-116">Gets whether cancellation has been requested for this token.</span></span></p>
      <p></p>
    syntax:
      content: public boolean isCancelled()
      return:
        type: 4fc6e284
        description: <p><span data-ttu-id="f16b5-117">Boolesche Abbruch-status</span><span class="sxs-lookup"><span data-stu-id="f16b5-117">boolean cancellation status</span></span> </p>
  - uid: system.fabric._cancellation_token.registerCancellationCallback(Runnable)
    id: registerCancellationCallback(Runnable)
    parent: system.fabric._cancellation_token
    href: system.fabric._cancellation_token.yml
    langs:
      - java
    name: registerCancellationCallback(Runnable callback)
    nameWithType: CancellationToken.registerCancellationCallback(Runnable callback)
    fullName: void system.fabric.CancellationToken.registerCancellationCallback(Runnable callback)
    overload: system.fabric._cancellation_token.registerCancellationCallback*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationToken.java
      startLine: 76
    package: system.fabric
    summary: '<p><span data-ttu-id="f16b5-118">Registriert einen Rückruf, die ausgeführt wird, wenn dies <xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> Objekt wird abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="f16b5-118">Registers a callback which will be executed when this <xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object is cancelled.</span></span> </p>'
    syntax:
      content: public void registerCancellationCallback(Runnable callback)
      parameters:
        - id: callback
          type: 2b8852ea
          description: "<p><span data-ttu-id=\"f16b5-119\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.Runnable</xref> , wenn Sie sich auf token Abbruchereignis ausgeführt werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f16b5-119\">\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">java.lang.Runnable</xref> to be executed when on token cancel event.</span></span> </p>"
  - uid: 'system.fabric._cancellation_token.registerCancellationCallback(String,Runnable)'
    id: 'registerCancellationCallback(String,Runnable)'
    parent: system.fabric._cancellation_token
    href: system.fabric._cancellation_token.yml
    langs:
      - java
    name: 'registerCancellationCallback(String name, Runnable callback)'
    nameWithType: 'CancellationToken.registerCancellationCallback(String name, Runnable callback)'
    fullName: 'void system.fabric.CancellationToken.registerCancellationCallback(String name, Runnable callback)'
    overload: system.fabric._cancellation_token.registerCancellationCallback*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationToken.java
      startLine: 80
    package: system.fabric
    syntax:
      content: 'public void registerCancellationCallback(String name, Runnable callback)'
      parameters:
        - id: name
          type: '26831127'
        - id: callback
          type: 2b8852ea
  - uid: system.fabric._cancellation_token.throwIfCancellationRequested()
    id: throwIfCancellationRequested()
    parent: system.fabric._cancellation_token
    href: system.fabric._cancellation_token.yml
    langs:
      - java
    name: throwIfCancellationRequested()
    nameWithType: CancellationToken.throwIfCancellationRequested()
    fullName: void system.fabric.CancellationToken.throwIfCancellationRequested()
    overload: system.fabric._cancellation_token.throwIfCancellationRequested*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationToken.java
      startLine: 68
    package: system.fabric
    summary: '<p><span data-ttu-id="f16b5-120">Löst eine CancellationException aus, wenn dieses Token ein Abbruch angefordert wurde.</span><span class="sxs-lookup"><span data-stu-id="f16b5-120">Throws a CancellationException if this token has had cancellation requested.</span></span> </p>'
    syntax:
      content: public void throwIfCancellationRequested()
  - uid: system.fabric._cancellation_token.unregisterCancellationCallback(Runnable)
    id: unregisterCancellationCallback(Runnable)
    parent: system.fabric._cancellation_token
    href: system.fabric._cancellation_token.yml
    langs:
      - java
    name: unregisterCancellationCallback(Runnable callback)
    nameWithType: CancellationToken.unregisterCancellationCallback(Runnable callback)
    fullName: void system.fabric.CancellationToken.unregisterCancellationCallback(Runnable callback)
    overload: system.fabric._cancellation_token.unregisterCancellationCallback*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationToken.java
      startLine: 84
    package: system.fabric
    syntax:
      content: public void unregisterCancellationCallback(Runnable callback)
      parameters:
        - id: callback
          type: 2b8852ea
  - uid: 'system.fabric._cancellation_token.unregisterCancellationCallback(String,Runnable)'
    id: 'unregisterCancellationCallback(String,Runnable)'
    parent: system.fabric._cancellation_token
    href: system.fabric._cancellation_token.yml
    langs:
      - java
    name: 'unregisterCancellationCallback(String name, Runnable callback)'
    nameWithType: 'CancellationToken.unregisterCancellationCallback(String name, Runnable callback)'
    fullName: 'void system.fabric.CancellationToken.unregisterCancellationCallback(String name, Runnable callback)'
    overload: system.fabric._cancellation_token.unregisterCancellationCallback*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationToken.java
      startLine: 88
    package: system.fabric
    syntax:
      content: 'public void unregisterCancellationCallback(String name, Runnable callback)'
      parameters:
        - id: name
          type: '26831127'
        - id: callback
          type: 2b8852ea
references:
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: system.fabric._cancellation_token.canBeCancelled*
    name: canBeCancelled
    nameWithType: CancellationToken.canBeCancelled
    fullName: boolean system.fabric.CancellationToken.canBeCancelled
    package: system.fabric
  - uid: system.fabric._cancellation_token.isCancelled*
    name: isCancelled
    nameWithType: CancellationToken.isCancelled
    fullName: boolean system.fabric.CancellationToken.isCancelled
    package: system.fabric
  - uid: system.fabric._cancellation_token.throwIfCancellationRequested*
    name: throwIfCancellationRequested
    nameWithType: CancellationToken.throwIfCancellationRequested
    fullName: void system.fabric.CancellationToken.throwIfCancellationRequested
    package: system.fabric
  - uid: 2b8852ea
    spec.java:
      - name: Runnable
        fullName: Runnable
  - uid: system.fabric._cancellation_token.registerCancellationCallback*
    name: registerCancellationCallback
    nameWithType: CancellationToken.registerCancellationCallback
    fullName: void system.fabric.CancellationToken.registerCancellationCallback
    package: system.fabric
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric._cancellation_token.unregisterCancellationCallback*
    name: unregisterCancellationCallback
    nameWithType: CancellationToken.unregisterCancellationCallback
    fullName: void system.fabric.CancellationToken.unregisterCancellationCallback
    package: system.fabric
  - uid: system.fabric._cancellation_token.close*
    name: close
    nameWithType: CancellationToken.close
    fullName: void system.fabric.CancellationToken.close
    package: system.fabric
  - uid: system.fabric._cancellation_token.getDefault*
    name: getDefault
    nameWithType: CancellationToken.getDefault
    fullName: static CancellationToken system.fabric.CancellationToken.getDefault
    package: system.fabric
  - uid: system.fabric._cancellation_token_source.getToken()
    parent: system.fabric._cancellation_token_source
    href: system.fabric._cancellation_token_source.yml
    name: getToken()
    nameWithType: CancellationTokenSource.getToken()
    fullName: CancellationToken system.fabric.CancellationTokenSource.getToken()
    type: Method
    summary: |-
      <p><span data-ttu-id="f16b5-121">Gibt das Abbruchtoken, das von diesem wird <xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> Objekt.</span><span class="sxs-lookup"><span data-stu-id="f16b5-121">Returns the cancellation token which is being by this <xref uid="" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object.</span></span></p>
      <p></p>
    syntax:
      content: public CancellationToken getToken()
      return:
        type: system.fabric._cancellation_token
        description: "<p><span data-ttu-id=\"f16b5-122\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>\r\n\r\n</span><span class=\"sxs-lookup\"><span data-stu-id=\"f16b5-122\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref>\r\n\r\n</span></span></p>"
  - uid: system.fabric._cancellation_token_source.cancel()
    parent: system.fabric._cancellation_token_source
    href: system.fabric._cancellation_token_source.yml
    name: cancel()
    nameWithType: CancellationTokenSource.cancel()
    fullName: void system.fabric.CancellationTokenSource.cancel()
    type: Method
    summary: '<p><span data-ttu-id="f16b5-123">Anforderungen auf "Abbrechen", auf die <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> von diesem Objekt verwaltet wird.</span><span class="sxs-lookup"><span data-stu-id="f16b5-123">Requests cancel on the <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> being managed by this object.</span></span> </p>'
    syntax:
      content: public void cancel()
  - uid: system.fabric._cancellation_token.getDefault()
    parent: system.fabric._cancellation_token
    href: system.fabric._cancellation_token.yml
    name: getDefault()
    nameWithType: CancellationToken.getDefault()
    fullName: static CancellationToken system.fabric.CancellationToken.getDefault()
    type: Method
    summary: |-
      <p><span data-ttu-id="f16b5-124">Erstellt und gibt ein token Abbruch-Objekt.</span><span class="sxs-lookup"><span data-stu-id="f16b5-124">Creates and returns a Cancellation token object.</span></span> <span data-ttu-id="f16b5-125">Diese Methode sollte verwendet werden, wenn die <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> Abbruch nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="f16b5-125">This method should be used when the <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> doesn't support cancellation.</span></span> <span data-ttu-id="f16b5-126">Nur über erstellt Abbruchtoken <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">CancellationTokenSource#getToken()</xref> Abbrüche unterstützt.</span><span class="sxs-lookup"><span data-stu-id="f16b5-126">Only Cancellation tokens created through <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">CancellationTokenSource#getToken()</xref> supports cancellations.</span></span></p>
      <p></p>
    syntax: *ref_1
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p><span data-ttu-id="f16b5-127">Ein <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> wird verwendet, um die Benachrichtigung verteilt wird, dass Vorgänge abgebrochen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f16b5-127">A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> is used to propagate notification that operations should be canceled.</span></span> <span data-ttu-id="f16b5-128">Sie erstellen ein Abbruchtoken, das durch die Instanziierung einer <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> -Objekt, das Abbruchtoken verwaltet entnommen seine <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken() </xref> Methode.</span><span class="sxs-lookup"><span data-stu-id="f16b5-128">You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method.</span></span> <span data-ttu-id="f16b5-129">Übergeben Sie dann das Abbruchtoken, das auf eine beliebige Anzahl von Vorgängen, die Nachricht vom Abbruch erhalten soll.</span><span class="sxs-lookup"><span data-stu-id="f16b5-129">You then pass the cancellation token to any number of operations that should receive notice of cancellation.</span></span> <span data-ttu-id="f16b5-130">Das Token kann nicht verwendet werden, um den Abbruch zu initiieren.</span><span class="sxs-lookup"><span data-stu-id="f16b5-130">The token cannot be used to initiate cancellation.</span></span> <span data-ttu-id="f16b5-131">Wenn das besitzende Objekt aufruft <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, auf das Abbruchtoken, das die abgebrochene Eigenschaft festgelegt ist auf "true".</span><span class="sxs-lookup"><span data-stu-id="f16b5-131">When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true.</span></span> <span data-ttu-id="f16b5-132">Die Objekte, die die Benachrichtigung empfangen können Antworten Verfolgungsinformationen geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="f16b5-132">The objects that receive the notification can respond in whatever manner is appropriate.</span></span> </p>'
    syntax: *ref_2
  - uid: system.fabric._cancellation_token_source
    parent: system.fabric
    href: system.fabric._cancellation_token_source.yml
    name: CancellationTokenSource
    nameWithType: CancellationTokenSource
    fullName: system.fabric.CancellationTokenSource
    type: Class
    summary: <p><span data-ttu-id="f16b5-133">Ein <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">CancellationTokenSource</xref> dient zum Erstellen <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> Objekt und verwaltet werden.</span><span class="sxs-lookup"><span data-stu-id="f16b5-133">A <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">CancellationTokenSource</xref> is used to create <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object and manage it.</span></span> </p>
    syntax:
      content: public class CancellationTokenSource