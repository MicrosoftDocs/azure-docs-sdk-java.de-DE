### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint
    id: _checkpoint
    parent: com.microsoft.azure.eventprocessorhost
    children:
      - com.microsoft.azure.eventprocessorhost._checkpoint.Checkpoint(Checkpoint)
      - com.microsoft.azure.eventprocessorhost._checkpoint.Checkpoint(String)
      - 'com.microsoft.azure.eventprocessorhost._checkpoint.Checkpoint(String,String,long)'
      - com.microsoft.azure.eventprocessorhost._checkpoint.getOffset()
      - com.microsoft.azure.eventprocessorhost._checkpoint.getPartitionId()
      - com.microsoft.azure.eventprocessorhost._checkpoint.getSequenceNumber()
      - com.microsoft.azure.eventprocessorhost._checkpoint.setOffset(String)
      - com.microsoft.azure.eventprocessorhost._checkpoint.setSequenceNumber(long)
    href: com.microsoft.azure.eventprocessorhost._checkpoint.yml
    langs:
      - java
    name: Checkpoint
    nameWithType: Checkpoint
    fullName: com.microsoft.azure.eventprocessorhost.Checkpoint
    type: Class
    source:
      remote: &ref_0
        path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Checkpoint.java
        branch: master
        repo: 'https://github.com/Azure/azure-event-hubs-java'
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Checkpoint.java
      startLine: 18
    package: com.microsoft.azure.eventprocessorhost
    summary: "<p>\r\n\r\n  <xref href=\"com.microsoft.azure.eventprocessorhost._checkpoint\" data-throw-if-not-resolved=\"false\"></xref>Klasse ist öffentlich, sodass, dass Sie fortgeschrittene Benutzer implementieren können ein <xref href=\"com.microsoft.azure.eventprocessorhost._i_checkpoint_manager\" data-throw-if-not-resolved=\"false\"></xref>. Es sei denn, Sie implementieren <xref href=\"com.microsoft.azure.eventprocessorhost._i_checkpoint_manager\" data-throw-if-not-resolved=\"false\"></xref> Sie sollten keine Objekte dieser Klasse direkt behandeln. </p>\n\n<p>Ein <xref href=\"com.microsoft.azure.eventprocessorhost._checkpoint\" data-throw-if-not-resolved=\"false\"></xref> ist im Prinzip nur ein Tupel. Er verfügt über eine feste Partitions-Id, zum Zeitpunkt der Erstellung festgelegt und unveränderlich danach und ordnet, die einen Offset/SequenceNumber-Paar gibt eine Position in der Nachrichten in dieser Partition an. </p>"
    syntax: &ref_1
      content: public class Checkpoint
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint.Checkpoint(Checkpoint)
    id: Checkpoint(Checkpoint)
    parent: com.microsoft.azure.eventprocessorhost._checkpoint
    href: com.microsoft.azure.eventprocessorhost._checkpoint.yml
    langs:
      - java
    name: Checkpoint(Checkpoint source)
    nameWithType: Checkpoint.Checkpoint(Checkpoint source)
    fullName: com.microsoft.azure.eventprocessorhost.Checkpoint.Checkpoint(Checkpoint source)
    overload: com.microsoft.azure.eventprocessorhost._checkpoint.Checkpoint*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Checkpoint.java
      startLine: 53
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Erstellen Sie einen Prüfpunkt also ein Duplikat des angegebenen Prüfpunkts an.</p>
      <p></p>
    syntax:
      content: public Checkpoint(Checkpoint source)
      parameters:
        - id: source
          type: com.microsoft.azure.eventprocessorhost._checkpoint
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint.Checkpoint(String)
    id: Checkpoint(String)
    parent: com.microsoft.azure.eventprocessorhost._checkpoint
    href: com.microsoft.azure.eventprocessorhost._checkpoint.yml
    langs:
      - java
    name: Checkpoint(String partitionId)
    nameWithType: Checkpoint.Checkpoint(String partitionId)
    fullName: com.microsoft.azure.eventprocessorhost.Checkpoint.Checkpoint(String partitionId)
    overload: com.microsoft.azure.eventprocessorhost._checkpoint.Checkpoint*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Checkpoint.java
      startLine: 29
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Erstellen Sie einen Prüfpunkt mit Offset/SequenceNumber auf die erste verfügbare Nachricht festgelegt.</p>
      <p></p>
    syntax:
      content: public Checkpoint(String partitionId)
      parameters:
        - id: partitionId
          type: '26831127'
  - uid: 'com.microsoft.azure.eventprocessorhost._checkpoint.Checkpoint(String,String,long)'
    id: 'Checkpoint(String,String,long)'
    parent: com.microsoft.azure.eventprocessorhost._checkpoint
    href: com.microsoft.azure.eventprocessorhost._checkpoint.yml
    langs:
      - java
    name: 'Checkpoint(String partitionId, String offset, long sequenceNumber)'
    nameWithType: 'Checkpoint.Checkpoint(String partitionId, String offset, long sequenceNumber)'
    fullName: 'com.microsoft.azure.eventprocessorhost.Checkpoint.Checkpoint(String partitionId, String offset, long sequenceNumber)'
    overload: com.microsoft.azure.eventprocessorhost._checkpoint.Checkpoint*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Checkpoint.java
      startLine: 41
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Erstellen eines Prüfpunkts mit dem angegebenen Offset und SequenceNumber an.</p>
      <p></p>
    syntax:
      content: 'public Checkpoint(String partitionId, String offset, long sequenceNumber)'
      parameters:
        - id: partitionId
          type: '26831127'
        - id: offset
          type: '26831127'
        - id: sequenceNumber
          type: 0364520f
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint.getOffset()
    id: getOffset()
    parent: com.microsoft.azure.eventprocessorhost._checkpoint
    href: com.microsoft.azure.eventprocessorhost._checkpoint.yml
    langs:
      - java
    name: getOffset()
    nameWithType: Checkpoint.getOffset()
    fullName: String com.microsoft.azure.eventprocessorhost.Checkpoint.getOffset()
    overload: com.microsoft.azure.eventprocessorhost._checkpoint.getOffset*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Checkpoint.java
      startLine: 76
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Der Offset zurück.</p>
      <p></p>
    syntax:
      content: public String getOffset()
      return:
        type: '26831127'
        description: <p>der aktuelle Offset Zeichenfolgenwert. </p>
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint.getPartitionId()
    id: getPartitionId()
    parent: com.microsoft.azure.eventprocessorhost._checkpoint
    href: com.microsoft.azure.eventprocessorhost._checkpoint.yml
    langs:
      - java
    name: getPartitionId()
    nameWithType: Checkpoint.getPartitionId()
    fullName: String com.microsoft.azure.eventprocessorhost.Checkpoint.getPartitionId()
    overload: com.microsoft.azure.eventprocessorhost._checkpoint.getPartitionId*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Checkpoint.java
      startLine: 107
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Abrufen der Partitions-Id an. Es gibt keine entsprechenden Setter-Methode auf, da die Partitions-Id unveränderlich ist.</p>
      <p></p>
    syntax:
      content: public String getPartitionId()
      return:
        type: '26831127'
        description: '<p>erhalten Sie die aktuellen Partitions-Id, der die Verarbeitung zugeordnet ist. </p>'
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint.getSequenceNumber()
    id: getSequenceNumber()
    parent: com.microsoft.azure.eventprocessorhost._checkpoint
    href: com.microsoft.azure.eventprocessorhost._checkpoint.yml
    langs:
      - java
    name: getSequenceNumber()
    nameWithType: Checkpoint.getSequenceNumber()
    fullName: long com.microsoft.azure.eventprocessorhost.Checkpoint.getSequenceNumber()
    overload: com.microsoft.azure.eventprocessorhost._checkpoint.getSequenceNumber*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Checkpoint.java
      startLine: 97
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Abgerufen Sie die Sequenznummer werden.</p>
      <p></p>
    syntax:
      content: public long getSequenceNumber()
      return:
        type: 0364520f
        description: <p>die aktuelle Sequenznummer. </p>
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint.setOffset(String)
    id: setOffset(String)
    parent: com.microsoft.azure.eventprocessorhost._checkpoint
    href: com.microsoft.azure.eventprocessorhost._checkpoint.yml
    langs:
      - java
    name: setOffset(String newOffset)
    nameWithType: Checkpoint.setOffset(String newOffset)
    fullName: void com.microsoft.azure.eventprocessorhost.Checkpoint.setOffset(String newOffset)
    overload: com.microsoft.azure.eventprocessorhost._checkpoint.setOffset*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Checkpoint.java
      startLine: 66
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Legen Sie den Offset. Sollte mit SetSequenceNumber gekoppelt werden, da die beiden Werte im Event Hub verbunden sind.</p>
      <p></p>
    syntax:
      content: public void setOffset(String newOffset)
      parameters:
        - id: newOffset
          type: '26831127'
          description: <p>der neue Offset beibehalten werden. </p>
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint.setSequenceNumber(long)
    id: setSequenceNumber(long)
    parent: com.microsoft.azure.eventprocessorhost._checkpoint
    href: com.microsoft.azure.eventprocessorhost._checkpoint.yml
    langs:
      - java
    name: setSequenceNumber(long newSequenceNumber)
    nameWithType: Checkpoint.setSequenceNumber(long newSequenceNumber)
    fullName: void com.microsoft.azure.eventprocessorhost.Checkpoint.setSequenceNumber(long newSequenceNumber)
    overload: com.microsoft.azure.eventprocessorhost._checkpoint.setSequenceNumber*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/Checkpoint.java
      startLine: 87
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Legen Sie die Sequenznummer. Sollte mit SetOffset gekoppelt werden, da die beiden Werte im Event Hub verbunden sind.</p>
      <p></p>
    syntax:
      content: public void setSequenceNumber(long newSequenceNumber)
      parameters:
        - id: newSequenceNumber
          type: 0364520f
          description: <p>die neue Sequenznummer beibehalten werden. </p>
references:
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint.Checkpoint*
    name: Checkpoint
    nameWithType: Checkpoint.Checkpoint
    fullName: com.microsoft.azure.eventprocessorhost.Checkpoint.Checkpoint
    package: com.microsoft.azure.eventprocessorhost
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint.setOffset*
    name: setOffset
    nameWithType: Checkpoint.setOffset
    fullName: void com.microsoft.azure.eventprocessorhost.Checkpoint.setOffset
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint.getOffset*
    name: getOffset
    nameWithType: Checkpoint.getOffset
    fullName: String com.microsoft.azure.eventprocessorhost.Checkpoint.getOffset
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint.setSequenceNumber*
    name: setSequenceNumber
    nameWithType: Checkpoint.setSequenceNumber
    fullName: void com.microsoft.azure.eventprocessorhost.Checkpoint.setSequenceNumber
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint.getSequenceNumber*
    name: getSequenceNumber
    nameWithType: Checkpoint.getSequenceNumber
    fullName: long com.microsoft.azure.eventprocessorhost.Checkpoint.getSequenceNumber
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint.getPartitionId*
    name: getPartitionId
    nameWithType: Checkpoint.getPartitionId
    fullName: String com.microsoft.azure.eventprocessorhost.Checkpoint.getPartitionId
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM()
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    name: START_OF_STREAM
    nameWithType: PartitionReceiver.START_OF_STREAM
    fullName: final String com.microsoft.azure.eventhubs.PartitionReceiver.START_OF_STREAM
    type: Field
    summary: '<p>Dies ist eine Konstante, die definiert, um den Beginn eines Datenstroms Partition im Event Hub darstellen. </p>'
    syntax:
      content: public static final String START_OF_STREAM= "-1"
      return:
        type: 3d93591e
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._checkpoint.yml
    name: Checkpoint
    nameWithType: Checkpoint
    fullName: com.microsoft.azure.eventprocessorhost.Checkpoint
    type: Class
    summary: "<p>\r\n\r\n  <xref href=\"com.microsoft.azure.eventprocessorhost._checkpoint\" data-throw-if-not-resolved=\"false\"></xref>Klasse ist öffentlich, sodass, dass Sie fortgeschrittene Benutzer implementieren können ein <xref href=\"com.microsoft.azure.eventprocessorhost._i_checkpoint_manager\" data-throw-if-not-resolved=\"false\"></xref>. Es sei denn, Sie implementieren <xref href=\"com.microsoft.azure.eventprocessorhost._i_checkpoint_manager\" data-throw-if-not-resolved=\"false\"></xref> Sie sollten keine Objekte dieser Klasse direkt behandeln. </p>\n\n<p>Ein <xref href=\"com.microsoft.azure.eventprocessorhost._checkpoint\" data-throw-if-not-resolved=\"false\"></xref> ist im Prinzip nur ein Tupel. Er verfügt über eine feste Partitions-Id, zum Zeitpunkt der Erstellung festgelegt und unveränderlich danach und ordnet, die einen Offset/SequenceNumber-Paar gibt eine Position in der Nachrichten in dieser Partition an. </p>"
    syntax: *ref_1
  - uid: com.microsoft.azure.eventprocessorhost._i_checkpoint_manager
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._i_checkpoint_manager.yml
    name: ICheckpointManager
    nameWithType: ICheckpointManager
    fullName: com.microsoft.azure.eventprocessorhost.ICheckpointManager
    type: Interface
    syntax:
      content: public interface ICheckpointManager