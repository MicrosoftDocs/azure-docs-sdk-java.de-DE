### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    id: _x509_attestation
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
    children:
      - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromCAReferences(String)
      - 'com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromCAReferences(String,String)'
      - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromClientCertificates(String)
      - 'com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromClientCertificates(String,String)'
      - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromRootCertificates(String)
      - 'com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromRootCertificates(String,String)'
      - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getCAReferences()
      - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getClientCertificates()
      - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getPrimaryX509CertificateInfo()
      - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getRootCertificates()
      - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getSecondaryX509CertificateInfo()
      - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.X509Attestation()
      - com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.X509Attestation(X509Attestation)
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    langs:
      - java
    name: X509Attestation
    nameWithType: X509Attestation
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation
    type: Class
    source:
      remote: &ref_0
        path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Attestation.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Attestation.java
      startLine: 45
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: "<p>Darstellung eines einzelnen Geräts Bereitstellung Diensts X509 <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation\" data-throw-if-not-resolved=\"false\">Nachweis</xref>.</p>\n<p>Der bereitstellungs-Dienst unterstützt Gerät Bezeichner Kompositionsmodul oder Datenwürfel AUFGETEILT, als Gerät Nachweis Mechanismus. Um AUFTEILUNGEN verwenden zu können, muss Benutzer die X509 bereitstellen Zertifikat. Diese Klasse bieten die Möglichkeit zum Erstellen einer neuen Nachweis für eine X509 Zertifikat und gibt es als eine abstrakte Schnittstelle <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation\" data-throw-if-not-resolved=\"false\">Nachweis</xref>.</p>\n<p>Ein X509 Nachweis können enthält mindestens eine der 3 Typen des Zertifikats:</p>\n<p>\r\n\r\n  <variablelist>\r\n\r\n    <varlistentry>\r\n\r\n      <b>Client- oder Alias-Zertifikat:</b>\r\n\r\n    </varlistentry>\r\n\r\n    <listitem>\r\n\r\n      <p>Für diese Klasse als ClientCertificates aufgerufen wird, kann dieses Zertifikat ein einzelnes Gerät authentifizieren. </p>\r\n\r\n    </listitem>\r\n\r\n    <varlistentry>\r\n\r\n      <b>Signieren oder Stammzertifikats:</b>\r\n\r\n    </varlistentry>\r\n\r\n    <listitem>\r\n\r\n      <p>Für diese Klasse als RootCertificates aufgerufen wird, kann dieses Zertifikat mehrere Clientzertifikate zum Authentifizieren von mehreren Geräten erstellen. </p>\r\n\r\n    </listitem>\r\n\r\n    <varlistentry>\r\n\r\n      <b>Referenz der Zertifizierungsstelle:</b>\r\n\r\n    </varlistentry>\r\n\r\n    <listitem>\r\n\r\n      <p>Für diese Klasse als aufgerufen <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_c_a_references\" data-throw-if-not-resolved=\"false\">X509CAReferences</xref>, dies ist ein Verweis Zertifizierungsstelle für eine Vertrauensanbieter, die mehrere Clientzertifikate zum Authentifizieren von mehreren Geräten erstellen können. </p>\n\n    </listitem>\n\n  </variablelist>\n\n</p>\n<p>Die Bereitstellung Dienst ermöglicht Benutzern das Erstellen <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment\" data-throw-if-not-resolved=\"false\">IndividualEnrollment</xref> und <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group\" data-throw-if-not-resolved=\"false\">EnrollmentGroup</xref>. Für alle Vorgänge über <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment\" data-throw-if-not-resolved=\"false\">IndividualEnrollment</xref> mit <b>AUFTEILUNGEN</b>, Benutzer bereitstellen muss eine <b>ClientCertificates</b>, und für Vorgänge über <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group\" data-throw-if-not-resolved=\"false\">EnrollmentGroup </xref>, Benutzer bereitstellen muss eine <b>RootCertificates</b> oder ein <b> <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_c_a_references\" data-throw-if-not-resolved=\"false\">X509CAReferences</xref></b>.</p>\n<p>Für jeden dieser Typen von Zertifikaten kann Benutzer 2 Zertifikate, ein primäres und ein sekundäres Replikat bereitstellen. Nur die primäre ist obligatorisch ist, wird die sekundäre Datenbank ist optional.</p>\n<p>Der bereitstellungs-Dienst verarbeitet die bereitgestellten Zertifikate, aber nie erneut zurück. Statt, <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getPrimaryX509CertificateInfo()\" data-throw-if-not-resolved=\"false\">getPrimaryX509CertificateInfo()</xref> und <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getSecondaryX509CertificateInfo()\" data-throw-if-not-resolved=\"false\">getSecondaryX509CertificateInfo()</xref> die Zertifikatinformationen für den Zertifikaten zurück.</p>\n<p></p>"
    syntax: &ref_1
      content: public class X509Attestation extends Attestation
    inheritance:
      - java.lang.Object
      - com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromCAReferences(String)
    id: createFromCAReferences(String)
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    langs:
      - java
    name: createFromCAReferences(String primary)
    nameWithType: X509Attestation.createFromCAReferences(String primary)
    fullName: static X509Attestation com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromCAReferences(String primary)
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromCAReferences*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Attestation.java
      startLine: 207
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p>Die Factory mit CAReferences mit nur primärverweis.</p>
      <p>Erstellt eine neue Instanz der dem <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref> mit dem angegebenen primären CA-Verweis.</p>
      <p></p>
    syntax:
      content: public static X509Attestation createFromCAReferences(String primary)
      parameters:
        - id: primary
          type: '26831127'
          description: "<p>die<code>String \r\n\r\n    </code> mit dem primären CA-Verweis. Er darf nicht<code>null \r\n\r\n    </code> oder leer sein. </p>"
      return:
        type: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
        description: <p>die neue Instanz der <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>. </p>
    exceptions:
      - type: 3c87bd19
        description: <p>Wenn der Verweis geben Zertifizierungsstelle ungültig ist. </p>
  - uid: 'com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromCAReferences(String,String)'
    id: 'createFromCAReferences(String,String)'
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    langs:
      - java
    name: 'createFromCAReferences(String primary, String secondary)'
    nameWithType: 'X509Attestation.createFromCAReferences(String primary, String secondary)'
    fullName: 'static X509Attestation com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromCAReferences(String primary, String secondary)'
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromCAReferences*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Attestation.java
      startLine: 223
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p>Die Factory mit CAReferences mit primären und sekundären verweisen.</p>
      <p>Erstellt eine neue Instanz der dem <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref> mit der primären und sekundären Zertifizierungsstelle verweist.</p>
      <p></p>
    syntax:
      content: 'public static X509Attestation createFromCAReferences(String primary, String secondary)'
      parameters:
        - id: primary
          type: '26831127'
          description: "<p>die<code>String \r\n\r\n    </code> mit der primären Zertifizierungsstelle verweist. Er darf nicht<code>null \r\n\r\n    </code> oder leer sein. </p>"
        - id: secondary
          type: '26831127'
          description: "<p>die<code>String \r\n\r\n    </code> mit der sekundären Zertifizierungsstelle verweist. Es kann sein<code>null \r\n\r\n    </code> oder ist leer (ignoriert). </p>"
      return:
        type: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
        description: <p>die neue Instanz der <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>. </p>
    exceptions:
      - type: 3c87bd19
        description: <p>Wenn die Zertifizierungsstelle die geben primärverweis ist ungültig. </p>
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromClientCertificates(String)
    id: createFromClientCertificates(String)
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    langs:
      - java
    name: createFromClientCertificates(String primary)
    nameWithType: X509Attestation.createFromClientCertificates(String primary)
    fullName: static X509Attestation com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromClientCertificates(String primary)
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromClientCertificates*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Attestation.java
      startLine: 127
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p>Die Factory mit ClientCertificate mit nur primäre Zertifikat.</p>
      <p>Erstellt eine neue Instanz der dem <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref> unter Verwendung des angegebenen primären Zertifikats.</p>
      <p></p>
    syntax:
      content: public static X509Attestation createFromClientCertificates(String primary)
      parameters:
        - id: primary
          type: '26831127'
          description: "<p>die<code>String \r\n\r\n    </code> mit dem primären Zertifikat. Er darf nicht<code>null \r\n\r\n    </code> oder leer sein. </p>"
      return:
        type: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
        description: <p>die neue Instanz der <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>. </p>
    exceptions:
      - type: 3c87bd19
        description: <p>Wenn das Zertifikat bereitstellen ungültig ist. </p>
  - uid: 'com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromClientCertificates(String,String)'
    id: 'createFromClientCertificates(String,String)'
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    langs:
      - java
    name: 'createFromClientCertificates(String primary, String secondary)'
    nameWithType: 'X509Attestation.createFromClientCertificates(String primary, String secondary)'
    fullName: 'static X509Attestation com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromClientCertificates(String primary, String secondary)'
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromClientCertificates*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Attestation.java
      startLine: 143
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p>Die Factory mit ClientCertificates mit primären und sekundären Zertifikate.</p>
      <p>Erstellt eine neue Instanz der dem <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref> mit den primären und sekundären Zertifikaten.</p>
      <p></p>
    syntax:
      content: 'public static X509Attestation createFromClientCertificates(String primary, String secondary)'
      parameters:
        - id: primary
          type: '26831127'
          description: "<p>die<code>String \r\n\r\n    </code> mit dem primären Zertifikat. Er darf nicht<code>null \r\n\r\n    </code> oder leer sein. </p>"
        - id: secondary
          type: '26831127'
          description: "<p>die<code>String \r\n\r\n    </code> mit sekundären Zertifikats. Es kann sein<code>null \r\n\r\n    </code> oder ist leer (ignoriert). </p>"
      return:
        type: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
        description: <p>die neue Instanz der <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>. </p>
    exceptions:
      - type: 3c87bd19
        description: <p>Wenn das primäre geben-Zertifikat ungültig ist. </p>
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromRootCertificates(String)
    id: createFromRootCertificates(String)
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    langs:
      - java
    name: createFromRootCertificates(String primary)
    nameWithType: X509Attestation.createFromRootCertificates(String primary)
    fullName: static X509Attestation com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromRootCertificates(String primary)
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromRootCertificates*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Attestation.java
      startLine: 167
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p>Die Factory mit RootCertificates mit nur primäre Zertifikat.</p>
      <p>Erstellt eine neue Instanz der dem <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref> unter Verwendung des angegebenen primären Zertifikats.</p>
      <p></p>
    syntax:
      content: public static X509Attestation createFromRootCertificates(String primary)
      parameters:
        - id: primary
          type: '26831127'
          description: "<p>die<code>String \r\n\r\n    </code> mit dem primären Zertifikat. Er darf nicht<code>null \r\n\r\n    </code> oder leer sein. </p>"
      return:
        type: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
        description: <p>die neue Instanz der <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>. </p>
    exceptions:
      - type: 3c87bd19
        description: <p>Wenn das Zertifikat bereitstellen ungültig ist. </p>
  - uid: 'com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromRootCertificates(String,String)'
    id: 'createFromRootCertificates(String,String)'
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    langs:
      - java
    name: 'createFromRootCertificates(String primary, String secondary)'
    nameWithType: 'X509Attestation.createFromRootCertificates(String primary, String secondary)'
    fullName: 'static X509Attestation com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromRootCertificates(String primary, String secondary)'
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromRootCertificates*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Attestation.java
      startLine: 183
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p>Die Factory mit RootCertificates mit primären und sekundären Zertifikate.</p>
      <p>Erstellt eine neue Instanz der dem <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref> mit den primären und sekundären Zertifikaten.</p>
      <p></p>
    syntax:
      content: 'public static X509Attestation createFromRootCertificates(String primary, String secondary)'
      parameters:
        - id: primary
          type: '26831127'
          description: "<p>die<code>String \r\n\r\n    </code> mit dem primären Zertifikat. Er darf nicht<code>null \r\n\r\n    </code> oder leer sein. </p>"
        - id: secondary
          type: '26831127'
          description: "<p>die<code>String \r\n\r\n    </code> mit sekundären Zertifikats. Es kann sein<code>null \r\n\r\n    </code> oder ist leer (ignoriert). </p>"
      return:
        type: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
        description: <p>die neue Instanz der <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>. </p>
    exceptions:
      - type: 3c87bd19
        description: <p>Wenn das primäre geben-Zertifikat ungültig ist. </p>
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getCAReferences()
    id: getCAReferences()
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    langs:
      - java
    name: getCAReferences()
    nameWithType: X509Attestation.getCAReferences()
    fullName: X509CAReferences com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getCAReferences()
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getCAReferences*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Attestation.java
      startLine: 273
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p>Der Getter für die CaReferences.</p>
      <p></p>
    syntax:
      content: public X509CAReferences getCAReferences()
      return:
        type: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_c_a_references
        description: "<p>die <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_c_a_references\" data-throw-if-not-resolved=\"false\">X509CAReferences</xref> mit der gespeicherten CaReferences. Es kann sein<code>null \r\n\r\n    </code> . </p>"
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getClientCertificates()
    id: getClientCertificates()
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    langs:
      - java
    name: getClientCertificates()
    nameWithType: X509Attestation.getClientCertificates()
    fullName: X509Certificates com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getClientCertificates()
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getClientCertificates*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Attestation.java
      startLine: 243
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p>Der Getter für die ClientCertificates.</p>
      <p></p>
    syntax:
      content: public X509Certificates getClientCertificates()
      return:
        type: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates
        description: "<p>die <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates\" data-throw-if-not-resolved=\"false\">X509Certificates</xref> mit der gespeicherten ClientCertificates. Es kann sein<code>null \r\n\r\n    </code> . </p>"
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getPrimaryX509CertificateInfo()
    id: getPrimaryX509CertificateInfo()
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    langs:
      - java
    name: getPrimaryX509CertificateInfo()
    nameWithType: X509Attestation.getPrimaryX509CertificateInfo()
    fullName: X509CertificateInfo com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getPrimaryX509CertificateInfo()
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getPrimaryX509CertificateInfo*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Attestation.java
      startLine: 291
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p>Getter-Methode für den primären X509 Zertifikat Info.</p>
      <p>Diese Methode ist eine getter-Methode für die Informationen, die von der Bereitstellung Dienst für das bereitgestellte primäre Zertifikat zurückgegeben.</p>
      <p></p>
    syntax: &ref_2
      content: public X509CertificateInfo getPrimaryX509CertificateInfo()
      return:
        type: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info
        description: "<p>die <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info\" data-throw-if-not-resolved=\"false\">X509CertificateInfo</xref> mit den Informationen zurückgegebene Zertifikat. Es kann sein<code>null \r\n\r\n    </code> . </p>"
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getRootCertificates()
    id: getRootCertificates()
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    langs:
      - java
    name: getRootCertificates()
    nameWithType: X509Attestation.getRootCertificates()
    fullName: X509Certificates com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getRootCertificates()
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getRootCertificates*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Attestation.java
      startLine: 258
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p>Der Getter für die RootCertificates.</p>
      <p></p>
    syntax:
      content: public X509Certificates getRootCertificates()
      return:
        type: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates
        description: "<p>die <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates\" data-throw-if-not-resolved=\"false\">X509Certificates</xref> mit der gespeicherten RootCertificates. Es kann sein<code>null \r\n\r\n    </code> . </p>"
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getSecondaryX509CertificateInfo()
    id: getSecondaryX509CertificateInfo()
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    langs:
      - java
    name: getSecondaryX509CertificateInfo()
    nameWithType: X509Attestation.getSecondaryX509CertificateInfo()
    fullName: X509CertificateInfo com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getSecondaryX509CertificateInfo()
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getSecondaryX509CertificateInfo*
    type: Method
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Attestation.java
      startLine: 315
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p>Getter-Methode für die sekundäre Datenbank X509 Zertifikat Info.</p>
      <p>Diese Methode ist eine getter-Methode für die Informationen, die vom Dienst für das bereitgestellte Zertifikat für die sekundäre Bereitstellung zurückgegeben.</p>
      <p></p>
    syntax: &ref_3
      content: public X509CertificateInfo getSecondaryX509CertificateInfo()
      return:
        type: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info
        description: "<p>die <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info\" data-throw-if-not-resolved=\"false\">X509CertificateInfo</xref> mit den Informationen zurückgegebene Zertifikat. Es kann sein<code>null \r\n\r\n    </code> . </p>"
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.X509Attestation()
    id: X509Attestation()
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    langs:
      - java
    name: X509Attestation()
    nameWithType: X509Attestation.X509Attestation()
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.X509Attestation()
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.X509Attestation*
    type: Constructor
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Attestation.java
      startLine: 356
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p>Leeren Konstruktor</p>
      <p>Verwendet nur durch die Tools, die diese Klasse deserialisiert werden. </p>
    syntax:
      content: protected X509Attestation()
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.X509Attestation(X509Attestation)
    id: X509Attestation(X509Attestation)
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    langs:
      - java
    name: X509Attestation(X509Attestation x509Attestation)
    nameWithType: X509Attestation.X509Attestation(X509Attestation x509Attestation)
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.X509Attestation(X509Attestation x509Attestation)
    overload: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.X509Attestation*
    type: Constructor
    source:
      remote: *ref_0
      path: provisioning/provisioning-service-client/src/main/java/com/microsoft/azure/sdk/iot/provisioning/service/configs/X509Attestation.java
      startLine: 96
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
    summary: |-
      <p>Konstruktor [Kopieren]</p>
      <p>Erstellt eine neue Instanz der dem <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref> copping den Inhalt des bereitgestellten.</p>
      <p></p>
    syntax:
      content: public X509Attestation(X509Attestation x509Attestation)
      parameters:
        - id: x509Attestation
          type: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
          description: <p>die ursprüngliche <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref> zu kopieren. </p>
    exceptions:
      - type: 3c87bd19
        description: <p>Wenn die bereitgestellten x509Attestation ist null oder nicht enthält ein primäres Zertifikat. </p>
references:
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.X509Attestation*
    name: X509Attestation
    nameWithType: X509Attestation.X509Attestation
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.X509Attestation
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getClientCertificates*
    name: getClientCertificates
    nameWithType: X509Attestation.getClientCertificates
    fullName: X509Certificates com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getClientCertificates
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getRootCertificates*
    name: getRootCertificates
    nameWithType: X509Attestation.getRootCertificates
    fullName: X509Certificates com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getRootCertificates
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getCAReferences*
    name: getCAReferences
    nameWithType: X509Attestation.getCAReferences
    fullName: X509CAReferences com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getCAReferences
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getPrimaryX509CertificateInfo*
    name: getPrimaryX509CertificateInfo
    nameWithType: X509Attestation.getPrimaryX509CertificateInfo
    fullName: X509CertificateInfo com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getPrimaryX509CertificateInfo
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getSecondaryX509CertificateInfo*
    name: getSecondaryX509CertificateInfo
    nameWithType: X509Attestation.getSecondaryX509CertificateInfo
    fullName: X509CertificateInfo com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getSecondaryX509CertificateInfo
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromClientCertificates*
    name: createFromClientCertificates
    nameWithType: X509Attestation.createFromClientCertificates
    fullName: static X509Attestation com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromClientCertificates
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromRootCertificates*
    name: createFromRootCertificates
    nameWithType: X509Attestation.createFromRootCertificates
    fullName: static X509Attestation com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromRootCertificates
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.createFromCAReferences*
    name: createFromCAReferences
    nameWithType: X509Attestation.createFromCAReferences
    fullName: static X509Attestation com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromCAReferences
    package: com.microsoft.azure.sdk.iot.provisioning.service.configs
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation.yml
    name: Attestation
    nameWithType: Attestation
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation
    type: Class
    summary: |-
      <p>Dies ist die abstrakte Klasse, die alle Mögliche Typen von Nachweis vereinheitlicht, der Registrierungsdienst für Bereitstellung unterstützt.</p>
      <p>Jetzt die Bereitstellung Dienst unterstützt <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation" data-throw-if-not-resolved="false">TpmAttestation</xref> oder <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref>.</p>
      <p></p>
    syntax:
      content: public class Attestation
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificates.yml
    name: X509Certificates
    nameWithType: X509Certificates
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Certificates
    type: Class
    summary: "<p>Darstellung eines einzelnen Geräts Bereitstellung Diensts X509 primären und sekundären Zertifikats.</p>\n<p>Diese Klasse erstellt eine Darstellung einer X509 Zertifikat. Sie können primäre und sekundäre Zertifikat empfangen, aber nur das primäre ist obligatorisch.</p>\n<p>Benutzer müssen das Zertifikat als Bereitstellen einer<code>String \r\n\r\n    </code> , aus einer <b>PEM</b> Dateien. Diese Klasse wird sowohl in einer einzelnen kapseln <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation\" data-throw-if-not-resolved=\"false\">X509Attestation</xref>. Die folgenden JSON-Code ist ein Beispiel für das Ergebnis dieser Klasse. <pre><code>{\n\n        \"primary\": {\n\n            \"certificate\": \"-----BEGIN CERTIFICATE-----\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"-----END CERTIFICATE-----\\n\"\n\n        },\n\n        \"secondary\": {\n\n            \"certificate\": \"-----BEGIN CERTIFICATE-----\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\n\" +\n\n                           \"-----END CERTIFICATE-----\\n\"\n\n        }\n\n    }\n\n    </code></pre></p>\n\n<p>Nach dem Senden einer X509 hostzertifikat mit dem Erfolg der Bereitstellung Dienst zurück die <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info\" data-throw-if-not-resolved=\"false\">X509CertificateInfo</xref> für primäre und sekundäre Zertifikat. Benutzer kann diese Informationen abrufen, von dieser Klasse und noch einmal: nur die primäre Informationen ist obligatorisch. Die folgenden JSON-Code ist ein Beispiel: Welche Informationen die Bereitstellung-Dienst für X509 zurück. <pre><code>{\n\n        \"primary\": {\n\n            \"info\": {\n\n                 \"subjectName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n\n                 \"sha1Thumbprint\": \"0000000000000000000000000000000000\",\n\n                 \"sha256Thumbprint\": \"validEnrollmentGroupId\",\n\n                 \"issuerName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n\n                 \"notBeforeUtc\": \"2017-11-14T12:34:18Z\",\n\n                 \"notAfterUtc\": \"2017-11-20T12:34:18Z\",\n\n                 \"serialNumber\": \"000000000000000000\",\n\n                 \"version\": 3\n\n             }\n\n        },\n\n        \"secondary\": {\n\n            \"info\": {\n\n                 \"subjectName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n\n                 \"sha1Thumbprint\": \"0000000000000000000000000000000000\",\n\n                 \"sha256Thumbprint\": \"validEnrollmentGroupId\",\n\n                 \"issuerName\": \"CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US\",\n\n                 \"notBeforeUtc\": \"2017-11-14T12:34:18Z\",\n\n                 \"notAfterUtc\": \"2017-11-20T12:34:18Z\",\n\n                 \"serialNumber\": \"000000000000000000\",\n\n                 \"version\": 3\n\n             }\n\n        }\n\n    }\n\n    </code></pre></p>\n\n<p></p>"
    syntax:
      content: public class X509Certificates
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_c_a_references
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_c_a_references.yml
    name: X509CAReferences
    nameWithType: X509CAReferences
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CAReferences
    type: Class
    summary: "<p>Darstellung eines einzelnen Geräts Bereitstellung Diensts X509 primären und sekundären CA-Verweis.</p>\n<p>Diese Klasse erstellt eine Darstellung einer X509 CA-Verweise. Sie können primäre und sekundäre Zertifizierungsstelle Verweise empfangen, aber nur das primäre ist obligatorisch.</p>\n<p>Benutzer müssen die CA-Verweis als Bereitstellen einer<code>String \r\n\r\n    </code> . Diese Klasse wird sowohl in einer einzelnen kapseln <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation\" data-throw-if-not-resolved=\"false\">X509Attestation</xref>.</p>\n\n<p>Die folgenden JSON-Code ist ein Beispiel für das Ergebnis dieser Klasse. <pre><code>{\n\n        \"primary\": \"ValidCAReference-1\",\n\n        \"secondary\": \"validCAReference-2\"\n\n    }\n\n    </code></pre></p>\n\n<p></p>"
    syntax:
      content: public class X509CAReferences
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    name: X509Attestation
    nameWithType: X509Attestation
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation
    type: Class
    summary: "<p>Darstellung eines einzelnen Geräts Bereitstellung Diensts X509 <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation\" data-throw-if-not-resolved=\"false\">Nachweis</xref>.</p>\n<p>Der bereitstellungs-Dienst unterstützt Gerät Bezeichner Kompositionsmodul oder Datenwürfel AUFGETEILT, als Gerät Nachweis Mechanismus. Um AUFTEILUNGEN verwenden zu können, muss Benutzer die X509 bereitstellen Zertifikat. Diese Klasse bieten die Möglichkeit zum Erstellen einer neuen Nachweis für eine X509 Zertifikat und gibt es als eine abstrakte Schnittstelle <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._attestation\" data-throw-if-not-resolved=\"false\">Nachweis</xref>.</p>\n<p>Ein X509 Nachweis können enthält mindestens eine der 3 Typen des Zertifikats:</p>\n<p>\r\n\r\n  <variablelist>\r\n\r\n    <varlistentry>\r\n\r\n      <b>Client- oder Alias-Zertifikat:</b>\r\n\r\n    </varlistentry>\r\n\r\n    <listitem>\r\n\r\n      <p>Für diese Klasse als ClientCertificates aufgerufen wird, kann dieses Zertifikat ein einzelnes Gerät authentifizieren. </p>\r\n\r\n    </listitem>\r\n\r\n    <varlistentry>\r\n\r\n      <b>Signieren oder Stammzertifikats:</b>\r\n\r\n    </varlistentry>\r\n\r\n    <listitem>\r\n\r\n      <p>Für diese Klasse als RootCertificates aufgerufen wird, kann dieses Zertifikat mehrere Clientzertifikate zum Authentifizieren von mehreren Geräten erstellen. </p>\r\n\r\n    </listitem>\r\n\r\n    <varlistentry>\r\n\r\n      <b>Referenz der Zertifizierungsstelle:</b>\r\n\r\n    </varlistentry>\r\n\r\n    <listitem>\r\n\r\n      <p>Für diese Klasse als aufgerufen <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_c_a_references\" data-throw-if-not-resolved=\"false\">X509CAReferences</xref>, dies ist ein Verweis Zertifizierungsstelle für eine Vertrauensanbieter, die mehrere Clientzertifikate zum Authentifizieren von mehreren Geräten erstellen können. </p>\n\n    </listitem>\n\n  </variablelist>\n\n</p>\n<p>Die Bereitstellung Dienst ermöglicht Benutzern das Erstellen <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment\" data-throw-if-not-resolved=\"false\">IndividualEnrollment</xref> und <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group\" data-throw-if-not-resolved=\"false\">EnrollmentGroup</xref>. Für alle Vorgänge über <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment\" data-throw-if-not-resolved=\"false\">IndividualEnrollment</xref> mit <b>AUFTEILUNGEN</b>, Benutzer bereitstellen muss eine <b>ClientCertificates</b>, und für Vorgänge über <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group\" data-throw-if-not-resolved=\"false\">EnrollmentGroup </xref>, Benutzer bereitstellen muss eine <b>RootCertificates</b> oder ein <b> <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_c_a_references\" data-throw-if-not-resolved=\"false\">X509CAReferences</xref></b>.</p>\n<p>Für jeden dieser Typen von Zertifikaten kann Benutzer 2 Zertifikate, ein primäres und ein sekundäres Replikat bereitstellen. Nur die primäre ist obligatorisch ist, wird die sekundäre Datenbank ist optional.</p>\n<p>Der bereitstellungs-Dienst verarbeitet die bereitgestellten Zertifikate, aber nie erneut zurück. Statt, <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getPrimaryX509CertificateInfo()\" data-throw-if-not-resolved=\"false\">getPrimaryX509CertificateInfo()</xref> und <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getSecondaryX509CertificateInfo()\" data-throw-if-not-resolved=\"false\">getSecondaryX509CertificateInfo()</xref> die Zertifikatinformationen für den Zertifikaten zurück.</p>\n<p></p>"
    syntax: *ref_1
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment.yml
    name: IndividualEnrollment
    nameWithType: IndividualEnrollment
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment
    type: Class
    summary: "<p>Darstellung der Registrierung einer einzelnen Bereitstellung Registrierungsdienst mit einem JSON-Serialisierungsprogramm und Deserialisierungsprogramm.</p>\n<p>Dieses Objekt wird zum Senden <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment\" data-throw-if-not-resolved=\"false\">IndividualEnrollment</xref> Informationen, die die Bereitstellung von service oder empfangen <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment\" data-throw-if-not-resolved=\"false\">IndividualEnrollment</xref> Informationen aus der Bereitstellung-Dienst.</p>\n<p>Erstellt oder aktualisiert eine <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment\" data-throw-if-not-resolved=\"false\">IndividualEnrollment</xref> dienstseitig Bereitstellung sollten Sie ausfüllen dieses Objekts und Aufrufen der öffentliche API <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createOrUpdateIndividualEnrollment(IndividualEnrollment)\" data-throw-if-not-resolved=\"false\">ProvisioningServiceClient #createOrUpdateIndividualEnrollment () IndividualEnrollment)</xref>. Die Mindestinformationen Bereitstellung Dienst erforderlich ist der<code>registrationId \r\n\r\n    </code> und <code>attestation \r\n\r\n    </code> .</p>\n\n<p>Ein neues Gerät bereitgestellt werden kann, durch zwei Nachweis Mechanismen, vertrauen Platform Module (finden Sie unter <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._tpm_attestation\" data-throw-if-not-resolved=\"false\">TpmAttestation</xref>) oder X509 (siehe <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation\" data-throw-if-not-resolved=\"false\">X509Attestation</xref>). Die Definition der einzelnen Aktionen, abhängig von der Hardware für die physische Authentifizierung verwendet werden soll, die das Gerät enthält.</p>\n<p>Der Inhalt dieser Klasse werden in einem JSON-Format serialisiert und als Textkörper der Rest-API an den bereitstellungs-Dienst gesendet.</p>\n<p>Bei der Serialisierung ein <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment\" data-throw-if-not-resolved=\"false\">IndividualEnrollment</xref> wird im folgenden Beispiel aussehen: <pre>\n*<code>*{\n\n         \"registrationId\":\"validRegistrationId\",\n\n         \"deviceId\":\"ContosoDevice-123\",\n\n         \"attestation\":{\n\n             \"type\":\"tpm\",\n\n             \"tpm\":{\n\n                 \"endorsementKey\":\"validEndorsementKey\"\n\n             }\n\n         },\n\n         \"iotHubHostName\":\"ContosoIoTHub.azure-devices.net\",\n\n         \"provisioningStatus\":\"enabled\"\n\n    *}\n\n    </code></pre></p>\n\n<p>Der Inhalt dieser Klasse ausgefüllt werden kann, durch eine JSON, aus der Bereitstellung Dienst als Ergebnis des Empfangen einer <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment\" data-throw-if-not-resolved=\"false\">IndividualEnrollment</xref> Vorgang wie erstellen, aktualisieren oder Abfrage Registrierung.</p>\n<p>Die folgenden JSON-Code ist ein Beispiel für oder die <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs._individual_enrollment\" data-throw-if-not-resolved=\"false\">IndividualEnrollment</xref> Antwort, die von der Bereitstellung Dienst empfangen. <pre>\n*<code>*{\n\n         \"registrationId\":\"validRegistrationId\",\n\n         \"deviceId\":\"ContosoDevice-123\",\n\n         \"attestation\":{\n\n             \"type\":\"tpm\",\n\n             \"tpm\":{\n\n                 \"endorsementKey\":\"validEndorsementKey\"\n\n             }\n\n         },\n\n         \"iotHubHostName\":\"ContosoIoTHub.azure-devices.net\",\n\n         \"provisioningStatus\":\"enabled\"\n\n         \"createdDateTimeUtc\": \"2017-09-28T16:29:42.3447817Z\",\n\n         \"lastUpdatedDateTimeUtc\": \"2017-09-28T16:29:42.3447817Z\",\n\n         \"etag\": \"\\\"00000000-0000-0000-0000-00000000000\\\"\"\n\n    *}\n\n    </code></pre></p>\n\n<p></p>"
    syntax:
      content: public class IndividualEnrollment extends Serializable
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_certificate_info.yml
    name: X509CertificateInfo
    nameWithType: X509CertificateInfo
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo
    type: Class
    summary: |-
      <p>Darstellung einer einzelnen X509 Zertifikatinformationen für den Dienst für die Geräte-Bereitstellung.</p>
      <p>Benutzer erhalten diese Informationen aus der Bereitstellung Dienst als Ergebnis eines X509 Vorgänge.</p>
      <p>Diese Infos enthält eine Reihe von Parametern, die folgenden JSON-Code ist ein Beispiel für die X509 Info-Zertifikat. <pre><code>{

              "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

              "sha1Thumbprint": "0000000000000000000000000000000000",

              "sha256Thumbprint": "validEnrollmentGroupId",

              "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

              "notBeforeUtc": "2017-11-14T12:34:182Z",

              "notAfterUtc": "2017-11-20T12:34:183Z",

              "serialNumber": "000000000000000000",

              "version": 3

          }

          </code></pre></p>

      <p></p>
    syntax:
      content: public class X509CertificateInfo
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group.yml
    name: EnrollmentGroup
    nameWithType: EnrollmentGroup
    fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup
    type: Class
    summary: |-
      <p>Darstellung einer einzelnen Bereitstellung Registrierungsdienst Registrierung Gruppe mit einem JSON-Serialisierungsprogramm und Deserialisierungsprogramm.</p>
      <p>Dieses Objekt wird zum Senden <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> Informationen, die die Bereitstellung von service oder empfangen <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> Informationen aus der Bereitstellung-Dienst.</p>
      <p>Erstellt oder aktualisiert eine <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> dienstseitig Bereitstellung sollten Sie ausfüllen dieses Objekts und Aufrufen der öffentliche API <xref uid="com.microsoft.azure.sdk.iot.provisioning.service._provisioning_service_client.createOrUpdateEnrollmentGroup(EnrollmentGroup)" data-throw-if-not-resolved="false">ProvisioningServiceClient#createOrUpdateEnrollmentGroup(EnrollmentGroup)</xref>. Die Mindestinformationen Bereitstellung Dienst erforderlich ist der <xref uid="" data-throw-if-not-resolved="false">EnrollmentGroupId</xref> und <xref uid="" data-throw-if-not-resolved="false">Nachweis</xref>.</p>
      <p>Zum Bereitstellen eines Geräts mithilfe <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref>, es muss ein X509 enthalten Chip mit einem SigningCertificate für die <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation" data-throw-if-not-resolved="false">X509Attestation</xref> Mechanismus.</p>
      <p>Der Inhalt dieser Klasse werden in einem JSON-Format serialisiert und als Textkörper der Rest-API an den bereitstellungs-Dienst gesendet.</p>
      <p>Bei der Serialisierung ein <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> wird im folgenden Beispiel aussehen: <pre><code>{

              "enrollmentGroupId":"validEnrollmentGroupId",

              "attestation":{

                  "type":"x509",

                  "signingCertificates":{

                      "primary":{

                          "certificate":"[valid certificate]"

                      }

                  }

              },

              "iotHubHostName":"ContosoIoTHub.azure-devices.net",

              "provisioningStatus":"enabled"

          }

          </code></pre></p>

      <p>Der Inhalt dieser Klasse ausgefüllt werden kann, durch eine JSON, aus der Bereitstellung Dienst als Ergebnis des Empfangen einer <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> Vorgang wie erstellen, aktualisieren oder Abfrage <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref>.</p>
      <p>Die folgenden JSON-Code ist ein Beispiel für die <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs._enrollment_group" data-throw-if-not-resolved="false">EnrollmentGroup</xref> Antwort, die von der Bereitstellung Dienst empfangen. <pre><code>{

              "enrollmentGroupId":"validEnrollmentGroupId",

              "attestation":{

                  "type":"x509",

                  "signingCertificates":{

                      "primary":{

                          "certificate":"[valid certificate]",

                          "info": {

                              "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

                              "sha1Thumbprint": "0000000000000000000000000000000000",

                              "sha256Thumbprint": "validEnrollmentGroupId",

                              "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

                              "notBeforeUtc": "2017-11-14T12:34:18Z",

                              "notAfterUtc": "2017-11-20T12:34:18Z",

                              "serialNumber": "000000000000000000",

                              "version": 3

                          }

                      }

                  }

              },

              "iotHubHostName":"ContosoIoTHub.azure-devices.net",

              "provisioningStatus":"enabled",

              "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

              "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

              "etag": "\"00000000-0000-0000-0000-00000000000\""

          }

          </code></pre></p>

      <p></p>
    syntax:
      content: public class EnrollmentGroup extends Serializable
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getPrimaryX509CertificateInfo()
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    name: getPrimaryX509CertificateInfo()
    nameWithType: X509Attestation.getPrimaryX509CertificateInfo()
    fullName: X509CertificateInfo com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getPrimaryX509CertificateInfo()
    type: Method
    summary: |-
      <p>Getter-Methode für den primären X509 Zertifikat Info.</p>
      <p>Diese Methode ist eine getter-Methode für die Informationen, die von der Bereitstellung Dienst für das bereitgestellte primäre Zertifikat zurückgegeben.</p>
      <p></p>
    syntax: *ref_2
  - uid: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.getSecondaryX509CertificateInfo()
    parent: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation
    href: com.microsoft.azure.sdk.iot.provisioning.service.configs._x509_attestation.yml
    name: getSecondaryX509CertificateInfo()
    nameWithType: X509Attestation.getSecondaryX509CertificateInfo()
    fullName: X509CertificateInfo com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getSecondaryX509CertificateInfo()
    type: Method
    summary: |-
      <p>Getter-Methode für die sekundäre Datenbank X509 Zertifikat Info.</p>
      <p>Diese Methode ist eine getter-Methode für die Informationen, die vom Dienst für das bereitgestellte Zertifikat für die sekundäre Bereitstellung zurückgegeben.</p>
      <p></p>
    syntax: *ref_3