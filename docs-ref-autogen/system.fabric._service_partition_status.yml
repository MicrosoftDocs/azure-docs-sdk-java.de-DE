### YamlMime:ManagedReference
items:
  - uid: system.fabric._service_partition_status
    id: _service_partition_status
    parent: system.fabric
    children:
      - system.fabric._service_partition_status.DELETING()
      - system.fabric._service_partition_status.getValue()
      - system.fabric._service_partition_status.IN_QUORUM_LOSS()
      - system.fabric._service_partition_status.INVALID()
      - system.fabric._service_partition_status.NOT_READY()
      - system.fabric._service_partition_status.READY()
      - system.fabric._service_partition_status.RECONFIGURING()
    href: system.fabric._service_partition_status.yml
    langs:
      - java
    name: ServicePartitionStatus
    nameWithType: ServicePartitionStatus
    fullName: system.fabric.ServicePartitionStatus
    type: Enum
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
      startLine: 6
    package: system.fabric
    summary: '<p>Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden. </p>'
    syntax:
      content: public enum ServicePartitionStatus
    inheritance:
      - java.lang.Object
      - java.lang.Enum<ServicePartitionStatus>
  - uid: system.fabric._service_partition_status.DELETING()
    id: DELETING()
    parent: system.fabric._service_partition_status
    href: system.fabric._service_partition_status.yml
    langs:
      - java
    name: DELETING
    nameWithType: ServicePartitionStatus.DELETING
    fullName: system.fabric.ServicePartitionStatus.DELETING
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
      startLine: 34
    package: system.fabric
    summary: <p>Partition erste gelöscht. </p>
    syntax:
      content: public DELETING=(5)
  - uid: system.fabric._service_partition_status.getValue()
    id: getValue()
    parent: system.fabric._service_partition_status
    href: system.fabric._service_partition_status.yml
    langs:
      - java
    name: getValue()
    nameWithType: ServicePartitionStatus.getValue()
    fullName: int system.fabric.ServicePartitionStatus.getValue()
    overload: system.fabric._service_partition_status.getValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
      startLine: 42
    package: system.fabric
    syntax:
      content: public int getValue()
      return:
        type: f75371fa
  - uid: system.fabric._service_partition_status.IN_QUORUM_LOSS()
    id: IN_QUORUM_LOSS()
    parent: system.fabric._service_partition_status
    href: system.fabric._service_partition_status.yml
    langs:
      - java
    name: IN_QUORUM_LOSS
    nameWithType: ServicePartitionStatus.IN_QUORUM_LOSS
    fullName: system.fabric.ServicePartitionStatus.IN_QUORUM_LOSS
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
      startLine: 26
    package: system.fabric
    summary: '<p>Quorumsverlust in Partition. Dies bedeutet, dass weniger als Quorum MinReplicaSetSize Anzahl der Replikate beteiligt sind. </p>'
    syntax:
      content: public IN_QUORUM_LOSS=(3)
  - uid: system.fabric._service_partition_status.INVALID()
    id: INVALID()
    parent: system.fabric._service_partition_status
    href: system.fabric._service_partition_status.yml
    langs:
      - java
    name: INVALID
    nameWithType: ServicePartitionStatus.INVALID
    fullName: system.fabric.ServicePartitionStatus.INVALID
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
      startLine: 11
    package: system.fabric
    summary: '<p>Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden. </p>'
    syntax:
      content: public INVALID=(0)
  - uid: system.fabric._service_partition_status.NOT_READY()
    id: NOT_READY()
    parent: system.fabric._service_partition_status
    href: system.fabric._service_partition_status.yml
    langs:
      - java
    name: NOT_READY
    nameWithType: ServicePartitionStatus.NOT_READY
    fullName: system.fabric.ServicePartitionStatus.NOT_READY
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
      startLine: 21
    package: system.fabric
    summary: '<p>Partition ist nicht bereit. Dies wird zurückgegeben, wenn keiner der anderen Zustände anwenden. </p>'
    syntax:
      content: public NOT_READY=(2)
  - uid: system.fabric._service_partition_status.READY()
    id: READY()
    parent: system.fabric._service_partition_status
    href: system.fabric._service_partition_status.yml
    langs:
      - java
    name: READY
    nameWithType: ServicePartitionStatus.READY
    fullName: system.fabric.ServicePartitionStatus.READY
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
      startLine: 17
    package: system.fabric
    summary: '<p>Partition ist bereit. Für zustandslose Dienste besteht ein Stand Replikat für statusbehaftete--die Anzahl der Replikate bereit Services ist, größer als oder gleich der<xref href="system.fabric._stateful_service_description.getMinReplicaSetSize()" data-throw-if-not-resolved="false"></xref></p>'
    syntax:
      content: public READY=(1)
  - uid: system.fabric._service_partition_status.RECONFIGURING()
    id: RECONFIGURING()
    parent: system.fabric._service_partition_status
    href: system.fabric._service_partition_status.yml
    langs:
      - java
    name: RECONFIGURING
    nameWithType: ServicePartitionStatus.RECONFIGURING
    fullName: system.fabric.ServicePartitionStatus.RECONFIGURING
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionStatus.java
      startLine: 30
    package: system.fabric
    summary: <p>Partition wird eine Neukonfiguration gewartet. </p>
    syntax:
      content: public RECONFIGURING=(4)
references:
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: system.fabric._service_partition_status.getValue*
    name: getValue
    nameWithType: ServicePartitionStatus.getValue
    fullName: int system.fabric.ServicePartitionStatus.getValue
    package: system.fabric
  - uid: system.fabric._stateful_service_description.getMinReplicaSetSize()
    parent: system.fabric._stateful_service_description
    href: system.fabric._stateful_service_description.yml
    name: getMinReplicaSetSize()
    nameWithType: StatefulServiceDescription.getMinReplicaSetSize()
    fullName: long system.fabric.StatefulServiceDescription.getMinReplicaSetSize()
    type: Method
    summary: "<p>Ruft die zulässige Mindestgröße des Replikatsatzes Größe für diesen Dienst an.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>definiert die minimale Anzahl der Replikate, die Service Fabric in eine Ansicht der Replikatgruppe für eine bestimmte Partition beibehalten werden sollen. Beispielsweise, wenn die <ref refid=\"\" kindref=\"compound\">system.fabric.StatefulServiceDescription#targetReplicaSetSize</ref> ist auf fünf (5) (fehlerfrei) normalerweise dann dort festgelegt werden fünf Replikate in der Ansicht des Replikatsatzes. Diese Zahl wird jedoch bei Ausfällen verringern. Die <ref refid=\"\" kindref=\"compound\">system.fabric.StatefulServiceDescription#minReplicaSetSize</ref> definiert die minimale Anzahl der Replikate in der Ansicht z. B. wenn die <ref refid=\"\" kindref=\"compound\">system.fabric.StatefulServiceDescription#targetReplicaSetSize</ref> werden fünf und die <ref refid=\"\" kindref=\"compound\">system.fabric.StatefulServiceDescription#minReplicaSetSize</ref> drei, auch wenn es drei gleichzeitiger Ausfälle gibt (wodurch nur zwei verbleibenden Replikaten ausgeführt) werden noch haben drei Replikate in der Ansicht des Replikats und legen dann (zwei nach-oben und unten ein). Da verwendet mehrheitsquorummodus, der die Anzahl der Replikate, die in dieser Ansicht des mehrheitsquorummodus beibehalten der <ref refid=\"\" kindref=\"compound\">system.fabric.StatefulServiceDescription#minReplicaSetSize</ref> Untergrenze der Zuverlässigkeit von jeder Vorgang ist: im vorherigen Beispiel mit Ziel = 5 und Min = 3, mit 3 gleichzeitiger Ausfälle, es gibt zwei Replikate (und einem nach unten), verbleibende und die mehrheitsquorummodus von 3 (der <ref refid=\"\" kindref=\"compound\">system.fabric.StatefulServiceDescription#minReplicaSetSize</ref>) ist 2. Dies bedeutet, dass der primären weiterhin Vorgänge replizieren können, dass es sich bei das verbleibende sekundäre Replikat den Vorgang in der Reihenfolge für das Replikat angewendet werden muss (Partition) Fortschritte festlegen. Wenn die Anzahl von Replikaten unter der mehrheitsquorummodus von fällt die <ref refid=\"\" kindref=\"compound\">system.fabric.StatefulServiceDescription#minReplicaSetSize</ref> und weiteren Schreibvorgänge nicht zulässig sind. </p>"
    syntax:
      content: public long getMinReplicaSetSize()
      return:
        type: 0364520f
        description: <p>Der kleinste zulässige Größe des Replikats für diesen Dienst. </p>