### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._actor_information
    id: _actor_information
    parent: microsoft.servicefabric.actors
    children:
      - 'microsoft.servicefabric.actors._actor_information.ActorInformation(ActorId,boolean)'
      - microsoft.servicefabric.actors._actor_information.getActorId()
      - microsoft.servicefabric.actors._actor_information.isActive()
    href: microsoft.servicefabric.actors._actor_information.yml
    langs:
      - java
    name: ActorInformation
    nameWithType: ActorInformation
    fullName: microsoft.servicefabric.actors.ActorInformation
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorInformation.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorInformation.java
      startLine: 5
    package: microsoft.servicefabric.actors
    summary: <p>Stellt die Informationen zu einem Akteur zurückgegebenes <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> Methodenaufruf abzufragen. </p>
    syntax: &ref_1
      content: public class ActorInformation
    inheritance:
      - java.lang.Object
      - Serializable
  - uid: 'microsoft.servicefabric.actors._actor_information.ActorInformation(ActorId,boolean)'
    id: 'ActorInformation(ActorId,boolean)'
    parent: microsoft.servicefabric.actors._actor_information
    href: microsoft.servicefabric.actors._actor_information.yml
    langs:
      - java
    name: 'ActorInformation(ActorId actorId, boolean isactive)'
    nameWithType: 'ActorInformation.ActorInformation(ActorId actorId, boolean isactive)'
    fullName: 'microsoft.servicefabric.actors.ActorInformation.ActorInformation(ActorId actorId, boolean isactive)'
    overload: microsoft.servicefabric.actors._actor_information.ActorInformation*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorInformation.java
      startLine: 18
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Initialisiert eine neue Instanz der dem <xref href="microsoft.servicefabric.actors._actor_information" data-throw-if-not-resolved="false"></xref> Klasse.</p>
      <p></p>
    syntax:
      content: 'public ActorInformation(ActorId actorId, boolean isactive)'
      parameters:
        - id: actorId
          type: microsoft.servicefabric.actors._actor_id
          description: "<p>\r\n\r\n  <xref href=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\"></xref>der Akteur. </p>"
        - id: isactive
          type: 4fc6e284
          description: '<p>Wert gibt an, ob die <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> aktiv oder inaktiv ist. </p>'
  - uid: microsoft.servicefabric.actors._actor_information.getActorId()
    id: getActorId()
    parent: microsoft.servicefabric.actors._actor_information
    href: microsoft.servicefabric.actors._actor_information.yml
    langs:
      - java
    name: getActorId()
    nameWithType: ActorInformation.getActorId()
    fullName: ActorId microsoft.servicefabric.actors.ActorInformation.getActorId()
    overload: microsoft.servicefabric.actors._actor_information.getActorId*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorInformation.java
      startLine: 28
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft <xref href="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false"></xref> für die der Akteur.</p>
      <p></p>
    syntax:
      content: public ActorId getActorId()
      return:
        type: microsoft.servicefabric.actors._actor_id
        description: |-
          <p>

            <xref href="microsoft.servicefabric.actors._actor_id" data-throw-if-not-resolved="false"></xref>

          </p>
  - uid: microsoft.servicefabric.actors._actor_information.isActive()
    id: isActive()
    parent: microsoft.servicefabric.actors._actor_information
    href: microsoft.servicefabric.actors._actor_information.yml
    langs:
      - java
    name: isActive()
    nameWithType: ActorInformation.isActive()
    fullName: boolean microsoft.servicefabric.actors.ActorInformation.isActive()
    overload: microsoft.servicefabric.actors._actor_information.isActive*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorInformation.java
      startLine: 37
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft ab, wenn der Akteur aktiv ist.</p>
      <p></p>
    syntax:
      content: public boolean isActive()
      return:
        type: 4fc6e284
        description: "<p>\r\n\r\n  <ref refid=\"\" kindref=\"compound\">java.lang.Boolean</ref> gibt If den <xref href=\"microsoft.servicefabric.actors._actor\" data-throw-if-not-resolved=\"false\"></xref> aktiv ist. </p>"
references:
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: microsoft.servicefabric.actors._actor_information.ActorInformation*
    name: ActorInformation
    nameWithType: ActorInformation.ActorInformation
    fullName: microsoft.servicefabric.actors.ActorInformation.ActorInformation
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_information.getActorId*
    name: getActorId
    nameWithType: ActorInformation.getActorId
    fullName: ActorId microsoft.servicefabric.actors.ActorInformation.getActorId
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_information.isActive*
    name: isActive
    nameWithType: ActorInformation.isActive
    fullName: boolean microsoft.servicefabric.actors.ActorInformation.isActive
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_id
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_id.yml
    name: ActorId
    nameWithType: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    type: Class
    summary: "<p>\r\n\r\n  <xref href=\"microsoft.servicefabric.actors._actor_id\" data-throw-if-not-resolved=\"false\"></xref>die Identität der Akteur innerhalb eines Diensts Akteur. Akteure können festgestellt werden, indem <ref refid=\"\" kindref=\"compound\">java.lang.String</ref>, <ref refid=\"\" kindref=\"compound\">java.util.UUID</ref> oder lang. </p>"
    syntax:
      content: public class ActorId
  - uid: microsoft.servicefabric.actors._actor_information
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_information.yml
    name: ActorInformation
    nameWithType: ActorInformation
    fullName: microsoft.servicefabric.actors.ActorInformation
    type: Class
    summary: <p>Stellt die Informationen zu einem Akteur zurückgegebenes <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> Methodenaufruf abzufragen. </p>
    syntax: *ref_1
  - uid: microsoft.servicefabric.actors._actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor.yml
    name: Actor
    nameWithType: Actor
    fullName: microsoft.servicefabric.actors.Actor
    type: Interface
    summary: <p>Die Basisschnittstelle für das zuverlässige Akteur Schnittstellen erben. </p>
    syntax:
      content: public interface Actor