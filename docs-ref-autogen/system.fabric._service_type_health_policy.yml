### YamlMime:ManagedReference
items:
  - uid: system.fabric._service_type_health_policy
    id: _service_type_health_policy
    parent: system.fabric
    children:
      - system.fabric._service_type_health_policy.getMaxPercentUnhealthyPartitionsPerService()
      - system.fabric._service_type_health_policy.getMaxPercentUnhealthyReplicasPerPartition()
      - system.fabric._service_type_health_policy.getMaxPercentUnhealthyServices()
      - system.fabric._service_type_health_policy.ServiceTypeHealthPolicy()
      - system.fabric._service_type_health_policy.setMaxPercentUnhealthyPartitionsPerService(byte)
      - system.fabric._service_type_health_policy.setMaxPercentUnhealthyReplicasPerPartition(byte)
      - system.fabric._service_type_health_policy.setMaxPercentUnhealthyServices(byte)
    href: system.fabric._service_type_health_policy.yml
    langs:
      - java
    name: ServiceTypeHealthPolicy
    nameWithType: ServiceTypeHealthPolicy
    fullName: system.fabric.ServiceTypeHealthPolicy
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
      startLine: 10
    package: system.fabric
    summary: '<p>Stellt die Integritätsrichtlinie, die zur Bewertung der Integritäts von Diensten, die zu einem Diensttyp gehören. </p>'
    syntax: &ref_1
      content: public class ServiceTypeHealthPolicy
    inheritance:
      - java.lang.Object
  - uid: system.fabric._service_type_health_policy.getMaxPercentUnhealthyPartitionsPerService()
    id: getMaxPercentUnhealthyPartitionsPerService()
    parent: system.fabric._service_type_health_policy
    href: system.fabric._service_type_health_policy.yml
    langs:
      - java
    name: getMaxPercentUnhealthyPartitionsPerService()
    nameWithType: ServiceTypeHealthPolicy.getMaxPercentUnhealthyPartitionsPerService()
    fullName: byte system.fabric.ServiceTypeHealthPolicy.getMaxPercentUnhealthyPartitionsPerService()
    overload: system.fabric._service_type_health_policy.getMaxPercentUnhealthyPartitionsPerService*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
      startLine: 145
    package: system.fabric
    summary: |-
      <p>Ruft ab oder legt die maximal zulässigen Prozentsatz fehlerhafter Partitionen pro Dienst.</p>
      <p></p>
    syntax:
      content: public byte getMaxPercentUnhealthyPartitionsPerService()
      return:
        type: d357ea40
        description: '<p>Gibt die maximal zulässige Prozentsatz fehlerhafter Partitionen pro Dienst zurück. Zulässige Werte sind <ref refid="" kindref="compound">Array_wert</ref> Werte von 0 bis 100 <bold>"Hinweise":</bold>der Prozentsatz stellt den maximal zulässigen Prozentsatz der Partitionen, die fehlerhaft sein kann, bevor der Dienst bei Fehler betrachtet wird. Wenn der Prozentsatz wird berücksichtigt, aber mindestens ein "fehlerhaft" Partition vorhanden ist, wird die Integrität als Warnung ausgewertet. Dies wird berechnet durch Dividieren der Anzahl der fehlerhaften Partitionen über die Gesamtanzahl der Partitionen im Dienst. Rundet auf die Berechnung auf kleinen Anzahl von Partitionen einen Ausfall tolerieren kann. Standardprozentsatz : null. </p>'
  - uid: system.fabric._service_type_health_policy.getMaxPercentUnhealthyReplicasPerPartition()
    id: getMaxPercentUnhealthyReplicasPerPartition()
    parent: system.fabric._service_type_health_policy
    href: system.fabric._service_type_health_policy.yml
    langs:
      - java
    name: getMaxPercentUnhealthyReplicasPerPartition()
    nameWithType: ServiceTypeHealthPolicy.getMaxPercentUnhealthyReplicasPerPartition()
    fullName: byte system.fabric.ServiceTypeHealthPolicy.getMaxPercentUnhealthyReplicasPerPartition()
    overload: system.fabric._service_type_health_policy.getMaxPercentUnhealthyReplicasPerPartition*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
      startLine: 187
    package: system.fabric
    summary: |-
      <p>Ruft ab oder legt die maximal zulässigen Prozentsatz fehlerhafter Replikate pro Partition.</p>
      <p></p>
    syntax:
      content: public byte getMaxPercentUnhealthyReplicasPerPartition()
      return:
        type: d357ea40
        description: '<p>Gibt die maximal zulässige Prozentsatz fehlerhafter Replikate pro Partition zurück. Zulässige Werte sind <ref refid="" kindref="compound">java.lang.Byte</ref> Werte von 0 bis 100. <bold>Beschreibung:</bold>der Prozentsatz stellt den zulässigen maximalen Prozentsatz der Replikate, die fehlerhaft sein kann, bevor die Partition bei Fehler betrachtet wird. Wenn der Prozentsatz wird berücksichtigt, aber mindestens ein "fehlerhaft" Replikat vorhanden ist, wird die Integrität als Warnung ausgewertet. Dies wird durch Dividieren die Anzahl der fehlerhaften Replikate über die Anzahl von Replikaten in der Partition berechnet. Rundet auf die Berechnung auf kleinere Mengen von Replikaten ein Ausfall tolerieren kann. Standardprozentsatz : null. </p>'
  - uid: system.fabric._service_type_health_policy.getMaxPercentUnhealthyServices()
    id: getMaxPercentUnhealthyServices()
    parent: system.fabric._service_type_health_policy
    href: system.fabric._service_type_health_policy.yml
    langs:
      - java
    name: getMaxPercentUnhealthyServices()
    nameWithType: ServiceTypeHealthPolicy.getMaxPercentUnhealthyServices()
    fullName: byte system.fabric.ServiceTypeHealthPolicy.getMaxPercentUnhealthyServices()
    overload: system.fabric._service_type_health_policy.getMaxPercentUnhealthyServices*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
      startLine: 103
    package: system.fabric
    summary: "<p>Ruft die maximal zulässige Prozentsatz fehlerhafter Dienste ab.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>der Prozentsatz stellt den zulässigen maximalen Prozentsatz von Diensten, die fehlerhaft sein kann, bevor die Anwendung bei Fehler betrachtet wird. Wenn der Prozentsatz wird berücksichtigt, aber mindestens ein \"fehlerhaft\" Dienst vorhanden ist, wird die Integrität als Warnung ausgewertet. Dies wird durch Division der \"fehlerhaft\" Dienste des Typs angegebenen Dienst über die Gesamtzahl der Dienste des Typs spezifischen Dienst berechnet. Rundet auf die Berechnung auf kleinere Mengen von Services ein Ausfall tolerieren kann. Standardprozentsatz : null. </p>"
    syntax:
      content: public byte getMaxPercentUnhealthyServices()
      return:
        type: d357ea40
        description: <p>Gibt die maximal zulässige Prozentsatz fehlerhafter Dienste zurück. Zulässige Werte sind <ref refid="" kindref="compound">java.lang.Byte</ref> Werte von 0 bis 100. </p>
  - uid: system.fabric._service_type_health_policy.ServiceTypeHealthPolicy()
    id: ServiceTypeHealthPolicy()
    parent: system.fabric._service_type_health_policy
    href: system.fabric._service_type_health_policy.yml
    langs:
      - java
    name: ServiceTypeHealthPolicy()
    nameWithType: ServiceTypeHealthPolicy.ServiceTypeHealthPolicy()
    fullName: system.fabric.ServiceTypeHealthPolicy.ServiceTypeHealthPolicy()
    overload: system.fabric._service_type_health_policy.ServiceTypeHealthPolicy*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
      startLine: 33
    package: system.fabric
    summary: "<p>Initialisiert eine neue Instanz der <ref refid=\"\" kindref=\"compound\">system.fabric.ServiceTypeHealthPolicy</ref> Klasse. </p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>standardmäßig keine Fehler oder Warnungen toleriert werden. </p>"
    syntax:
      content: public ServiceTypeHealthPolicy()
  - uid: system.fabric._service_type_health_policy.setMaxPercentUnhealthyPartitionsPerService(byte)
    id: setMaxPercentUnhealthyPartitionsPerService(byte)
    parent: system.fabric._service_type_health_policy
    href: system.fabric._service_type_health_policy.yml
    langs:
      - java
    name: setMaxPercentUnhealthyPartitionsPerService(byte maxPercentUnhealthyPartitionsPerService)
    nameWithType: ServiceTypeHealthPolicy.setMaxPercentUnhealthyPartitionsPerService(byte maxPercentUnhealthyPartitionsPerService)
    fullName: void system.fabric.ServiceTypeHealthPolicy.setMaxPercentUnhealthyPartitionsPerService(byte maxPercentUnhealthyPartitionsPerService)
    overload: system.fabric._service_type_health_policy.setMaxPercentUnhealthyPartitionsPerService*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
      startLine: 164
    package: system.fabric
    summary: |-
      <p>Legt die maximal zulässige Prozentsatz fehlerhafter Partitionen pro Dienst fest.</p>
      <p></p>
    syntax:
      content: public void setMaxPercentUnhealthyPartitionsPerService(byte maxPercentUnhealthyPartitionsPerService)
      parameters:
        - id: maxPercentUnhealthyPartitionsPerService
          type: d357ea40
          description: '<p>Der Prozentsatz stellt den zulässigen maximalen Prozentsatz der Partitionen, die fehlerhaft sein kann, bevor der Dienst bei Fehler betrachtet wird. </p>'
    exceptions:
      - type: 3c87bd19
        description: '<p>Der angegebene Wert lag außerhalb des Bereichs von ganzzahligen Werten von 0 bis 100. <bold>Beschreibung:</bold>der Prozentsatz stellt den maximal zulässigen Prozentsatz der Partitionen, die fehlerhaft sein kann, bevor der Dienst bei Fehler betrachtet wird. Wenn der Prozentsatz wird berücksichtigt, aber mindestens ein "fehlerhaft" Partition vorhanden ist, wird die Integrität als Warnung ausgewertet. Dies wird berechnet durch Dividieren der Anzahl der fehlerhaften Partitionen über die Gesamtanzahl der Partitionen im Dienst. Rundet auf die Berechnung auf kleinen Anzahl von Partitionen einen Ausfall tolerieren kann. Standardprozentsatz : null. </p>'
  - uid: system.fabric._service_type_health_policy.setMaxPercentUnhealthyReplicasPerPartition(byte)
    id: setMaxPercentUnhealthyReplicasPerPartition(byte)
    parent: system.fabric._service_type_health_policy
    href: system.fabric._service_type_health_policy.yml
    langs:
      - java
    name: setMaxPercentUnhealthyReplicasPerPartition(byte maxPercentUnhealthyReplicasPerPartition)
    nameWithType: ServiceTypeHealthPolicy.setMaxPercentUnhealthyReplicasPerPartition(byte maxPercentUnhealthyReplicasPerPartition)
    fullName: void system.fabric.ServiceTypeHealthPolicy.setMaxPercentUnhealthyReplicasPerPartition(byte maxPercentUnhealthyReplicasPerPartition)
    overload: system.fabric._service_type_health_policy.setMaxPercentUnhealthyReplicasPerPartition*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
      startLine: 207
    package: system.fabric
    summary: "<p>Ruft ab oder legt die maximal zulässigen Prozentsatz fehlerhafter Replikate pro Partition.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>der Prozentsatz stellt den zulässigen maximalen Prozentsatz der Replikate, die fehlerhaft sein kann, bevor die Partition bei Fehler betrachtet wird. Wenn der Prozentsatz wird berücksichtigt, aber mindestens ein \"fehlerhaft\" Replikat vorhanden ist, wird die Integrität als Warnung ausgewertet. Dies wird durch Dividieren die Anzahl der fehlerhaften Replikate über die Anzahl von Replikaten in der Partition berechnet. Rundet auf die Berechnung auf kleinere Mengen von Replikaten ein Ausfall tolerieren kann. Standardprozentsatz : null. </p>"
    syntax:
      content: public void setMaxPercentUnhealthyReplicasPerPartition(byte maxPercentUnhealthyReplicasPerPartition)
      parameters:
        - id: maxPercentUnhealthyReplicasPerPartition
          type: d357ea40
          description: '<p>Der Prozentsatz stellt den zulässigen maximalen Prozentsatz der Replikate in einer Partition, die fehlerhaft sein kann, bevor der Dienst bei Fehler betrachtet wird. </p>'
    exceptions:
      - type: 3c87bd19
        description: <p>Der angegebene Wert lag außerhalb des Bereichs von ganzzahligen Werten von 0 bis 100. </p>
  - uid: system.fabric._service_type_health_policy.setMaxPercentUnhealthyServices(byte)
    id: setMaxPercentUnhealthyServices(byte)
    parent: system.fabric._service_type_health_policy
    href: system.fabric._service_type_health_policy.yml
    langs:
      - java
    name: setMaxPercentUnhealthyServices(byte maxPercentUnhealthyServices)
    nameWithType: ServiceTypeHealthPolicy.setMaxPercentUnhealthyServices(byte maxPercentUnhealthyServices)
    fullName: void system.fabric.ServiceTypeHealthPolicy.setMaxPercentUnhealthyServices(byte maxPercentUnhealthyServices)
    overload: system.fabric._service_type_health_policy.setMaxPercentUnhealthyServices*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceTypeHealthPolicy.java
      startLine: 123
    package: system.fabric
    summary: |-
      <p>Legt die maximal zulässige Prozentsatz fehlerhafter Dienste fest.</p>
      <p></p>
    syntax:
      content: public void setMaxPercentUnhealthyServices(byte maxPercentUnhealthyServices)
      parameters:
        - id: maxPercentUnhealthyServices
          type: d357ea40
          description: '<p>Maximale toleriert Prozentsatz der Dienste, die fehlerhaft sein kann. </p>'
    exceptions:
      - type: 3c87bd19
        description: '<p>Wenn die Eingabe kleiner als 0 oder größer als 100. <bold>Beschreibung:</bold>der Prozentsatz stellt den zulässigen maximalen Prozentsatz von Diensten, die fehlerhaft sein kann, bevor die Anwendung bei Fehler betrachtet wird. Der angegebene Wert lag außerhalb des Bereichs von ganzzahligen Werten von 0 bis 100. Wenn der Prozentsatz wird berücksichtigt, aber mindestens ein "fehlerhaft" Dienst vorhanden ist, wird die Integrität als Warnung ausgewertet. Dies wird durch Division der "fehlerhaft" Dienste des Typs angegebenen Dienst über die Gesamtzahl der Dienste des Typs spezifischen Dienst berechnet. Rundet auf die Berechnung auf kleinere Mengen von Services ein Ausfall tolerieren kann. Standardprozentsatz : null. </p>'
references:
  - uid: system.fabric._service_type_health_policy.ServiceTypeHealthPolicy*
    name: ServiceTypeHealthPolicy
    nameWithType: ServiceTypeHealthPolicy.ServiceTypeHealthPolicy
    fullName: system.fabric.ServiceTypeHealthPolicy.ServiceTypeHealthPolicy
    package: system.fabric
  - uid: d357ea40
    spec.java:
      - name: byte
        fullName: byte
  - uid: system.fabric._service_type_health_policy.getMaxPercentUnhealthyServices*
    name: getMaxPercentUnhealthyServices
    nameWithType: ServiceTypeHealthPolicy.getMaxPercentUnhealthyServices
    fullName: byte system.fabric.ServiceTypeHealthPolicy.getMaxPercentUnhealthyServices
    package: system.fabric
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: system.fabric._service_type_health_policy.setMaxPercentUnhealthyServices*
    name: setMaxPercentUnhealthyServices
    nameWithType: ServiceTypeHealthPolicy.setMaxPercentUnhealthyServices
    fullName: void system.fabric.ServiceTypeHealthPolicy.setMaxPercentUnhealthyServices
    package: system.fabric
  - uid: system.fabric._service_type_health_policy.getMaxPercentUnhealthyPartitionsPerService*
    name: getMaxPercentUnhealthyPartitionsPerService
    nameWithType: ServiceTypeHealthPolicy.getMaxPercentUnhealthyPartitionsPerService
    fullName: byte system.fabric.ServiceTypeHealthPolicy.getMaxPercentUnhealthyPartitionsPerService
    package: system.fabric
  - uid: system.fabric._service_type_health_policy.setMaxPercentUnhealthyPartitionsPerService*
    name: setMaxPercentUnhealthyPartitionsPerService
    nameWithType: ServiceTypeHealthPolicy.setMaxPercentUnhealthyPartitionsPerService
    fullName: void system.fabric.ServiceTypeHealthPolicy.setMaxPercentUnhealthyPartitionsPerService
    package: system.fabric
  - uid: system.fabric._service_type_health_policy.getMaxPercentUnhealthyReplicasPerPartition*
    name: getMaxPercentUnhealthyReplicasPerPartition
    nameWithType: ServiceTypeHealthPolicy.getMaxPercentUnhealthyReplicasPerPartition
    fullName: byte system.fabric.ServiceTypeHealthPolicy.getMaxPercentUnhealthyReplicasPerPartition
    package: system.fabric
  - uid: system.fabric._service_type_health_policy.setMaxPercentUnhealthyReplicasPerPartition*
    name: setMaxPercentUnhealthyReplicasPerPartition
    nameWithType: ServiceTypeHealthPolicy.setMaxPercentUnhealthyReplicasPerPartition
    fullName: void system.fabric.ServiceTypeHealthPolicy.setMaxPercentUnhealthyReplicasPerPartition
    package: system.fabric
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection
  - uid: system.fabric._service_type_health_policy
    parent: system.fabric
    href: system.fabric._service_type_health_policy.yml
    name: ServiceTypeHealthPolicy
    nameWithType: ServiceTypeHealthPolicy
    fullName: system.fabric.ServiceTypeHealthPolicy
    type: Class
    summary: '<p>Stellt die Integritätsrichtlinie, die zur Bewertung der Integritäts von Diensten, die zu einem Diensttyp gehören. </p>'
    syntax: *ref_1