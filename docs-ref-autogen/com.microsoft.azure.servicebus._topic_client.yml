### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.servicebus._topic_client
    id: _topic_client
    parent: com.microsoft.azure.servicebus
    children:
      - com.microsoft.azure.servicebus._topic_client.cancelScheduledMessage(long)
      - com.microsoft.azure.servicebus._topic_client.cancelScheduledMessageAsync(long)
      - com.microsoft.azure.servicebus._topic_client.getEntityPath()
      - com.microsoft.azure.servicebus._topic_client.getTopicName()
      - com.microsoft.azure.servicebus._topic_client.onClose()
      - com.microsoft.azure.servicebus._topic_client.peek()
      - com.microsoft.azure.servicebus._topic_client.peek(long)
      - com.microsoft.azure.servicebus._topic_client.peekAsync()
      - com.microsoft.azure.servicebus._topic_client.peekAsync(long)
      - com.microsoft.azure.servicebus._topic_client.peekBatch(int)
      - 'com.microsoft.azure.servicebus._topic_client.peekBatch(long,int)'
      - com.microsoft.azure.servicebus._topic_client.peekBatchAsync(int)
      - 'com.microsoft.azure.servicebus._topic_client.peekBatchAsync(long,int)'
      - 'com.microsoft.azure.servicebus._topic_client.scheduleMessage(IMessage,Instant)'
      - 'com.microsoft.azure.servicebus._topic_client.scheduleMessageAsync(IMessage,Instant)'
      - com.microsoft.azure.servicebus._topic_client.send(IMessage)
      - com.microsoft.azure.servicebus._topic_client.sendAsync(IMessage)
      - com.microsoft.azure.servicebus._topic_client.sendBatch(Collection<? extends IMessage>)
      - com.microsoft.azure.servicebus._topic_client.sendBatchAsync(Collection<? extends IMessage>)
      - com.microsoft.azure.servicebus._topic_client.TopicClient(ConnectionStringBuilder)
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: TopicClient
    nameWithType: TopicClient
    fullName: com.microsoft.azure.servicebus.TopicClient
    type: Class
    source:
      remote: &ref_0
        path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
        branch: master
        repo: 'https://github.com/Azure/azure-service-bus-java'
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 20
    package: com.microsoft.azure.servicebus
    summary: '<p>Das Thema-Client, der Interaktion mit Servicebus-Thema. </p>'
    syntax:
      content: public class TopicClient implements ITopicClient
    inheritance:
      - java.lang.Object
      - com.microsoft.azure.servicebus.primitives._client_entity
      - com.microsoft.azure.servicebus.InitializableEntity
    inheritedMembers:
      - 'com.microsoft.azure.servicebus.primitives._client_entity.ClientEntity(final String,final ClientEntity)'
      - com.microsoft.azure.servicebus.primitives._client_entity.close()
      - com.microsoft.azure.servicebus._i_closeable.close()
      - com.microsoft.azure.servicebus.primitives._client_entity.closeAsync()
      - com.microsoft.azure.servicebus._i_closeable.closeAsync()
      - com.microsoft.azure.servicebus.primitives._client_entity.finalize()
      - com.microsoft.azure.servicebus.primitives._client_entity.getClientId()
      - com.microsoft.azure.servicebus.primitives._client_entity.getIsClosed()
      - com.microsoft.azure.servicebus.primitives._client_entity.getIsClosingOrClosed()
      - 'com.microsoft.azure.servicebus._initializable_entity.InitializableEntity(String,ClientEntity)'
      - com.microsoft.azure.servicebus.primitives._client_entity.setClosed()
      - com.microsoft.azure.servicebus.primitives._client_entity.throwIfClosed(Throwable)
  - uid: com.microsoft.azure.servicebus._topic_client.cancelScheduledMessage(long)
    id: cancelScheduledMessage(long)
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: cancelScheduledMessage(long sequenceNumber)
    nameWithType: TopicClient.cancelScheduledMessage(long sequenceNumber)
    fullName: void com.microsoft.azure.servicebus.TopicClient.cancelScheduledMessage(long sequenceNumber)
    overload: com.microsoft.azure.servicebus._topic_client.cancelScheduledMessage*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 81
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Bricht das Einreihen einer bereits gesendeten geplante Nachricht ab, wenn es nicht bereits in die Warteschlange eingereihten war. Diese Methode blockiert, bis die Nachricht, auf die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: public void cancelScheduledMessage(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p>Sequenznummer der Nachricht geplante </p>
    overridden: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessage(long)
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn der geplante Nachricht konnte nicht abgebrochen werden </p>
  - uid: com.microsoft.azure.servicebus._topic_client.cancelScheduledMessageAsync(long)
    id: cancelScheduledMessageAsync(long)
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: cancelScheduledMessageAsync(long sequenceNumber)
    nameWithType: TopicClient.cancelScheduledMessageAsync(long sequenceNumber)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.TopicClient.cancelScheduledMessageAsync(long sequenceNumber)
    overload: com.microsoft.azure.servicebus._topic_client.cancelScheduledMessageAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 71
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Bricht das Einreihen einer bereits gesendeten geplante Nachricht ab, wenn es nicht bereits in die Warteschlange eingereihten war. Dies ist eine asynchrone Methode, die Rückgabe einer CompletableFuture die abgeschlossen wird, wenn die Nachricht abgebrochen wird.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> cancelScheduledMessageAsync(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p>Sequenznummer der Nachricht geplante </p>
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die den ausstehenden Abbruch darstellt. </p>'
    overridden: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessageAsync(long)
  - uid: com.microsoft.azure.servicebus._topic_client.getEntityPath()
    id: getEntityPath()
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: getEntityPath()
    nameWithType: TopicClient.getEntityPath()
    fullName: String com.microsoft.azure.servicebus.TopicClient.getEntityPath()
    overload: com.microsoft.azure.servicebus._topic_client.getEntityPath*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 86
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Ruft den Pfad der Entität, die dieser Client wird ab, Senden von Nachrichten an oder Empfang von Nachrichten aus.</p>
      <p></p>
    syntax:
      content: public String getEntityPath()
      return:
        type: '26831127'
        description: '<p>Pfad der Entität, der diesem Client eine Verbindung herstellt </p>'
    overridden: com.microsoft.azure.servicebus._i_message_entity_client.getEntityPath()
  - uid: com.microsoft.azure.servicebus._topic_client.getTopicName()
    id: getTopicName()
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: getTopicName()
    nameWithType: TopicClient.getTopicName()
    fullName: String com.microsoft.azure.servicebus.TopicClient.getTopicName()
    overload: com.microsoft.azure.servicebus._topic_client.getTopicName*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 142
    package: com.microsoft.azure.servicebus
    summary: <p>Ruft den Namen des Themas </p>
    syntax:
      content: public String getTopicName()
      return:
        type: '26831127'
        description: <p>der Name des Themas </p>
    overridden: com.microsoft.azure.servicebus._i_topic_client.getTopicName()
  - uid: com.microsoft.azure.servicebus._topic_client.onClose()
    id: onClose()
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: onClose()
    nameWithType: TopicClient.onClose()
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.TopicClient.onClose()
    overload: com.microsoft.azure.servicebus._topic_client.onClose*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 137
    package: com.microsoft.azure.servicebus
    syntax:
      content: protected CompletableFuture<Void> onClose()
      return:
        type: db03ee24
  - uid: com.microsoft.azure.servicebus._topic_client.peek()
    id: peek()
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: peek()
    nameWithType: TopicClient.peek()
    fullName: IMessage com.microsoft.azure.servicebus.TopicClient.peek()
    overload: com.microsoft.azure.servicebus._topic_client.peek*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 91
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>als Nächstes liest Sie die aktive Nachricht ohne Änderung des Zustands der Empfänger oder die Quelle der Meldung ein. Der erste Aufruf von <xref uid="com.microsoft.azure.servicebus._i_message_browser.peek()" data-throw-if-not-resolved="false">IMessageBrowser#peek()</xref> Ruft die erste aktive Nachricht für diesen Empfänger. Jeder nachfolgender Aufruf ruft die nachfolgende Meldung in der Entität ab.</p>
      <p></p>
    syntax:
      content: public IMessage peek()
      return:
        type: com.microsoft.azure.servicebus._i_message
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> eingesehen </p>"
    overridden: com.microsoft.azure.servicebus._i_message_browser.peek()
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Peek fehlgeschlagen ist. </p>
  - uid: com.microsoft.azure.servicebus._topic_client.peek(long)
    id: peek(long)
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: peek(long fromSequenceNumber)
    nameWithType: TopicClient.peek(long fromSequenceNumber)
    fullName: IMessage com.microsoft.azure.servicebus.TopicClient.peek(long fromSequenceNumber)
    overload: com.microsoft.azure.servicebus._topic_client.peek*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 96
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Als Nächstes liest Sie die aktive Nachricht ohne Änderung des Zustands der Empfänger oder die Quelle der Meldung ein.</p>
      <p></p>
    syntax:
      content: public IMessage peek(long fromSequenceNumber)
      parameters:
        - id: fromSequenceNumber
          type: 0364520f
          description: <p>Die Sequenznummer ab dem die Nachricht zu lesen. </p>
      return:
        type: com.microsoft.azure.servicebus._i_message
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> eingesehen </p>"
    overridden: com.microsoft.azure.servicebus._i_message_browser.peek(long)
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Peek fehlgeschlagen ist. </p>
  - uid: com.microsoft.azure.servicebus._topic_client.peekAsync()
    id: peekAsync()
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: peekAsync()
    nameWithType: TopicClient.peekAsync()
    fullName: CompletableFuture<IMessage> com.microsoft.azure.servicebus.TopicClient.peekAsync()
    overload: com.microsoft.azure.servicebus._topic_client.peekAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 111
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Liest asynchron aktiven Nachrichten ohne den Zustand der Empfänger oder die Quelle der Meldung zu ändern.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<IMessage> peekAsync()
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_messagea08ddfce
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> eingesehen </p>"
    overridden: com.microsoft.azure.servicebus._i_message_browser.peekAsync()
  - uid: com.microsoft.azure.servicebus._topic_client.peekAsync(long)
    id: peekAsync(long)
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: peekAsync(long fromSequenceNumber)
    nameWithType: TopicClient.peekAsync(long fromSequenceNumber)
    fullName: CompletableFuture<IMessage> com.microsoft.azure.servicebus.TopicClient.peekAsync(long fromSequenceNumber)
    overload: com.microsoft.azure.servicebus._topic_client.peekAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 116
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Als Nächstes liest die aktive Nachricht ohne Änderung des Zustands der Empfänger oder die Quelle der Meldung asynchron.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<IMessage> peekAsync(long fromSequenceNumber)
      parameters:
        - id: fromSequenceNumber
          type: 0364520f
          description: <p>Die Sequenznummer ab dem die Nachricht zu lesen. </p>
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_messagea08ddfce
        description: '<p>CompletableFuture, die zurückgibt <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> einsehen. </p>'
    overridden: com.microsoft.azure.servicebus._i_message_browser.peekAsync(long)
  - uid: com.microsoft.azure.servicebus._topic_client.peekBatch(int)
    id: peekBatch(int)
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: peekBatch(int messageCount)
    nameWithType: TopicClient.peekBatch(int messageCount)
    fullName: Collection<IMessage> com.microsoft.azure.servicebus.TopicClient.peekBatch(int messageCount)
    overload: com.microsoft.azure.servicebus._topic_client.peekBatch*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 101
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Liest nächste Batch von der aktiven Nachrichten ohne den Zustand der Empfänger oder die Quelle der Meldung zu ändern.</p>
      <p></p>
    syntax:
      content: public Collection<IMessage> peekBatch(int messageCount)
      parameters:
        - id: messageCount
          type: f75371fa
          description: <p>Die Anzahl der Nachrichten. </p>
      return:
        type: 12ebb11acom.microsoft.azure.servicebus._i_messagea08ddfce
        description: <p>Batch <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> eingesehen </p>
    overridden: com.microsoft.azure.servicebus._i_message_browser.peekBatch(int)
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Peek fehlgeschlagen ist. </p>
  - uid: 'com.microsoft.azure.servicebus._topic_client.peekBatch(long,int)'
    id: 'peekBatch(long,int)'
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: 'peekBatch(long fromSequenceNumber, int messageCount)'
    nameWithType: 'TopicClient.peekBatch(long fromSequenceNumber, int messageCount)'
    fullName: 'Collection<IMessage> com.microsoft.azure.servicebus.TopicClient.peekBatch(long fromSequenceNumber, int messageCount)'
    overload: com.microsoft.azure.servicebus._topic_client.peekBatch*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 106
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Liest nächste Batch von der aktiven Nachrichten ohne den Zustand der Empfänger oder die Quelle der Meldung zu ändern.</p>
      <p></p>
    syntax:
      content: 'public Collection<IMessage> peekBatch(long fromSequenceNumber, int messageCount)'
      parameters:
        - id: fromSequenceNumber
          type: 0364520f
          description: <p>Die Sequenznummer ab dem die Nachricht zu lesen. </p>
        - id: messageCount
          type: f75371fa
          description: <p>Die Anzahl der Nachrichten. </p>
      return:
        type: 12ebb11acom.microsoft.azure.servicebus._i_messagea08ddfce
        description: <p>Batch <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> eingesehen </p>
    overridden: 'com.microsoft.azure.servicebus._i_message_browser.peekBatch(long,int)'
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Peek fehlgeschlagen ist. </p>
  - uid: com.microsoft.azure.servicebus._topic_client.peekBatchAsync(int)
    id: peekBatchAsync(int)
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: peekBatchAsync(int messageCount)
    nameWithType: TopicClient.peekBatchAsync(int messageCount)
    fullName: CompletableFuture<Collection<IMessage>> com.microsoft.azure.servicebus.TopicClient.peekBatchAsync(int messageCount)
    overload: com.microsoft.azure.servicebus._topic_client.peekBatchAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 121
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Liest asynchron den nächsten Batch aktiver Nachrichten ohne den Zustand der Empfänger oder die Quelle der Meldung zu ändern.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Collection<IMessage>> peekBatchAsync(int messageCount)
      parameters:
        - id: messageCount
          type: f75371fa
          description: <p>Die Anzahl der Nachrichten. </p>
      return:
        type: 9161dfdccom.microsoft.azure.servicebus._i_messagee7daa122
        description: '<p>CompletableFuture, der Batch zurückgibt <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> einsehen. </p>'
    overridden: com.microsoft.azure.servicebus._i_message_browser.peekBatchAsync(int)
  - uid: 'com.microsoft.azure.servicebus._topic_client.peekBatchAsync(long,int)'
    id: 'peekBatchAsync(long,int)'
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: 'peekBatchAsync(long fromSequenceNumber, int messageCount)'
    nameWithType: 'TopicClient.peekBatchAsync(long fromSequenceNumber, int messageCount)'
    fullName: 'CompletableFuture<Collection<IMessage>> com.microsoft.azure.servicebus.TopicClient.peekBatchAsync(long fromSequenceNumber, int messageCount)'
    overload: com.microsoft.azure.servicebus._topic_client.peekBatchAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 126
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Liest asynchron den nächsten Batch aktiver Nachrichten ohne den Zustand der Empfänger oder die Quelle der Meldung zu ändern.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Collection<IMessage>> peekBatchAsync(long fromSequenceNumber, int messageCount)'
      parameters:
        - id: fromSequenceNumber
          type: 0364520f
          description: <p>Die Sequenznummer ab dem die Nachricht zu lesen. </p>
        - id: messageCount
          type: f75371fa
          description: <p>Die Anzahl der Nachrichten. </p>
      return:
        type: 9161dfdccom.microsoft.azure.servicebus._i_messagee7daa122
        description: '<p>CompletableFuture, der Batch zurückgibt <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> einsehen. </p>'
    overridden: 'com.microsoft.azure.servicebus._i_message_browser.peekBatchAsync(long,int)'
  - uid: 'com.microsoft.azure.servicebus._topic_client.scheduleMessage(IMessage,Instant)'
    id: 'scheduleMessage(IMessage,Instant)'
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: 'scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    nameWithType: 'TopicClient.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    fullName: 'long com.microsoft.azure.servicebus.TopicClient.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    overload: com.microsoft.azure.servicebus._topic_client.scheduleMessage*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 76
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Sendet eine geplante Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Eine geplante Nachricht in die Warteschlange eingereiht und an Empfänger nur zum Zeitpunkt geplanten Enqueue zur Verfügung gestellt. Diese Methode blockiert, bis die Nachricht, auf die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: 'public long scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
        - id: scheduledEnqueueTimeUtc
          type: 328f8254
          description: '<p>Zeitpunkt, an dem die Nachricht in der Entität in die Warteschlange eingereiht werden sollen </p>'
      return:
        type: 0364520f
        description: <p>Sequenznummer der Nachricht geplante </p>
    overridden: 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessage(IMessage,Instant)'
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Nachricht konnte nicht die Entität gesendet werden </p>
  - uid: 'com.microsoft.azure.servicebus._topic_client.scheduleMessageAsync(IMessage,Instant)'
    id: 'scheduleMessageAsync(IMessage,Instant)'
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: 'scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    nameWithType: 'TopicClient.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    fullName: 'CompletableFuture<Long> com.microsoft.azure.servicebus.TopicClient.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    overload: com.microsoft.azure.servicebus._topic_client.scheduleMessageAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 66
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Sendet eine geplante Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Eine geplante Nachricht in die Warteschlange eingereiht und an Empfänger nur zum Zeitpunkt geplanten Enqueue zur Verfügung gestellt. Dies ist eine asynchrone Methode, die eine CompletableFuture die abgeschlossen wird, wenn die Nachricht, auf die Entität gesendet wird zurückgibt. Die CompletableFuture nach Abschluss gibt die Sequenznummer der geplanten Nachricht die verwendet werden kann, um die Planung der Nachricht abzubrechen.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Long> scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
        - id: scheduledEnqueueTimeUtc
          type: 328f8254
          description: '<p>Zeitpunkt, an dem die Nachricht in der Entität in die Warteschlange eingereiht werden sollen </p>'
      return:
        type: 30822cb1
        description: '<p>eine CompletableFuture, die die ausstehenden senden, das die Sequenznummer der geplanten Nachricht zurückgibt darstellt. Diese Sequenznummer kann verwendet werden, um die Planung der Nachricht abzubrechen. </p>'
    overridden: 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessageAsync(IMessage,Instant)'
  - uid: com.microsoft.azure.servicebus._topic_client.send(IMessage)
    id: send(IMessage)
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: send(IMessage message)
    nameWithType: TopicClient.send(IMessage message)
    fullName: void com.microsoft.azure.servicebus.TopicClient.send(IMessage message)
    overload: com.microsoft.azure.servicebus._topic_client.send*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 46
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Sendet eine Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Diese Methode blockiert, bis die Nachricht, auf die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: public void send(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
    overridden: com.microsoft.azure.servicebus._i_message_sender.send(IMessage)
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Nachricht konnte nicht die Entität gesendet werden </p>
  - uid: com.microsoft.azure.servicebus._topic_client.sendAsync(IMessage)
    id: sendAsync(IMessage)
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: sendAsync(IMessage message)
    nameWithType: TopicClient.sendAsync(IMessage message)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.TopicClient.sendAsync(IMessage message)
    overload: com.microsoft.azure.servicebus._topic_client.sendAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 56
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Sendet eine Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Dies ist eine asynchrone Methode, die eine CompletableFuture die abgeschlossen wird, wenn die Nachricht, auf die Entität gesendet wird zurückgibt.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> sendAsync(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden senden darstellt. </p>'
    overridden: com.microsoft.azure.servicebus._i_message_sender.sendAsync(IMessage)
  - uid: com.microsoft.azure.servicebus._topic_client.sendBatch(Collection<? extends IMessage>)
    id: sendBatch(Collection<? extends IMessage>)
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: sendBatch(Collection<? extends IMessage> messages)
    nameWithType: TopicClient.sendBatch(Collection<? extends IMessage> messages)
    fullName: void com.microsoft.azure.servicebus.TopicClient.sendBatch(Collection<? extends IMessage> messages)
    overload: com.microsoft.azure.servicebus._topic_client.sendBatch*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 51
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Sendet einen Nachrichtenbatch für die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Diese Methode blockiert, bis der Batch an die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: public void sendBatch(Collection<? extends IMessage> messages)
      parameters:
        - id: messages
          type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
          description: <p>Auflistung von Nachrichten an die Entität gesendet werden </p>
    overridden: com.microsoft.azure.servicebus._i_message_sender.sendBatch(Collection<? extends IMessage>)
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn der Batch für die Entität gesendet werden konnte nicht </p>
  - uid: com.microsoft.azure.servicebus._topic_client.sendBatchAsync(Collection<? extends IMessage>)
    id: sendBatchAsync(Collection<? extends IMessage>)
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: sendBatchAsync(Collection<? extends IMessage> messages)
    nameWithType: TopicClient.sendBatchAsync(Collection<? extends IMessage> messages)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.TopicClient.sendBatchAsync(Collection<? extends IMessage> messages)
    overload: com.microsoft.azure.servicebus._topic_client.sendBatchAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 61
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Sendet einen Nachrichtenbatch für die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Dies ist eine asynchrone Methode, die eine CompletableFuture die abgeschlossen wird, wenn der Batch, auf die Entität gesendet wird zurückgibt.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> sendBatchAsync(Collection<? extends IMessage> messages)
      parameters:
        - id: messages
          type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
          description: <p>Auflistung von Nachrichten an die Entität gesendet werden </p>
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden senden darstellt. </p>'
    overridden: com.microsoft.azure.servicebus._i_message_sender.sendBatchAsync(Collection<? extends IMessage>)
  - uid: com.microsoft.azure.servicebus._topic_client.TopicClient(ConnectionStringBuilder)
    id: TopicClient(ConnectionStringBuilder)
    parent: com.microsoft.azure.servicebus._topic_client
    href: com.microsoft.azure.servicebus._topic_client.yml
    langs:
      - java
    name: TopicClient(ConnectionStringBuilder amqpConnectionStringBuilder)
    nameWithType: TopicClient.TopicClient(ConnectionStringBuilder amqpConnectionStringBuilder)
    fullName: com.microsoft.azure.servicebus.TopicClient.TopicClient(ConnectionStringBuilder amqpConnectionStringBuilder)
    overload: com.microsoft.azure.servicebus._topic_client.TopicClient*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/TopicClient.java
      startLine: 29
    package: com.microsoft.azure.servicebus
    syntax:
      content: public TopicClient(ConnectionStringBuilder amqpConnectionStringBuilder)
      parameters:
        - id: amqpConnectionStringBuilder
          type: com.microsoft.azure.servicebus.primitives._connection_string_builder
references:
  - uid: com.microsoft.azure.servicebus._topic_client.TopicClient*
    name: TopicClient
    nameWithType: TopicClient.TopicClient
    fullName: com.microsoft.azure.servicebus.TopicClient.TopicClient
    package: com.microsoft.azure.servicebus
  - uid: 8256ba40
    spec.java:
      - name: InterruptedException
        fullName: InterruptedException
  - uid: 73fec9fb
    spec.java:
      - name: ServiceBusException
        fullName: ServiceBusException
  - uid: com.microsoft.azure.servicebus._topic_client.send*
    name: send
    nameWithType: TopicClient.send
    fullName: void com.microsoft.azure.servicebus.TopicClient.send
    package: com.microsoft.azure.servicebus
  - uid: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
    spec.java:
      - name: 'Collection<? extends '
        fullName: 'Collection<? extends '
      - uid: com.microsoft.azure.servicebus._i_message
        name: IMessage
        fullName: com.microsoft.azure.servicebus.IMessage
        href: com.microsoft.azure.servicebus._i_message.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.servicebus._topic_client.sendBatch*
    name: sendBatch
    nameWithType: TopicClient.sendBatch
    fullName: void com.microsoft.azure.servicebus.TopicClient.sendBatch
    package: com.microsoft.azure.servicebus
  - uid: db03ee24
    spec.java:
      - name: CompletableFuture<Void>
        fullName: CompletableFuture<Void>
  - uid: com.microsoft.azure.servicebus._topic_client.sendAsync*
    name: sendAsync
    nameWithType: TopicClient.sendAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.TopicClient.sendAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._topic_client.sendBatchAsync*
    name: sendBatchAsync
    nameWithType: TopicClient.sendBatchAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.TopicClient.sendBatchAsync
    package: com.microsoft.azure.servicebus
  - uid: 328f8254
    spec.java:
      - name: Instant
        fullName: Instant
  - uid: 30822cb1
    spec.java:
      - name: CompletableFuture<Long>
        fullName: CompletableFuture<Long>
  - uid: com.microsoft.azure.servicebus._topic_client.scheduleMessageAsync*
    name: scheduleMessageAsync
    nameWithType: TopicClient.scheduleMessageAsync
    fullName: CompletableFuture<Long> com.microsoft.azure.servicebus.TopicClient.scheduleMessageAsync
    package: com.microsoft.azure.servicebus
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: com.microsoft.azure.servicebus._topic_client.cancelScheduledMessageAsync*
    name: cancelScheduledMessageAsync
    nameWithType: TopicClient.cancelScheduledMessageAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.TopicClient.cancelScheduledMessageAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._topic_client.scheduleMessage*
    name: scheduleMessage
    nameWithType: TopicClient.scheduleMessage
    fullName: long com.microsoft.azure.servicebus.TopicClient.scheduleMessage
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._topic_client.cancelScheduledMessage*
    name: cancelScheduledMessage
    nameWithType: TopicClient.cancelScheduledMessage
    fullName: void com.microsoft.azure.servicebus.TopicClient.cancelScheduledMessage
    package: com.microsoft.azure.servicebus
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.servicebus._topic_client.getEntityPath*
    name: getEntityPath
    nameWithType: TopicClient.getEntityPath
    fullName: String com.microsoft.azure.servicebus.TopicClient.getEntityPath
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._topic_client.peek*
    name: peek
    nameWithType: TopicClient.peek
    fullName: IMessage com.microsoft.azure.servicebus.TopicClient.peek
    package: com.microsoft.azure.servicebus
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: 12ebb11acom.microsoft.azure.servicebus._i_messagea08ddfce
    spec.java:
      - name: Collection<
        fullName: Collection<
      - uid: com.microsoft.azure.servicebus._i_message
        name: IMessage
        fullName: com.microsoft.azure.servicebus.IMessage
        href: com.microsoft.azure.servicebus._i_message.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.servicebus._topic_client.peekBatch*
    name: peekBatch
    nameWithType: TopicClient.peekBatch
    fullName: Collection<IMessage> com.microsoft.azure.servicebus.TopicClient.peekBatch
    package: com.microsoft.azure.servicebus
  - uid: 9cdf14d0com.microsoft.azure.servicebus._i_messagea08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: com.microsoft.azure.servicebus._i_message
        name: IMessage
        fullName: com.microsoft.azure.servicebus.IMessage
        href: com.microsoft.azure.servicebus._i_message.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.servicebus._topic_client.peekAsync*
    name: peekAsync
    nameWithType: TopicClient.peekAsync
    fullName: CompletableFuture<IMessage> com.microsoft.azure.servicebus.TopicClient.peekAsync
    package: com.microsoft.azure.servicebus
  - uid: 9161dfdccom.microsoft.azure.servicebus._i_messagee7daa122
    spec.java:
      - name: CompletableFuture<Collection<
        fullName: CompletableFuture<Collection<
      - uid: com.microsoft.azure.servicebus._i_message
        name: IMessage
        fullName: com.microsoft.azure.servicebus.IMessage
        href: com.microsoft.azure.servicebus._i_message.yml
      - name: '>>'
        fullName: '>>'
  - uid: com.microsoft.azure.servicebus._topic_client.peekBatchAsync*
    name: peekBatchAsync
    nameWithType: TopicClient.peekBatchAsync
    fullName: CompletableFuture<Collection<IMessage>> com.microsoft.azure.servicebus.TopicClient.peekBatchAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._topic_client.getTopicName*
    name: getTopicName
    nameWithType: TopicClient.getTopicName
    fullName: String com.microsoft.azure.servicebus.TopicClient.getTopicName
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._topic_client.onClose*
    name: onClose
    nameWithType: TopicClient.onClose
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.TopicClient.onClose
    package: com.microsoft.azure.servicebus
  - uid: 'com.microsoft.azure.servicebus.primitives._client_entity.ClientEntity(final String,final ClientEntity)'
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: 'ClientEntity(final String clientId, final ClientEntity parent)'
    nameWithType: 'ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)'
    fullName: 'com.microsoft.azure.servicebus.primitives.ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)'
    type: Constructor
    syntax:
      content: 'protected ClientEntity(final String clientId, final ClientEntity parent)'
      parameters:
        - id: clientId
          type: 3d93591e
        - id: parent
          type: 93de0ef9com.microsoft.azure.servicebus.primitives._client_entity
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.close()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: close()
    nameWithType: ClientEntity.close()
    fullName: final void com.microsoft.azure.servicebus.primitives.ClientEntity.close()
    type: Method
    syntax:
      content: public final void close()
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.servicebus._i_closeable.close()
    parent: com.microsoft.azure.servicebus._i_closeable
    href: com.microsoft.azure.servicebus._i_closeable.yml
    name: close()
    nameWithType: ICloseable.close()
    fullName: void com.microsoft.azure.servicebus.ICloseable.close()
    type: Method
    summary: '<p>Synchron wird geschlossen, und gibt diesem Objekt zugeordneten Ressourcen frei. Beim Aufrufen dieser Methode entspricht der aufrufen. Diese Methode blockiert, bis diese wird das Objekt geschlossen. </p>'
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.closeAsync()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: closeAsync()
    nameWithType: ClientEntity.closeAsync()
    fullName: final CompletableFuture<Void> com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()
    type: Method
    syntax:
      content: public final CompletableFuture<Void> closeAsync()
      return:
        type: fc984e6f
  - uid: com.microsoft.azure.servicebus._i_closeable.closeAsync()
    parent: com.microsoft.azure.servicebus._i_closeable
    href: com.microsoft.azure.servicebus._i_closeable.yml
    name: closeAsync()
    nameWithType: ICloseable.closeAsync()
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.ICloseable.closeAsync()
    type: Method
    summary: '<p>Wird geschlossen, und gibt diesem Objekt zugeordneten Ressourcen frei. Ein Objekt kann nicht verwendet werden, nachdem sie geschlossen wurde. Dies ist eine asynchrone Methode, die eine CompletableFuture wird sofort zurückgegeben. Dieses Objekt wird vollständig beendet, wenn die zurückgegebene CompletableFuture abgeschlossen ist. </p>'
    syntax:
      content: public CompletableFuture<Void> closeAsync()
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die das Schließen des dieses Objekt darstellt. </p>'
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.finalize()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: finalize()
    nameWithType: ClientEntity.finalize()
    fullName: void com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()
    type: Method
    syntax:
      content: protected void finalize()
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.getClientId()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: getClientId()
    nameWithType: ClientEntity.getClientId()
    fullName: String com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()
    type: Method
    syntax:
      content: public String getClientId()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.getIsClosed()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: getIsClosed()
    nameWithType: ClientEntity.getIsClosed()
    fullName: boolean com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()
    type: Method
    syntax:
      content: protected boolean getIsClosed()
      return:
        type: 4fc6e284
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.getIsClosingOrClosed()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: getIsClosingOrClosed()
    nameWithType: ClientEntity.getIsClosingOrClosed()
    fullName: boolean com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()
    type: Method
    syntax:
      content: protected boolean getIsClosingOrClosed()
      return:
        type: 4fc6e284
  - uid: 'com.microsoft.azure.servicebus._initializable_entity.InitializableEntity(String,ClientEntity)'
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.setClosed()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: setClosed()
    nameWithType: ClientEntity.setClosed()
    fullName: final void com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()
    type: Method
    syntax:
      content: protected final void setClosed()
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.throwIfClosed(Throwable)
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: throwIfClosed(Throwable cause)
    nameWithType: ClientEntity.throwIfClosed(Throwable cause)
    fullName: final void com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(Throwable cause)
    type: Method
    syntax:
      content: protected final void throwIfClosed(Throwable cause)
      parameters:
        - id: cause
          type: a04fafd7
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.servicebus._i_topic_client
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_topic_client.yml
    name: ITopicClient
    nameWithType: ITopicClient
    fullName: com.microsoft.azure.servicebus.ITopicClient
    type: Interface
    summary: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._topic_client\" data-throw-if-not-resolved=\"false\">TopicClient</xref> für alle grundlegenden Interaktionen mit einem Service Bus-Thema verwendet werden kann. <code></code></p>"
    syntax:
      content: 'public interface ITopicClient extends IMessageSender,IMessageBrowser,IMessageEntityClient'
  - uid: com.microsoft.azure.servicebus._i_message_sender
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: IMessageSender
    nameWithType: IMessageSender
    fullName: com.microsoft.azure.servicebus.IMessageSender
    type: Interface
    summary: |-
      <p>Stellt den Absender einer Nachricht, die Nachrichten an Azure Service Bus sendet.</p>
      <p></p>
    syntax:
      content: public interface IMessageSender extends IMessageEntityClient
  - uid: com.microsoft.azure.servicebus.primitives._connection_string_builder
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._connection_string_builder.yml
    name: ConnectionStringBuilder
    nameWithType: ConnectionStringBuilder
    fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
    type: Class
    summary: |-
      <p>Diese Klasse kann verwendet werden, um eine Verbindungszeichenfolge erstellen. diese Kommunikation mit Service Bus-Entitäten herstellen können. Sie können auch die grundlegende Validierung auf eine vorhandene Verbindungszeichenfolge verwendet werden. </p>
      <p>Beispielcode: <pre><code>ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder(

                                                   "ServiceBusNamespaceName", 

                                                   "ServiceBusEntityName", // QueueName or TopicName or SubscriptionPath

                                                   "SharedAccessSignatureKeyName", 

                                                   "SharedAccessSignatureKey");

           

          String connectionString = connectionStringBuilder.toString();

          </code></pre></p>

      <p>Eine Verbindungszeichenfolge ist im Grunde eine Zeichenfolge von Schlüssel-Wert-Paar senkrechter umfasste ";". Grundlegende Format ist {{ &lt;} Schlüssel {&gt;} = { &lt;} Wert {&gt;} [; {} &lt;} Schlüssel {&gt;} = { &lt;} Wert {&gt;}]}, in denen unterstützten Schlüsselname lautet wie folgt:<itemizedlist><listitem><p>Endpunkt - URL, an den Service Bus-Namespace verweist. </p></listitem><listitem><p>EntityPath - Pfad zu der Servicebus-Entität (Warteschlange/Thema/Abonnement /). Für Warteschlangen und Themen ist es nur die Namen der Entität. Für Abonnements Pfad ist &lt;Name_des_themas&gt;/Subscriptions /&lt;SubscriptionName&gt; </p></listitem><listitem><p>SharedAccessKeyName - Key-Name auf den entsprechenden freigegebenen Zugriffsrichtlinie für den Namespace oder Entität. </p></listitem><listitem><p>SharedAccessKey - Schlüssel-Wert für die entsprechenden SAS-Richtlinienregel des Namespace oder der Entität. </p></listitem><listitem><p>SharedAccessSignatureToken - können anstelle einer Schlüsselnamen und einen Schlüsselwert, Clients eine bereits generierte SAS-Token bereitstellen. </p></listitem><listitem><p>OperationTimeout - Standardtimeout für alle Absender, Empfänger und Clients, die aus dieser Verbindungszeichenfolge erstellte verwendet werden. </p></listitem><listitem><p><xref uid="com.microsoft.azure.servicebus.primitives._retry_policy" data-throw-if-not-resolved="false">Die RetryPolicy</xref> - Name der Richtlinie versuchen Sie es erneut. </p></listitem></itemizedlist></p>
    syntax:
      content: public class ConnectionStringBuilder
  - uid: com.microsoft.azure.servicebus.primitives._service_bus_exception
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._service_bus_exception.yml
    name: ServiceBusException
    nameWithType: ServiceBusException
    fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
    type: Class
    summary: '<p>Dies ist die Basis-Ausnahme, die für alle Fehlerfälle Servicebus generiert wird. </p>'
    syntax:
      content: public class ServiceBusException
  - uid: com.microsoft.azure.servicebus._i_message_sender.send(IMessage)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: send(IMessage message)
    nameWithType: IMessageSender.send(IMessage message)
    fullName: void com.microsoft.azure.servicebus.IMessageSender.send(IMessage message)
    type: Method
    summary: |-
      <p>Sendet eine Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Diese Methode blockiert, bis die Nachricht, auf die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: public void send(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
  - uid: com.microsoft.azure.servicebus._i_message
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message.yml
    name: IMessage
    nameWithType: IMessage
    fullName: com.microsoft.azure.servicebus.IMessage
    type: Interface
    summary: |-
      <p>Stellt eine Nachricht, die zwischen Clients und Azure Service Bus ausgetauscht werden.</p>
      <p></p>
    syntax:
      content: public interface IMessage
  - uid: com.microsoft.azure.servicebus._i_message_sender.sendBatch(Collection<? extends IMessage>)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: sendBatch(Collection<? extends IMessage> messages)
    nameWithType: IMessageSender.sendBatch(Collection<? extends IMessage> messages)
    fullName: void com.microsoft.azure.servicebus.IMessageSender.sendBatch(Collection<? extends IMessage> messages)
    type: Method
    summary: |-
      <p>Sendet einen Nachrichtenbatch für die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Diese Methode blockiert, bis der Batch an die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: public void sendBatch(Collection<? extends IMessage> messages)
      parameters:
        - id: messages
          type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
          description: <p>Auflistung von Nachrichten an die Entität gesendet werden </p>
  - uid: com.microsoft.azure.servicebus._i_message_sender.sendAsync(IMessage)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: sendAsync(IMessage message)
    nameWithType: IMessageSender.sendAsync(IMessage message)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSender.sendAsync(IMessage message)
    type: Method
    summary: |-
      <p>Sendet eine Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Dies ist eine asynchrone Methode, die eine CompletableFuture die abgeschlossen wird, wenn die Nachricht, auf die Entität gesendet wird zurückgibt.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> sendAsync(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden senden darstellt. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_sender.sendBatchAsync(Collection<? extends IMessage>)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: sendBatchAsync(Collection<? extends IMessage> messages)
    nameWithType: IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages)
    type: Method
    summary: |-
      <p>Sendet einen Nachrichtenbatch für die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Dies ist eine asynchrone Methode, die eine CompletableFuture die abgeschlossen wird, wenn der Batch, auf die Entität gesendet wird zurückgibt.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> sendBatchAsync(Collection<? extends IMessage> messages)
      parameters:
        - id: messages
          type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
          description: <p>Auflistung von Nachrichten an die Entität gesendet werden </p>
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden senden darstellt. </p>'
  - uid: 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessageAsync(IMessage,Instant)'
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: 'scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    nameWithType: 'IMessageSender.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    fullName: 'CompletableFuture<Long> com.microsoft.azure.servicebus.IMessageSender.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    type: Method
    summary: |-
      <p>Sendet eine geplante Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Eine geplante Nachricht in die Warteschlange eingereiht und an Empfänger nur zum Zeitpunkt geplanten Enqueue zur Verfügung gestellt. Dies ist eine asynchrone Methode, die eine CompletableFuture die abgeschlossen wird, wenn die Nachricht, auf die Entität gesendet wird zurückgibt. Die CompletableFuture nach Abschluss gibt die Sequenznummer der geplanten Nachricht die verwendet werden kann, um die Planung der Nachricht abzubrechen.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Long> scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
        - id: scheduledEnqueueTimeUtc
          type: 328f8254
          description: '<p>Zeitpunkt, an dem die Nachricht in der Entität in die Warteschlange eingereiht werden sollen </p>'
      return:
        type: 30822cb1
        description: '<p>eine CompletableFuture, die die ausstehenden senden, das die Sequenznummer der geplanten Nachricht zurückgibt darstellt. Diese Sequenznummer kann verwendet werden, um die Planung der Nachricht abzubrechen. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessageAsync(long)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: cancelScheduledMessageAsync(long sequenceNumber)
    nameWithType: IMessageSender.cancelScheduledMessageAsync(long sequenceNumber)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessageAsync(long sequenceNumber)
    type: Method
    summary: |-
      <p>Bricht das Einreihen einer bereits gesendeten geplante Nachricht ab, wenn es nicht bereits in die Warteschlange eingereihten war. Dies ist eine asynchrone Methode, die Rückgabe einer CompletableFuture die abgeschlossen wird, wenn die Nachricht abgebrochen wird.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> cancelScheduledMessageAsync(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p>Sequenznummer der Nachricht geplante </p>
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die den ausstehenden Abbruch darstellt. </p>'
  - uid: 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessage(IMessage,Instant)'
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: 'scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    nameWithType: 'IMessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    fullName: 'long com.microsoft.azure.servicebus.IMessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    type: Method
    summary: |-
      <p>Sendet eine geplante Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Eine geplante Nachricht in die Warteschlange eingereiht und an Empfänger nur zum Zeitpunkt geplanten Enqueue zur Verfügung gestellt. Diese Methode blockiert, bis die Nachricht, auf die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: 'public long scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
        - id: scheduledEnqueueTimeUtc
          type: 328f8254
          description: '<p>Zeitpunkt, an dem die Nachricht in der Entität in die Warteschlange eingereiht werden sollen </p>'
      return:
        type: 0364520f
        description: <p>Sequenznummer der Nachricht geplante </p>
  - uid: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessage(long)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: cancelScheduledMessage(long sequenceNumber)
    nameWithType: IMessageSender.cancelScheduledMessage(long sequenceNumber)
    fullName: void com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessage(long sequenceNumber)
    type: Method
    summary: |-
      <p>Bricht das Einreihen einer bereits gesendeten geplante Nachricht ab, wenn es nicht bereits in die Warteschlange eingereihten war. Diese Methode blockiert, bis die Nachricht, auf die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: public void cancelScheduledMessage(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p>Sequenznummer der Nachricht geplante </p>
  - uid: com.microsoft.azure.servicebus._i_message_entity_client.getEntityPath()
    parent: com.microsoft.azure.servicebus._i_message_entity_client
    href: com.microsoft.azure.servicebus._i_message_entity_client.yml
    name: getEntityPath()
    nameWithType: IMessageEntityClient.getEntityPath()
    fullName: String com.microsoft.azure.servicebus.IMessageEntityClient.getEntityPath()
    type: Method
    summary: |-
      <p>Ruft den Pfad der Entität, die dieser Client wird ab, Senden von Nachrichten an oder Empfang von Nachrichten aus.</p>
      <p></p>
    syntax:
      content: public String getEntityPath()
      return:
        type: '26831127'
        description: '<p>Pfad der Entität, der diesem Client eine Verbindung herstellt </p>'
  - uid: com.microsoft.azure.servicebus._i_message_browser.peek()
    parent: com.microsoft.azure.servicebus._i_message_browser
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: peek()
    nameWithType: IMessageBrowser.peek()
    fullName: IMessage com.microsoft.azure.servicebus.IMessageBrowser.peek()
    type: Method
    summary: |-
      <p>als Nächstes liest Sie die aktive Nachricht ohne Änderung des Zustands der Empfänger oder die Quelle der Meldung ein. Der erste Aufruf von <xref uid="com.microsoft.azure.servicebus._i_message_browser.peek()" data-throw-if-not-resolved="false">IMessageBrowser#peek()</xref> Ruft die erste aktive Nachricht für diesen Empfänger. Jeder nachfolgender Aufruf ruft die nachfolgende Meldung in der Entität ab.</p>
      <p></p>
    syntax:
      content: public IMessage peek()
      return:
        type: com.microsoft.azure.servicebus._i_message
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> eingesehen </p>"
  - uid: com.microsoft.azure.servicebus._message
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._message.yml
    name: Message
    nameWithType: Message
    fullName: com.microsoft.azure.servicebus.Message
    type: Class
    syntax:
      content: public class Message implements IMessage
  - uid: com.microsoft.azure.servicebus._i_message_browser.peek(long)
    parent: com.microsoft.azure.servicebus._i_message_browser
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: peek(long fromSequenceNumber)
    nameWithType: IMessageBrowser.peek(long fromSequenceNumber)
    fullName: IMessage com.microsoft.azure.servicebus.IMessageBrowser.peek(long fromSequenceNumber)
    type: Method
    summary: |-
      <p>Als Nächstes liest Sie die aktive Nachricht ohne Änderung des Zustands der Empfänger oder die Quelle der Meldung ein.</p>
      <p></p>
    syntax:
      content: public IMessage peek(long fromSequenceNumber)
      parameters:
        - id: fromSequenceNumber
          type: 0364520f
          description: <p>Die Sequenznummer ab dem die Nachricht zu lesen. </p>
      return:
        type: com.microsoft.azure.servicebus._i_message
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> eingesehen </p>"
  - uid: com.microsoft.azure.servicebus._i_message_browser.peekBatch(int)
    parent: com.microsoft.azure.servicebus._i_message_browser
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: peekBatch(int messageCount)
    nameWithType: IMessageBrowser.peekBatch(int messageCount)
    fullName: Collection<IMessage> com.microsoft.azure.servicebus.IMessageBrowser.peekBatch(int messageCount)
    type: Method
    summary: |-
      <p>Liest nächste Batch von der aktiven Nachrichten ohne den Zustand der Empfänger oder die Quelle der Meldung zu ändern.</p>
      <p></p>
    syntax:
      content: public Collection<IMessage> peekBatch(int messageCount)
      parameters:
        - id: messageCount
          type: f75371fa
          description: <p>Die Anzahl der Nachrichten. </p>
      return:
        type: 12ebb11acom.microsoft.azure.servicebus._i_messagea08ddfce
        description: <p>Batch <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> eingesehen </p>
  - uid: 'com.microsoft.azure.servicebus._i_message_browser.peekBatch(long,int)'
    parent: com.microsoft.azure.servicebus._i_message_browser
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: 'peekBatch(long fromSequenceNumber, int messageCount)'
    nameWithType: 'IMessageBrowser.peekBatch(long fromSequenceNumber, int messageCount)'
    fullName: 'Collection<IMessage> com.microsoft.azure.servicebus.IMessageBrowser.peekBatch(long fromSequenceNumber, int messageCount)'
    type: Method
    summary: |-
      <p>Liest nächste Batch von der aktiven Nachrichten ohne den Zustand der Empfänger oder die Quelle der Meldung zu ändern.</p>
      <p></p>
    syntax:
      content: 'public Collection<IMessage> peekBatch(long fromSequenceNumber, int messageCount)'
      parameters:
        - id: fromSequenceNumber
          type: 0364520f
          description: <p>Die Sequenznummer ab dem die Nachricht zu lesen. </p>
        - id: messageCount
          type: f75371fa
          description: <p>Die Anzahl der Nachrichten. </p>
      return:
        type: 12ebb11acom.microsoft.azure.servicebus._i_messagea08ddfce
        description: <p>Batch <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> eingesehen </p>
  - uid: com.microsoft.azure.servicebus._i_message_browser.peekAsync()
    parent: com.microsoft.azure.servicebus._i_message_browser
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: peekAsync()
    nameWithType: IMessageBrowser.peekAsync()
    fullName: CompletableFuture<IMessage> com.microsoft.azure.servicebus.IMessageBrowser.peekAsync()
    type: Method
    summary: |-
      <p>Liest asynchron aktiven Nachrichten ohne den Zustand der Empfänger oder die Quelle der Meldung zu ändern.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<IMessage> peekAsync()
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_messagea08ddfce
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._message\" data-throw-if-not-resolved=\"false\">Nachricht</xref> eingesehen </p>"
  - uid: com.microsoft.azure.servicebus._i_message_browser.peekAsync(long)
    parent: com.microsoft.azure.servicebus._i_message_browser
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: peekAsync(long fromSequenceNumber)
    nameWithType: IMessageBrowser.peekAsync(long fromSequenceNumber)
    fullName: CompletableFuture<IMessage> com.microsoft.azure.servicebus.IMessageBrowser.peekAsync(long fromSequenceNumber)
    type: Method
    summary: |-
      <p>Als Nächstes liest die aktive Nachricht ohne Änderung des Zustands der Empfänger oder die Quelle der Meldung asynchron.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<IMessage> peekAsync(long fromSequenceNumber)
      parameters:
        - id: fromSequenceNumber
          type: 0364520f
          description: <p>Die Sequenznummer ab dem die Nachricht zu lesen. </p>
      return:
        type: 9cdf14d0com.microsoft.azure.servicebus._i_messagea08ddfce
        description: '<p>CompletableFuture, die zurückgibt <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> einsehen. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_browser.peekBatchAsync(int)
    parent: com.microsoft.azure.servicebus._i_message_browser
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: peekBatchAsync(int messageCount)
    nameWithType: IMessageBrowser.peekBatchAsync(int messageCount)
    fullName: CompletableFuture<Collection<IMessage>> com.microsoft.azure.servicebus.IMessageBrowser.peekBatchAsync(int messageCount)
    type: Method
    summary: |-
      <p>Liest asynchron den nächsten Batch aktiver Nachrichten ohne den Zustand der Empfänger oder die Quelle der Meldung zu ändern.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Collection<IMessage>> peekBatchAsync(int messageCount)
      parameters:
        - id: messageCount
          type: f75371fa
          description: <p>Die Anzahl der Nachrichten. </p>
      return:
        type: 9161dfdccom.microsoft.azure.servicebus._i_messagee7daa122
        description: '<p>CompletableFuture, der Batch zurückgibt <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> einsehen. </p>'
  - uid: 'com.microsoft.azure.servicebus._i_message_browser.peekBatchAsync(long,int)'
    parent: com.microsoft.azure.servicebus._i_message_browser
    href: com.microsoft.azure.servicebus._i_message_browser.yml
    name: 'peekBatchAsync(long fromSequenceNumber, int messageCount)'
    nameWithType: 'IMessageBrowser.peekBatchAsync(long fromSequenceNumber, int messageCount)'
    fullName: 'CompletableFuture<Collection<IMessage>> com.microsoft.azure.servicebus.IMessageBrowser.peekBatchAsync(long fromSequenceNumber, int messageCount)'
    type: Method
    summary: |-
      <p>Liest asynchron den nächsten Batch aktiver Nachrichten ohne den Zustand der Empfänger oder die Quelle der Meldung zu ändern.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Collection<IMessage>> peekBatchAsync(long fromSequenceNumber, int messageCount)'
      parameters:
        - id: fromSequenceNumber
          type: 0364520f
          description: <p>Die Sequenznummer ab dem die Nachricht zu lesen. </p>
        - id: messageCount
          type: f75371fa
          description: <p>Die Anzahl der Nachrichten. </p>
      return:
        type: 9161dfdccom.microsoft.azure.servicebus._i_messagee7daa122
        description: '<p>CompletableFuture, der Batch zurückgibt <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> einsehen. </p>'
  - uid: com.microsoft.azure.servicebus._i_topic_client.getTopicName()
    parent: com.microsoft.azure.servicebus._i_topic_client
    href: com.microsoft.azure.servicebus._i_topic_client.yml
    name: getTopicName()
    nameWithType: ITopicClient.getTopicName()
    fullName: String com.microsoft.azure.servicebus.ITopicClient.getTopicName()
    type: Method
    summary: <p>Ruft den Namen des Themas </p>
    syntax:
      content: public String getTopicName()
      return:
        type: '26831127'
        description: <p>der Name des Themas </p>
  - uid: com.microsoft.azure.servicebus.primitives._messaging_factory
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._messaging_factory.yml
    name: MessagingFactory
    nameWithType: MessagingFactory
    fullName: com.microsoft.azure.servicebus.primitives.MessagingFactory
    type: Class
    summary: '<p>Abstrahiert alle AMQP im Zusammenhang details und kapselt eine AMQP-Verbindung und zum Verwalten des Lebenszyklus der Reihe nach. Jede Instanz dieser Klasse stellen eine AMQP-Verbindung mit dem Namespace dar. Wenn eine Anwendung mehrere Absender, Empfänger oder Clients, die mithilfe der gleichen MessagingFacotry-Instanz erstellt, gemeinsam alle diese Absender, Empfänger oder Clients die Verbindung mit dem Namespace. </p>'
    syntax:
      content: public class MessagingFactory extends ClientEntity