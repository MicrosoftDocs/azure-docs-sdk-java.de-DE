### YamlMime:ManagedReference
items:
  - uid: system.fabric._fabric_replicator
    id: _fabric_replicator
    parent: system.fabric
    children:
      - system.fabric._fabric_replicator.abort()
      - 'system.fabric._fabric_replicator.buildReplicaAsync(ReplicaInformation,CancellationToken)'
      - 'system.fabric._fabric_replicator.changeRoleAsync(Epoch,ReplicaRole,CancellationToken)'
      - system.fabric._fabric_replicator.closeAsync(CancellationToken)
      - system.fabric._fabric_replicator.getCatchUpCapability()
      - system.fabric._fabric_replicator.getCurrentProgress()
      - system.fabric._fabric_replicator.onDataLossAsync(CancellationToken)
      - system.fabric._fabric_replicator.openAsync(CancellationToken)
      - system.fabric._fabric_replicator.removeReplica(long)
      - 'system.fabric._fabric_replicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration,ReplicaSetConfiguration)'
      - system.fabric._fabric_replicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration)
      - 'system.fabric._fabric_replicator.updateEpochAsync(Epoch,CancellationToken)'
      - 'system.fabric._fabric_replicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode,CancellationToken)'
    href: system.fabric._fabric_replicator.yml
    langs:
      - java
    name: FabricReplicator
    nameWithType: FabricReplicator
    fullName: system.fabric.FabricReplicator
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
      startLine: 19
    package: system.fabric
    summary: "<p><span data-ttu-id=\"dabdc-101\">Repliziert den Status für hohe Verfügbarkeit und Zuverlässigkeit.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-101\">Replicates state for high availability and reliability.</span></span> </p>\n<p><span data-ttu-id=\"dabdc-102\">\r\n\r\n  <b>Hinweise:</b>stellt die Standardimplementierung von der <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>, <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator</xref>, und <xref uid=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.PrimaryReplicator </xref> Schnittstellen, die Benutzerdienste werden, zusammen mit ihrer Implementierung von verwendet können der <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref> Schnittstelle.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-102\">\r\n\r\n  <b>Remarks:</b>Provides the default implementation of the <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>, <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator</xref>, and <xref uid=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.PrimaryReplicator</xref> interfaces, which user services can use, along with their implementation of the <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref> interface.</span></span> <span data-ttu-id=\"dabdc-103\">Eine Instanz von der <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> Klasse abgerufen wird, über die <xref uid=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServicePartition#createReplicator (system.fabric.StateProvider, system.fabric.ReplicatorSettings) </xref> -Methode, die in umgewandelt werden kann <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> für die Verwendung.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-103\">An instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> class is obtained via the <xref uid=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServicePartition#createReplicator( system.fabric.StateProvider, system.fabric.ReplicatorSettings)</xref> method, which can be cast to <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> for use.</span></span> </p>"
    syntax:
      content: public class FabricReplicator implements Replicator
    inheritance:
      - java.lang.Object
      - system.fabric._primary_replicator
      - system.fabric._replicator
  - uid: system.fabric._fabric_replicator.abort()
    id: abort()
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    langs:
      - java
    name: abort()
    nameWithType: FabricReplicator.abort()
    fullName: void system.fabric.FabricReplicator.abort()
    overload: system.fabric._fabric_replicator.abort*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
      startLine: 50
    package: system.fabric
    syntax:
      content: public void abort()
    overridden: system.fabric._replicator.abort()
  - uid: 'system.fabric._fabric_replicator.buildReplicaAsync(ReplicaInformation,CancellationToken)'
    id: 'buildReplicaAsync(ReplicaInformation,CancellationToken)'
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    langs:
      - java
    name: 'buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)'
    nameWithType: 'FabricReplicator.buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture system.fabric.FabricReplicator.buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)'
    overload: system.fabric._fabric_replicator.buildReplicaAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
      startLine: 94
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="dabdc-104">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-104">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)'
      parameters:
        - id: replicaInfo
          type: system.fabric._replica_information
          description: '<p><span data-ttu-id="dabdc-105">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-105">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span> </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"dabdc-106\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-106\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 5f2aaa64
        description: '<p><span data-ttu-id="dabdc-107">Eine Aufgabe, die den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="dabdc-107">A task that represents the asynchronous operation.</span></span> </p>'
    overridden: 'system.fabric._primary_replicator.buildReplicaAsync(ReplicaInformation,CancellationToken)'
  - uid: 'system.fabric._fabric_replicator.changeRoleAsync(Epoch,ReplicaRole,CancellationToken)'
    id: 'changeRoleAsync(Epoch,ReplicaRole,CancellationToken)'
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    langs:
      - java
    name: 'changeRoleAsync(Epoch epoch, ReplicaRole role, CancellationToken cancellationToken)'
    nameWithType: 'FabricReplicator.changeRoleAsync(Epoch epoch, ReplicaRole role, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture system.fabric.FabricReplicator.changeRoleAsync(Epoch epoch, ReplicaRole role, CancellationToken cancellationToken)'
    overload: system.fabric._fabric_replicator.changeRoleAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
      startLine: 39
    package: system.fabric
    syntax:
      content: 'public CompletableFuture changeRoleAsync(Epoch epoch, ReplicaRole role, CancellationToken cancellationToken)'
      parameters:
        - id: epoch
          type: system.fabric._epoch
        - id: role
          type: system.fabric._replica_role
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 5f2aaa64
    overridden: 'system.fabric._replicator.changeRoleAsync(Epoch,ReplicaRole,CancellationToken)'
  - uid: system.fabric._fabric_replicator.closeAsync(CancellationToken)
    id: closeAsync(CancellationToken)
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    langs:
      - java
    name: closeAsync(CancellationToken cancellationToken)
    nameWithType: FabricReplicator.closeAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture system.fabric.FabricReplicator.closeAsync(CancellationToken cancellationToken)
    overload: system.fabric._fabric_replicator.closeAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
      startLine: 45
    package: system.fabric
    syntax:
      content: public CompletableFuture closeAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 5f2aaa64
    overridden: system.fabric._replicator.closeAsync(CancellationToken)
  - uid: system.fabric._fabric_replicator.getCatchUpCapability()
    id: getCatchUpCapability()
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    langs:
      - java
    name: getCatchUpCapability()
    nameWithType: FabricReplicator.getCatchUpCapability()
    fullName: long system.fabric.FabricReplicator.getCatchUpCapability()
    overload: system.fabric._fabric_replicator.getCatchUpCapability*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
      startLine: 60
    package: system.fabric
    syntax:
      content: public long getCatchUpCapability()
      return:
        type: 0364520f
    overridden: system.fabric._replicator.getCatchUpCapability()
  - uid: system.fabric._fabric_replicator.getCurrentProgress()
    id: getCurrentProgress()
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    langs:
      - java
    name: getCurrentProgress()
    nameWithType: FabricReplicator.getCurrentProgress()
    fullName: long system.fabric.FabricReplicator.getCurrentProgress()
    overload: system.fabric._fabric_replicator.getCurrentProgress*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
      startLine: 55
    package: system.fabric
    syntax:
      content: public long getCurrentProgress()
      return:
        type: 0364520f
    overridden: system.fabric._replicator.getCurrentProgress()
  - uid: system.fabric._fabric_replicator.onDataLossAsync(CancellationToken)
    id: onDataLossAsync(CancellationToken)
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    langs:
      - java
    name: onDataLossAsync(CancellationToken cancellationToken)
    nameWithType: FabricReplicator.onDataLossAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Boolean> system.fabric.FabricReplicator.onDataLossAsync(CancellationToken cancellationToken)
    overload: system.fabric._fabric_replicator.onDataLossAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
      startLine: 70
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="dabdc-108">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-108">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<Boolean> onDataLossAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"dabdc-109\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-109\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 7e53ac82
        description: '<p><span data-ttu-id="dabdc-110">Eine CompletableFuture, die den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="dabdc-110">A CompletableFuture that represents the asynchronous operation.</span></span> </p>'
    overridden: system.fabric._primary_replicator.onDataLossAsync(CancellationToken)
  - uid: system.fabric._fabric_replicator.openAsync(CancellationToken)
    id: openAsync(CancellationToken)
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    langs:
      - java
    name: openAsync(CancellationToken cancellationToken)
    nameWithType: FabricReplicator.openAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<String> system.fabric.FabricReplicator.openAsync(CancellationToken cancellationToken)
    overload: system.fabric._fabric_replicator.openAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
      startLine: 34
    package: system.fabric
    syntax:
      content: public CompletableFuture<String> openAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 06be942d
    overridden: system.fabric._replicator.openAsync(CancellationToken)
  - uid: system.fabric._fabric_replicator.removeReplica(long)
    id: removeReplica(long)
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    langs:
      - java
    name: removeReplica(long replicaId)
    nameWithType: FabricReplicator.removeReplica(long replicaId)
    fullName: void system.fabric.FabricReplicator.removeReplica(long replicaId)
    overload: system.fabric._fabric_replicator.removeReplica*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
      startLine: 100
    package: system.fabric
    summary: "<p><span data-ttu-id=\"dabdc-111\">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-111\">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span></p>\n<p></p>\n<p><span data-ttu-id=\"dabdc-112\">\r\n\r\n  <b>Beschreibung:</b> dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-112\">\r\n\r\n  <b>Remarks:</b> This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span> </p>"
    syntax:
      content: public void removeReplica(long replicaId)
      parameters:
        - id: replicaId
          type: 0364520f
          description: '<p><span data-ttu-id="dabdc-113">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-113">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span></p>'
    overridden: system.fabric._primary_replicator.removeReplica(long)
  - uid: 'system.fabric._fabric_replicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration,ReplicaSetConfiguration)'
    id: 'updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration,ReplicaSetConfiguration)'
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    langs:
      - java
    name: 'updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)'
    nameWithType: 'FabricReplicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)'
    fullName: 'void system.fabric.FabricReplicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)'
    overload: system.fabric._fabric_replicator.updateCatchUpReplicaSetConfiguration*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
      startLine: 75
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="dabdc-114">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-114">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span></p>
      <p></p>
    syntax:
      content: 'public void updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)'
      parameters:
        - id: currentConfiguration
          type: system.fabric._replica_set_configuration
          description: <p><span data-ttu-id="dabdc-115">Nur zur internen Verwendung.</span><span class="sxs-lookup"><span data-stu-id="dabdc-115">For Internal Use Only.</span></span> </p>
        - id: previousConfiguration
          type: system.fabric._replica_set_configuration
          description: <p><span data-ttu-id="dabdc-116">Nur zur internen Verwendung.</span><span class="sxs-lookup"><span data-stu-id="dabdc-116">For Internal Use Only.</span></span> </p>
    overridden: 'system.fabric._primary_replicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration,ReplicaSetConfiguration)'
  - uid: system.fabric._fabric_replicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration)
    id: updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration)
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    langs:
      - java
    name: updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
    nameWithType: FabricReplicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
    fullName: void system.fabric.FabricReplicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
    overload: system.fabric._fabric_replicator.updateCurrentReplicaSetConfiguration*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
      startLine: 89
    package: system.fabric
    summary: "<p><span data-ttu-id=\"dabdc-117\">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-117\">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span></p>\n<p></p>\n<p><span data-ttu-id=\"dabdc-118\">\r\n\r\n  <b>Beschreibung:</b> dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-118\">\r\n\r\n  <b>Remarks:</b> This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span> </p>"
    syntax:
      content: public void updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
      parameters:
        - id: currentConfiguration
          type: system.fabric._replica_set_configuration
          description: '<p><span data-ttu-id="dabdc-119">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-119">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span></p>'
    overridden: system.fabric._primary_replicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration)
  - uid: 'system.fabric._fabric_replicator.updateEpochAsync(Epoch,CancellationToken)'
    id: 'updateEpochAsync(Epoch,CancellationToken)'
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    langs:
      - java
    name: 'updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)'
    nameWithType: 'FabricReplicator.updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture system.fabric.FabricReplicator.updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)'
    overload: system.fabric._fabric_replicator.updateEpochAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
      startLine: 65
    package: system.fabric
    syntax:
      content: 'public CompletableFuture updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)'
      parameters:
        - id: epoch
          type: system.fabric._epoch
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 5f2aaa64
    overridden: 'system.fabric._replicator.updateEpochAsync(Epoch,CancellationToken)'
  - uid: 'system.fabric._fabric_replicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode,CancellationToken)'
    id: 'waitForCatchUpQuorumAsync(ReplicaSetQuorumMode,CancellationToken)'
    parent: system.fabric._fabric_replicator
    href: system.fabric._fabric_replicator.yml
    langs:
      - java
    name: 'waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)'
    nameWithType: 'FabricReplicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture system.fabric.FabricReplicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)'
    overload: system.fabric._fabric_replicator.waitForCatchUpQuorumAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/FabricReplicator.java
      startLine: 82
    package: system.fabric
    summary: |-
      <p><span data-ttu-id="dabdc-120">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-120">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)'
      parameters:
        - id: quorumMode
          type: system.fabric._replica_set_quorum_mode
          description: <p><span data-ttu-id="dabdc-121">Nur zur internen Verwendung.</span><span class="sxs-lookup"><span data-stu-id="dabdc-121">For Internal Use Only.</span></span> </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"dabdc-122\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-122\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 5f2aaa64
        description: <p><span data-ttu-id="dabdc-123">Nur zur internen Verwendung.</span><span class="sxs-lookup"><span data-stu-id="dabdc-123">For Internal Use Only.</span></span> </p>
    overridden: 'system.fabric._primary_replicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode,CancellationToken)'
references:
  - uid: 06be942d
    spec.java:
      - name: CompletableFuture<String>
        fullName: CompletableFuture<String>
  - uid: system.fabric._fabric_replicator.openAsync*
    name: openAsync
    nameWithType: FabricReplicator.openAsync
    fullName: CompletableFuture<String> system.fabric.FabricReplicator.openAsync
    package: system.fabric
  - uid: 5f2aaa64
    spec.java:
      - name: CompletableFuture
        fullName: CompletableFuture
  - uid: system.fabric._fabric_replicator.changeRoleAsync*
    name: changeRoleAsync
    nameWithType: FabricReplicator.changeRoleAsync
    fullName: CompletableFuture system.fabric.FabricReplicator.changeRoleAsync
    package: system.fabric
  - uid: system.fabric._fabric_replicator.closeAsync*
    name: closeAsync
    nameWithType: FabricReplicator.closeAsync
    fullName: CompletableFuture system.fabric.FabricReplicator.closeAsync
    package: system.fabric
  - uid: system.fabric._fabric_replicator.abort*
    name: abort
    nameWithType: FabricReplicator.abort
    fullName: void system.fabric.FabricReplicator.abort
    package: system.fabric
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._fabric_replicator.getCurrentProgress*
    name: getCurrentProgress
    nameWithType: FabricReplicator.getCurrentProgress
    fullName: long system.fabric.FabricReplicator.getCurrentProgress
    package: system.fabric
  - uid: system.fabric._fabric_replicator.getCatchUpCapability*
    name: getCatchUpCapability
    nameWithType: FabricReplicator.getCatchUpCapability
    fullName: long system.fabric.FabricReplicator.getCatchUpCapability
    package: system.fabric
  - uid: system.fabric._fabric_replicator.updateEpochAsync*
    name: updateEpochAsync
    nameWithType: FabricReplicator.updateEpochAsync
    fullName: CompletableFuture system.fabric.FabricReplicator.updateEpochAsync
    package: system.fabric
  - uid: 7e53ac82
    spec.java:
      - name: CompletableFuture<Boolean>
        fullName: CompletableFuture<Boolean>
  - uid: system.fabric._fabric_replicator.onDataLossAsync*
    name: onDataLossAsync
    nameWithType: FabricReplicator.onDataLossAsync
    fullName: CompletableFuture<Boolean> system.fabric.FabricReplicator.onDataLossAsync
    package: system.fabric
  - uid: system.fabric._fabric_replicator.updateCatchUpReplicaSetConfiguration*
    name: updateCatchUpReplicaSetConfiguration
    nameWithType: FabricReplicator.updateCatchUpReplicaSetConfiguration
    fullName: void system.fabric.FabricReplicator.updateCatchUpReplicaSetConfiguration
    package: system.fabric
  - uid: system.fabric._fabric_replicator.waitForCatchUpQuorumAsync*
    name: waitForCatchUpQuorumAsync
    nameWithType: FabricReplicator.waitForCatchUpQuorumAsync
    fullName: CompletableFuture system.fabric.FabricReplicator.waitForCatchUpQuorumAsync
    package: system.fabric
  - uid: system.fabric._fabric_replicator.updateCurrentReplicaSetConfiguration*
    name: updateCurrentReplicaSetConfiguration
    nameWithType: FabricReplicator.updateCurrentReplicaSetConfiguration
    fullName: void system.fabric.FabricReplicator.updateCurrentReplicaSetConfiguration
    package: system.fabric
  - uid: system.fabric._fabric_replicator.buildReplicaAsync*
    name: buildReplicaAsync
    nameWithType: FabricReplicator.buildReplicaAsync
    fullName: CompletableFuture system.fabric.FabricReplicator.buildReplicaAsync
    package: system.fabric
  - uid: system.fabric._fabric_replicator.removeReplica*
    name: removeReplica
    nameWithType: FabricReplicator.removeReplica
    fullName: void system.fabric.FabricReplicator.removeReplica
    package: system.fabric
  - uid: system.fabric._replicator
    parent: system.fabric
    href: system.fabric._replicator.yml
    name: Replicator
    nameWithType: Replicator
    fullName: system.fabric.Replicator
    type: Interface
    syntax:
      content: public interface Replicator
  - uid: system.fabric._fabric_state_replicator
    parent: system.fabric
    href: system.fabric._fabric_state_replicator.yml
    name: FabricStateReplicator
    nameWithType: FabricStateReplicator
    fullName: system.fabric.FabricStateReplicator
    type: Class
    syntax:
      content: public class FabricStateReplicator
  - uid: system.fabric._replicator.openAsync(CancellationToken)
    parent: system.fabric._replicator
    href: system.fabric._replicator.yml
    name: openAsync(CancellationToken cancellationToken)
    nameWithType: Replicator.openAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<String> system.fabric.Replicator.openAsync(CancellationToken cancellationToken)
    type: Method
    syntax:
      content: public CompletableFuture<String> openAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 06be942d
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p><span data-ttu-id="dabdc-124">Ein <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> wird verwendet, um die Benachrichtigung verteilt wird, dass Vorgänge abgebrochen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dabdc-124">A <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> is used to propagate notification that operations should be canceled.</span></span> <span data-ttu-id="dabdc-125">Sie erstellen ein Abbruchtoken, das durch die Instanziierung einer <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> -Objekt, das Abbruchtoken verwaltet entnommen seine <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken() </xref> Methode.</span><span class="sxs-lookup"><span data-stu-id="dabdc-125">You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method.</span></span> <span data-ttu-id="dabdc-126">Übergeben Sie dann das Abbruchtoken, das auf eine beliebige Anzahl von Vorgängen, die Nachricht vom Abbruch erhalten soll.</span><span class="sxs-lookup"><span data-stu-id="dabdc-126">You then pass the cancellation token to any number of operations that should receive notice of cancellation.</span></span> <span data-ttu-id="dabdc-127">Das Token kann nicht verwendet werden, um den Abbruch zu initiieren.</span><span class="sxs-lookup"><span data-stu-id="dabdc-127">The token cannot be used to initiate cancellation.</span></span> <span data-ttu-id="dabdc-128">Wenn das besitzende Objekt aufruft <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, auf das Abbruchtoken, das die abgebrochene Eigenschaft festgelegt ist auf "true".</span><span class="sxs-lookup"><span data-stu-id="dabdc-128">When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true.</span></span> <span data-ttu-id="dabdc-129">Die Objekte, die die Benachrichtigung empfangen können Antworten Verfolgungsinformationen geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="dabdc-129">The objects that receive the notification can respond in whatever manner is appropriate.</span></span> </p>'
    syntax:
      content: public class CancellationToken
  - uid: system.fabric.exception._fabric_exception
    parent: system.fabric.exception
    href: system.fabric.exception._fabric_exception.yml
    name: FabricException
    nameWithType: FabricException
    fullName: system.fabric.exception.FabricException
    type: Class
    syntax:
      content: public class FabricException
  - uid: 'system.fabric._replicator.changeRoleAsync(Epoch,ReplicaRole,CancellationToken)'
    parent: system.fabric._replicator
    href: system.fabric._replicator.yml
    name: 'changeRoleAsync(Epoch epoch, ReplicaRole role, CancellationToken cancellationToken)'
    nameWithType: 'Replicator.changeRoleAsync(Epoch epoch, ReplicaRole role, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture system.fabric.Replicator.changeRoleAsync(Epoch epoch, ReplicaRole role, CancellationToken cancellationToken)'
    type: Method
    syntax:
      content: 'public CompletableFuture changeRoleAsync(Epoch epoch, ReplicaRole role, CancellationToken cancellationToken)'
      parameters:
        - id: epoch
          type: system.fabric._epoch
        - id: role
          type: system.fabric._replica_role
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 5f2aaa64
  - uid: system.fabric._epoch
    parent: system.fabric
    href: system.fabric._epoch.yml
    name: Epoch
    nameWithType: Epoch
    fullName: system.fabric.Epoch
    type: Class
    summary: "<p><span data-ttu-id=\"dabdc-130\">Stellt die aktuelle Version der Service Fabric-Partition an.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-130\">Represents the current version of the partition in Service Fabric.</span></span> </p>\n<p><span data-ttu-id=\"dabdc-131\">\r\n\r\n  <b>Hinweise:</b>ein <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> ist eine Konfiguration Zahl für die Partition als Ganzes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-131\">\r\n\r\n  <b>Remarks:</b>An <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> is a configuration number for the partition as a whole.</span></span> <span data-ttu-id=\"dabdc-132\">Beim Festlegen der Konfiguration des Replikats Änderungen, z. B., wenn das primäre Replikat ändert, werden die Vorgänge, die vom neuen primären Replikat repliziert werden als ein neues werden bezeichnet <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> aus, die von der alten primären Datenbank gesendet wurden. das Replikat ist.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-132\">When the configuration of the replica set changes, for example when the Primary replica changes, the operations that are replicated from the new Primary replica are said to be a new <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> from the ones which were sent by the old Primary replica.</span></span> <span data-ttu-id=\"dabdc-133\">Die Tatsache, die dass das primäre geändert hat ist nicht direkt sichtbar auf sekundäre Replikate, die nicht durch einen Fehler in der Regel betroffen sind, die das ursprüngliche primäre Replikat betroffen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-133\">The fact that the Primary has changed is not directly visible to Secondary replicas, which are usually unaffected by the failure that affected the original Primary replica.</span></span> <span data-ttu-id=\"dabdc-134\">Um nachzuverfolgen, dass sich das primäre Replikat geändert wurde, an das sekundäre Replikat übertragen werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-134\">To track that the Primary replica has changed has to be communicated to the Secondary replica.</span></span> <span data-ttu-id=\"dabdc-135\">Diese Kommunikation erfolgt über die <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync (system.fabric.Epoch, system.fabric.SequenceNumber, system.fabric.CancellationToken)</xref> Methode.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-135\">This communication occurs via the <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync(system.fabric.Epoch, system.fabric.SequenceNumber, system.fabric.CancellationToken)</xref> method.</span></span> <span data-ttu-id=\"dabdc-136\">Die meisten Dienste können die Details der inneren Felder ignorieren die <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> wie es in der Regel ausreichend ist zu wissen, dass die <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> wurde geändert und Epochs, um zu bestimmen, relative Reihenfolge der Vorgänge zu vergleichen und Ereignisse im System.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-136\">Most services can ignore the details of the inner fields of the <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> as it is usually sufficient to know that the <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> has changed and to compare Epochs to determine relative ordering of operations and events in the system.</span></span> <span data-ttu-id=\"dabdc-137\">Zu diesem Zweck sind Vergleichsoperationen bereitgestellt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-137\">Comparison operations are provided for this purpose.</span></span> </p>"
    syntax:
      content: public class Epoch
  - uid: system.fabric._replica_role
    parent: system.fabric
    href: system.fabric._replica_role.yml
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: system.fabric.ReplicaRole
    type: Enum
    summary: <p><span data-ttu-id="dabdc-138">Definiert die replikatrolle</span><span class="sxs-lookup"><span data-stu-id="dabdc-138">Defines the replica role</span></span> </p>
    syntax:
      content: public enum ReplicaRole
  - uid: system.fabric._replicator.closeAsync(CancellationToken)
    parent: system.fabric._replicator
    href: system.fabric._replicator.yml
    name: closeAsync(CancellationToken cancellationToken)
    nameWithType: Replicator.closeAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture system.fabric.Replicator.closeAsync(CancellationToken cancellationToken)
    type: Method
    syntax:
      content: public CompletableFuture closeAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 5f2aaa64
  - uid: system.fabric._replicator.abort()
    parent: system.fabric._replicator
    href: system.fabric._replicator.yml
    name: abort()
    nameWithType: Replicator.abort()
    fullName: void system.fabric.Replicator.abort()
    type: Method
    syntax:
      content: public void abort()
  - uid: system.fabric._replicator.getCurrentProgress()
    parent: system.fabric._replicator
    href: system.fabric._replicator.yml
    name: getCurrentProgress()
    nameWithType: Replicator.getCurrentProgress()
    fullName: long system.fabric.Replicator.getCurrentProgress()
    type: Method
    syntax:
      content: public long getCurrentProgress()
      return:
        type: 0364520f
  - uid: system.fabric._replicator.getCatchUpCapability()
    parent: system.fabric._replicator
    href: system.fabric._replicator.yml
    name: getCatchUpCapability()
    nameWithType: Replicator.getCatchUpCapability()
    fullName: long system.fabric.Replicator.getCatchUpCapability()
    type: Method
    syntax:
      content: public long getCatchUpCapability()
      return:
        type: 0364520f
  - uid: 'system.fabric._replicator.updateEpochAsync(Epoch,CancellationToken)'
    parent: system.fabric._replicator
    href: system.fabric._replicator.yml
    name: 'updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)'
    nameWithType: 'Replicator.updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture system.fabric.Replicator.updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)'
    type: Method
    syntax:
      content: 'public CompletableFuture updateEpochAsync(Epoch epoch, CancellationToken cancellationToken)'
      parameters:
        - id: epoch
          type: system.fabric._epoch
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: 5f2aaa64
  - uid: system.fabric._primary_replicator.onDataLossAsync(CancellationToken)
    parent: system.fabric._primary_replicator
    href: system.fabric._primary_replicator.yml
    name: onDataLossAsync(CancellationToken cancellationToken)
    nameWithType: PrimaryReplicator.onDataLossAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Boolean> system.fabric.PrimaryReplicator.onDataLossAsync(CancellationToken cancellationToken)
    type: Method
    summary: |-
      <p><span data-ttu-id="dabdc-139">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-139">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<Boolean> onDataLossAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"dabdc-140\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-140\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 7e53ac82
        description: '<p><span data-ttu-id="dabdc-141">Eine CompletableFuture, die den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="dabdc-141">A CompletableFuture that represents the asynchronous operation.</span></span> </p>'
  - uid: 'system.fabric._primary_replicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration,ReplicaSetConfiguration)'
    parent: system.fabric._primary_replicator
    href: system.fabric._primary_replicator.yml
    name: 'updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)'
    nameWithType: 'PrimaryReplicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)'
    fullName: 'void system.fabric.PrimaryReplicator.updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)'
    type: Method
    summary: |-
      <p><span data-ttu-id="dabdc-142">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-142">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span></p>
      <p></p>
    syntax:
      content: 'public void updateCatchUpReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration, ReplicaSetConfiguration previousConfiguration)'
      parameters:
        - id: currentConfiguration
          type: system.fabric._replica_set_configuration
          description: <p><span data-ttu-id="dabdc-143">Nur zur internen Verwendung.</span><span class="sxs-lookup"><span data-stu-id="dabdc-143">For Internal Use Only.</span></span> </p>
        - id: previousConfiguration
          type: system.fabric._replica_set_configuration
          description: <p><span data-ttu-id="dabdc-144">Nur zur internen Verwendung.</span><span class="sxs-lookup"><span data-stu-id="dabdc-144">For Internal Use Only.</span></span> </p>
  - uid: system.fabric._replica_set_configuration
    parent: system.fabric
    href: system.fabric._replica_set_configuration.yml
    name: ReplicaSetConfiguration
    nameWithType: ReplicaSetConfiguration
    fullName: system.fabric.ReplicaSetConfiguration
    type: Class
    summary: '<p><span data-ttu-id="dabdc-145">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-145">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span> </p>'
    syntax:
      content: public class ReplicaSetConfiguration
  - uid: 'system.fabric._primary_replicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode,CancellationToken)'
    parent: system.fabric._primary_replicator
    href: system.fabric._primary_replicator.yml
    name: 'waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)'
    nameWithType: 'PrimaryReplicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture system.fabric.PrimaryReplicator.waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)'
    type: Method
    summary: |-
      <p><span data-ttu-id="dabdc-146">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-146">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture waitForCatchUpQuorumAsync(ReplicaSetQuorumMode quorumMode, CancellationToken cancellationToken)'
      parameters:
        - id: quorumMode
          type: system.fabric._replica_set_quorum_mode
          description: <p><span data-ttu-id="dabdc-147">Nur zur internen Verwendung.</span><span class="sxs-lookup"><span data-stu-id="dabdc-147">For Internal Use Only.</span></span> </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"dabdc-148\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-148\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 5f2aaa64
        description: <p><span data-ttu-id="dabdc-149">Nur zur internen Verwendung.</span><span class="sxs-lookup"><span data-stu-id="dabdc-149">For Internal Use Only.</span></span> </p>
  - uid: system.fabric._replica_set_quorum_mode
    parent: system.fabric
    href: system.fabric._replica_set_quorum_mode.yml
    name: ReplicaSetQuorumMode
    nameWithType: ReplicaSetQuorumMode
    fullName: system.fabric.ReplicaSetQuorumMode
    type: Enum
    syntax:
      content: public enum ReplicaSetQuorumMode
  - uid: system.fabric._primary_replicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration)
    parent: system.fabric._primary_replicator
    href: system.fabric._primary_replicator.yml
    name: updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
    nameWithType: PrimaryReplicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
    fullName: void system.fabric.PrimaryReplicator.updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
    type: Method
    summary: "<p><span data-ttu-id=\"dabdc-150\">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-150\">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span></p>\n<p></p>\n<p><span data-ttu-id=\"dabdc-151\">\r\n\r\n  <b>Beschreibung:</b> dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-151\">\r\n\r\n  <b>Remarks:</b> This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span> </p>"
    syntax:
      content: public void updateCurrentReplicaSetConfiguration(ReplicaSetConfiguration currentConfiguration)
      parameters:
        - id: currentConfiguration
          type: system.fabric._replica_set_configuration
          description: '<p><span data-ttu-id="dabdc-152">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-152">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span></p>'
  - uid: 'system.fabric._primary_replicator.buildReplicaAsync(ReplicaInformation,CancellationToken)'
    parent: system.fabric._primary_replicator
    href: system.fabric._primary_replicator.yml
    name: 'buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)'
    nameWithType: 'PrimaryReplicator.buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture system.fabric.PrimaryReplicator.buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)'
    type: Method
    summary: |-
      <p><span data-ttu-id="dabdc-153">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-153">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture buildReplicaAsync(ReplicaInformation replicaInfo, CancellationToken cancellationToken)'
      parameters:
        - id: replicaInfo
          type: system.fabric._replica_information
          description: '<p><span data-ttu-id="dabdc-154">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-154">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span> </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"dabdc-155\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-155\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 5f2aaa64
        description: '<p><span data-ttu-id="dabdc-156">Eine Aufgabe, die den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="dabdc-156">A task that represents the asynchronous operation.</span></span> </p>'
  - uid: system.fabric._replica_information
    parent: system.fabric
    href: system.fabric._replica_information.yml
    name: ReplicaInformation
    nameWithType: ReplicaInformation
    fullName: system.fabric.ReplicaInformation
    type: Class
    summary: |-
      <p><span data-ttu-id="dabdc-157">NUR ZUR INTERNEN VERWENDUNG.</span><span class="sxs-lookup"><span data-stu-id="dabdc-157">FOR INTERNAL USE ONLY.</span></span> <span data-ttu-id="dabdc-158">Stellt Informationen zu einem Replikat dar.</span><span class="sxs-lookup"><span data-stu-id="dabdc-158">Represents information about a replica.</span></span></p>
      <p></p>
    syntax:
      content: public class ReplicaInformation
  - uid: system.fabric._primary_replicator.removeReplica(long)
    parent: system.fabric._primary_replicator
    href: system.fabric._primary_replicator.yml
    name: removeReplica(long replicaId)
    nameWithType: PrimaryReplicator.removeReplica(long replicaId)
    fullName: void system.fabric.PrimaryReplicator.removeReplica(long replicaId)
    type: Method
    summary: "<p><span data-ttu-id=\"dabdc-159\">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-159\">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span></p>\n<p></p>\n<p><span data-ttu-id=\"dabdc-160\">\r\n\r\n  <b>Beschreibung:</b> dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-160\">\r\n\r\n  <b>Remarks:</b> This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span> </p>"
    syntax:
      content: public void removeReplica(long replicaId)
      parameters:
        - id: replicaId
          type: 0364520f
          description: '<p><span data-ttu-id="dabdc-161">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-161">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span></p>'
  - uid: system.fabric._state_replicator
    parent: system.fabric
    href: system.fabric._state_replicator.yml
    name: StateReplicator
    nameWithType: StateReplicator
    fullName: system.fabric.StateReplicator
    type: Interface
    summary: '<p><span data-ttu-id="dabdc-162">Macht replikationsbezogener-Funktionen von der <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref> Klasse, mit denen <xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">StateProvider</xref> zum Replizieren von Zustand, um hohe Verfügbarkeit sicherzustellen.</span><span class="sxs-lookup"><span data-stu-id="dabdc-162">Exposes replication related functions of the <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref> class that are used by <xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">StateProvider</xref> to replicate state to ensure high availability.</span></span> </p>'
    syntax:
      content: public interface StateReplicator
  - uid: system.fabric._primary_replicator
    parent: system.fabric
    href: system.fabric._primary_replicator.yml
    name: PrimaryReplicator
    nameWithType: PrimaryReplicator
    fullName: system.fabric.PrimaryReplicator
    type: Interface
    summary: '<p><span data-ttu-id="dabdc-163">Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-163">This supports the Service Fabric infrastructure and is not meant to be used directly from your code.</span></span> </p>'
    syntax:
      content: public interface PrimaryReplicator
  - uid: system.fabric._state_provider
    parent: system.fabric
    href: system.fabric._state_provider.yml
    name: StateProvider
    nameWithType: StateProvider
    fullName: system.fabric.StateProvider
    type: Interface
    summary: '<p><span data-ttu-id="dabdc-164">Definiert das Verhalten, das ein Dienst implementieren muss, um die Interaktion mit der <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>.</span><span class="sxs-lookup"><span data-stu-id="dabdc-164">Defines the behavior that a service must implement to interact with the <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>.</span></span> </p>'
    syntax:
      content: public interface StateProvider
  - uid: 'system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)'
    parent: system.fabric._stateful_service_partition
    href: system.fabric._stateful_service_partition.yml
    name: 'createReplicator(StateProvider stateProvider, ReplicatorSettings replicatorSettings)'
    nameWithType: 'StatefulServicePartition.createReplicator(StateProvider stateProvider, ReplicatorSettings replicatorSettings)'
    fullName: 'FabricReplicator system.fabric.StatefulServicePartition.createReplicator(StateProvider stateProvider, ReplicatorSettings replicatorSettings)'
    type: Method
    summary: "<p><span data-ttu-id=\"dabdc-165\">Erstellt eine <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> mit den angegebenen Einstellungen und gibt ihn an das Replikat zurück.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-165\">Creates a <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> with the specified settings and returns it to the replica.</span></span></p>\n<p><span data-ttu-id=\"dabdc-166\">\r\n\r\n  <b>Hinweise:</b>zur Erstellung sollte diese Methode verwendet eine <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> Service als die <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> für ein zustandsbehafteter Dienst, der implementiert<xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-166\">\r\n\r\n  <b>Remarks:</b>This method should be used to create a <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> to service as the <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> for a stateful service that implements <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref>.</span></span> </p>"
    syntax:
      content: 'public FabricReplicator createReplicator(StateProvider stateProvider, ReplicatorSettings replicatorSettings)'
      parameters:
        - id: stateProvider
          type: system.fabric._state_provider
          description: '<p><span data-ttu-id="dabdc-167">Die <xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">system.fabric.StateProvider</xref> mit dem zurückgegebenen <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref> verknüpft werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dabdc-167">The <xref uid="system.fabric._state_provider" data-throw-if-not-resolved="false">system.fabric.StateProvider</xref> with which the returned <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref> should be associated.</span></span> <span data-ttu-id="dabdc-168">Dies ist häufig das gleiche Objekt, das implementiert <xref uid="system.fabric._stateful_service_replica" data-throw-if-not-resolved="false">system.fabric.StatefulServiceReplica</xref>, jedoch bestimmte Dienste möglicherweise anders behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="dabdc-168">This is often the same object that implements <xref uid="system.fabric._stateful_service_replica" data-throw-if-not-resolved="false">system.fabric.StatefulServiceReplica</xref>, but certain services might be factored differently.</span></span> </p>'
        - id: replicatorSettings
          type: system.fabric._replicator_settings
          description: "<p><span data-ttu-id=\"dabdc-169\">\r\n\r\n  <xref uid=\"system.fabric._replicator_settings\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings</xref> mit dem zurückgegebenen <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> muss konfiguriert werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"dabdc-169\">\r\n\r\n  <xref uid=\"system.fabric._replicator_settings\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings</xref> with which the returned <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> should be configured.</span></span> </p>"
      return:
        type: system.fabric._fabric_replicator
        description: <p><span data-ttu-id="dabdc-170">Gibt <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>.</span><span class="sxs-lookup"><span data-stu-id="dabdc-170">Returns <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>.</span></span> </p>