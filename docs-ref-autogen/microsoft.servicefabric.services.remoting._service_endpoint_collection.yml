### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection
    id: _service_endpoint_collection
    parent: microsoft.servicefabric.services.remoting
    children:
      - 'microsoft.servicefabric.services.remoting._service_endpoint_collection.addEndpoint(String,String)'
      - microsoft.servicefabric.services.remoting._service_endpoint_collection.addEndpoints(ServiceEndpointCollection)
      - microsoft.servicefabric.services.remoting._service_endpoint_collection.getEndpointAddress(String)
      - microsoft.servicefabric.services.remoting._service_endpoint_collection.getFirstEndpointAddress()
      - microsoft.servicefabric.services.remoting._service_endpoint_collection.parseEndpointsString(String)
      - microsoft.servicefabric.services.remoting._service_endpoint_collection.ServiceEndpointCollection()
      - 'microsoft.servicefabric.services.remoting._service_endpoint_collection.ServiceEndpointCollection(String,String)'
      - microsoft.servicefabric.services.remoting._service_endpoint_collection.toReadOnlyHashMap()
      - microsoft.servicefabric.services.remoting._service_endpoint_collection.toString()
    href: microsoft.servicefabric.services.remoting._service_endpoint_collection.yml
    langs:
      - java
    name: ServiceEndpointCollection
    nameWithType: ServiceEndpointCollection
    fullName: microsoft.servicefabric.services.remoting.ServiceEndpointCollection
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceEndpointCollection.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceEndpointCollection.java
      startLine: 24
    package: microsoft.servicefabric.services.remoting
    summary: <p><span data-ttu-id="66054-101">Diese Klasse stellt die Endpunkte eines Diensts zuverlässige dar.</span><span class="sxs-lookup"><span data-stu-id="66054-101">This class represents the endpoints of a Reliable service.</span></span> <span data-ttu-id="66054-102">Jeder Endpunkt hat einen Listenernamen und die Adresse für diesen Listener.</span><span class="sxs-lookup"><span data-stu-id="66054-102">Each endpoint has a listener name and the address of that listener.</span></span> </p>
    syntax: &ref_1
      content: public class ServiceEndpointCollection
    inheritance:
      - java.lang.Object
      - Serializable
  - uid: 'microsoft.servicefabric.services.remoting._service_endpoint_collection.addEndpoint(String,String)'
    id: 'addEndpoint(String,String)'
    parent: microsoft.servicefabric.services.remoting._service_endpoint_collection
    href: microsoft.servicefabric.services.remoting._service_endpoint_collection.yml
    langs:
      - java
    name: 'addEndpoint(String listenerName, String endpointAddress)'
    nameWithType: 'ServiceEndpointCollection.addEndpoint(String listenerName, String endpointAddress)'
    fullName: 'void microsoft.servicefabric.services.remoting.ServiceEndpointCollection.addEndpoint(String listenerName, String endpointAddress)'
    overload: microsoft.servicefabric.services.remoting._service_endpoint_collection.addEndpoint*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceEndpointCollection.java
      startLine: 143
    package: microsoft.servicefabric.services.remoting
    syntax:
      content: 'public void addEndpoint(String listenerName, String endpointAddress)'
      parameters:
        - id: listenerName
          type: '26831127'
        - id: endpointAddress
          type: '26831127'
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection.addEndpoints(ServiceEndpointCollection)
    id: addEndpoints(ServiceEndpointCollection)
    parent: microsoft.servicefabric.services.remoting._service_endpoint_collection
    href: microsoft.servicefabric.services.remoting._service_endpoint_collection.yml
    langs:
      - java
    name: addEndpoints(ServiceEndpointCollection newEndpoints)
    nameWithType: ServiceEndpointCollection.addEndpoints(ServiceEndpointCollection newEndpoints)
    fullName: void microsoft.servicefabric.services.remoting.ServiceEndpointCollection.addEndpoints(ServiceEndpointCollection newEndpoints)
    overload: microsoft.servicefabric.services.remoting._service_endpoint_collection.addEndpoints*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceEndpointCollection.java
      startLine: 62
    package: microsoft.servicefabric.services.remoting
    summary: |-
      <p><span data-ttu-id="66054-103">Die EndpointsCollection hinzugefügt die Endpunkte in der Eingabe EndpointsCollection-Klasse.</span><span class="sxs-lookup"><span data-stu-id="66054-103">Adds the endpoints in the input EndpointsCollection class to the EndpointsCollection.</span></span></p>
      <p></p>
    syntax:
      content: public void addEndpoints(ServiceEndpointCollection newEndpoints)
      parameters:
        - id: newEndpoints
          type: microsoft.servicefabric.services.remoting._service_endpoint_collection
          description: <p><span data-ttu-id="66054-104">Eingabe EndpointsCollection</span><span class="sxs-lookup"><span data-stu-id="66054-104">input EndpointsCollection</span></span> </p>
    exceptions:
      - type: 34616db9
        description: <p><span data-ttu-id="66054-105">Wenn Fabric-Element ist bereits vorhanden.</span><span class="sxs-lookup"><span data-stu-id="66054-105">if fabric element already exists</span></span> </p>
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection.getEndpointAddress(String)
    id: getEndpointAddress(String)
    parent: microsoft.servicefabric.services.remoting._service_endpoint_collection
    href: microsoft.servicefabric.services.remoting._service_endpoint_collection.yml
    langs:
      - java
    name: getEndpointAddress(String listenerName)
    nameWithType: ServiceEndpointCollection.getEndpointAddress(String listenerName)
    fullName: String microsoft.servicefabric.services.remoting.ServiceEndpointCollection.getEndpointAddress(String listenerName)
    overload: microsoft.servicefabric.services.remoting._service_endpoint_collection.getEndpointAddress*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceEndpointCollection.java
      startLine: 93
    package: microsoft.servicefabric.services.remoting
    summary: |-
      <p><span data-ttu-id="66054-106">Ruft den Endpunkt identifiziert durch den Namen des Listeners an.</span><span class="sxs-lookup"><span data-stu-id="66054-106">Gets the endpoint identified by the listener name.</span></span></p>
      <p></p>
    syntax:
      content: public String getEndpointAddress(String listenerName)
      parameters:
        - id: listenerName
          type: '26831127'
          description: <p><span data-ttu-id="66054-107">Name des Listeners</span><span class="sxs-lookup"><span data-stu-id="66054-107">Listener name</span></span> </p>
      return:
        type: '26831127'
        description: '<p><span data-ttu-id="66054-108">True, wenn ein Endpunkt mit dem Namen des Listeners "false" vorhanden, andernfalls ist</span><span class="sxs-lookup"><span data-stu-id="66054-108">True if an endpoint with the listener name exists, False otherwise</span></span> </p>'
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection.getFirstEndpointAddress()
    id: getFirstEndpointAddress()
    parent: microsoft.servicefabric.services.remoting._service_endpoint_collection
    href: microsoft.servicefabric.services.remoting._service_endpoint_collection.yml
    langs:
      - java
    name: getFirstEndpointAddress()
    nameWithType: ServiceEndpointCollection.getFirstEndpointAddress()
    fullName: String microsoft.servicefabric.services.remoting.ServiceEndpointCollection.getFirstEndpointAddress()
    overload: microsoft.servicefabric.services.remoting._service_endpoint_collection.getFirstEndpointAddress*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceEndpointCollection.java
      startLine: 75
    package: microsoft.servicefabric.services.remoting
    summary: |-
      <p><span data-ttu-id="66054-109">Ruft die erste Adresse des Endpunkts in der EndpointsCollection</span><span class="sxs-lookup"><span data-stu-id="66054-109">Gets the first endpoint address in the EndpointsCollection</span></span></p>
      <p></p>
    syntax:
      content: public String getFirstEndpointAddress()
      return:
        type: '26831127'
        description: '<p><span data-ttu-id="66054-110">True, wenn es mindestens einen Endpunkt in der EndpointsCollection "false" andernfalls</span><span class="sxs-lookup"><span data-stu-id="66054-110">True if there is at-least one endpoint in the EndpointsCollection, false otherwise</span></span> </p>'
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection.parseEndpointsString(String)
    id: parseEndpointsString(String)
    parent: microsoft.servicefabric.services.remoting._service_endpoint_collection
    href: microsoft.servicefabric.services.remoting._service_endpoint_collection.yml
    langs:
      - java
    name: parseEndpointsString(String endpointsString)
    nameWithType: ServiceEndpointCollection.parseEndpointsString(String endpointsString)
    fullName: static ServiceEndpointCollection microsoft.servicefabric.services.remoting.ServiceEndpointCollection.parseEndpointsString(String endpointsString)
    overload: microsoft.servicefabric.services.remoting._service_endpoint_collection.parseEndpointsString*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceEndpointCollection.java
      startLine: 108
    package: microsoft.servicefabric.services.remoting
    summary: |-
      <p><span data-ttu-id="66054-111">Erstellt eine EndpointsCollection aus eine Zeichenfolgenversion der Endpunkte.</span><span class="sxs-lookup"><span data-stu-id="66054-111">Constructs an EndpointsCollection from a string version of the endpoints.</span></span> <span data-ttu-id="66054-112">Der EndpointsCollection in Form einer Zeichenfolge im Format ist {"Endpunkte": {"Listener1": "Endpoint1", "Listener2": "Endpoint2"...}}</span><span class="sxs-lookup"><span data-stu-id="66054-112">String form of EndpointsCollection is of the form {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}</span></span></p>
      <p></p>
    syntax:
      content: public static ServiceEndpointCollection parseEndpointsString(String endpointsString)
      parameters:
        - id: endpointsString
          type: '26831127'
          description: <p><span data-ttu-id="66054-113">der EndpointsCollection in Form einer Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="66054-113">string form of endpointsCollection</span></span> </p>
      return:
        type: microsoft.servicefabric.services.remoting._service_endpoint_collection
        description: '<p><span data-ttu-id="66054-114">"True", wenn die Zeichenfolge andernfalls zu einem gültigen EndpointsCollection, "false" analysiert werden kann</span><span class="sxs-lookup"><span data-stu-id="66054-114">True if the string can be parsed to a valid EndpointsCollection, False otherwise</span></span> </p>'
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection.ServiceEndpointCollection()
    id: ServiceEndpointCollection()
    parent: microsoft.servicefabric.services.remoting._service_endpoint_collection
    href: microsoft.servicefabric.services.remoting._service_endpoint_collection.yml
    langs:
      - java
    name: ServiceEndpointCollection()
    nameWithType: ServiceEndpointCollection.ServiceEndpointCollection()
    fullName: microsoft.servicefabric.services.remoting.ServiceEndpointCollection.ServiceEndpointCollection()
    overload: microsoft.servicefabric.services.remoting._service_endpoint_collection.ServiceEndpointCollection*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceEndpointCollection.java
      startLine: 35
    package: microsoft.servicefabric.services.remoting
    summary: <p><span data-ttu-id="66054-115">Instanziiert eine leere ServiceEndpointsCollection</span><span class="sxs-lookup"><span data-stu-id="66054-115">Instantiates an empty ServiceEndpointsCollection</span></span> </p>
    syntax:
      content: public ServiceEndpointCollection()
  - uid: 'microsoft.servicefabric.services.remoting._service_endpoint_collection.ServiceEndpointCollection(String,String)'
    id: 'ServiceEndpointCollection(String,String)'
    parent: microsoft.servicefabric.services.remoting._service_endpoint_collection
    href: microsoft.servicefabric.services.remoting._service_endpoint_collection.yml
    langs:
      - java
    name: 'ServiceEndpointCollection(String listenerName, String endpointAddress)'
    nameWithType: 'ServiceEndpointCollection.ServiceEndpointCollection(String listenerName, String endpointAddress)'
    fullName: 'microsoft.servicefabric.services.remoting.ServiceEndpointCollection.ServiceEndpointCollection(String listenerName, String endpointAddress)'
    overload: microsoft.servicefabric.services.remoting._service_endpoint_collection.ServiceEndpointCollection*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceEndpointCollection.java
      startLine: 49
    package: microsoft.servicefabric.services.remoting
    summary: |-
      <p><span data-ttu-id="66054-116">Instanziiert die ServiceEndpointsCollection mit einem einzelnen Endpunkt, identifiziert durch den Namen des Listeners an.</span><span class="sxs-lookup"><span data-stu-id="66054-116">Instantiates the ServiceEndpointsCollection with a single endpoint, identified by the listener name.</span></span></p>
      <p></p>
    syntax:
      content: 'public ServiceEndpointCollection(String listenerName, String endpointAddress)'
      parameters:
        - id: listenerName
          type: '26831127'
          description: <p><span data-ttu-id="66054-117">Verfügbarkeitsgruppenlistener-Namen des Endpunkts</span><span class="sxs-lookup"><span data-stu-id="66054-117">Listener name of the endpoint</span></span> </p>
        - id: endpointAddress
          type: '26831127'
          description: <p><span data-ttu-id="66054-118">Adresse des Endpunkts</span><span class="sxs-lookup"><span data-stu-id="66054-118">Address of the endpoint</span></span> </p>
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection.toReadOnlyHashMap()
    id: toReadOnlyHashMap()
    parent: microsoft.servicefabric.services.remoting._service_endpoint_collection
    href: microsoft.servicefabric.services.remoting._service_endpoint_collection.yml
    langs:
      - java
    name: toReadOnlyHashMap()
    nameWithType: ServiceEndpointCollection.toReadOnlyHashMap()
    fullName: 'Map<String, String> microsoft.servicefabric.services.remoting.ServiceEndpointCollection.toReadOnlyHashMap()'
    overload: microsoft.servicefabric.services.remoting._service_endpoint_collection.toReadOnlyHashMap*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceEndpointCollection.java
      startLine: 159
    package: microsoft.servicefabric.services.remoting
    syntax:
      content: 'public Map<String, String> toReadOnlyHashMap()'
      return:
        type: 689c8cb5
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection.toString()
    id: toString()
    parent: microsoft.servicefabric.services.remoting._service_endpoint_collection
    href: microsoft.servicefabric.services.remoting._service_endpoint_collection.yml
    langs:
      - java
    name: toString()
    nameWithType: ServiceEndpointCollection.toString()
    fullName: String microsoft.servicefabric.services.remoting.ServiceEndpointCollection.toString()
    overload: microsoft.servicefabric.services.remoting._service_endpoint_collection.toString*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceEndpointCollection.java
      startLine: 129
    package: microsoft.servicefabric.services.remoting
    summary: |-
      <p><span data-ttu-id="66054-119">Konvertiert die EndpointsCollection in eine JSON-Zeichenfolge des Formulars {"Endpunkte": {"Listener1": "Endpoint1", "Listener2": "Endpoint2"...}}</span><span class="sxs-lookup"><span data-stu-id="66054-119">Converts the endpointsCollection to a JSON string of the form {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}</span></span></p>
      <p></p>
    syntax:
      content: public String toString()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="66054-120">Von der EndpointsCollection in Form einer Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="66054-120">String form of the endpointsCollection</span></span> </p>
references:
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection.ServiceEndpointCollection*
    name: ServiceEndpointCollection
    nameWithType: ServiceEndpointCollection.ServiceEndpointCollection
    fullName: microsoft.servicefabric.services.remoting.ServiceEndpointCollection.ServiceEndpointCollection
    package: microsoft.servicefabric.services.remoting
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: 34616db9
    spec.java:
      - name: FabricElementAlreadyExistsException
        fullName: FabricElementAlreadyExistsException
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection.addEndpoints*
    name: addEndpoints
    nameWithType: ServiceEndpointCollection.addEndpoints
    fullName: void microsoft.servicefabric.services.remoting.ServiceEndpointCollection.addEndpoints
    package: microsoft.servicefabric.services.remoting
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection.getFirstEndpointAddress*
    name: getFirstEndpointAddress
    nameWithType: ServiceEndpointCollection.getFirstEndpointAddress
    fullName: String microsoft.servicefabric.services.remoting.ServiceEndpointCollection.getFirstEndpointAddress
    package: microsoft.servicefabric.services.remoting
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection.getEndpointAddress*
    name: getEndpointAddress
    nameWithType: ServiceEndpointCollection.getEndpointAddress
    fullName: String microsoft.servicefabric.services.remoting.ServiceEndpointCollection.getEndpointAddress
    package: microsoft.servicefabric.services.remoting
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection.toString*
    name: toString
    nameWithType: ServiceEndpointCollection.toString
    fullName: String microsoft.servicefabric.services.remoting.ServiceEndpointCollection.toString
    package: microsoft.servicefabric.services.remoting
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection.addEndpoint*
    name: addEndpoint
    nameWithType: ServiceEndpointCollection.addEndpoint
    fullName: void microsoft.servicefabric.services.remoting.ServiceEndpointCollection.addEndpoint
    package: microsoft.servicefabric.services.remoting
  - uid: 689c8cb5
    spec.java:
      - name: 'Map<String, String>'
        fullName: 'Map<String, String>'
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection.toReadOnlyHashMap*
    name: toReadOnlyHashMap
    nameWithType: ServiceEndpointCollection.toReadOnlyHashMap
    fullName: 'Map<String, String> microsoft.servicefabric.services.remoting.ServiceEndpointCollection.toReadOnlyHashMap'
    package: microsoft.servicefabric.services.remoting
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection.parseEndpointsString*
    name: parseEndpointsString
    nameWithType: ServiceEndpointCollection.parseEndpointsString
    fullName: static ServiceEndpointCollection microsoft.servicefabric.services.remoting.ServiceEndpointCollection.parseEndpointsString
    package: microsoft.servicefabric.services.remoting
  - uid: microsoft.servicefabric.services.remoting._service_endpoint_collection
    parent: microsoft.servicefabric.services.remoting
    href: microsoft.servicefabric.services.remoting._service_endpoint_collection.yml
    name: ServiceEndpointCollection
    nameWithType: ServiceEndpointCollection
    fullName: microsoft.servicefabric.services.remoting.ServiceEndpointCollection
    type: Class
    summary: <p><span data-ttu-id="66054-121">Diese Klasse stellt die Endpunkte eines Diensts zuverlässige dar.</span><span class="sxs-lookup"><span data-stu-id="66054-121">This class represents the endpoints of a Reliable service.</span></span> <span data-ttu-id="66054-122">Jeder Endpunkt hat einen Listenernamen und die Adresse für diesen Listener.</span><span class="sxs-lookup"><span data-stu-id="66054-122">Each endpoint has a listener name and the address of that listener.</span></span> </p>
    syntax: *ref_1
  - uid: system.fabric.exception._fabric_element_already_exists_exception
    parent: system.fabric.exception
    href: system.fabric.exception._fabric_element_already_exists_exception.yml
    name: FabricElementAlreadyExistsException
    nameWithType: FabricElementAlreadyExistsException
    fullName: system.fabric.exception.FabricElementAlreadyExistsException
    type: Class
    syntax:
      content: public class FabricElementAlreadyExistsException extends FabricException