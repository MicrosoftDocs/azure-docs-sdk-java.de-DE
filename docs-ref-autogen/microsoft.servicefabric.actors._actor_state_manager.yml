### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._actor_state_manager
    id: _actor_state_manager
    parent: microsoft.servicefabric.actors
    children:
      - 'microsoft.servicefabric.actors._actor_state_manager.addOrUpdateStateAsync(String,T,BiFunction<String, T, T>)'
      - 'microsoft.servicefabric.actors._actor_state_manager.addStateAsync(String,T)'
      - microsoft.servicefabric.actors._actor_state_manager.clearCacheAsync()
      - microsoft.servicefabric.actors._actor_state_manager.containsStateAsync(String)
      - 'microsoft.servicefabric.actors._actor_state_manager.getOrAddStateAsync(String,T)'
      - microsoft.servicefabric.actors._actor_state_manager.getStateAsync(String)
      - microsoft.servicefabric.actors._actor_state_manager.getStateNamesAsync()
      - microsoft.servicefabric.actors._actor_state_manager.removeStateAsync(String)
      - microsoft.servicefabric.actors._actor_state_manager.saveStateAsync()
      - 'microsoft.servicefabric.actors._actor_state_manager.setStateAsync(String,T)'
      - 'microsoft.servicefabric.actors._actor_state_manager.tryAddStateAsync(String,T)'
      - microsoft.servicefabric.actors._actor_state_manager.tryGetStateAsync(String)
      - microsoft.servicefabric.actors._actor_state_manager.tryRemoveStateAsync(String)
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    langs:
      - java
    name: ActorStateManager
    nameWithType: ActorStateManager
    fullName: microsoft.servicefabric.actors.ActorStateManager
    type: Interface
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
      startLine: 11
    package: microsoft.servicefabric.actors
    summary: '<p>Stellt die Schnittstelle, die Status-Manager für <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> implementiert. </p>'
    syntax: &ref_1
      content: public interface ActorStateManager
  - uid: 'microsoft.servicefabric.actors._actor_state_manager.addOrUpdateStateAsync(String,T,BiFunction<String, T, T>)'
    id: 'addOrUpdateStateAsync(String,T,BiFunction<String, T, T>)'
    parent: microsoft.servicefabric.actors._actor_state_manager
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    langs:
      - java
    name: 'addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)'
    nameWithType: 'ActorStateManager.addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)'
    fullName: '<T> CompletableFuture<T> microsoft.servicefabric.actors.ActorStateManager.addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)'
    overload: microsoft.servicefabric.actors._actor_state_manager.addOrUpdateStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
      startLine: 138
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Fügt einen Akteur Zustand mit der angegebenen Zustand, wenn er noch nicht vorhanden oder angegebenen Namen und Wert aktualisiert, wenn er nicht vorhanden ist.</p>
      <p></p>
    syntax:
      content: 'public <T> CompletableFuture<T> addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)'
      parameters:
        - id: stateName
          type: '26831127'
          description: <p>Name des Zustands Akteur hinzufügen oder abrufen. </p>
        - id: addValue
          type: 8ce1ecb9
          description: '<p>Wert des Darstellers Status hinzufügen, wenn er nicht vorhanden ist. </p>'
        - id: updateValueFactory
          type: 6d910369
          description: '<p>Factory-Funktion zum Generieren der Wert des actorzustands aktualisieren, wenn er vorhanden ist. </p>'
      return:
        type: 6d056e8b
        description: '<p>Eine Aufgabe, die den asynchronen hinzufügen/aktualisieren Vorgang darstellt. Der Wert des Parameters T enthält Wert des actorzustands, die hinzugefügt/aktualisiert wurde. </p>'
  - uid: 'microsoft.servicefabric.actors._actor_state_manager.addStateAsync(String,T)'
    id: 'addStateAsync(String,T)'
    parent: microsoft.servicefabric.actors._actor_state_manager
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    langs:
      - java
    name: 'addStateAsync(String stateName, T value)'
    nameWithType: 'ActorStateManager.addStateAsync(String stateName, T value)'
    fullName: '<T> CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.addStateAsync(String stateName, T value)'
    overload: microsoft.servicefabric.actors._actor_state_manager.addStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
      startLine: 24
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Fügt einen Akteur State mit angegebenen Status.</p>
      <p></p>
    syntax:
      content: 'public <T> CompletableFuture<?> addStateAsync(String stateName, T value)'
      parameters:
        - id: stateName
          type: '26831127'
          description: <p>Name des Zustands Akteur hinzufügen. </p>
        - id: value
          type: 8ce1ecb9
          description: <p>Wert des Darstellers Status hinzufügen. </p>
      return:
        type: a5c17814
        description: '<p>Das Hinzufügen einer Aufgabe, die den asynchronen darstellt. </p>'
  - uid: microsoft.servicefabric.actors._actor_state_manager.clearCacheAsync()
    id: clearCacheAsync()
    parent: microsoft.servicefabric.actors._actor_state_manager
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    langs:
      - java
    name: clearCacheAsync()
    nameWithType: ActorStateManager.clearCacheAsync()
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.clearCacheAsync()
    overload: microsoft.servicefabric.actors._actor_state_manager.clearCacheAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
      startLine: 162
    package: microsoft.servicefabric.actors
    summary: "<p>Löscht alle zwischengespeicherten Akteur-Status und Vorgänge nachzufolgen <xref href=\"microsoft.servicefabric.actors._actor_state_manager\" data-throw-if-not-resolved=\"false\"></xref> seit der letzten Status beim Speichervorgang.</p>\n<p>\r\n\r\n  <bold>Hinweise:</bold> die Vorgänge, die für ausgeführt <xref href=\"microsoft.servicefabric.actors._actor_state_manager\" data-throw-if-not-resolved=\"false\"></xref> seit dem letzten Speichern des auf das Löschen des Zwischenspeichers deaktiviert sind, und wird im nächsten Speichervorgang nicht enthalten sein. </p>"
    syntax:
      content: public CompletableFuture<?> clearCacheAsync()
      return:
        type: 16409f84
        description: '<p>Eine Aufgabe, die den asynchronen Cache löschen Vorgang darstellt. </p>'
  - uid: microsoft.servicefabric.actors._actor_state_manager.containsStateAsync(String)
    id: containsStateAsync(String)
    parent: microsoft.servicefabric.actors._actor_state_manager
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    langs:
      - java
    name: containsStateAsync(String stateName)
    nameWithType: ActorStateManager.containsStateAsync(String stateName)
    fullName: CompletableFuture<Boolean> microsoft.servicefabric.actors.ActorStateManager.containsStateAsync(String stateName)
    overload: microsoft.servicefabric.actors._actor_state_manager.containsStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
      startLine: 106
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Überprüft, ob ein actorzustands mit dem angegebenen Namen vorhanden ist.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Boolean> containsStateAsync(String stateName)
      parameters:
        - id: stateName
          type: '26831127'
          description: '<p>Der Name des Zustands, Akteur. </p>'
      return:
        type: 7e53ac82
        description: '<p>Eine Aufgabe, die den asynchronen Vorgang darstellt. Der Wert des T-Parameters ist "true", wenn der Status mit dem angegebenen Namen ist vorhanden, andernfalls "false". </p>'
  - uid: 'microsoft.servicefabric.actors._actor_state_manager.getOrAddStateAsync(String,T)'
    id: 'getOrAddStateAsync(String,T)'
    parent: microsoft.servicefabric.actors._actor_state_manager
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    langs:
      - java
    name: 'getOrAddStateAsync(String stateName, T value)'
    nameWithType: 'ActorStateManager.getOrAddStateAsync(String stateName, T value)'
    fullName: '<T> CompletableFuture<T> microsoft.servicefabric.actors.ActorStateManager.getOrAddStateAsync(String stateName, T value)'
    overload: microsoft.servicefabric.actors._actor_state_manager.getOrAddStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
      startLine: 121
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft ein Akteur Zuständen mit der angegebene Name des Bundeslandes, sofern vorhanden, oder den Status mit dem Status mit dem angegebenen Zustand Namen, fügt, falls vorhanden.</p>
      <p></p>
    syntax:
      content: 'public <T> CompletableFuture<T> getOrAddStateAsync(String stateName, T value)'
      parameters:
        - id: stateName
          type: '26831127'
          description: <p>Der Name des Zustands Akteur zum Hinzufügen/aktualisieren. </p>
        - id: value
          type: 8ce1ecb9
          description: <p>Wert des Darstellers Status/Update hinzufügen. </p>
      return:
        type: 6d056e8b
        description: '<p>Eine Aufgabe, die den asynchronen hinzufügen "oder" Get-Vorgang darstellt. Der Wert des Parameters T enthält den Wert des Darstellers Status mit dem angegebenen Status. </p>'
  - uid: microsoft.servicefabric.actors._actor_state_manager.getStateAsync(String)
    id: getStateAsync(String)
    parent: microsoft.servicefabric.actors._actor_state_manager
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    langs:
      - java
    name: getStateAsync(String stateName)
    nameWithType: ActorStateManager.getStateAsync(String stateName)
    fullName: <T> CompletableFuture<T> microsoft.servicefabric.actors.ActorStateManager.getStateAsync(String stateName)
    overload: microsoft.servicefabric.actors._actor_state_manager.getStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
      startLine: 36
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft ein Akteur Status mit dem angegebenen Namen ab.</p>
      <p></p>
    syntax:
      content: public <T> CompletableFuture<T> getStateAsync(String stateName)
      parameters:
        - id: stateName
          type: '26831127'
          description: <p>Name des Zustands Akteur hinzufügen. </p>
      return:
        type: 6d056e8b
        description: '<p>Eine Aufgabe, die den asynchronen Ladevorgang darstellt. Der Wert des Parameters T enthält Wert des Darstellers State mit angegebenen Status. </p>'
  - uid: microsoft.servicefabric.actors._actor_state_manager.getStateNamesAsync()
    id: getStateNamesAsync()
    parent: microsoft.servicefabric.actors._actor_state_manager
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    langs:
      - java
    name: getStateNamesAsync()
    nameWithType: ActorStateManager.getStateNamesAsync()
    fullName: CompletableFuture<List<String>> microsoft.servicefabric.actors.ActorStateManager.getStateNamesAsync()
    overload: microsoft.servicefabric.actors._actor_state_manager.getStateNamesAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
      startLine: 149
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Erstellt eine Liste aller Namen der Akteur-Status für die aktuelle Akteur.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<List<String>> getStateNamesAsync()
      return:
        type: d20512af
        description: '<p>Eine Aufgabe, die den asynchronen Enumerationsvorgang darstellt. Der Wert des T-Parameter ist ein aufzählbares Objekt von allen Akteur Ländernamen. </p>'
  - uid: microsoft.servicefabric.actors._actor_state_manager.removeStateAsync(String)
    id: removeStateAsync(String)
    parent: microsoft.servicefabric.actors._actor_state_manager
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    langs:
      - java
    name: removeStateAsync(String stateName)
    nameWithType: ActorStateManager.removeStateAsync(String stateName)
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.removeStateAsync(String stateName)
    overload: microsoft.servicefabric.actors._actor_state_manager.removeStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
      startLine: 59
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Entfernt ein Akteur Zuständen mit angegebenen Statusname angegebenen Wert.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<?> removeStateAsync(String stateName)
      parameters:
        - id: stateName
          type: '26831127'
          description: <p>Name des Zustands Akteur zu entfernen. </p>
      return:
        type: 16409f84
        description: '<p>Eine Aufgabe, die den asynchronen Entfernungsvorgang darstellt. </p>'
  - uid: microsoft.servicefabric.actors._actor_state_manager.saveStateAsync()
    id: saveStateAsync()
    parent: microsoft.servicefabric.actors._actor_state_manager
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    langs:
      - java
    name: saveStateAsync()
    nameWithType: ActorStateManager.saveStateAsync()
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.saveStateAsync()
    overload: microsoft.servicefabric.actors._actor_state_manager.saveStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
      startLine: 170
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Speichert alle zwischengespeicherten statusänderungen (Hinzufügen/Aktualisieren/Entfernen), die seit dem letzten Aufruf von <xref href="microsoft.servicefabric.actors._actor_state_manager.saveStateAsync()" data-throw-if-not-resolved="false"></xref> von Akteur Runtime oder vom Benutzer explizit.</p>
      <p></p>
    syntax: &ref_2
      content: public CompletableFuture<?> saveStateAsync()
      return:
        type: 16409f84
        description: '<p>Eine Aufgabe, die den asynchronen Speichervorgang darstellt. </p>'
  - uid: 'microsoft.servicefabric.actors._actor_state_manager.setStateAsync(String,T)'
    id: 'setStateAsync(String,T)'
    parent: microsoft.servicefabric.actors._actor_state_manager
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    langs:
      - java
    name: 'setStateAsync(String stateName, T value)'
    nameWithType: 'ActorStateManager.setStateAsync(String stateName, T value)'
    fullName: '<T> CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.setStateAsync(String stateName, T value)'
    overload: microsoft.servicefabric.actors._actor_state_manager.setStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
      startLine: 50
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Entfernt ein actorzustands mit dem angegebenen Namen. Wenn ein Akteur Status mit dem angegebenen Namen nicht vorhanden ist, wird er hinzugefügt.</p>
      <p></p>
    syntax:
      content: 'public <T> CompletableFuture<?> setStateAsync(String stateName, T value)'
      parameters:
        - id: stateName
          type: '26831127'
          description: <p>Name des Zustands Akteur festlegen. </p>
        - id: value
          type: 8ce1ecb9
          description: <p>Wert des Darstellers Status festgelegt. </p>
      return:
        type: a5c17814
        description: '<p>Eine Aufgabe, die asynchrone Operation darstellt. </p>'
  - uid: 'microsoft.servicefabric.actors._actor_state_manager.tryAddStateAsync(String,T)'
    id: 'tryAddStateAsync(String,T)'
    parent: microsoft.servicefabric.actors._actor_state_manager
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    langs:
      - java
    name: 'tryAddStateAsync(String stateName, T value)'
    nameWithType: 'ActorStateManager.tryAddStateAsync(String stateName, T value)'
    fullName: '<T> CompletableFuture<Boolean> microsoft.servicefabric.actors.ActorStateManager.tryAddStateAsync(String stateName, T value)'
    overload: microsoft.servicefabric.actors._actor_state_manager.tryAddStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
      startLine: 73
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Angegebenen Status Zustand Versuche, einen Akteur hinzuzufügen.</p>
      <p></p>
    syntax:
      content: 'public <T> CompletableFuture<Boolean> tryAddStateAsync(String stateName, T value)'
      parameters:
        - id: stateName
          type: '26831127'
          description: <p>Name des Zustands Akteur hinzufügen. </p>
        - id: value
          type: 8ce1ecb9
          description: <p>Wert des Darstellers Status hinzufügen. </p>
      return:
        type: 2ebb647c
        description: '<p>Das Hinzufügen einer Aufgabe, die den asynchronen darstellt. Der Wert des T-Parameters gibt an, ob der Zustand erfolgreich hinzugefügt wurde. </p>'
  - uid: microsoft.servicefabric.actors._actor_state_manager.tryGetStateAsync(String)
    id: tryGetStateAsync(String)
    parent: microsoft.servicefabric.actors._actor_state_manager
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    langs:
      - java
    name: tryGetStateAsync(String stateName)
    nameWithType: ActorStateManager.tryGetStateAsync(String stateName)
    fullName: <T> CompletableFuture<ConditionalValue<T>> microsoft.servicefabric.actors.ActorStateManager.tryGetStateAsync(String stateName)
    overload: microsoft.servicefabric.actors._actor_state_manager.tryGetStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
      startLine: 86
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Versucht, eine actorzustands mit dem angegebenen Namen abzurufen.</p>
      <p></p>
    syntax:
      content: public <T> CompletableFuture<ConditionalValue<T>> tryGetStateAsync(String stateName)
      parameters:
        - id: stateName
          type: '26831127'
          description: <p>Name des abzurufenden Akteur Status. </p>
      return:
        type: 013f9378microsoft.servicefabric.data._conditional_value84ce83e6
        description: '<p>Eine Aufgabe, die den asynchronen Ladevorgang darstellt. Enthält der Wert des Parameters T <ref refid="" kindref="compound">ConditionalValue</ref> , der angibt, ob die actorzustands vorhanden ist und der Wert des actorzustands vorhanden. </p>'
  - uid: microsoft.servicefabric.actors._actor_state_manager.tryRemoveStateAsync(String)
    id: tryRemoveStateAsync(String)
    parent: microsoft.servicefabric.actors._actor_state_manager
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    langs:
      - java
    name: tryRemoveStateAsync(String stateName)
    nameWithType: ActorStateManager.tryRemoveStateAsync(String stateName)
    fullName: CompletableFuture<Boolean> microsoft.servicefabric.actors.ActorStateManager.tryRemoveStateAsync(String stateName)
    overload: microsoft.servicefabric.actors._actor_state_manager.tryRemoveStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorStateManager.java
      startLine: 96
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Versucht, eine actorzustands mit dem angegebenen Namen zu entfernen.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Boolean> tryRemoveStateAsync(String stateName)
      parameters:
        - id: stateName
          type: '26831127'
          description: <p>Name des Zustands Akteur zu entfernen. </p>
      return:
        type: 7e53ac82
        description: '<p>Eine Aufgabe, die den asynchronen Entfernungsvorgang darstellt. Der Wert des T-Parameters gibt an, ob der Zustand erfolgreich entfernt wurde. </p>'
references:
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: 8ce1ecb9
    spec.java:
      - name: T
        fullName: T
  - uid: a5c17814
    spec.java:
      - name: <T> CompletableFuture<?>
        fullName: <T> CompletableFuture<?>
  - uid: microsoft.servicefabric.actors._actor_state_manager.addStateAsync*
    name: addStateAsync
    nameWithType: ActorStateManager.addStateAsync
    fullName: <T> CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.addStateAsync
    package: microsoft.servicefabric.actors
  - uid: 6d056e8b
    spec.java:
      - name: <T> CompletableFuture<T>
        fullName: <T> CompletableFuture<T>
  - uid: microsoft.servicefabric.actors._actor_state_manager.getStateAsync*
    name: getStateAsync
    nameWithType: ActorStateManager.getStateAsync
    fullName: <T> CompletableFuture<T> microsoft.servicefabric.actors.ActorStateManager.getStateAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_state_manager.setStateAsync*
    name: setStateAsync
    nameWithType: ActorStateManager.setStateAsync
    fullName: <T> CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.setStateAsync
    package: microsoft.servicefabric.actors
  - uid: 16409f84
    spec.java:
      - name: CompletableFuture<?>
        fullName: CompletableFuture<?>
  - uid: microsoft.servicefabric.actors._actor_state_manager.removeStateAsync*
    name: removeStateAsync
    nameWithType: ActorStateManager.removeStateAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.removeStateAsync
    package: microsoft.servicefabric.actors
  - uid: 2ebb647c
    spec.java:
      - name: <T> CompletableFuture<Boolean>
        fullName: <T> CompletableFuture<Boolean>
  - uid: microsoft.servicefabric.actors._actor_state_manager.tryAddStateAsync*
    name: tryAddStateAsync
    nameWithType: ActorStateManager.tryAddStateAsync
    fullName: <T> CompletableFuture<Boolean> microsoft.servicefabric.actors.ActorStateManager.tryAddStateAsync
    package: microsoft.servicefabric.actors
  - uid: 013f9378microsoft.servicefabric.data._conditional_value84ce83e6
    spec.java:
      - name: <T> CompletableFuture<
        fullName: <T> CompletableFuture<
      - uid: microsoft.servicefabric.data._conditional_value
        name: ConditionalValue
        fullName: microsoft.servicefabric.data.ConditionalValue
        href: microsoft.servicefabric.data._conditional_value.yml
      - name: <T>>
        fullName: <T>>
  - uid: microsoft.servicefabric.actors._actor_state_manager.tryGetStateAsync*
    name: tryGetStateAsync
    nameWithType: ActorStateManager.tryGetStateAsync
    fullName: <T> CompletableFuture<ConditionalValue<T>> microsoft.servicefabric.actors.ActorStateManager.tryGetStateAsync
    package: microsoft.servicefabric.actors
  - uid: 7e53ac82
    spec.java:
      - name: CompletableFuture<Boolean>
        fullName: CompletableFuture<Boolean>
  - uid: microsoft.servicefabric.actors._actor_state_manager.tryRemoveStateAsync*
    name: tryRemoveStateAsync
    nameWithType: ActorStateManager.tryRemoveStateAsync
    fullName: CompletableFuture<Boolean> microsoft.servicefabric.actors.ActorStateManager.tryRemoveStateAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_state_manager.containsStateAsync*
    name: containsStateAsync
    nameWithType: ActorStateManager.containsStateAsync
    fullName: CompletableFuture<Boolean> microsoft.servicefabric.actors.ActorStateManager.containsStateAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_state_manager.getOrAddStateAsync*
    name: getOrAddStateAsync
    nameWithType: ActorStateManager.getOrAddStateAsync
    fullName: <T> CompletableFuture<T> microsoft.servicefabric.actors.ActorStateManager.getOrAddStateAsync
    package: microsoft.servicefabric.actors
  - uid: 6d910369
    spec.java:
      - name: 'BiFunction<String, T, T>'
        fullName: 'BiFunction<String, T, T>'
  - uid: microsoft.servicefabric.actors._actor_state_manager.addOrUpdateStateAsync*
    name: addOrUpdateStateAsync
    nameWithType: ActorStateManager.addOrUpdateStateAsync
    fullName: <T> CompletableFuture<T> microsoft.servicefabric.actors.ActorStateManager.addOrUpdateStateAsync
    package: microsoft.servicefabric.actors
  - uid: d20512af
    spec.java:
      - name: CompletableFuture<List<String>>
        fullName: CompletableFuture<List<String>>
  - uid: microsoft.servicefabric.actors._actor_state_manager.getStateNamesAsync*
    name: getStateNamesAsync
    nameWithType: ActorStateManager.getStateNamesAsync
    fullName: CompletableFuture<List<String>> microsoft.servicefabric.actors.ActorStateManager.getStateNamesAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_state_manager.clearCacheAsync*
    name: clearCacheAsync
    nameWithType: ActorStateManager.clearCacheAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.clearCacheAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_state_manager.saveStateAsync*
    name: saveStateAsync
    nameWithType: ActorStateManager.saveStateAsync
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.saveStateAsync
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_state_manager_impl
  - uid: microsoft.servicefabric.data._conditional_value
    parent: microsoft.servicefabric.data
    href: microsoft.servicefabric.data._conditional_value.yml
    name: ConditionalValue<TValue>
    nameWithType: ConditionalValue<TValue>
    fullName: microsoft.servicefabric.data.ConditionalValue<TValue>
    type: Class
    summary: |-
      <p>Ergebnis-Klasse zurückgegebene DistributedCollections-APIs, die möglicherweise möglicherweise keinen Wert zurück.</p>
      <p></p>
    syntax:
      content: public class ConditionalValue<TValue>
      typeParameters:
        - type: 649a7377
          description: '<p>Wert, der das Ergebnis mit den zu initialisieren. </p>'
  - uid: microsoft.servicefabric.actors._actor_state_manager
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    name: ActorStateManager
    nameWithType: ActorStateManager
    fullName: microsoft.servicefabric.actors.ActorStateManager
    type: Interface
    summary: '<p>Stellt die Schnittstelle, die Status-Manager für <xref href="microsoft.servicefabric.actors._actor" data-throw-if-not-resolved="false"></xref> implementiert. </p>'
    syntax: *ref_1
  - uid: microsoft.servicefabric.actors._actor_state_manager.saveStateAsync()
    parent: microsoft.servicefabric.actors._actor_state_manager
    href: microsoft.servicefabric.actors._actor_state_manager.yml
    name: saveStateAsync()
    nameWithType: ActorStateManager.saveStateAsync()
    fullName: CompletableFuture<?> microsoft.servicefabric.actors.ActorStateManager.saveStateAsync()
    type: Method
    summary: |-
      <p>Speichert alle zwischengespeicherten statusänderungen (Hinzufügen/Aktualisieren/Entfernen), die seit dem letzten Aufruf von <xref href="microsoft.servicefabric.actors._actor_state_manager.saveStateAsync()" data-throw-if-not-resolved="false"></xref> von Akteur Runtime oder vom Benutzer explizit.</p>
      <p></p>
    syntax: *ref_2
  - uid: microsoft.servicefabric.actors._actor
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor.yml
    name: Actor
    nameWithType: Actor
    fullName: microsoft.servicefabric.actors.Actor
    type: Interface
    summary: <p>Die Basisschnittstelle für das zuverlässige Akteur Schnittstellen erben. </p>
    syntax:
      content: public interface Actor