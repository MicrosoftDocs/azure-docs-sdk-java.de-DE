### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map
    id: _reliable_hash_map
    parent: microsoft.servicefabric.data.collections
    children:
      - microsoft.servicefabric.data.collections._reliable_hash_map.clearAsync()
      - microsoft.servicefabric.data.collections._reliable_hash_map.close()
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.computeAsync(Transaction,K,BiFunction<? super K, ? super V, ? extends V>)'
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.computeAsync(Transaction,K,BiFunction<? super K, ? super V, ? extends V>,Duration,CancellationToken)'
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.computeIfAbsent(Transaction,K,Function<? super K, ? extends V>)'
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.computeIfAbsent(Transaction,K,Function<? super K, ? extends V>,Duration,CancellationToken)'
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.computeIfPresent(Transaction,K,BiFunction<? super K, ? super V, ? extends V>)'
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.computeIfPresent(Transaction,K,BiFunction<? super K, ? super V, ? extends V>,Duration,CancellationToken)'
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync(Transaction,K)'
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync(Transaction,K,Duration,CancellationToken)'
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync(Transaction,K,LockMode)'
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync(Transaction,K,LockMode,Duration,CancellationToken)'
      - microsoft.servicefabric.data.collections._reliable_hash_map.elementsAsync(Transaction)
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.getAsync(Transaction,K)'
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.getAsync(Transaction,K,Duration,CancellationToken)'
      - microsoft.servicefabric.data.collections._reliable_hash_map.getCount()
      - microsoft.servicefabric.data.collections._reliable_hash_map.getName()
      - microsoft.servicefabric.data.collections._reliable_hash_map.keysAsync(Transaction)
      - microsoft.servicefabric.data.collections._reliable_hash_map.keyValuesAsync(Transaction)
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.putAsync(Transaction,K,V)'
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.putAsync(Transaction,K,V,Duration,CancellationToken)'
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.putIfAbsentAsync(Transaction,K,V)'
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.putIfAbsentAsync(Transaction,K,V,Duration,CancellationToken)'
      - microsoft.servicefabric.data.collections._reliable_hash_map.ReliableHashMap(long)
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.removeAsync(Transaction,K)'
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.removeAsync(Transaction,K,Duration,CancellationToken)'
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.replaceAsync(Transaction,K,V)'
      - 'microsoft.servicefabric.data.collections._reliable_hash_map.replaceAsync(Transaction,K,V,Duration,CancellationToken)'
      - microsoft.servicefabric.data.collections._reliable_hash_map.size()
      - microsoft.servicefabric.data.collections._reliable_hash_map.useByteBuffers(boolean)
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'ReliableHashMap<K,V>'
    nameWithType: 'ReliableHashMap<K,V>'
    fullName: 'microsoft.servicefabric.data.collections.ReliableHashMap<K,V>'
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 21
    package: microsoft.servicefabric.data.collections
    syntax:
      content: 'public class ReliableHashMap<K extends String,V> implements ReliableCollection'
      typeParameters:
        - type: a1c6f3a5
        - type: 0a560652
    inheritance:
      - java.lang.Object
      - microsoft.servicefabric.data.collections.ReliableCollectionsNativeAPIs
    inheritedMembers:
      - microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.freeTStore(long)
      - 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeContainsKeyAsync(long,long,String,LockMode,long,int,CancellationToken)'
      - 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeEnumeratorAsync(long,long,int)'
      - 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeGetAsync(long,long,String,long,int,CancellationToken)'
      - 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeGetAsync2(long,long,String,long,int,CancellationToken)'
      - microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeGetCount(long)
      - 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeKeyEnumeratorAsync(long,long,int)'
      - 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativePutAsync(long,long,String,byte [],int,long,int,int,CancellationToken)'
      - 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativePutAsync(long,long,String,ByteBuffer,int,long,int,int,CancellationToken)'
      - 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativePutIfAbsentAsync(long,long,String,byte [],int,long,int,int,CancellationToken)'
      - 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativePutIfAbsentAsync(long,long,String,ByteBuffer,int,long,int,int,CancellationToken)'
      - 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeRemoveAsync(long,long,String,long,int,CancellationToken)'
      - 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeUpdateAsync(long,long,String,byte [],int,long,int,int,CancellationToken)'
      - 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeUpdateAsync(long,long,String,ByteBuffer,int,long,int,int,CancellationToken)'
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.clearAsync()
    id: clearAsync()
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: clearAsync()
    nameWithType: 'ReliableHashMap<K,V>.clearAsync()'
    fullName: 'CompletableFuture<Void> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.clearAsync()'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.clearAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 652
    package: microsoft.servicefabric.data.collections
    summary: '<p>Entfernt alle Statusangaben aus der <xref uid="microsoft.servicefabric.data.collections._reliable_collection" data-throw-if-not-resolved="false">ReliableCollection</xref>, einschließlich repliziert und Speicher beibehalten. </p>'
    syntax:
      content: public CompletableFuture<Void> clearAsync()
      return:
        type: db03ee24
        description: '<p>Ein completable Future, die den asynchronen Löschvorgang darstellt. </p>'
    overridden: microsoft.servicefabric.data.collections._reliable_collection.clearAsync()
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.close()
    id: close()
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: close()
    nameWithType: 'ReliableHashMap<K,V>.close()'
    fullName: 'void microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.close()'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.close*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 665
    package: microsoft.servicefabric.data.collections
    syntax:
      content: public void close()
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.computeAsync(Transaction,K,BiFunction<? super K, ? super V, ? extends V>)'
    id: 'computeAsync(Transaction,K,BiFunction<? super K, ? super V, ? extends V>)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'computeAsync(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction)'
    nameWithType: 'ReliableHashMap<K,V>.computeAsync(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction)'
    fullName: 'CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeAsync(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.computeAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 238
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Versucht, eine Zuordnung für den angegebenen Schlüssel und seinen aktuellen zugeordneten Wert zu berechnen (oder null, wenn keine aktuelle Zuordnung vorhanden ist).</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<V> computeAsync(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: '<p>Schlüssel, mit denen der angegebene Wert ist, zugeordnet werden soll </p>'
        - id: remappingFunction
          type: 534e89dc
          description: '<p>die Funktion, die einen Wert zu berechnen </p>'
      return:
        type: d9602408
        description: '<p>Der neue Wert, der mit dem angegebenen Schlüssel oder Null zugeordnet ist, wenn keine zurückgegeben. </p>'
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.computeAsync(Transaction,K,BiFunction<? super K, ? super V, ? extends V>,Duration,CancellationToken)'
    id: 'computeAsync(Transaction,K,BiFunction<? super K, ? super V, ? extends V>,Duration,CancellationToken)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'computeAsync(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction, Duration timeout, CancellationToken cancellationToken)'
    nameWithType: 'ReliableHashMap<K,V>.computeAsync(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction, Duration timeout, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeAsync(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction, Duration timeout, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.computeAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 261
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Versucht, eine Zuordnung für den angegebenen Schlüssel und seinen aktuellen zugeordneten Wert zu berechnen (oder null, wenn keine aktuelle Zuordnung vorhanden ist).</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<V> computeAsync(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction, Duration timeout, CancellationToken cancellationToken)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: '<p>Schlüssel, mit denen der angegebene Wert ist, zugeordnet werden soll. </p>'
        - id: remappingFunction
          type: 534e89dc
          description: '<p>die Funktion, die einen Wert zu berechnen. </p>'
        - id: timeout
          type: e02a2de0
          description: '<p>Das Timeout in Sekunden, um den Vorgang abzuschließen. </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: d9602408
        description: '<p>Der neue Wert, der mit dem angegebenen Schlüssel oder Null zugeordnet ist, wenn keine zurückgegeben. </p>'
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.computeIfAbsent(Transaction,K,Function<? super K, ? extends V>)'
    id: 'computeIfAbsent(Transaction,K,Function<? super K, ? extends V>)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'computeIfAbsent(Transaction txn, K key, Function<? super K, ? extends V> mappingFunction)'
    nameWithType: 'ReliableHashMap<K,V>.computeIfAbsent(Transaction txn, K key, Function<? super K, ? extends V> mappingFunction)'
    fullName: 'CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeIfAbsent(Transaction txn, K key, Function<? super K, ? extends V> mappingFunction)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.computeIfAbsent*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 327
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Wenn der angegebene Schlüssel nicht mit einem Wert zugeordnet ist, versucht, die ihren Wert mithilfe der angegebenen Zuordnungsfunktion berechnet und in dieser Karte eingibt, es sei denn, null.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<V> computeIfAbsent(Transaction txn, K key, Function<? super K, ? extends V> mappingFunction)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: '<p>Schlüssel, mit denen der angegebene Wert ist, zugeordnet werden soll </p>'
        - id: mappingFunction
          type: 31e11ead
          description: '<p>die Funktion, die einen Wert zu berechnen </p>'
      return:
        type: d9602408
        description: '<p>die aktuelle (vorhandene oder berechnete) Wert verknüpft sind mit dem angegebenen Schlüssel oder Null, wenn der berechnete Wert null ist </p>'
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.computeIfAbsent(Transaction,K,Function<? super K, ? extends V>,Duration,CancellationToken)'
    id: 'computeIfAbsent(Transaction,K,Function<? super K, ? extends V>,Duration,CancellationToken)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'computeIfAbsent(Transaction txn, K key, Function<? super K, ? extends V> mappingFunction, Duration timeout, CancellationToken cancellationToken)'
    nameWithType: 'ReliableHashMap<K,V>.computeIfAbsent(Transaction txn, K key, Function<? super K, ? extends V> mappingFunction, Duration timeout, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeIfAbsent(Transaction txn, K key, Function<? super K, ? extends V> mappingFunction, Duration timeout, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.computeIfAbsent*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 351
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Wenn der angegebene Schlüssel nicht mit einem Wert zugeordnet ist, versucht, die ihren Wert mithilfe der angegebenen Zuordnungsfunktion berechnet und in dieser Karte eingibt, es sei denn, null.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<V> computeIfAbsent(Transaction txn, K key, Function<? super K, ? extends V> mappingFunction, Duration timeout, CancellationToken cancellationToken)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: '<p>Schlüssel, mit denen der angegebene Wert ist, zugeordnet werden soll </p>'
        - id: mappingFunction
          type: 31e11ead
          description: '<p>die Funktion, die einen Wert zu berechnen </p>'
        - id: timeout
          type: e02a2de0
          description: '<p>Das Timeout in Sekunden, um den Vorgang abzuschließen. </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: d9602408
        description: '<p>die aktuelle (vorhandene oder berechnete) Wert verknüpft sind mit dem angegebenen Schlüssel oder Null, wenn der berechnete Wert null ist. </p>'
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.computeIfPresent(Transaction,K,BiFunction<? super K, ? super V, ? extends V>)'
    id: 'computeIfPresent(Transaction,K,BiFunction<? super K, ? super V, ? extends V>)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'computeIfPresent(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction)'
    nameWithType: 'ReliableHashMap<K,V>.computeIfPresent(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction)'
    fullName: 'CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeIfPresent(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.computeIfPresent*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 400
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Wenn der Wert für den angegebenen Schlüssel vorhanden ist, versucht, eine neue Zuordnung erhält den Schlüssel und seinen aktuellen zugeordneten Wert zu berechnen.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<V> computeIfPresent(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: '<p>Schlüssel, die dem Wert zugeordnet werden kann. </p>'
        - id: remappingFunction
          type: 534e89dc
          description: '<p>die Funktion, die einen Wert zu berechnen. </p>'
      return:
        type: d9602408
        description: '<p>der neue Wert, der mit dem angegebenen Schlüssel oder Null zugeordnet ist, wenn keine. </p>'
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.computeIfPresent(Transaction,K,BiFunction<? super K, ? super V, ? extends V>,Duration,CancellationToken)'
    id: 'computeIfPresent(Transaction,K,BiFunction<? super K, ? super V, ? extends V>,Duration,CancellationToken)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'computeIfPresent(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction, Duration timeout, CancellationToken cancellationToken)'
    nameWithType: 'ReliableHashMap<K,V>.computeIfPresent(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction, Duration timeout, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeIfPresent(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction, Duration timeout, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.computeIfPresent*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 422
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Wenn der Wert für den angegebenen Schlüssel vorhanden ist, versucht, eine neue Zuordnung erhält den Schlüssel und seinen aktuellen zugeordneten Wert zu berechnen.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<V> computeIfPresent(Transaction txn, K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction, Duration timeout, CancellationToken cancellationToken)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: '<p>Schlüssel, die dem Wert zugeordnet werden kann. </p>'
        - id: remappingFunction
          type: 534e89dc
          description: '<p>die Funktion, die einen Wert zu berechnen. </p>'
        - id: timeout
          type: e02a2de0
          description: '<p>Das Timeout in Sekunden, um den Vorgang abzuschließen. </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: d9602408
        description: '<p>der neue Wert, der mit dem angegebenen Schlüssel oder Null zugeordnet ist, wenn keine. </p>'
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync(Transaction,K)'
    id: 'containsKeyAsync(Transaction,K)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'containsKeyAsync(Transaction txn, K key)'
    nameWithType: 'ReliableHashMap<K,V>.containsKeyAsync(Transaction txn, K key)'
    fullName: 'CompletableFuture<Boolean> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.containsKeyAsync(Transaction txn, K key)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 555
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Testet, ob das angegebene Objekt ein Schlüssel in dieser Tabelle ist.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Boolean> containsKeyAsync(Transaction txn, K key)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: <p>möglichen Schlüssels </p>
      return:
        type: 7e53ac82
        description: '<p>True, wenn das angegebene Objekt ein Schlüssel in dieser Tabelle ist "false" andernfalls </p>'
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync(Transaction,K,Duration,CancellationToken)'
    id: 'containsKeyAsync(Transaction,K,Duration,CancellationToken)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'containsKeyAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)'
    nameWithType: 'ReliableHashMap<K,V>.containsKeyAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Boolean> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.containsKeyAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 589
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Testet, ob das angegebene Objekt ein Schlüssel in dieser Tabelle ist.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Boolean> containsKeyAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: <p>möglichen Schlüssels </p>
        - id: timeout
          type: e02a2de0
          description: '<p>Das Timeout in Sekunden, um den Vorgang abzuschließen. </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 7e53ac82
        description: '<p>True, wenn das angegebene Objekt ein Schlüssel in dieser Tabelle ist "false" andernfalls. </p>'
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync(Transaction,K,LockMode)'
    id: 'containsKeyAsync(Transaction,K,LockMode)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'containsKeyAsync(Transaction txn, K key, LockMode lockMode)'
    nameWithType: 'ReliableHashMap<K,V>.containsKeyAsync(Transaction txn, K key, LockMode lockMode)'
    fullName: 'CompletableFuture<Boolean> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.containsKeyAsync(Transaction txn, K key, LockMode lockMode)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 570
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Testet, ob das angegebene Objekt ein Schlüssel in dieser Tabelle ist.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Boolean> containsKeyAsync(Transaction txn, K key, LockMode lockMode)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: <p>möglichen Schlüssels </p>
        - id: lockMode
          type: microsoft.servicefabric.data.collections._lock_mode
      return:
        type: 7e53ac82
        description: '<p>True, wenn das angegebene Objekt ein Schlüssel in dieser Tabelle ist "false" andernfalls. </p>'
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync(Transaction,K,LockMode,Duration,CancellationToken)'
    id: 'containsKeyAsync(Transaction,K,LockMode,Duration,CancellationToken)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'containsKeyAsync(Transaction txn, K key, LockMode lockMode, Duration timeout, CancellationToken cancellationToken)'
    nameWithType: 'ReliableHashMap<K,V>.containsKeyAsync(Transaction txn, K key, LockMode lockMode, Duration timeout, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Boolean> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.containsKeyAsync(Transaction txn, K key, LockMode lockMode, Duration timeout, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 610
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Testet, ob das angegebene Objekt ein Schlüssel in dieser Tabelle ist.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Boolean> containsKeyAsync(Transaction txn, K key, LockMode lockMode, Duration timeout, CancellationToken cancellationToken)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: <p>möglichen Schlüssels </p>
        - id: lockMode
          type: microsoft.servicefabric.data.collections._lock_mode
        - id: timeout
          type: e02a2de0
          description: '<p>Das Timeout in Sekunden, um den Vorgang abzuschließen. </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 7e53ac82
        description: '<p>True, wenn das angegebene Objekt ein Schlüssel in dieser Tabelle ist "false" andernfalls. </p>'
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.elementsAsync(Transaction)
    id: elementsAsync(Transaction)
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: elementsAsync(Transaction txn)
    nameWithType: 'ReliableHashMap<K,V>.elementsAsync(Transaction txn)'
    fullName: 'CompletableFuture<AsyncEnumeration<V>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.elementsAsync(Transaction txn)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.elementsAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 210
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Gibt eine Enumeration der Werte in dieser Tabelle zurück.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<AsyncEnumeration<V>> elementsAsync(Transaction txn)
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
      return:
        type: 9cdf14d0microsoft.servicefabric.data.utilities._async_enumeratione521727f
        description: <p>eine Enumeration der Werte in dieser Tabelle </p>
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.getAsync(Transaction,K)'
    id: 'getAsync(Transaction,K)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'getAsync(Transaction txn, K key)'
    nameWithType: 'ReliableHashMap<K,V>.getAsync(Transaction txn, K key)'
    fullName: 'CompletableFuture<ConditionalValue<V>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.getAsync(Transaction txn, K key)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.getAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 116
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Gibt den Wert, der der angegebene Schlüssel zugeordnet ist, oder null, wenn diese Zuordnung enthält keine Zuordnung für den Schlüssel.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ConditionalValue<V>> getAsync(Transaction txn, K key)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: '<p>der Schlüssel, dessen zugeordnete Wert zurückgegeben wird </p>'
      return:
        type: 9cdf14d0microsoft.servicefabric.data._conditional_valuee521727f
        description: '<p>der Wert, den der angegebene Schlüssel zugeordnet ist, oder Null, wenn diese Zuordnung keine Zuordnung für den Schlüssel enthält. </p>'
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.getAsync(Transaction,K,Duration,CancellationToken)'
    id: 'getAsync(Transaction,K,Duration,CancellationToken)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'getAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)'
    nameWithType: 'ReliableHashMap<K,V>.getAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<ConditionalValue<V>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.getAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.getAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 136
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Gibt den Wert, der der angegebene Schlüssel zugeordnet ist, oder null, wenn diese Zuordnung enthält keine Zuordnung für den Schlüssel.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<ConditionalValue<V>> getAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: '<p>der Schlüssel, dessen zugeordnete Wert zurückgegeben wird </p>'
        - id: timeout
          type: e02a2de0
          description: '<p>Das Timeout in Sekunden, um den Vorgang abzuschließen. </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 9cdf14d0microsoft.servicefabric.data._conditional_valuee521727f
        description: '<p>der Wert, den der angegebene Schlüssel zugeordnet ist, oder Null, wenn diese Zuordnung keine Zuordnung für den Schlüssel enthält. </p>'
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.getCount()
    id: getCount()
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: getCount()
    nameWithType: 'ReliableHashMap<K,V>.getCount()'
    fullName: 'long microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.getCount()'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.getCount*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 658
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Ruft die Anzahl der Elemente in der <xref uid="microsoft.servicefabric.data.collections._reliable_collection" data-throw-if-not-resolved="false">ReliableCollection</xref></p>
      <p></p>
    syntax:
      content: public long getCount()
      return:
        type: 0364520f
        description: <p>Die Anzahl der Elemente. </p>
    overridden: microsoft.servicefabric.data.collections._reliable_collection.getCount()
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.getName()
    id: getName()
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: getName()
    nameWithType: 'ReliableHashMap<K,V>.getName()'
    fullName: 'URI microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.getName()'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.getName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 55
    package: microsoft.servicefabric.data.collections
    summary: <p>Ruft den eindeutigen Namen der URI für die zuverlässige Hashzuordnung </p>
    syntax:
      content: public URI getName()
      return:
        type: '62304784'
    overridden: microsoft.servicefabric.data._reliable_state.getName()
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.keysAsync(Transaction)
    id: keysAsync(Transaction)
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: keysAsync(Transaction txn)
    nameWithType: 'ReliableHashMap<K,V>.keysAsync(Transaction txn)'
    fullName: 'CompletableFuture<AsyncEnumeration<K>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.keysAsync(Transaction txn)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.keysAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 199
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Gibt eine Enumeration der Schlüssel in dieser Tabelle zurück.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<AsyncEnumeration<K>> keysAsync(Transaction txn)
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
      return:
        type: 9cdf14d0microsoft.servicefabric.data.utilities._async_enumeration21d24612
        description: <p>eine Enumeration der Schlüssel in dieser Tabelle </p>
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.keyValuesAsync(Transaction)
    id: keyValuesAsync(Transaction)
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: keyValuesAsync(Transaction txn)
    nameWithType: 'ReliableHashMap<K,V>.keyValuesAsync(Transaction txn)'
    fullName: 'CompletableFuture<AsyncEnumeration<KeyValuePair<K, V>>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.keyValuesAsync(Transaction txn)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.keyValuesAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 221
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Gibt eine Enumeration von Schlüssel-Wert-Paare in dieser Tabelle zurück.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<AsyncEnumeration<KeyValuePair<K, V>>> keyValuesAsync(Transaction txn)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
      return:
        type: 9cdf14d0microsoft.servicefabric.data.utilities._async_enumeration78504a52microsoft.servicefabric.data.utilities._key_value_pair7b670ebd
        description: <p>eine Enumeration von Schlüssel-Wert-Paare in dieser Tabelle. </p>
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.putAsync(Transaction,K,V)'
    id: 'putAsync(Transaction,K,V)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'putAsync(Transaction txn, K key, V value)'
    nameWithType: 'ReliableHashMap<K,V>.putAsync(Transaction txn, K key, V value)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.putAsync(Transaction txn, K key, V value)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.putAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 72
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Ordnet den angegebenen Schlüssel auf den angegebenen Wert in dieser Tabelle. Weder der Schlüssel als auch der Wert kann null sein.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> putAsync(Transaction txn, K key, V value)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: '<p>Schlüssel, mit denen der angegebene Wert ist, zugeordnet werden soll </p>'
        - id: value
          type: 0a560652
          description: <p>Wert mit dem angegebenen Schlüssel zugeordnet werden soll </p>
      return:
        type: 16409f84
        description: '<p>der vorherige Wert zugeordnet Schlüssel oder Null, wenn es keine Zuordnung für den Schlüssel wurde </p>'
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.putAsync(Transaction,K,V,Duration,CancellationToken)'
    id: 'putAsync(Transaction,K,V,Duration,CancellationToken)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'putAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)'
    nameWithType: 'ReliableHashMap<K,V>.putAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.putAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.putAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 94
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Ordnet den angegebenen Schlüssel auf den angegebenen Wert in dieser Tabelle. Weder der Schlüssel als auch der Wert kann null sein.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> putAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: '<p>Schlüssel, mit denen der angegebene Wert ist, zugeordnet werden soll </p>'
        - id: value
          type: 0a560652
          description: <p>Wert mit dem angegebenen Schlüssel zugeordnet werden soll </p>
        - id: timeout
          type: e02a2de0
          description: '<p>Das Timeout in Sekunden, um den Vorgang abzuschließen. </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 16409f84
        description: '<p>der vorherige Wert zugeordnet Schlüssel oder Null, wenn es keine Zuordnung für den Schlüssel wurde </p>'
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.putIfAbsentAsync(Transaction,K,V)'
    id: 'putIfAbsentAsync(Transaction,K,V)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'putIfAbsentAsync(Transaction txn, K key, V value)'
    nameWithType: 'ReliableHashMap<K,V>.putIfAbsentAsync(Transaction txn, K key, V value)'
    fullName: 'CompletableFuture<Void> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.putIfAbsentAsync(Transaction txn, K key, V value)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.putIfAbsentAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 511
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Wenn der angegebene Schlüssel nicht mit einem Wert zugeordnet ist, ordnen Sie es mit dem angegebenen Wert.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Void> putIfAbsentAsync(Transaction txn, K key, V value)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: '<p>Schlüssel, mit denen der angegebene Wert ist, zugeordnet werden soll </p>'
        - id: value
          type: 0a560652
          description: <p>Wert mit dem angegebenen Schlüssel zugeordnet werden soll </p>
      return:
        type: db03ee24
        description: <p>Gibt nichts zurück. </p>
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.putIfAbsentAsync(Transaction,K,V,Duration,CancellationToken)'
    id: 'putIfAbsentAsync(Transaction,K,V,Duration,CancellationToken)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'putIfAbsentAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)'
    nameWithType: 'ReliableHashMap<K,V>.putIfAbsentAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Void> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.putIfAbsentAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.putIfAbsentAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 533
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Wenn der angegebene Schlüssel nicht mit einem Wert zugeordnet ist, ordnen Sie es mit dem angegebenen Wert.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Void> putIfAbsentAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: '<p>Schlüssel, mit denen der angegebene Wert ist, zugeordnet werden soll </p>'
        - id: value
          type: 0a560652
          description: <p>Wert mit dem angegebenen Schlüssel zugeordnet werden soll </p>
        - id: timeout
          type: e02a2de0
          description: '<p>Das Timeout in Sekunden, um den Vorgang abzuschließen. </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: db03ee24
        description: <p>Gibt nichts zurück. </p>
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.ReliableHashMap(long)
    id: ReliableHashMap(long)
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: ReliableHashMap(long store)
    nameWithType: 'ReliableHashMap<K,V>.ReliableHashMap(long store)'
    fullName: 'microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.ReliableHashMap(long store)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.ReliableHashMap*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 29
    package: microsoft.servicefabric.data.collections
    syntax:
      content: public ReliableHashMap(long store)
      parameters:
        - id: store
          type: 0364520f
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.removeAsync(Transaction,K)'
    id: 'removeAsync(Transaction,K)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'removeAsync(Transaction txn, K key)'
    nameWithType: 'ReliableHashMap<K,V>.removeAsync(Transaction txn, K key)'
    fullName: 'CompletableFuture<Boolean> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.removeAsync(Transaction txn, K key)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.removeAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 472
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Entfernt den Schlüssel (und den entsprechenden Wert) aus dieser Zuordnung an. Diese Methode bewirkt nichts, wenn der Schlüssel nicht in der Zuordnung ist.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Boolean> removeAsync(Transaction txn, K key)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: '<p>der Schlüssel, der entfernt werden muss. </p>'
      return:
        type: 7e53ac82
        description: '<p>Gibt einen booleschen Wert, der angibt, ob Vorgang erfolgreich war oder nicht entfernen. </p>'
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.removeAsync(Transaction,K,Duration,CancellationToken)'
    id: 'removeAsync(Transaction,K,Duration,CancellationToken)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'removeAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)'
    nameWithType: 'ReliableHashMap<K,V>.removeAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Boolean> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.removeAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.removeAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 492
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Entfernt den Schlüssel (und den entsprechenden Wert) aus dieser Zuordnung an. Diese Methode bewirkt nichts, wenn der Schlüssel nicht in der Zuordnung ist.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Boolean> removeAsync(Transaction txn, K key, Duration timeout, CancellationToken cancellationToken)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: '<p>der Schlüssel, der entfernt werden muss. </p>'
        - id: timeout
          type: e02a2de0
          description: '<p>Das Timeout in Sekunden, um den Vorgang abzuschließen. </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 7e53ac82
        description: '<p>Gibt einen booleschen Wert, der angibt, ob Vorgang erfolgreich war oder nicht entfernen. </p>'
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.replaceAsync(Transaction,K,V)'
    id: 'replaceAsync(Transaction,K,V)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'replaceAsync(Transaction txn, K key, V value)'
    nameWithType: 'ReliableHashMap<K,V>.replaceAsync(Transaction txn, K key, V value)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.replaceAsync(Transaction txn, K key, V value)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.replaceAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 159
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Ersetzt den Eintrag für einen Schlüssel an, nur dann, wenn derzeit auf einen beliebigen Wert zugeordnet.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> replaceAsync(Transaction txn, K key, V value)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: '<p>Schlüssel, der der angegebene Wert zugeordnet ist </p>'
        - id: value
          type: 0a560652
          description: <p>Wert mit dem angegebenen Schlüssel zugeordnet werden soll </p>
      return:
        type: 16409f84
        description: '<p>der vorherige Wert verknüpft sind mit dem angegebenen Schlüssel oder Null, wenn es keine Zuordnung für den Schlüssel wurde </p>'
  - uid: 'microsoft.servicefabric.data.collections._reliable_hash_map.replaceAsync(Transaction,K,V,Duration,CancellationToken)'
    id: 'replaceAsync(Transaction,K,V,Duration,CancellationToken)'
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: 'replaceAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)'
    nameWithType: 'ReliableHashMap<K,V>.replaceAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.replaceAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.replaceAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 180
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Ersetzt den Eintrag für einen Schlüssel an, nur dann, wenn derzeit auf einen beliebigen Wert zugeordnet.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<?> replaceAsync(Transaction txn, K key, V value, Duration timeout, CancellationToken cancellationToken)'
      parameters:
        - id: txn
          type: microsoft.servicefabric.data._transaction
          description: '<p>Die Transaktions-Id, die diesem Vorgang zugeordnet. </p>'
        - id: key
          type: a1c6f3a5
          description: '<p>Schlüssel, der der angegebene Wert zugeordnet ist </p>'
        - id: value
          type: 0a560652
          description: <p>Wert mit dem angegebenen Schlüssel zugeordnet werden soll </p>
        - id: timeout
          type: e02a2de0
          description: '<p>Das Timeout in Sekunden, um den Vorgang abzuschließen. </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 16409f84
        description: '<p>der vorherige Wert verknüpft sind mit dem angegebenen Schlüssel oder Null, wenn es keine Zuordnung für den Schlüssel wurde </p>'
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.size()
    id: size()
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: size()
    nameWithType: 'ReliableHashMap<K,V>.size()'
    fullName: 'long microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.size()'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.size*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 646
    package: microsoft.servicefabric.data.collections
    summary: |-
      <p>Gibt die Anzahl der Mappings.</p>
      <p></p>
    syntax:
      content: public long size()
      return:
        type: 0364520f
        description: <p>Diese Methode gibt die Anzahl der Mappings in der Zuordnung zurück. Dies ist keinen asynchronen Aufruf. Sie erhalten die beste Leistung bei der Anzahl der Mappings. </p>
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.useByteBuffers(boolean)
    id: useByteBuffers(boolean)
    parent: microsoft.servicefabric.data.collections._reliable_hash_map
    href: microsoft.servicefabric.data.collections._reliable_hash_map.yml
    langs:
      - java
    name: useByteBuffers(boolean flag)
    nameWithType: 'ReliableHashMap<K,V>.useByteBuffers(boolean flag)'
    fullName: 'void microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.useByteBuffers(boolean flag)'
    overload: microsoft.servicefabric.data.collections._reliable_hash_map.useByteBuffers*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/data/collections/ReliableHashMap.java
      startLine: 48
    package: microsoft.servicefabric.data.collections
    summary: <p>Verwenden Sie Byte-Puffer zum Serialisieren und Deserialisieren </p>
    syntax:
      content: public void useByteBuffers(boolean flag)
      parameters:
        - id: flag
          type: 4fc6e284
          description: <p>Soll eine Byte-Puffer oder nicht verwenden </p>
references:
  - uid: a1c6f3a5
    spec.java:
      - name: K
        fullName: K
  - uid: 0a560652
    spec.java:
      - name: V
        fullName: V
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.ReliableHashMap*
    name: ReliableHashMap
    nameWithType: 'ReliableHashMap<K,V>.ReliableHashMap'
    fullName: 'microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.ReliableHashMap'
    package: microsoft.servicefabric.data.collections
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.useByteBuffers*
    name: useByteBuffers
    nameWithType: 'ReliableHashMap<K,V>.useByteBuffers'
    fullName: 'void microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.useByteBuffers'
    package: microsoft.servicefabric.data.collections
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.getName*
    name: getName
    nameWithType: 'ReliableHashMap<K,V>.getName'
    fullName: 'URI microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.getName'
    package: microsoft.servicefabric.data.collections
  - uid: 16409f84
    spec.java:
      - name: CompletableFuture<?>
        fullName: CompletableFuture<?>
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.putAsync*
    name: putAsync
    nameWithType: 'ReliableHashMap<K,V>.putAsync'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.putAsync'
    package: microsoft.servicefabric.data.collections
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: 9cdf14d0microsoft.servicefabric.data._conditional_valuee521727f
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: microsoft.servicefabric.data._conditional_value
        name: ConditionalValue
        fullName: microsoft.servicefabric.data.ConditionalValue
        href: microsoft.servicefabric.data._conditional_value.yml
      - name: <V>>
        fullName: <V>>
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.getAsync*
    name: getAsync
    nameWithType: 'ReliableHashMap<K,V>.getAsync'
    fullName: 'CompletableFuture<ConditionalValue<V>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.getAsync'
    package: microsoft.servicefabric.data.collections
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.replaceAsync*
    name: replaceAsync
    nameWithType: 'ReliableHashMap<K,V>.replaceAsync'
    fullName: 'CompletableFuture<?> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.replaceAsync'
    package: microsoft.servicefabric.data.collections
  - uid: 9cdf14d0microsoft.servicefabric.data.utilities._async_enumeration21d24612
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: microsoft.servicefabric.data.utilities._async_enumeration
        name: AsyncEnumeration
        fullName: microsoft.servicefabric.data.utilities.AsyncEnumeration
        href: microsoft.servicefabric.data.utilities._async_enumeration.yml
      - name: <K>>
        fullName: <K>>
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.keysAsync*
    name: keysAsync
    nameWithType: 'ReliableHashMap<K,V>.keysAsync'
    fullName: 'CompletableFuture<AsyncEnumeration<K>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.keysAsync'
    package: microsoft.servicefabric.data.collections
  - uid: 9cdf14d0microsoft.servicefabric.data.utilities._async_enumeratione521727f
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: microsoft.servicefabric.data.utilities._async_enumeration
        name: AsyncEnumeration
        fullName: microsoft.servicefabric.data.utilities.AsyncEnumeration
        href: microsoft.servicefabric.data.utilities._async_enumeration.yml
      - name: <V>>
        fullName: <V>>
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.elementsAsync*
    name: elementsAsync
    nameWithType: 'ReliableHashMap<K,V>.elementsAsync'
    fullName: 'CompletableFuture<AsyncEnumeration<V>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.elementsAsync'
    package: microsoft.servicefabric.data.collections
  - uid: 9cdf14d0microsoft.servicefabric.data.utilities._async_enumeration78504a52microsoft.servicefabric.data.utilities._key_value_pair7b670ebd
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: microsoft.servicefabric.data.utilities._async_enumeration
        name: AsyncEnumeration
        fullName: microsoft.servicefabric.data.utilities.AsyncEnumeration
        href: microsoft.servicefabric.data.utilities._async_enumeration.yml
      - name: <
        fullName: <
      - uid: microsoft.servicefabric.data.utilities._key_value_pair
        name: KeyValuePair
        fullName: microsoft.servicefabric.data.utilities.KeyValuePair
        href: microsoft.servicefabric.data.utilities._key_value_pair.yml
      - name: '<K, V>>>'
        fullName: '<K, V>>>'
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.keyValuesAsync*
    name: keyValuesAsync
    nameWithType: 'ReliableHashMap<K,V>.keyValuesAsync'
    fullName: 'CompletableFuture<AsyncEnumeration<KeyValuePair<K, V>>> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.keyValuesAsync'
    package: microsoft.servicefabric.data.collections
  - uid: 534e89dc
    spec.java:
      - name: 'BiFunction<? super K, ? super V, ? extends V>'
        fullName: 'BiFunction<? super K, ? super V, ? extends V>'
  - uid: d9602408
    spec.java:
      - name: CompletableFuture<V>
        fullName: CompletableFuture<V>
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.computeAsync*
    name: computeAsync
    nameWithType: 'ReliableHashMap<K,V>.computeAsync'
    fullName: 'CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeAsync'
    package: microsoft.servicefabric.data.collections
  - uid: 31e11ead
    spec.java:
      - name: 'Function<? super K, ? extends V>'
        fullName: 'Function<? super K, ? extends V>'
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.computeIfAbsent*
    name: computeIfAbsent
    nameWithType: 'ReliableHashMap<K,V>.computeIfAbsent'
    fullName: 'CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeIfAbsent'
    package: microsoft.servicefabric.data.collections
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.computeIfPresent*
    name: computeIfPresent
    nameWithType: 'ReliableHashMap<K,V>.computeIfPresent'
    fullName: 'CompletableFuture<V> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.computeIfPresent'
    package: microsoft.servicefabric.data.collections
  - uid: 7e53ac82
    spec.java:
      - name: CompletableFuture<Boolean>
        fullName: CompletableFuture<Boolean>
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.removeAsync*
    name: removeAsync
    nameWithType: 'ReliableHashMap<K,V>.removeAsync'
    fullName: 'CompletableFuture<Boolean> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.removeAsync'
    package: microsoft.servicefabric.data.collections
  - uid: db03ee24
    spec.java:
      - name: CompletableFuture<Void>
        fullName: CompletableFuture<Void>
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.putIfAbsentAsync*
    name: putIfAbsentAsync
    nameWithType: 'ReliableHashMap<K,V>.putIfAbsentAsync'
    fullName: 'CompletableFuture<Void> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.putIfAbsentAsync'
    package: microsoft.servicefabric.data.collections
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.containsKeyAsync*
    name: containsKeyAsync
    nameWithType: 'ReliableHashMap<K,V>.containsKeyAsync'
    fullName: 'CompletableFuture<Boolean> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.containsKeyAsync'
    package: microsoft.servicefabric.data.collections
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.size*
    name: size
    nameWithType: 'ReliableHashMap<K,V>.size'
    fullName: 'long microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.size'
    package: microsoft.servicefabric.data.collections
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.clearAsync*
    name: clearAsync
    nameWithType: 'ReliableHashMap<K,V>.clearAsync'
    fullName: 'CompletableFuture<Void> microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.clearAsync'
    package: microsoft.servicefabric.data.collections
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.getCount*
    name: getCount
    nameWithType: 'ReliableHashMap<K,V>.getCount'
    fullName: 'long microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.getCount'
    package: microsoft.servicefabric.data.collections
  - uid: microsoft.servicefabric.data.collections._reliable_hash_map.close*
    name: close
    nameWithType: 'ReliableHashMap<K,V>.close'
    fullName: 'void microsoft.servicefabric.data.collections.ReliableHashMap<K extends String, V>.close'
    package: microsoft.servicefabric.data.collections
  - uid: microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.freeTStore(long)
  - uid: 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeContainsKeyAsync(long,long,String,LockMode,long,int,CancellationToken)'
  - uid: 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeEnumeratorAsync(long,long,int)'
  - uid: 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeGetAsync(long,long,String,long,int,CancellationToken)'
  - uid: 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeGetAsync2(long,long,String,long,int,CancellationToken)'
  - uid: microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeGetCount(long)
  - uid: 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeKeyEnumeratorAsync(long,long,int)'
  - uid: 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativePutAsync(long,long,String,byte [],int,long,int,int,CancellationToken)'
  - uid: 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativePutAsync(long,long,String,ByteBuffer,int,long,int,int,CancellationToken)'
  - uid: 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativePutIfAbsentAsync(long,long,String,byte [],int,long,int,int,CancellationToken)'
  - uid: 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativePutIfAbsentAsync(long,long,String,ByteBuffer,int,long,int,int,CancellationToken)'
  - uid: 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeRemoveAsync(long,long,String,long,int,CancellationToken)'
  - uid: 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeUpdateAsync(long,long,String,byte [],int,long,int,int,CancellationToken)'
  - uid: 'microsoft.servicefabric.data.collections._reliable_collections_native_a_p_is.nativeUpdateAsync(long,long,String,ByteBuffer,int,long,int,int,CancellationToken)'
  - uid: microsoft.servicefabric.data.collections._reliable_collection
    parent: microsoft.servicefabric.data.collections
    href: microsoft.servicefabric.data.collections._reliable_collection.yml
    name: ReliableCollection
    nameWithType: ReliableCollection
    fullName: microsoft.servicefabric.data.collections.ReliableCollection
    type: Interface
    summary: <p>Definiert Methoden zum Bearbeiten von zuverlässigen Sammlungen. </p>
    syntax:
      content: public interface ReliableCollection extends ReliableState
  - uid: microsoft.servicefabric.data._reliable_state.getName()
    parent: microsoft.servicefabric.data._reliable_state
    href: microsoft.servicefabric.data._reliable_state.yml
    name: getName()
    nameWithType: ReliableState.getName()
    fullName: URI microsoft.servicefabric.data.ReliableState.getName()
    type: Method
    summary: |-
      <p>Ruft einen Wert, der angibt, der eindeutige Name für <xref uid="microsoft.servicefabric.data._reliable_state" data-throw-if-not-resolved="false">ReliableState</xref></p>
      <p></p>
    syntax:
      content: public URI getName()
      return:
        type: '62304784'
        description: <p>Der Name des der <xref uid="microsoft.servicefabric.data._reliable_state" data-throw-if-not-resolved="false">ReliableState</xref> Instanz. </p>
  - uid: microsoft.servicefabric.data._transaction
    parent: microsoft.servicefabric.data
    href: microsoft.servicefabric.data._transaction.yml
    name: Transaction
    nameWithType: Transaction
    fullName: microsoft.servicefabric.data.Transaction
    type: Interface
    syntax:
      content: public interface Transaction
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p>Ein <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">CancellationToken</xref> wird verwendet, um die Benachrichtigung verteilt wird, dass Vorgänge abgebrochen werden sollen. Sie erstellen ein Abbruchtoken, das durch die Instanziierung einer <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> -Objekt, das Abbruchtoken verwaltet entnommen seine <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken() </xref> Methode. Übergeben Sie dann das Abbruchtoken, das auf eine beliebige Anzahl von Vorgängen, die Nachricht vom Abbruch erhalten soll. Das Token kann nicht verwendet werden, um den Abbruch zu initiieren. Wenn das besitzende Objekt aufruft <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, auf das Abbruchtoken, das die abgebrochene Eigenschaft festgelegt ist auf "true". Die Objekte, die die Benachrichtigung empfangen können Antworten Verfolgungsinformationen geeignet ist. </p>'
    syntax:
      content: public class CancellationToken
  - uid: microsoft.servicefabric.data._conditional_value
    parent: microsoft.servicefabric.data
    href: microsoft.servicefabric.data._conditional_value.yml
    name: ConditionalValue<TValue>
    nameWithType: ConditionalValue<TValue>
    fullName: microsoft.servicefabric.data.ConditionalValue<TValue>
    type: Class
    summary: |-
      <p>Ergebnis-Klasse zurückgegebene DistributedCollections-APIs, die möglicherweise möglicherweise keinen Wert zurück.</p>
      <p></p>
    syntax:
      content: public class ConditionalValue<TValue>
      typeParameters:
        - type: 649a7377
          description: '<p>Wert, der das Ergebnis mit den zu initialisieren. </p>'
  - uid: microsoft.servicefabric.data.utilities._async_enumeration
    parent: microsoft.servicefabric.data.utilities
    href: microsoft.servicefabric.data.utilities._async_enumeration.yml
    name: AsyncEnumeration<E>
    nameWithType: AsyncEnumeration<E>
    fullName: microsoft.servicefabric.data.utilities.AsyncEnumeration<E>
    type: Interface
    summary: |-
      <p>Asynchrone enumerator</p>
      <p></p>
    syntax:
      content: public interface AsyncEnumeration<E>
      typeParameters:
        - type: 0ca03e3a
          description: <p>Der Typ des Elements aufgelistet werden. </p>
  - uid: microsoft.servicefabric.data.utilities._key_value_pair
    parent: microsoft.servicefabric.data.utilities
    href: microsoft.servicefabric.data.utilities._key_value_pair.yml
    name: 'KeyValuePair<K,V>'
    nameWithType: 'KeyValuePair<K,V>'
    fullName: 'microsoft.servicefabric.data.utilities.KeyValuePair<K,V>'
    type: Class
    summary: |-
      <p>Ein paar verwalten, einen Schlüssel und Wert.</p>
      <p></p>
    syntax:
      content: 'public class KeyValuePair<K extends String,V>'
      typeParameters:
        - type: a1c6f3a5
          description: <p>Gibt den Typ des Schlüssels </p>
        - type: 0a560652
          description: <p>Gibt den Typ des Werts </p>
  - uid: microsoft.servicefabric.data.collections._lock_mode
    parent: microsoft.servicefabric.data.collections
    href: microsoft.servicefabric.data.collections._lock_mode.yml
    name: LockMode
    nameWithType: LockMode
    fullName: microsoft.servicefabric.data.collections.LockMode
    type: Enum
    summary: '<p>Gibt an, wie zuverlässig Sammlungen sperrt Ressourcen, die bestimmt, wie die Ressourcen von gleichzeitigen Transaktionen zugegriffen werden können. </p>'
    syntax:
      content: public enum LockMode
  - uid: microsoft.servicefabric.data.collections._reliable_collection.clearAsync()
    parent: microsoft.servicefabric.data.collections._reliable_collection
    href: microsoft.servicefabric.data.collections._reliable_collection.yml
    name: clearAsync()
    nameWithType: ReliableCollection.clearAsync()
    fullName: CompletableFuture<Void> microsoft.servicefabric.data.collections.ReliableCollection.clearAsync()
    type: Method
    summary: '<p>Entfernt alle Statusangaben aus der <xref uid="microsoft.servicefabric.data.collections._reliable_collection" data-throw-if-not-resolved="false">ReliableCollection</xref>, einschließlich repliziert und Speicher beibehalten. </p>'
    syntax:
      content: public CompletableFuture<Void> clearAsync()
      return:
        type: db03ee24
        description: '<p>Ein completable Future, die den asynchronen Löschvorgang darstellt. </p>'
  - uid: microsoft.servicefabric.data.collections._reliable_collection.getCount()
    parent: microsoft.servicefabric.data.collections._reliable_collection
    href: microsoft.servicefabric.data.collections._reliable_collection.yml
    name: getCount()
    nameWithType: ReliableCollection.getCount()
    fullName: long microsoft.servicefabric.data.collections.ReliableCollection.getCount()
    type: Method
    summary: |-
      <p>Ruft die Anzahl der Elemente in der <xref uid="microsoft.servicefabric.data.collections._reliable_collection" data-throw-if-not-resolved="false">ReliableCollection</xref></p>
      <p></p>
    syntax:
      content: public long getCount()
      return:
        type: 0364520f
        description: <p>Die Anzahl der Elemente. </p>