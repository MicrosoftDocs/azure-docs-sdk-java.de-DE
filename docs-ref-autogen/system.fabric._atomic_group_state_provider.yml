### YamlMime:ManagedReference
items:
  - uid: system.fabric._atomic_group_state_provider
    id: _atomic_group_state_provider
    parent: system.fabric
    href: system.fabric._atomic_group_state_provider.yml
    langs:
      - java
    name: AtomicGroupStateProvider
    nameWithType: AtomicGroupStateProvider
    fullName: system.fabric.AtomicGroupStateProvider
    type: Interface
    source:
      remote:
        path: src/prod/src/java/system.fabric/src/system/fabric/AtomicGroupStateProvider.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/AtomicGroupStateProvider.java
      startLine: 7
    package: system.fabric
    syntax:
      content: public interface AtomicGroupStateProvider extends StateProvider
    inheritedMembers:
      - system.fabric._state_provider.getCopyContext()
      - 'system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)'
      - system.fabric._state_provider.getLastCommittedSequenceNumber()
      - system.fabric._state_provider.onDataLossAsync(CancellationToken)
      - 'system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)'
references:
  - uid: system.fabric._state_provider.getCopyContext()
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    name: getCopyContext()
    nameWithType: StateProvider.getCopyContext()
    fullName: OperationDataStream system.fabric.StateProvider.getCopyContext()
    type: Method
    summary: "<p><span data-ttu-id=\"23647-101\">Kontext auf einem sekundären Replikat erhält, nachdem es erstellt und geöffnet, um den Kontext mit dem primären Replikat zu senden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-101\">Obtains context on a Secondary replica after it is created and opened to send context to the Primary replica.</span></span></p>\n<p><span data-ttu-id=\"23647-102\">\r\n\r\n  <b>Hinweise:</b>das primäre Replikat analysiert den Kontext und zurücksendet Status über <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState (SequenceNumber, OperationDataStream)</xref> .</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-102\">\r\n\r\n  <b>Remarks:</b>The Primary replica analyzes the context and sends back state via <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> .</span></span> <span data-ttu-id=\"23647-103\"><xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> für neu erstellte im Leerlauf sekundären Replikate aufgerufen wird, und bietet einen Mechanismus zum asynchron eine bidirektionale Konversation mit dem primären Replikat hergestellt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-103\"><xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> is called on newly created, idle Secondary replicas and provides a mechanism to asynchronously establish a bidirectional conversation with the Primary replica.</span></span> <span data-ttu-id=\"23647-104\">Das sekundäre Replikat sendet <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> Objekte, die mit dem das primäre Replikat den Status des Sammelns von Kontext auf dem sekundären Replikat bestimmen kann.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-104\">The Secondary replica sends <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> objects with which the Primary replica can determine the progress of collecting context on the Secondary replica.</span></span> <span data-ttu-id=\"23647-105\">Das primäre Replikat sendet seinerseits den erforderlichen Zustand zurück.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-105\">The Primary replica responds by sending the required state back.</span></span> <span data-ttu-id=\"23647-106\">Finden Sie unter <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState (SequenceNumber, OperationDataStream)</xref> an das primäre Replikat für die andere Hälfte des Austausches.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-106\">See <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> at the Primary replica for the other half of the exchange.</span></span> <span data-ttu-id=\"23647-107\">Für InMemory-Dienste die <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> Methode wird nicht aufgerufen, da der Status der sekundären Replikate bekannt ist (sie sind leer und benötigen alle Status).</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-107\">For in-memory services, the <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> method is not called, as the state of the Secondary replicas is known (they are empty and will require all of the state).</span></span> </p>"
    syntax:
      content: public OperationDataStream getCopyContext()
      return:
        type: system.fabric._operation_data_stream
        description: <p><span data-ttu-id="23647-108">Gibt <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref>.</span><span class="sxs-lookup"><span data-stu-id="23647-108">Returns <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref>.</span></span> </p>
  - uid: 'system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)'
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    name: 'getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    nameWithType: 'StateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    fullName: 'OperationDataStream system.fabric.StateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
    type: Method
    summary: "<p><span data-ttu-id=\"23647-109\">Ruft die Status für ein primäres Replikat, das erforderlich sind, um ein sekundäres Replikat zu erstellen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-109\">Obtains state on a Primary replica that is required to build a Secondary replica.</span></span></p>\n<p><span data-ttu-id=\"23647-110\">\r\n\r\n  <b>Hinweise:</b>genauso <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> ermöglicht das sekundäre Replikat das primäre Replikat über Kontext an ein <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>, <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState (SequenceNumber, OperationDataStream)</xref> ermöglicht das primäre Replikat antwortet ein <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-110\">\r\n\r\n  <b>Remarks:</b>Just as <xref uid=\"system.fabric._state_provider.getCopyContext()\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyContext()</xref> enables the Secondary replica to send context to the Primary replica via an <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>, <xref uid=\"system.fabric._state_provider.getCopyState(SequenceNumber,OperationDataStream)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> enables the Primary replica to respond with an <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref>.</span></span> <span data-ttu-id=\"23647-111\">Der Datenstrom enthält Objekte, die an das sekundäre Replikat über übermittelt werden die <xref uid=\"system.fabric._state_replicator.getCopyStream()\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#getCopyStream()</xref> Methode der <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> Klasse.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-111\">The stream contains objects that are delivered to the Secondary replica via the <xref uid=\"system.fabric._state_replicator.getCopyStream()\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#getCopyStream()</xref> method of the <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> class.</span></span> <span data-ttu-id=\"23647-112\">Implementieren Sie die Objekte <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> und die angegebenen Daten enthalten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-112\">The objects implement <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> and contain the specified data.</span></span> <span data-ttu-id=\"23647-113\">Wenn das primäre Replikat dieser Aufruf empfängt, sollte er erstellen und Zurückgeben einer anderen <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref> enthält <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-113\">When the Primary replica receives this call, it should create and return another <xref uid=\"system.fabric._operation_data_stream\" data-throw-if-not-resolved=\"false\">system.fabric.OperationDataStream</xref> that contains <xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref>.</span></span> <span data-ttu-id=\"23647-114\"><xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> des datensynchronisierungsstatus darstellt, die das sekundäre Replikat</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-114\"><xref uid=\"system.fabric._operation_data\" data-throw-if-not-resolved=\"false\">system.fabric.OperationData</xref> represents the data/state that the Secondary replica</span></span> </p>"
    syntax:
      content: 'public OperationDataStream getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)'
      parameters:
        - id: upToSequenceNumber
          type: system.fabric._sequence_number
          description: '<p><span data-ttu-id="23647-115">Die maximale letzte Sequenznummer (LSN), die im Stream über Kopiervorgang platziert werden, sollten die <xref uid="system.fabric._state_replicator.getCopyStream()" data-throw-if-not-resolved="false">system.fabric.StateReplicator#getCopyStream()</xref> Methode.</span><span class="sxs-lookup"><span data-stu-id="23647-115">The maximum last sequence number (LSN) that should be placed in the copy stream via the <xref uid="system.fabric._state_replicator.getCopyStream()" data-throw-if-not-resolved="false">system.fabric.StateReplicator#getCopyStream()</xref> method.</span></span> <span data-ttu-id="23647-116">LSNs, die größer als diese Zahl werden an das sekundäre Replikat als Teil der replikationsdatenstrom über übermittelt die <xref uid="system.fabric._state_replicator.getReplicationStream()" data-throw-if-not-resolved="false">system.fabric.StateReplicator#getReplicationStream()</xref> Methode.</span><span class="sxs-lookup"><span data-stu-id="23647-116">LSNs greater than this number are delivered to the Secondary replica as a part of the replication stream via the <xref uid="system.fabric._state_replicator.getReplicationStream()" data-throw-if-not-resolved="false">system.fabric.StateReplicator#getReplicationStream()</xref> method.</span></span> </p>'
        - id: copyContext
          type: system.fabric._operation_data_stream
          description: '<p><span data-ttu-id="23647-117">Ein <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref> , enthält die <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">system.fabric.OperationData</xref> Objekte, die vom sekundären Replikat erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="23647-117">An <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref> that contains the <xref uid="system.fabric._operation_data" data-throw-if-not-resolved="false">system.fabric.OperationData</xref> objects that are created by the Secondary replica.</span></span> <span data-ttu-id="23647-118">erfordert die Stand</span><span class="sxs-lookup"><span data-stu-id="23647-118">requires to catch up to the provided</span></span> </p>'
      return:
        type: system.fabric._operation_data_stream
        description: <p><span data-ttu-id="23647-119">Gibt <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref>.</span><span class="sxs-lookup"><span data-stu-id="23647-119">Returns <xref uid="system.fabric._operation_data_stream" data-throw-if-not-resolved="false">system.fabric.OperationDataStream</xref>.</span></span> </p>
  - uid: system.fabric._state_provider.getLastCommittedSequenceNumber()
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    name: getLastCommittedSequenceNumber()
    nameWithType: StateProvider.getLastCommittedSequenceNumber()
    fullName: long system.fabric.StateProvider.getLastCommittedSequenceNumber()
    type: Method
    summary: |-
      <p><span data-ttu-id="23647-120">Ruft die letzte Sequenznummer, die der Dienst ein Commit ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="23647-120">Obtains the last sequence number that the service has committed.</span></span></p>
      <p></p>
    syntax:
      content: public long getLastCommittedSequenceNumber()
      return:
        type: 0364520f
        description: <p><span data-ttu-id="23647-121">Long-Wert.</span><span class="sxs-lookup"><span data-stu-id="23647-121">Returns long.</span></span> </p>
  - uid: system.fabric._state_provider.onDataLossAsync(CancellationToken)
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    name: onDataLossAsync(CancellationToken cancellationToken)
    nameWithType: StateProvider.onDataLossAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Boolean> system.fabric.StateProvider.onDataLossAsync(CancellationToken cancellationToken)
    type: Method
    summary: "<p><span data-ttu-id=\"23647-122\">Gibt an, dass ein schreibquorums Replikate in dieser Replikatsatz verloren gegangen ist und daher Datenverlust aufgetreten sind.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-122\">Indicates that a write quorum of replicas in this replica set has been lost, and that therefore data loss might have occurred.</span></span> <span data-ttu-id=\"23647-123\">Die Replikatgruppe besteht aus der Mehrheit der Replikate, die das primäre Replikat enthält.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-123\">The replica set consists of a majority of replicas, which includes the Primary replica.</span></span></p>\n<p><span data-ttu-id=\"23647-124\">\r\n\r\n  <b>Beschreibung:</b>bei die Service Fabric-Laufzeit einen Fehler des ein Quorum der Replikate, der das primäre Replikat enthält berücksichtigt, wählt ein neues primäres Replikat und sofort ruft diese Methode auf dem neuen primären Replikat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-124\">\r\n\r\n  <b>Remarks:</b>When the Service Fabric runtime observes the failure of a quorum of replicas, which includes the Primary replica, it elects a new Primary replica and immediately calls this method on the new Primary replica.</span></span> <span data-ttu-id=\"23647-125\">Ein primäres Replikat, das eines möglichen Datenverlusts informiert ist die Möglichkeit, den Zustand aus einer externen Datenquelle wiederherstellen oder kann weiterhin mit dem Status ausgeführt wird, die derzeit.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-125\">A Primary replica that is informed of possible data loss can choose to restore its state from some external data source or can continue to run with the state that it currently has.</span></span> <span data-ttu-id=\"23647-126\">Wenn der Dienst mit seinem aktuellen Zustand ausgeführt werden weiterhin, sollte es \"false\" von dieser Methode zurückgeben, der gibt an, dass keine Änderung vorgenommen wurde.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-126\">If the service continues to run with its current state, it should return false from this method, which indicates that no state change has been made.</span></span> <span data-ttu-id=\"23647-127\">Wenn es wiederhergestellt oder geändert Datenbankzustands, z. B. unvollständige Arbeit ein Rollback sollte \"true\" zurückgeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-127\">If it has restored or altered its state, such as rolling back incomplete work, it should return true.</span></span> <span data-ttu-id=\"23647-128\">Wenn \"true\" zurückgegeben wird, muss der Status in den anderen Replikaten angenommen werden, falsch zu sein.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-128\">If true is returned, then the state in other replicas must be assumed to be incorrect.</span></span> <span data-ttu-id=\"23647-129\">Aus diesem Grund die Service Fabric-Laufzeit die anderen Replikaten in der Replikatgruppe entfernt und erneut erstellt werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-129\">Therefore, the Service Fabric runtime removes the other replicas from the replica set and recreates them.</span></span> </p>"
    syntax:
      content: public CompletableFuture<Boolean> onDataLossAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"23647-130\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-130\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 7e53ac82
        description: '<p><span data-ttu-id="23647-131">Gibt <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> des Typs <xref uid="" data-throw-if-not-resolved="false">java.lang.Boolean</xref>, Wert, der angibt, ob die State-Anbieter als Teil der Verarbeitung dieser benachrichtigungs seinen Status geändert wurde</span><span class="sxs-lookup"><span data-stu-id="23647-131">Returns <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> of type <xref uid="" data-throw-if-not-resolved="false">java.lang.Boolean</xref>, that indicates whether the state provider as part of processing this notification has changed its state</span></span> </p>'
  - uid: 'system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)'
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    name: 'updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    nameWithType: 'StateProvider.updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> system.fabric.StateProvider.updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    type: Method
    summary: "<p><span data-ttu-id=\"23647-132\">Ein Replikat zeigt an, dass die Konfiguration einer Replikatgruppe aufgrund einer Änderung der geändert oder ändern, mit dem primären Replikat versucht.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-132\">Indicates to a replica that the configuration of a replica set has changed due to a change or attempted change to the Primary replica.</span></span> <span data-ttu-id=\"23647-133\">Die Änderung tritt aufgrund eines Fehlers oder Lastenausgleich des vorherigen primären Replikats.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-133\">The change occurs due to failure or load balancing of the previous Primary replica.</span></span> <span data-ttu-id=\"23647-134\"><xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> Änderungen fungieren als ein Hindernis durch Segmentieren Vorgänge in die genaue Konfiguration Zeiträume, in dem sie von einem bestimmten primären Replikat gesendet wurden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-134\"><xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoch</xref> changes act as a barrier by segmenting operations into the exact configuration periods in which they were sent by a specific Primary replica.</span></span></p>\n<p><span data-ttu-id=\"23647-135\">\r\n\r\n  <b>Hinweise:</b>die Informationen in den <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync (Epoche SequenceNumber, CancellationToken)</xref> -Methode ermöglicht dem Dienst um einen Vektor Status aufrecht eine Liste der einzelnen Epoche ist die das Replikat empfangen wurde, und die maximale LSN, die sie enthalten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-135\">\r\n\r\n  <b>Remarks:</b>The information in the <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync(Epoch, SequenceNumber, CancellationToken)</xref> method enables the service to maintain a progress vector, which is a list of each epoch that the replica has received, and the maximum LSN that they contained.</span></span> <span data-ttu-id=\"23647-136\">Die Bearbeitung Vektordaten werden zusammen mit den aktuellen angewendeten maximale LSN eignet sich für ein sekundäres Replikat während des Kopiervorgangs zu senden, um den Status des Replikats zu beschreiben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-136\">The progress vector data along with the current applied maximum LSN is useful for a Secondary replica to send during the copy operation to describe the state of the replica.</span></span> <span data-ttu-id=\"23647-137\">Vergleichen von Fortschritt Vektoren, die während des Kopiervorgangs von sekundären Replikaten empfangen werden kann primäre Replikaten zu bestimmen, ob das sekundäre Replikat auf dem neuesten Stand ist, welchen Status an das sekundäre Replikat gesendet werden muss und gibt an, ob das sekundäre Replikat \"false\" Fortschritt erzielt hat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-137\">Comparing progress vectors that are received from Secondary replicas during the copy operation enables Primary replicas to determine whether the Secondary replica is up-to-date, what state must be sent to the Secondary replica, and whether the Secondary replica has made false progress.</span></span> <span data-ttu-id=\"23647-138\">\"False\" Status bedeutet, dass ein sekundäres Replikat meldet wurde eine LSN in einer vorherigen Epoche größer als die LSN, die das primäre Replikat in seinen Fortschritt Vektor verfügt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-138\">False progress means that a secondary replica reports an LSN in a previous epoch was greater than the LSN that the Primary replica has in its progress vector.</span></span> </p>"
    syntax:
      content: 'public CompletableFuture<?> updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
      parameters:
        - id: epoch
          type: system.fabric._epoch
          description: <p><span data-ttu-id="23647-139">Die neue <xref uid="system.fabric._epoch" data-throw-if-not-resolved="false">system.fabric.Epoch</xref>.</span><span class="sxs-lookup"><span data-stu-id="23647-139">The new <xref uid="system.fabric._epoch" data-throw-if-not-resolved="false">system.fabric.Epoch</xref>.</span></span> </p>
        - id: previousEpochLastSequenceNumber
          type: system.fabric._sequence_number
          description: <p><span data-ttu-id="23647-140">Die maximale Sequenznummer (LSN) in der vorherigen Epoche.</span><span class="sxs-lookup"><span data-stu-id="23647-140">The maximum sequence number (LSN) in the previous epoch.</span></span> </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p><span data-ttu-id=\"23647-141\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"23647-141\">\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation.</span></span> </p>"
      return:
        type: 16409f84
        description: <p><span data-ttu-id="23647-142">Gibt <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>.</span><span class="sxs-lookup"><span data-stu-id="23647-142">Returns <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>.</span></span> </p>
  - uid: system.fabric._state_provider
    parent: system.fabric
    href: system.fabric._state_provider.yml
    name: StateProvider
    nameWithType: StateProvider
    fullName: system.fabric.StateProvider
    type: Interface
    summary: '<p><span data-ttu-id="23647-143">Definiert das Verhalten, das ein Dienst implementieren muss, um die Interaktion mit der <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>.</span><span class="sxs-lookup"><span data-stu-id="23647-143">Defines the behavior that a service must implement to interact with the <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">FabricReplicator</xref>.</span></span> </p>'
    syntax:
      content: public interface StateProvider