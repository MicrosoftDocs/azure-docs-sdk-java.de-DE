### YamlMime:ManagedReference
items:
  - uid: com.microsoft.applicationinsights.extensibility._telemetry_processor
    id: _telemetry_processor
    parent: com.microsoft.applicationinsights.extensibility
    children:
      - com.microsoft.applicationinsights.extensibility._telemetry_processor.process(Telemetry)
    href: com.microsoft.applicationinsights.extensibility._telemetry_processor.yml
    langs:
      - java
    name: TelemetryProcessor
    nameWithType: TelemetryProcessor
    fullName: com.microsoft.applicationinsights.extensibility.TelemetryProcessor
    type: Interface
    source:
      remote: &ref_0
        path: core/src/main/java/com/microsoft/applicationinsights/extensibility/TelemetryProcessor.java
        branch: master
        repo: 'https://github.com/Microsoft/ApplicationInsights-Java'
      path: core/src/main/java/com/microsoft/applicationinsights/extensibility/TelemetryProcessor.java
      startLine: 51
    package: com.microsoft.applicationinsights.extensibility
    summary: "<p>Ruft die Methode eine <ref refid=\"\" kindref=\"compound\">Telemetrie</ref> -Instanz, die gesendet werden kann. Dies ist die Möglichkeit, genehmigen oder ablehnen. Rückgabe von \"false\" bedeutet, dass die Telemetrie nicht gesendet werden, wird während \"True\" bedeutet, dass die Genehmigung.</p>\n<p>Die Telemetrie möglicherweise andere Filter durchlaufen, obwohl dessen senden, die verweigert, möglicherweise.</p>\n<p>Dieser Prozessor aktivieren, Sie es in der ApplicationInsights.xml wie folgt hinzufügen müssen:</p>\n<p>\r\n  <preformatted>\r\n    <programlisting>\r\n      <codeline>\r\n        <highlight class=\"normal\">&lt;TelemetryProcessors&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;CustomProcessors&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;Prozessor<sp></sp>type=\"full.path.to.Filter\"&gt; </highlight> \r\n      </codeline> \r\n      <codeline> \r\n        <highlight class=\"normal\"> \r\n          <sp> </sp> \r\n          <sp> </sp> \r\n          <sp> </sp> \r\n          <sp> </sp> \r\n          <sp> </sp> \r\n          <sp> </sp> \r\n          <sp> </sp> \r\n          <sp> </sp> \r\n          <sp> </sp> \r\n          <sp> </sp> \r\n          <sp> </sp> \r\n          <sp> </sp> &lt;Hinzufügen<sp></sp>Name = \"Eigenschaft\"<sp></sp>Wert = \"StringValue\" /&gt; </highlight> \r\n      </codeline> \r\n      <codeline> \r\n        <highlight class=\"normal\"> \r\n          <sp> </sp> \r\n          <sp> </sp> \r\n          <sp> </sp> \r\n          <sp> </sp> \r\n          <sp> </sp> \r\n          <sp> </sp> \r\n          <sp> </sp> \r\n          <sp> </sp> &lt;/Processor&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>\r\n          <sp></sp>&lt;/CustomProcessors&gt;</highlight>\r\n      </codeline>\r\n      <codeline>\r\n        <highlight class=\"normal\">&lt;/TelemetryProcessors&gt; </highlight> \r\n      </codeline> \r\n    </programlisting>*</preformatted>\r\n</p>\n<p>Beachten Sie, dass die Klasse definiert eine Eigenschaft mit dem Namen \"Property\", der zu konfiguriert ist. Jede Eigenschaft, die Sie konfigurieren möchten muss eine öffentliche 'SetX'-Methode, z. B. \"SetProperty\" in diesem Beispiel verfügen <bold>'SetX'-Methoden ausgelöste Ausnahmen werden abgefangen werden, durch das Framework, die den Filter ignoriert werden kann</bold></p>\n<p>Gupele erstellt am 7/26/2016. </p>"
    syntax:
      content: public interface TelemetryProcessor
  - uid: com.microsoft.applicationinsights.extensibility._telemetry_processor.process(Telemetry)
    id: process(Telemetry)
    parent: com.microsoft.applicationinsights.extensibility._telemetry_processor
    href: com.microsoft.applicationinsights.extensibility._telemetry_processor.yml
    langs:
      - java
    name: process(Telemetry telemetry)
    nameWithType: TelemetryProcessor.process(Telemetry telemetry)
    fullName: boolean com.microsoft.applicationinsights.extensibility.TelemetryProcessor.process(Telemetry telemetry)
    overload: com.microsoft.applicationinsights.extensibility._telemetry_processor.process*
    type: Method
    source:
      remote: *ref_0
      path: core/src/main/java/com/microsoft/applicationinsights/extensibility/TelemetryProcessor.java
      startLine: 52
    package: com.microsoft.applicationinsights.extensibility
    syntax:
      content: public boolean process(Telemetry telemetry)
      parameters:
        - id: telemetry
          type: com.microsoft.applicationinsights.telemetry._telemetry
      return:
        type: 4fc6e284
references:
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.applicationinsights.extensibility._telemetry_processor.process*
    name: process
    nameWithType: TelemetryProcessor.process
    fullName: boolean com.microsoft.applicationinsights.extensibility.TelemetryProcessor.process
    package: com.microsoft.applicationinsights.extensibility
  - uid: com.microsoft.applicationinsights.telemetry._telemetry
    parent: com.microsoft.applicationinsights.telemetry
    href: com.microsoft.applicationinsights.telemetry._telemetry.yml
    name: Telemetry
    nameWithType: Telemetry
    fullName: com.microsoft.applicationinsights.telemetry.Telemetry
    type: Interface
    summary: <p>Die Basis Telemetrie-Typ-Schnittstelle für das Application Insights. </p>
    syntax:
      content: public interface Telemetry extends JsonSerializable