### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.eventprocessorhost._partition_context
    id: _partition_context
    parent: com.microsoft.azure.eventprocessorhost
    children:
      - com.microsoft.azure.eventprocessorhost._partition_context.checkpoint()
      - com.microsoft.azure.eventprocessorhost._partition_context.checkpoint(EventData)
      - com.microsoft.azure.eventprocessorhost._partition_context.getConsumerGroupName()
      - com.microsoft.azure.eventprocessorhost._partition_context.getEventHubPath()
      - com.microsoft.azure.eventprocessorhost._partition_context.getOwner()
      - com.microsoft.azure.eventprocessorhost._partition_context.getPartitionId()
      - com.microsoft.azure.eventprocessorhost._partition_context.getRuntimeInformation()
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    langs:
      - java
    name: PartitionContext
    nameWithType: PartitionContext
    fullName: com.microsoft.azure.eventprocessorhost.PartitionContext
    type: Class
    source:
      remote: &ref_0
        path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
        branch: master
        repo: 'https://github.com/Azure/azure-event-hubs-java'
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
      startLine: 17
    package: com.microsoft.azure.eventprocessorhost
    syntax:
      content: public class PartitionContext
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.checkpoint()
    id: checkpoint()
    parent: com.microsoft.azure.eventprocessorhost._partition_context
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    langs:
      - java
    name: checkpoint()
    nameWithType: PartitionContext.checkpoint()
    fullName: void com.microsoft.azure.eventprocessorhost.PartitionContext.checkpoint()
    overload: com.microsoft.azure.eventprocessorhost._partition_context.checkpoint*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
      startLine: 147
    package: com.microsoft.azure.eventprocessorhost
    summary: <p><span data-ttu-id="9c9e3-101">Schreibt den aktuellen Offset und SequenceNumber auf den Prüfpunkt Store über die Checkpoint-Manager.</span><span class="sxs-lookup"><span data-stu-id="9c9e3-101">Writes the current offset and sequenceNumber to the checkpoint store via the checkpoint manager.</span></span> </p>
    syntax:
      content: public void checkpoint()
    exceptions:
      - type: 3c87bd19
        description: <p><span data-ttu-id="9c9e3-102">Wenn this.sequenceNumber kleiner als der letzte Wert des geprüften ist</span><span class="sxs-lookup"><span data-stu-id="9c9e3-102">If this.sequenceNumber is less than the last checkpointed value</span></span> </p>
      - type: f25e3dc2
      - type: 8256ba40
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.checkpoint(EventData)
    id: checkpoint(EventData)
    parent: com.microsoft.azure.eventprocessorhost._partition_context
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    langs:
      - java
    name: checkpoint(EventData event)
    nameWithType: PartitionContext.checkpoint(EventData event)
    fullName: void com.microsoft.azure.eventprocessorhost.PartitionContext.checkpoint(EventData event)
    overload: com.microsoft.azure.eventprocessorhost._partition_context.checkpoint*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
      startLine: 168
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p><span data-ttu-id="9c9e3-103">Speichert den Offset und SequenceNumber aus der angegebenen empfangenen EventData-Instanz, und klicken Sie dann diese Werte in den Prüfpunkt Store über die Checkpoint-Manager schreibt.</span><span class="sxs-lookup"><span data-stu-id="9c9e3-103">Stores the offset and sequenceNumber from the provided received EventData instance, then writes those values to the checkpoint store via the checkpoint manager.</span></span></p>
      <p></p>
    syntax:
      content: public void checkpoint(EventData event)
      parameters:
        - id: event
          type: com.microsoft.azure.eventhubs._event_data
          description: <p><span data-ttu-id="9c9e3-104">Eine empfangene EventData mit gültigen Offset und einer sequenceNumber</span><span class="sxs-lookup"><span data-stu-id="9c9e3-104">A received EventData with valid offset and sequenceNumber</span></span> </p>
    exceptions:
      - type: 3c87bd19
        description: <p><span data-ttu-id="9c9e3-105">Wenn die SequenceNumber in das angegebene Ereignis kleiner als der letzte Wert des geprüften ist</span><span class="sxs-lookup"><span data-stu-id="9c9e3-105">If the sequenceNumber in the provided event is less than the last checkpointed value</span></span> </p>
      - type: f25e3dc2
      - type: 8256ba40
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getConsumerGroupName()
    id: getConsumerGroupName()
    parent: com.microsoft.azure.eventprocessorhost._partition_context
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    langs:
      - java
    name: getConsumerGroupName()
    nameWithType: PartitionContext.getConsumerGroupName()
    fullName: String com.microsoft.azure.eventprocessorhost.PartitionContext.getConsumerGroupName()
    overload: com.microsoft.azure.eventprocessorhost._partition_context.getConsumerGroupName*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
      startLine: 41
    package: com.microsoft.azure.eventprocessorhost
    syntax:
      content: public String getConsumerGroupName()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getEventHubPath()
    id: getEventHubPath()
    parent: com.microsoft.azure.eventprocessorhost._partition_context
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    langs:
      - java
    name: getEventHubPath()
    nameWithType: PartitionContext.getEventHubPath()
    fullName: String com.microsoft.azure.eventprocessorhost.PartitionContext.getEventHubPath()
    overload: com.microsoft.azure.eventprocessorhost._partition_context.getEventHubPath*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
      startLine: 46
    package: com.microsoft.azure.eventprocessorhost
    syntax:
      content: public String getEventHubPath()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getOwner()
    id: getOwner()
    parent: com.microsoft.azure.eventprocessorhost._partition_context
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    langs:
      - java
    name: getOwner()
    nameWithType: PartitionContext.getOwner()
    fullName: String com.microsoft.azure.eventprocessorhost.PartitionContext.getOwner()
    overload: com.microsoft.azure.eventprocessorhost._partition_context.getOwner*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
      startLine: 51
    package: com.microsoft.azure.eventprocessorhost
    syntax:
      content: public String getOwner()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getPartitionId()
    id: getPartitionId()
    parent: com.microsoft.azure.eventprocessorhost._partition_context
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    langs:
      - java
    name: getPartitionId()
    nameWithType: PartitionContext.getPartitionId()
    fullName: String com.microsoft.azure.eventprocessorhost.PartitionContext.getPartitionId()
    overload: com.microsoft.azure.eventprocessorhost._partition_context.getPartitionId*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
      startLine: 92
    package: com.microsoft.azure.eventprocessorhost
    syntax:
      content: public String getPartitionId()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getRuntimeInformation()
    id: getRuntimeInformation()
    parent: com.microsoft.azure.eventprocessorhost._partition_context
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    langs:
      - java
    name: getRuntimeInformation()
    nameWithType: PartitionContext.getRuntimeInformation()
    fullName: ReceiverRuntimeInformation com.microsoft.azure.eventprocessorhost.PartitionContext.getRuntimeInformation()
    overload: com.microsoft.azure.eventprocessorhost._partition_context.getRuntimeInformation*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/PartitionContext.java
      startLine: 56
    package: com.microsoft.azure.eventprocessorhost
    syntax:
      content: public ReceiverRuntimeInformation getRuntimeInformation()
      return:
        type: com.microsoft.azure.eventhubs._receiver_runtime_information
references:
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getConsumerGroupName*
    name: getConsumerGroupName
    nameWithType: PartitionContext.getConsumerGroupName
    fullName: String com.microsoft.azure.eventprocessorhost.PartitionContext.getConsumerGroupName
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getEventHubPath*
    name: getEventHubPath
    nameWithType: PartitionContext.getEventHubPath
    fullName: String com.microsoft.azure.eventprocessorhost.PartitionContext.getEventHubPath
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getOwner*
    name: getOwner
    nameWithType: PartitionContext.getOwner
    fullName: String com.microsoft.azure.eventprocessorhost.PartitionContext.getOwner
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getRuntimeInformation*
    name: getRuntimeInformation
    nameWithType: PartitionContext.getRuntimeInformation
    fullName: ReceiverRuntimeInformation com.microsoft.azure.eventprocessorhost.PartitionContext.getRuntimeInformation
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.getPartitionId*
    name: getPartitionId
    nameWithType: PartitionContext.getPartitionId
    fullName: String com.microsoft.azure.eventprocessorhost.PartitionContext.getPartitionId
    package: com.microsoft.azure.eventprocessorhost
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: f25e3dc2
    spec.java:
      - name: ExecutionException
        fullName: ExecutionException
  - uid: 8256ba40
    spec.java:
      - name: InterruptedException
        fullName: InterruptedException
  - uid: com.microsoft.azure.eventprocessorhost._partition_context.checkpoint*
    name: checkpoint
    nameWithType: PartitionContext.checkpoint
    fullName: void com.microsoft.azure.eventprocessorhost.PartitionContext.checkpoint
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    name: EventProcessorHost
    nameWithType: EventProcessorHost
    fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost
    type: Class
    syntax:
      content: public class EventProcessorHost
  - uid: com.microsoft.azure.eventprocessorhost._lease
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._lease.yml
    name: Lease
    nameWithType: Lease
    fullName: com.microsoft.azure.eventprocessorhost.Lease
    type: Class
    summary: "<p><span data-ttu-id=\"9c9e3-106\">\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> Klasse ist öffentlich, sodass, dass Sie fortgeschrittene Benutzer implementieren können ein <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c9e3-106\">\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> class is public so that advanced users can implement an <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>.</span></span> <span data-ttu-id=\"9c9e3-107\">Es sei denn, Sie implementieren <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> sollten keine Objekte dieser Klasse zu verarbeiten oder abgeleiteten Klassen direkt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c9e3-107\">Unless you are implementing <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> you should not have to deal with objects of this class or derived classes directly.</span></span> </p>\n\n<p><span data-ttu-id=\"9c9e3-108\">Bei der Implementierung einer <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> es möglicherweise erforderlich sein, leiten Sie von dieser Klasse ausführen, um weitere Informationen und IsExpired zu überschreiben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c9e3-108\">When implementing an <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref> it may be necessary to derive from this class to carry around more information and override isExpired.</span></span> <span data-ttu-id=\"9c9e3-109\">Die Datenfelder wurde verlassen haben anstelle von privaten geschützt werden, da sie ein breites Spektrum aufweisen der Getter und Setter (mit Ausnahme der PartitionId, das unveränderlich ist) die bieten einen gleichwertigen Zugriff.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c9e3-109\">The data fields have been left private instead of protected because they have a full set of getters and setters (except partitionId, which is immutable) which provide equivalent access.</span></span> <span data-ttu-id=\"9c9e3-110\">Wenn AzureBlobLease zu implementieren, z. B. gab es keine Notwendigkeit mehr Zugriff als der Getter und Setter bereitstellen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c9e3-110\">When implementing AzureBlobLease, for example, there was no need for more access than the getters and setters provide.</span></span> </p>\n<p><span data-ttu-id=\"9c9e3-111\">Beachten Sie, dass eine <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> Objekt enthält nur Informationen zu einer Partition Lease.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c9e3-111\">Note that a <xref uid=\"com.microsoft.azure.eventprocessorhost._lease\" data-throw-if-not-resolved=\"false\">Lease</xref> object just carries information about a partition lease.</span></span> <span data-ttu-id=\"9c9e3-112\">Die entsprechende Funktionalität zum Abrufen/erneuern/Freigabe eine Lease ist alles auf der <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c9e3-112\">The functionality to acquire/renew/release a lease is all on the <xref uid=\"com.microsoft.azure.eventprocessorhost._i_lease_manager\" data-throw-if-not-resolved=\"false\">ILeaseManager</xref>.</span></span> </p>"
    syntax:
      content: public class Lease
  - uid: com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    name: START_OF_STREAM
    nameWithType: PartitionReceiver.START_OF_STREAM
    fullName: final String com.microsoft.azure.eventhubs.PartitionReceiver.START_OF_STREAM
    type: Field
    summary: '<p><span data-ttu-id="9c9e3-113">Dies ist eine Konstante, die definiert, um den Beginn eines Datenstroms Partition im Event Hub darstellen.</span><span class="sxs-lookup"><span data-stu-id="9c9e3-113">This is a constant defined to represent the start of a partition stream in EventHub.</span></span> </p>'
    syntax:
      content: public static final String START_OF_STREAM= "-1"
      return:
        type: 3d93591e
  - uid: com.microsoft.azure.eventhubs._receiver_runtime_information
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._receiver_runtime_information.yml
    name: ReceiverRuntimeInformation
    nameWithType: ReceiverRuntimeInformation
    fullName: com.microsoft.azure.eventhubs.ReceiverRuntimeInformation
    type: Class
    summary: <p><span data-ttu-id="9c9e3-114">Repräsentiert die zeitliche Empfänger Laufzeitinformationen für eine <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>.</span><span class="sxs-lookup"><span data-stu-id="9c9e3-114">Represents the temporal receiver runtime information for a <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>.</span></span> <span data-ttu-id="9c9e3-115">Aktuelle empfangen <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> und <xref uid="com.microsoft.azure.eventhubs._receiver_runtime_information" data-throw-if-not-resolved="false">ReceiverRuntimeInformation</xref> Näherungswert für ausstehende Ereignisse finden (der noch nicht verarbeitet) verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="9c9e3-115">Current received <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> and <xref uid="com.microsoft.azure.eventhubs._receiver_runtime_information" data-throw-if-not-resolved="false">ReceiverRuntimeInformation</xref> can be used to find approximate value of pending events (which are not processed yet).</span></span> </p>
    syntax:
      content: public class ReceiverRuntimeInformation
  - uid: com.microsoft.azure.eventhubs._event_data
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._event_data.yml
    name: EventData
    nameWithType: EventData
    fullName: com.microsoft.azure.eventhubs.EventData
    type: Class
    summary: |-
      <p><span data-ttu-id="9c9e3-116">Die Datenstruktur, die das Ereignis wird gesendet an und Empfangen von EventHubs kapseln.</span><span class="sxs-lookup"><span data-stu-id="9c9e3-116">The data structure encapsulating the Event being sent-to and received-from EventHubs.</span></span> <span data-ttu-id="9c9e3-117">Jede Partition EventHubs visualisiert werden kann, als Datenstrom von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>.</span><span class="sxs-lookup"><span data-stu-id="9c9e3-117">Each EventHubs partition can be visualized as a Stream of <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>.</span></span> </p>
      <p><span data-ttu-id="9c9e3-118">Serialisieren eines empfangenen <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> mit AMQP-Abschnitten als ApplicationProperties (mit primitiven Java-Typen) und Daten der Abschnitt wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="9c9e3-118">Serializing a received <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> with AMQP sections other than ApplicationProperties (with primitive java types) and Data section is not supported.</span></span> </p>
      <p><span data-ttu-id="9c9e3-119">So sieht wie AMQP-Nachricht-Abschnitten zugeordnet <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>.</span><span class="sxs-lookup"><span data-stu-id="9c9e3-119">Here's how AMQP message sections map to <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>.</span></span> <span data-ttu-id="9c9e3-120">Hier wird der Verweis, der für AMQP 1.0-Spezifikation verwendet: <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</ulink></span><span class="sxs-lookup"><span data-stu-id="9c9e3-120">Here's the reference used for AMQP 1.0 specification: <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</ulink></span></span><pre>
      i.   <xref uid="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false">getProperties()</xref> - AMQPMessage.ApplicationProperties section
      ii.  <xref uid="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false">getBytes()</xref> - if AMQPMessage.Body has Data section
      iii. <xref uid="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false">getObject()</xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections
      </pre> <span data-ttu-id="9c9e3-121">Bei der Verwendung von Clientbibliotheken, die von Microsoft Azure EventHubs veröffentlicht wurden, sind die Abschnitte (i) und (Ii) allein ausreichend.</span><span class="sxs-lookup"><span data-stu-id="9c9e3-121">While using client libraries released by Microsoft Azure EventHubs, sections (i) and (ii) alone are sufficient.</span></span> <span data-ttu-id="9c9e3-122">Abschnitt (Iii) wird verwendet, für erweiterte Szenarien, in denen die sendende Anwendung eines Drittanbieters AMQP-Bibliothek zum Senden der Nachricht an EventHubs verwendet und die empfangende Anwendung verwendet diese Clientbibliothek zum Empfangen von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>.</span><span class="sxs-lookup"><span data-stu-id="9c9e3-122">Section (iii) is used for advanced scenarios, where the sending application uses third-party AMQP library to send the message to EventHubs and the receiving application uses this client library to receive <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>.</span></span> </p>
    syntax:
      content: public class EventData
  - uid: com.microsoft.azure.eventprocessorhost._checkpoint
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._checkpoint.yml
    name: Checkpoint
    nameWithType: Checkpoint
    fullName: com.microsoft.azure.eventprocessorhost.Checkpoint
    type: Class
    summary: "<p><span data-ttu-id=\"9c9e3-123\">\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._checkpoint\" data-throw-if-not-resolved=\"false\">Prüfpunkt</xref> Klasse ist öffentlich, sodass, dass Sie fortgeschrittene Benutzer implementieren können ein <xref uid=\"com.microsoft.azure.eventprocessorhost._i_checkpoint_manager\" data-throw-if-not-resolved=\"false\">ICheckpointManager</xref>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c9e3-123\">\r\n\r\n  <xref uid=\"com.microsoft.azure.eventprocessorhost._checkpoint\" data-throw-if-not-resolved=\"false\">Checkpoint</xref> class is public so that advanced users can implement an <xref uid=\"com.microsoft.azure.eventprocessorhost._i_checkpoint_manager\" data-throw-if-not-resolved=\"false\">ICheckpointManager</xref>.</span></span> <span data-ttu-id=\"9c9e3-124\">Es sei denn, Sie implementieren <xref uid=\"com.microsoft.azure.eventprocessorhost._i_checkpoint_manager\" data-throw-if-not-resolved=\"false\">ICheckpointManager</xref> Sie sollten keine Objekte dieser Klasse direkt behandeln.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c9e3-124\">Unless you are implementing <xref uid=\"com.microsoft.azure.eventprocessorhost._i_checkpoint_manager\" data-throw-if-not-resolved=\"false\">ICheckpointManager</xref> you should not have to deal with objects of this class directly.</span></span> </p>\n\n<p><span data-ttu-id=\"9c9e3-125\">Ein <xref uid=\"com.microsoft.azure.eventprocessorhost._checkpoint\" data-throw-if-not-resolved=\"false\">Prüfpunkt</xref> ist im Prinzip nur ein Tupel.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c9e3-125\">A <xref uid=\"com.microsoft.azure.eventprocessorhost._checkpoint\" data-throw-if-not-resolved=\"false\">Checkpoint</xref> is essentially just a tuple.</span></span> <span data-ttu-id=\"9c9e3-126\">Er verfügt über eine feste Partitions-Id, zum Zeitpunkt der Erstellung festgelegt und unveränderlich danach und ordnet, die einen Offset/SequenceNumber-Paar gibt eine Position in der Nachrichten in dieser Partition an.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c9e3-126\">It has a fixed partition id, set at creation time and immutable thereafter, and associates that with an offset/sequenceNumber pair which indicates a position within the messages in that partition.</span></span> </p>"
    syntax:
      content: public class Checkpoint