### YamlMime:ManagedReference
items:
  - uid: system.fabric._key_value_store_replica
    id: _key_value_store_replica
    parent: system.fabric
    children:
      - system.fabric._key_value_store_replica.abort()
      - 'system.fabric._key_value_store_replica.add(TransactionBase,String,byte [])'
      - 'system.fabric._key_value_store_replica.backupAsync(String,StoreBackupOption,Function<StoreBackupInfo, CompletableFuture<Boolean>>)'
      - 'system.fabric._key_value_store_replica.changeRoleAsync(ReplicaRole,CancellationToken)'
      - system.fabric._key_value_store_replica.closeAsync(CancellationToken)
      - 'system.fabric._key_value_store_replica.contains(TransactionBase,String)'
      - system.fabric._key_value_store_replica.createTransaction()
      - system.fabric._key_value_store_replica.createTransaction(KeyValueStoreTransactionSettings)
      - system.fabric._key_value_store_replica.enumerate(TransactionBase)
      - 'system.fabric._key_value_store_replica.enumerate(TransactionBase,String)'
      - 'system.fabric._key_value_store_replica.enumerate(TransactionBase,String,boolean)'
      - system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase)
      - 'system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase,String)'
      - 'system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase,String,boolean)'
      - 'system.fabric._key_value_store_replica.get(TransactionBase,String)'
      - system.fabric._key_value_store_replica.getCurrentEpoch()
      - system.fabric._key_value_store_replica.getDataLossHandler()
      - 'system.fabric._key_value_store_replica.getMetadata(TransactionBase,String)'
      - system.fabric._key_value_store_replica.getReplicatorSettings()
      - system.fabric._key_value_store_replica.getStoreName()
      - 'system.fabric._key_value_store_replica.getValue(TransactionBase,String)'
      - system.fabric._key_value_store_replica.initialize(StatefulServiceInitializationParameters)
      - system.fabric._key_value_store_replica.KeyValueStoreReplica(String)
      - 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings)'
      - 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings)'
      - 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,KeyValueStoreReplicaSettings)'
      - 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,SecondaryNotificationMode)'
      - 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,ReplicatorSettings)'
      - system.fabric._key_value_store_replica.onAbort()
      - 'system.fabric._key_value_store_replica.onChangeRoleAsync(ReplicaRole,CancellationToken)'
      - system.fabric._key_value_store_replica.onCloseAsync(CancellationToken)
      - system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)
      - system.fabric._key_value_store_replica.onDataLossAsync(CancellationToken)
      - system.fabric._key_value_store_replica.onDatalossReported()
      - system.fabric._key_value_store_replica.onInitialize(StatefulServiceInitializationParameters)
      - 'system.fabric._key_value_store_replica.onOpenAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
      - system.fabric._key_value_store_replica.onReplicationOperation(Enumeration<KeyValueStoreNotification>)
      - 'system.fabric._key_value_store_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
      - 'system.fabric._key_value_store_replica.remove(TransactionBase,String)'
      - 'system.fabric._key_value_store_replica.remove(TransactionBase,String,long)'
      - system.fabric._key_value_store_replica.restoreAsync(String)
      - 'system.fabric._key_value_store_replica.restoreAsync(String,RestoreSettings)'
      - system.fabric._key_value_store_replica.serviceCloseAsync(CancellationToken)
      - system.fabric._key_value_store_replica.setReplicatorSettings(ReplicatorSettings)
      - 'system.fabric._key_value_store_replica.tryAdd(TransactionBase,String,byte [])'
      - 'system.fabric._key_value_store_replica.tryGet(TransactionBase,String)'
      - 'system.fabric._key_value_store_replica.tryGetMetadata(TransactionBase,String)'
      - 'system.fabric._key_value_store_replica.tryGetValue(TransactionBase,String)'
      - 'system.fabric._key_value_store_replica.tryRemove(TransactionBase,String)'
      - 'system.fabric._key_value_store_replica.tryRemove(TransactionBase,String,long)'
      - 'system.fabric._key_value_store_replica.tryUpdate(TransactionBase,String,byte [])'
      - 'system.fabric._key_value_store_replica.tryUpdate(TransactionBase,String,byte [],long)'
      - 'system.fabric._key_value_store_replica.update(TransactionBase,String,byte [])'
      - 'system.fabric._key_value_store_replica.update(TransactionBase,String,byte [],long)'
      - system.fabric._key_value_store_replica.updateReplicatorSettings(ReplicatorSettings)
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: KeyValueStoreReplica
    nameWithType: KeyValueStoreReplica
    fullName: system.fabric.KeyValueStoreReplica
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 23
    package: system.fabric
    summary: '<p>Stellt einem Transaktions-, replizierte, assoziative Datenspeicher für Dienst Writer â €"für die Integration in jeder Service Fabric-Dienst bereit. </p>'
    syntax: &ref_1
      content: public class KeyValueStoreReplica implements StatefulServiceReplica
    inheritance:
      - java.lang.Object
      - system.fabric._stateful_service_replica
  - uid: system.fabric._key_value_store_replica.abort()
    id: abort()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: abort()
    nameWithType: KeyValueStoreReplica.abort()
    fullName: void system.fabric.KeyValueStoreReplica.abort()
    overload: system.fabric._key_value_store_replica.abort*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1210
    package: system.fabric
    summary: <p>Bricht diese Instanz die <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica</ref> Klasse. </p>
    syntax:
      content: public void abort()
    overridden: system.fabric._stateful_service_replica.abort()
  - uid: 'system.fabric._key_value_store_replica.add(TransactionBase,String,byte [])'
    id: 'add(TransactionBase,String,byte [])'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'add(TransactionBase transactionBase, String key, byte[] value)'
    nameWithType: 'KeyValueStoreReplica.add(TransactionBase transactionBase, String key, byte[] value)'
    fullName: 'void system.fabric.KeyValueStoreReplica.add(TransactionBase transactionBase, String key, byte[] value)'
    overload: system.fabric._key_value_store_replica.add*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 360
    package: system.fabric
    summary: |-
      <p>Fügt einen Wert, der durch den angegebenen Schlüssel im Schlüssel/Wert-Speicher indiziert.</p>
      <p></p>
    syntax:
      content: 'public void add(TransactionBase transactionBase, String key, byte[] value)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: <p>Der Schlüssel oder Index des Werts (als eine Zeichenfolge) hinzugefügt werden. Beschränkt auf 800 Zeichen lang sein. </p>
        - id: value
          type: ccd9418d
          description: '<p>Der Wert (als Bytearray) gespeichert werden, beschränkt auf 2GB umfassen. </p>'
  - uid: 'system.fabric._key_value_store_replica.backupAsync(String,StoreBackupOption,Function<StoreBackupInfo, CompletableFuture<Boolean>>)'
    id: 'backupAsync(String,StoreBackupOption,Function<StoreBackupInfo, CompletableFuture<Boolean>>)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'backupAsync(String backupDirectory, StoreBackupOption backupOption, Function<StoreBackupInfo, CompletableFuture<Boolean>> postBackupAsyncFunc)'
    nameWithType: 'KeyValueStoreReplica.backupAsync(String backupDirectory, StoreBackupOption backupOption, Function<StoreBackupInfo, CompletableFuture<Boolean>> postBackupAsyncFunc)'
    fullName: 'CompletableFuture<?> system.fabric.KeyValueStoreReplica.backupAsync(String backupDirectory, StoreBackupOption backupOption, Function<StoreBackupInfo, CompletableFuture<Boolean>> postBackupAsyncFunc)'
    overload: system.fabric._key_value_store_replica.backupAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 908
    package: system.fabric
    summary: "<p>Erstellt asynchron eine Sicherung der Schlüssel / Wert-Speicher.</p>\n<p>\r\n\r\n  <bold>Hinweise:</bold> der <bold>PostBackupAsyncFunc</bold> wird nicht aufgerufen, wenn während der Sicherung ein Fehler aufgetreten ist. Außerdem ist es nicht aufgerufen wird, wenn <bold>BackupOption</bold> ist <xref href=\"system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY()\" data-throw-if-not-resolved=\"false\"></xref> , da es ist keine weitere Aktion, die vom Benutzer in diesem Fall einen einzelnen Sicherungszyklus abgeschlossen erforderlich. </p>"
    syntax:
      content: 'public CompletableFuture<?> backupAsync(String backupDirectory, StoreBackupOption backupOption, Function<StoreBackupInfo, CompletableFuture<Boolean>> postBackupAsyncFunc)'
      parameters:
        - id: backupDirectory
          type: '26831127'
          description: '<p>Das Verzeichnis, in dem die Sicherung gespeichert werden soll. Wenn <bold>BackupOption</bold> ist <xref href="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY()" data-throw-if-not-resolved="false"></xref>, und klicken Sie dann dieses Parameters muss null sein. Andernfalls dieser Parameter kann nicht null, leer oder enthält nur Leerzeichen. UNC-Pfade können auch angegeben werden. Wenn das Verzeichnis nicht vorhanden ist, wird es erstellt. Wenn es vorhanden ist und nicht leer ist, misslingt die inkrementeller Sicherung mit <xref href="system.fabric.exception._fabric_backup_directory_not_empty_exception" data-throw-if-not-resolved="false"></xref>. </p>'
        - id: backupOption
          type: system.fabric._store_backup_option
          description: <p>Die Sicherungsoption. </p>
        - id: postBackupAsyncFunc
          type: 432ffe41system.fabric._store_backup_info774bd4f0
          description: '<p>Im Beitrag sichern asynchrone Methode, die von Windows Fabric, damit der Benutzer alle nach der Sicherung Aktivität abgeschlossen wird, vor dem Zurückgeben der Steuerung an das System kann aufgerufen wird. Wenn <bold>null</bold> übergeben, inkrementelle Sicherungen sind nicht zulässig. Wenn die Methode nach der Sicherung auf "false" zurückgibt, sind dann erneut inkrementelle Sicherungen nicht zulässig. </p>'
      return:
        type: 16409f84
        description: '<p>Eine Aufgabe, die den asynchronen backup-Vorgang darstellt. </p>'
    exceptions:
      - type: 3c87bd19
        description: <p>BackupDirectory ist <bold>null</bold> Wenn BackupOption keine ist <xref href="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY()" data-throw-if-not-resolved="false"></xref>. </p>
      - type: 3c87bd19
        description: '<p>BackupDirectory ist leer oder enthält nur Leerzeichen, wenn BackupOption nicht <xref href="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY()" data-throw-if-not-resolved="false"></xref> oder BackupDirectory ist nicht <bold>null</bold> Wenn BackupOption ist <xref href="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY()" data-throw-if-not-resolved="false"></xref>. </p>'
      - type: system.fabric.exception._fabric_backup_directory_not_empty_exception
        description: <p>Wenn BackupOption ist <xref href="system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_INCREMENTAL()" data-throw-if-not-resolved="false"></xref> und das Sicherungsverzeichnis Dateien oder Unterverzeichnisse bereits enthält. </p>
      - type: system.fabric.exception._fabric_backup_in_progress_exception
        description: <p>Wenn eine zuvor begonnene Sicherung gerade ausgeführt wird. </p>
  - uid: 'system.fabric._key_value_store_replica.changeRoleAsync(ReplicaRole,CancellationToken)'
    id: 'changeRoleAsync(ReplicaRole,CancellationToken)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    nameWithType: 'KeyValueStoreReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<String> system.fabric.KeyValueStoreReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    overload: system.fabric._key_value_store_replica.changeRoleAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1128
    package: system.fabric
    summary: "<p>Ändert die replikatrolle, der das Replikat als auch ihre Replikator an.</p>\n<p>\r\n\r\n  <bold>Hinweise:</bold>muss diese Methode nicht explizit aufgerufen werden, wenn das Replikat für die Anwendung abgeleitet <ref refid=\"\" kindref=\"compound\">system.fabric.KeyValueStoreReplica</ref>, dies ist das empfohlene Muster. In diesem Fall sollte die anwendungsreplikaten überschreiben <xref href=\"system.fabric._key_value_store_replica.onChangeRoleAsync(ReplicaRole,CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> stattdessen. </p>"
    syntax:
      content: 'public CompletableFuture<String> changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
      parameters:
        - id: newRole
          type: system.fabric._replica_role
          description: <p>Die replikatrolle Ziel. </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref href=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\"></xref>Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 06be942d
        description: '<p>Eine Aufgabe, deren Ergebnis die Adresse für dieses Replikat ist. </p>'
    overridden: 'system.fabric._stateful_service_replica.changeRoleAsync(ReplicaRole,CancellationToken)'
  - uid: system.fabric._key_value_store_replica.closeAsync(CancellationToken)
    id: closeAsync(CancellationToken)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: closeAsync(CancellationToken cancellationToken)
    nameWithType: KeyValueStoreReplica.closeAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.closeAsync(CancellationToken cancellationToken)
    overload: system.fabric._key_value_store_replica.closeAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1180
    package: system.fabric
    summary: "<p>Schließt das Replikat und ihre Replikator Vorbereitung aus einem Replikatsatz offline geschaltet. Derzeit wird nicht verwendet. Für zukünftige Verwendung reserviert.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>das Replikat nicht zwangsläufig entfernt dauerhaft aus dem Replikatsatz und können zu einem späteren Zeitpunkt erneut geöffnet werden. Die häufigsten Ursachen für das Schließen eines Replikats ist als Vorbereitung für das Upgrade oder Lastenausgleich ein ordnungsgemäßes Herunterfahren. Diese Methode muss nicht explizit aufgerufen werden, wenn das Replikat für die Anwendung abgeleitet <ref refid=\"\" kindref=\"compound\">system.fabric.KeyValueStoreReplica</ref>, dies ist das empfohlene Muster. In diesem Fall sollte die anwendungsreplikaten überschreiben <xref href=\"system.fabric._key_value_store_replica.onCloseAsync(CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> stattdessen. </p>"
    syntax:
      content: public CompletableFuture<Void> closeAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref href=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\"></xref>Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: db03ee24
        description: '<p>Eine Aufgabe, die den asynchronen Vorgang darstellt. </p>'
    overridden: system.fabric._stateful_service_replica.closeAsync(CancellationToken)
  - uid: 'system.fabric._key_value_store_replica.contains(TransactionBase,String)'
    id: 'contains(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'contains(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.contains(TransactionBase transactionBase, String key)'
    fullName: 'boolean system.fabric.KeyValueStoreReplica.contains(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.contains*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 702
    package: system.fabric
    summary: |-
      <p>Legt ein Flag, das angibt, ob ein Wert im Schlüssel/Wert-Speicher enthalten ist.</p>
      <p></p>
    syntax:
      content: 'public boolean contains(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: '<p>Der Schlüssel oder Index des Werts, die (als Zeichenfolge) gesucht. Beschränkt auf 800 Zeichen lang sein. </p>'
      return:
        type: 4fc6e284
        description: '<p>"true", wenn der Wert im Schlüssel/Wert-Speicher enthalten ist; "false", andernfalls. </p>'
  - uid: system.fabric._key_value_store_replica.createTransaction()
    id: createTransaction()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: createTransaction()
    nameWithType: KeyValueStoreReplica.createTransaction()
    fullName: Transaction system.fabric.KeyValueStoreReplica.createTransaction()
    overload: system.fabric._key_value_store_replica.createTransaction*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 317
    package: system.fabric
    summary: |-
      <p>Erstellt einen eindeutigen <xref href="system.fabric._transaction" data-throw-if-not-resolved="false"></xref> -Instanz, die verwendet wird, um einen commit oder Rollback-Gruppen von Schlüssel/Wert-Speichervorgänge.</p>
      <p></p>
    syntax:
      content: public Transaction createTransaction()
      return:
        type: system.fabric._transaction
        description: '<p>Ein <xref href="system.fabric._transaction" data-throw-if-not-resolved="false"></xref> Objekt, das eine Transaktion darstellt. </p>'
  - uid: system.fabric._key_value_store_replica.createTransaction(KeyValueStoreTransactionSettings)
    id: createTransaction(KeyValueStoreTransactionSettings)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: createTransaction(KeyValueStoreTransactionSettings settings)
    nameWithType: KeyValueStoreReplica.createTransaction(KeyValueStoreTransactionSettings settings)
    fullName: Transaction system.fabric.KeyValueStoreReplica.createTransaction(KeyValueStoreTransactionSettings settings)
    overload: system.fabric._key_value_store_replica.createTransaction*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 337
    package: system.fabric
    summary: |-
      <p>Erstellt einen eindeutigen <xref href="system.fabric._transaction" data-throw-if-not-resolved="false"></xref> -Instanz, die verwendet wird, um einen commit oder Rollback-Gruppen von Schlüssel/Wert-Speichervorgänge.</p>
      <p></p>
    syntax:
      content: public Transaction createTransaction(KeyValueStoreTransactionSettings settings)
      parameters:
        - id: settings
          type: system.fabric._key_value_store_transaction_settings
          description: <p>Die transaktionseinstellungen. </p>
      return:
        type: system.fabric._transaction
        description: '<p>Ein <xref href="system.fabric._transaction" data-throw-if-not-resolved="false"></xref> Objekt, das eine Transaktion darstellt. </p>'
  - uid: system.fabric._key_value_store_replica.enumerate(TransactionBase)
    id: enumerate(TransactionBase)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: enumerate(TransactionBase transactionBase)
    nameWithType: KeyValueStoreReplica.enumerate(TransactionBase transactionBase)
    fullName: Enumeration<KeyValueStoreItem> system.fabric.KeyValueStoreReplica.enumerate(TransactionBase transactionBase)
    overload: system.fabric._key_value_store_replica.enumerate*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 721
    package: system.fabric
    summary: |-
      <p>Gibt einen Enumerator, der durchläuft die <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> Werte im Schlüssel/Wert-Speicher.</p>
      <p></p>
    syntax:
      content: public Enumeration<KeyValueStoreItem> enumerate(TransactionBase transactionBase)
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
      return:
        type: 29771a6asystem.fabric._key_value_store_itema08ddfce
        description: <p>Ein <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> Enumerator. </p>
  - uid: 'system.fabric._key_value_store_replica.enumerate(TransactionBase,String)'
    id: 'enumerate(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'enumerate(TransactionBase transactionBase, String keyPrefix)'
    nameWithType: 'KeyValueStoreReplica.enumerate(TransactionBase transactionBase, String keyPrefix)'
    fullName: 'Enumeration<KeyValueStoreItem> system.fabric.KeyValueStoreReplica.enumerate(TransactionBase transactionBase, String keyPrefix)'
    overload: system.fabric._key_value_store_replica.enumerate*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 743
    package: system.fabric
    summary: |-
      <p>Gibt einen Enumerator, der durchläuft die <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> Werte im Schlüssel/Wert speichern, bei denen die Wert-Schlüssel für das angegebene Präfix übereinstimmen.</p>
      <p></p>
    syntax:
      content: 'public Enumeration<KeyValueStoreItem> enumerate(TransactionBase transactionBase, String keyPrefix)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: keyPrefix
          type: '26831127'
          description: '<p>Der Schlüssel oder Index, Präfix entsprechend (als Zeichenfolge). Beschränkt auf 800 Zeichen lang sein. </p>'
      return:
        type: 29771a6asystem.fabric._key_value_store_itema08ddfce
        description: <p>Ein <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> Enumerator. </p>
  - uid: 'system.fabric._key_value_store_replica.enumerate(TransactionBase,String,boolean)'
    id: 'enumerate(TransactionBase,String,boolean)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'enumerate(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)'
    nameWithType: 'KeyValueStoreReplica.enumerate(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)'
    fullName: 'Enumeration<KeyValueStoreItem> system.fabric.KeyValueStoreReplica.enumerate(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)'
    overload: system.fabric._key_value_store_replica.enumerate*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 769
    package: system.fabric
    summary: |-
      <p>Gibt einen Enumerator, der durchläuft die <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> Werte im Schlüssel/Wert-Speicher.</p>
      <p></p>
    syntax:
      content: 'public Enumeration<KeyValueStoreItem> enumerate(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: keyPrefix
          type: '26831127'
          description: '<p>Der Schlüssel oder Index, Präfix entsprechend (als Zeichenfolge). Beschränkt auf 800 Zeichen lang sein. </p>'
        - id: strictPrefix
          type: 4fc6e284
          description: '<p>Bei "true", werden nur der angegebene Wert für "KeyPrefix" vorangestellt Schlüssel zurückgegeben. Andernfalls Enumeration mit den ersten Schlüssel übereinstimmenden lexikografisch größer oder gleich "KeyPrefix" beginnt und wird fortgesetzt, bis keine weiteren Zeilen vorhanden sind. Der Standardwert ist „true“. </p>'
      return:
        type: 29771a6asystem.fabric._key_value_store_itema08ddfce
        description: <p>Ein <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> Enumerator. </p>
  - uid: system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase)
    id: enumerateMetadata(TransactionBase)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: enumerateMetadata(TransactionBase transactionBase)
    nameWithType: KeyValueStoreReplica.enumerateMetadata(TransactionBase transactionBase)
    fullName: Enumeration<KeyValueStoreItemMetadata> system.fabric.KeyValueStoreReplica.enumerateMetadata(TransactionBase transactionBase)
    overload: system.fabric._key_value_store_replica.enumerateMetadata*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 795
    package: system.fabric
    summary: |-
      <p>Gibt einen Enumerator, der durchläuft die <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> Werte im Schlüssel/Wert-Speicher.</p>
      <p></p>
    syntax:
      content: public Enumeration<KeyValueStoreItemMetadata> enumerateMetadata(TransactionBase transactionBase)
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
      return:
        type: 29771a6asystem.fabric._key_value_store_item_metadataa08ddfce
        description: <p>Ein <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> Enumerator. </p>
  - uid: 'system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase,String)'
    id: 'enumerateMetadata(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'enumerateMetadata(TransactionBase transactionBase, String keyPrefix)'
    nameWithType: 'KeyValueStoreReplica.enumerateMetadata(TransactionBase transactionBase, String keyPrefix)'
    fullName: 'Enumeration<KeyValueStoreItemMetadata> system.fabric.KeyValueStoreReplica.enumerateMetadata(TransactionBase transactionBase, String keyPrefix)'
    overload: system.fabric._key_value_store_replica.enumerateMetadata*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 818
    package: system.fabric
    summary: |-
      <p>Gibt einen Enumerator, der durchläuft die <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> Werte im Schlüssel/Wert speichern, bei denen die Wert-Schlüssel für das angegebene Präfix übereinstimmen.</p>
      <p></p>
    syntax:
      content: 'public Enumeration<KeyValueStoreItemMetadata> enumerateMetadata(TransactionBase transactionBase, String keyPrefix)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: keyPrefix
          type: '26831127'
          description: '<p>Der Schlüssel oder Index, Präfix entsprechend (als Zeichenfolge). Beschränkt auf 800 Zeichen lang sein. </p>'
      return:
        type: 29771a6asystem.fabric._key_value_store_item_metadataa08ddfce
        description: <p>Ein <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> Enumerator. </p>
  - uid: 'system.fabric._key_value_store_replica.enumerateMetadata(TransactionBase,String,boolean)'
    id: 'enumerateMetadata(TransactionBase,String,boolean)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'enumerateMetadata(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)'
    nameWithType: 'KeyValueStoreReplica.enumerateMetadata(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)'
    fullName: 'Enumeration<KeyValueStoreItemMetadata> system.fabric.KeyValueStoreReplica.enumerateMetadata(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)'
    overload: system.fabric._key_value_store_replica.enumerateMetadata*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 848
    package: system.fabric
    summary: |-
      <p>Gibt einen Enumerator, der durchläuft die <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> Werte im Schlüssel/Wert-Speicher.</p>
      <p></p>
    syntax:
      content: 'public Enumeration<KeyValueStoreItemMetadata> enumerateMetadata(TransactionBase transactionBase, String keyPrefix, boolean strictPrefix)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: keyPrefix
          type: '26831127'
          description: '<p>Der Schlüssel oder Index, Präfix entsprechend (als Zeichenfolge). Beschränkt auf 800 Zeichen lang sein. </p>'
        - id: strictPrefix
          type: 4fc6e284
          description: '<p>Bei "true", werden nur der angegebene Wert für "KeyPrefix" vorangestellt Schlüssel zurückgegeben. Andernfalls Enumeration mit den ersten Schlüssel übereinstimmenden lexikografisch größer oder gleich "KeyPrefix" beginnt und wird fortgesetzt, bis keine weiteren Zeilen vorhanden sind. Der Standardwert ist „true“. </p>'
      return:
        type: 29771a6asystem.fabric._key_value_store_item_metadataa08ddfce
        description: <p>Ein <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> Enumerator. </p>
  - uid: 'system.fabric._key_value_store_replica.get(TransactionBase,String)'
    id: 'get(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'get(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.get(TransactionBase transactionBase, String key)'
    fullName: 'KeyValueStoreItem system.fabric.KeyValueStoreReplica.get(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.get*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 573
    package: system.fabric
    summary: |-
      <p>Ruft den gespeicherten Wert als ein <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> -Objekt, dem angegebenen Schlüssel zugeordnet.</p>
      <p></p>
    syntax:
      content: 'public KeyValueStoreItem get(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: <p>Der Schlüssel oder Index des Werts (als Zeichenfolge) abgerufen werden sollen. Beschränkt auf 800 Zeichen lang sein. </p>
      return:
        type: system.fabric._key_value_store_item
        description: '<p>Ein <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> Objekt, das den gespeicherten Wert darstellt. </p>'
  - uid: system.fabric._key_value_store_replica.getCurrentEpoch()
    id: getCurrentEpoch()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: getCurrentEpoch()
    nameWithType: KeyValueStoreReplica.getCurrentEpoch()
    fullName: Epoch system.fabric.KeyValueStoreReplica.getCurrentEpoch()
    overload: system.fabric._key_value_store_replica.getCurrentEpoch*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 281
    package: system.fabric
    summary: |-
      <p>Ruft die aktuelle Epoche für den Schlüssel/Wert-Speicher ab.</p>
      <p></p>
    syntax:
      content: public Epoch getCurrentEpoch()
      return:
        type: system.fabric._epoch
        description: <p>Der aktuelle Epoche für den Schlüssel/Wert-Speicher. </p>
  - uid: system.fabric._key_value_store_replica.getDataLossHandler()
    id: getDataLossHandler()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: getDataLossHandler()
    nameWithType: KeyValueStoreReplica.getDataLossHandler()
    fullName: Observable system.fabric.KeyValueStoreReplica.getDataLossHandler()
    overload: system.fabric._key_value_store_replica.getDataLossHandler*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 271
    package: system.fabric
    syntax:
      content: public Observable getDataLossHandler()
      return:
        type: system.fabric._observable
  - uid: 'system.fabric._key_value_store_replica.getMetadata(TransactionBase,String)'
    id: 'getMetadata(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'getMetadata(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.getMetadata(TransactionBase transactionBase, String key)'
    fullName: 'KeyValueStoreItemMetadata system.fabric.KeyValueStoreReplica.getMetadata(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.getMetadata*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 660
    package: system.fabric
    summary: |-
      <p>Ruft die Metadaten als eine <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> -Objekt für den angegebenen Schlüssel zugeordnete Wert.</p>
      <p></p>
    syntax:
      content: 'public KeyValueStoreItemMetadata getMetadata(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: <p>Der Schlüssel oder Index des Werts (als Zeichenfolge) abgerufen werden sollen. Beschränkt auf 800 Zeichen lang sein. </p>
      return:
        type: system.fabric._key_value_store_item_metadata
        description: '<p>Ein <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> Objekt, das den angegebenen Wert zugeordnete Metadaten darstellt. </p>'
  - uid: system.fabric._key_value_store_replica.getReplicatorSettings()
    id: getReplicatorSettings()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: getReplicatorSettings()
    nameWithType: KeyValueStoreReplica.getReplicatorSettings()
    fullName: ReplicatorSettings system.fabric.KeyValueStoreReplica.getReplicatorSettings()
    overload: system.fabric._key_value_store_replica.getReplicatorSettings*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1502
    package: system.fabric
    summary: |-
      <p>Ruft die optionseinstellungen für Schlüssel/Wert-Speicher Replikator ab.</p>
      <p></p>
    syntax:
      content: public ReplicatorSettings getReplicatorSettings()
      return:
        type: system.fabric._replicator_settings
        description: <p>Die Einstellungen der Store Replikator-Option. </p>
  - uid: system.fabric._key_value_store_replica.getStoreName()
    id: getStoreName()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: getStoreName()
    nameWithType: KeyValueStoreReplica.getStoreName()
    fullName: String system.fabric.KeyValueStoreReplica.getStoreName()
    overload: system.fabric._key_value_store_replica.getStoreName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1453
    package: system.fabric
    summary: "<p>Ruft den Namen des Schlüssel/Wert-Speichers ab.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>der Geschäftsnamen gültige Dateinamenzeichen entsprechen soll. </p>"
    syntax:
      content: public String getStoreName()
      return:
        type: '26831127'
        description: <p>Der Name des Schlüssel/Wert-Speichers. </p>
  - uid: 'system.fabric._key_value_store_replica.getValue(TransactionBase,String)'
    id: 'getValue(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'getValue(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.getValue(TransactionBase transactionBase, String key)'
    fullName: 'byte [] system.fabric.KeyValueStoreReplica.getValue(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.getValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 615
    package: system.fabric
    summary: |-
      <p>Ruft den gespeicherten Wert als ein Byte-Array, das dem angegebenen Schlüssel zugeordnet.</p>
      <p></p>
    syntax:
      content: 'public byte [] getValue(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: <p>Der Schlüssel oder Index des Werts (als Zeichenfolge) abgerufen werden sollen. Beschränkt auf 800 Zeichen lang sein. </p>
      return:
        type: ccd9418d
        description: '<p>Ein Bytearray, das den gespeicherten Wert darstellt. </p>'
  - uid: system.fabric._key_value_store_replica.initialize(StatefulServiceInitializationParameters)
    id: initialize(StatefulServiceInitializationParameters)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: initialize(StatefulServiceInitializationParameters initializationParameters)
    nameWithType: KeyValueStoreReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
    fullName: void system.fabric.KeyValueStoreReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
    overload: system.fabric._key_value_store_replica.initialize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1004
    package: system.fabric
    summary: "<p>Initialisiert das Replikat als Vorbereitung für das Öffnen.</p>\n<p>\r\n\r\n  <bold>Hinweise:</bold>muss diese Methode nicht explizit aufgerufen werden, wenn das Replikat für die Anwendung abgeleitet <ref refid=\"\" kindref=\"compound\">system.fabric.KeyValueStoreReplica</ref>, dies ist das empfohlene Muster. In diesem Fall sollte die anwendungsreplikaten überschreiben <ref refid=\"\" kindref=\"compound\">system.fabric.KeyValueStoreReplica#onInitialize(system.fabric.StatefulServiceInitializationParameters)</ref> stattdessen. </p>"
    syntax:
      content: public void initialize(StatefulServiceInitializationParameters initializationParameters)
      parameters:
        - id: initializationParameters
          type: system.fabric._stateful_service_initialization_parameters
          description: <p>Die Initialisierungsinformationen für das Replikat. </p>
    overridden: system.fabric._stateful_service_replica.initialize(StatefulServiceInitializationParameters)
  - uid: system.fabric._key_value_store_replica.KeyValueStoreReplica(String)
    id: KeyValueStoreReplica(String)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: KeyValueStoreReplica(String storeName)
    nameWithType: KeyValueStoreReplica.KeyValueStoreReplica(String storeName)
    fullName: system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName)
    overload: system.fabric._key_value_store_replica.KeyValueStoreReplica*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 164
    package: system.fabric
    summary: "<p>Initialisiert eine neue Instanz der dem <ref refid=\"\" kindref=\"compound\">system.fabric.KeyValueStoreReplica</ref> Klasse mit dem angegebenen Schlüssel/Wert-Geschäftsnamen.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>der Geschäftsnamen gültige Dateinamenzeichen entsprechen soll. </p>"
    syntax:
      content: public KeyValueStoreReplica(String storeName)
      parameters:
        - id: storeName
          type: '26831127'
          description: <p>Der Name des Schlüssel/Wert-Speichers. </p>
  - uid: 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings)'
    id: 'KeyValueStoreReplica(String,LocalStoreSettings)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings)'
    nameWithType: 'KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings)'
    fullName: 'system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings)'
    overload: system.fabric._key_value_store_replica.KeyValueStoreReplica*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 177
    package: system.fabric
    summary: |-
      <p>Initialisiert eine neue Instanz der dem <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica</ref> Klasse mit dem angegebenen Schlüssel/Wert zu speichern, Namen und Einstellungen für lokalen Speicher.</p>
      <p></p>
    syntax:
      content: 'public KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings)'
      parameters:
        - id: storeName
          type: '26831127'
          description: <p>Der Name des Schlüssel/Wert-Speichers. </p>
        - id: localStoreSettings
          type: system.fabric._local_store_settings
          description: <p>Die optionalen Einstellungen für den lokalen Speicher. </p>
  - uid: 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings)'
    id: 'KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings)'
    nameWithType: 'KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings)'
    fullName: 'system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings)'
    overload: system.fabric._key_value_store_replica.KeyValueStoreReplica*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 208
    package: system.fabric
    summary: |-
      <p>Initialisiert eine neue Instanz der dem <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica</ref> Klasse mit dem angegebenen Schlüssel/Wert zu speichern, Name, der lokalen Speicher und Replikator Einstellungen.</p>
      <p></p>
    syntax:
      content: 'public KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings)'
      parameters:
        - id: storeName
          type: '26831127'
          description: <p>Der Name des Schlüssel/Wert-Speichers. </p>
        - id: localStoreSettings
          type: system.fabric._local_store_settings
          description: <p>Die optionalen Einstellungen für den lokalen Speicher. </p>
        - id: replicatorSettings
          type: system.fabric._replicator_settings
          description: <p>Die optionseinstellungen für den Schlüssel/Wert speichern Replikator. </p>
  - uid: 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,KeyValueStoreReplicaSettings)'
    id: 'KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,KeyValueStoreReplicaSettings)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, KeyValueStoreReplicaSettings kvsSettings)'
    nameWithType: 'KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, KeyValueStoreReplicaSettings kvsSettings)'
    fullName: 'system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, KeyValueStoreReplicaSettings kvsSettings)'
    overload: system.fabric._key_value_store_replica.KeyValueStoreReplica*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 254
    package: system.fabric
    summary: |-
      <p>Initialisiert eine neue Instanz der dem <xref href="system.fabric._key_value_store_replica" data-throw-if-not-resolved="false"></xref> Klasse mit dem angegebenen Schlüssel/Wert zu speichern, Name, lokalen speichereinstellungen Replikator Einstellungen und Einstellungen des Replikats.</p>
      <p></p>
    syntax:
      content: 'public KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, KeyValueStoreReplicaSettings kvsSettings)'
      parameters:
        - id: storeName
          type: '26831127'
          description: <p>Der Name des Schlüssel/Wert-Speichers. </p>
        - id: localStoreSettings
          type: system.fabric._local_store_settings
          description: <p>Die optionalen Einstellungen für den lokalen Speicher. </p>
        - id: replicatorSettings
          type: system.fabric._replicator_settings
          description: <p>Die optionalen Einstellungen für den Schlüssel/Wert speichern Replikator. </p>
        - id: kvsSettings
          type: system.fabric._key_value_store_replica_settings
          description: <p>Die optionalen Einstellungen für das Replikat der Schlüssel/Wert-Speicher. </p>
  - uid: 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,SecondaryNotificationMode)'
    id: 'KeyValueStoreReplica(String,LocalStoreSettings,ReplicatorSettings,SecondaryNotificationMode)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, SecondaryNotificationMode notificationMode)'
    nameWithType: 'KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, SecondaryNotificationMode notificationMode)'
    fullName: 'system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, SecondaryNotificationMode notificationMode)'
    overload: system.fabric._key_value_store_replica.KeyValueStoreReplica*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 233
    package: system.fabric
    summary: |-
      <p>Initialisiert eine neue Instanz der dem <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica</ref> Klasse mit dem angegebenen Schlüssel/Wert zu speichern, Name, der lokalen Speicher und Replikator Einstellungen. Sekundäres Replikat Benachrichtigungen sind über den Benachrichtigungsmodus aktiviert.</p>
      <p></p>
    syntax:
      content: 'public KeyValueStoreReplica(String storeName, LocalStoreSettings localStoreSettings, ReplicatorSettings replicatorSettings, SecondaryNotificationMode notificationMode)'
      parameters:
        - id: storeName
          type: '26831127'
          description: <p>Der Name des Schlüssel/Wert-Speichers. </p>
        - id: localStoreSettings
          type: system.fabric._local_store_settings
          description: <p>Die optionalen Einstellungen für den lokalen Speicher. </p>
        - id: replicatorSettings
          type: system.fabric._replicator_settings
          description: <p>Die optionseinstellungen für den Schlüssel/Wert speichern Replikator. </p>
        - id: notificationMode
          type: system.fabric._secondary_notification_mode
          description: '<p>So aktivieren Sie die sekundäre Benachrichtigungsmodus <xref href="system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)" data-throw-if-not-resolved="false"></xref> und <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica#onReplicationOperation(java.util.Enumeration)</ref> Rückrufe auf diesem Replikat. </p>'
  - uid: 'system.fabric._key_value_store_replica.KeyValueStoreReplica(String,ReplicatorSettings)'
    id: 'KeyValueStoreReplica(String,ReplicatorSettings)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'KeyValueStoreReplica(String storeName, ReplicatorSettings replicatorSettings)'
    nameWithType: 'KeyValueStoreReplica.KeyValueStoreReplica(String storeName, ReplicatorSettings replicatorSettings)'
    fullName: 'system.fabric.KeyValueStoreReplica.KeyValueStoreReplica(String storeName, ReplicatorSettings replicatorSettings)'
    overload: system.fabric._key_value_store_replica.KeyValueStoreReplica*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 193
    package: system.fabric
    summary: "<p>Initialisiert eine neue Instanz der dem <ref refid=\"\" kindref=\"compound\">system.fabric.KeyValueStoreReplica</ref> -Klasse mit den angegebenen Schlüssel/Wert-Geschäftsnamen und Replikator Einstellungen speichern.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>der Geschäftsnamen gültige Dateinamenzeichen entsprechen soll. </p>"
    syntax:
      content: 'public KeyValueStoreReplica(String storeName, ReplicatorSettings replicatorSettings)'
      parameters:
        - id: storeName
          type: '26831127'
          description: <p>Der Name des Schlüssel/Wert-Speichers. </p>
        - id: replicatorSettings
          type: system.fabric._replicator_settings
          description: <p>Die optionseinstellungen für den Schlüssel/Wert speichern Replikator. </p>
  - uid: system.fabric._key_value_store_replica.onAbort()
    id: onAbort()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: onAbort()
    nameWithType: KeyValueStoreReplica.onAbort()
    fullName: void system.fabric.KeyValueStoreReplica.onAbort()
    overload: system.fabric._key_value_store_replica.onAbort*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1291
    package: system.fabric
    summary: '<p>Wird aufgerufen, um diese Instanz zu beenden. </p>'
    syntax:
      content: protected void onAbort()
  - uid: 'system.fabric._key_value_store_replica.onChangeRoleAsync(ReplicaRole,CancellationToken)'
    id: 'onChangeRoleAsync(ReplicaRole,CancellationToken)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    nameWithType: 'KeyValueStoreReplica.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<String> system.fabric.KeyValueStoreReplica.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    overload: system.fabric._key_value_store_replica.onChangeRoleAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1360
    package: system.fabric
    summary: "<p>Gibt an, dass dieses Replikat Rollen geändert hat.</p>\n<p>\r\n\r\n  <bold>Hinweise:</bold>der anwendungsreplikaten sollten diese Methode überschreiben, wenn die Ableitung <ref refid=\"\" kindref=\"compound\">system.fabric.KeyValueStoreReplica</ref>, dies ist das empfohlene Muster. Das Replikat für die Anwendung sollte eine Aufgabe zurückgeben, deren Ergebnis die Adresse für dieses Replikat ist. Dieses Replikat-Adresse wird gespeichert, vom System und abgerufen werden können (unverändert) ResolveServiceAsync verwenden. Die Anwendung muss darauf achten, den Rollenwechsel rechtzeitig abgeschlossen werden, da die Neukonfiguration der Replikatgruppe hinter den Abschluss aller ausstehenden Änderung Rolle Aufrufe blockiert werden. </p>"
    syntax: &ref_3
      content: 'protected CompletableFuture<String> onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
      parameters:
        - id: newRole
          type: system.fabric._replica_role
          description: <p>Die Zielrolle. </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref href=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\"></xref>Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 06be942d
        description: '<p>Eine Aufgabe, deren Ergebnis die auflösbaren Adresse dieses Replikats ist... </p>'
  - uid: system.fabric._key_value_store_replica.onCloseAsync(CancellationToken)
    id: onCloseAsync(CancellationToken)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: onCloseAsync(CancellationToken cancellationToken)
    nameWithType: KeyValueStoreReplica.onCloseAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.onCloseAsync(CancellationToken cancellationToken)
    overload: system.fabric._key_value_store_replica.onCloseAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1310
    package: system.fabric
    summary: |-
      <p>Wird aufgerufen, wenn dieses Replikat Dienst beendet wird, und muss geschlossen.</p>
      <p></p>
    syntax: &ref_4
      content: protected CompletableFuture<Void> onCloseAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref href=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\"></xref>Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: db03ee24
        description: <p>Der asynchrone Vorgang. </p>
  - uid: system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)
    id: onCopyComplete(KeyValueStoreEnumerator)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: onCopyComplete(KeyValueStoreEnumerator enumerator)
    nameWithType: KeyValueStoreReplica.onCopyComplete(KeyValueStoreEnumerator enumerator)
    fullName: void system.fabric.KeyValueStoreReplica.onCopyComplete(KeyValueStoreEnumerator enumerator)
    overload: system.fabric._key_value_store_replica.onCopyComplete*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1261
    package: system.fabric
    summary: "<p>Vom System auf sekundären Replikaten aufgerufen, wenn sie erstellen, die vom primären Server abgeschlossen haben und bereit sind, starten Replikationsvorgängen anwenden.</p>\n<p>\r\n\r\n  <bold>Hinweise:</bold>der <xref href=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\"></xref> Objekt kann verwendet werden, um Daten auf dem sekundären Replikat im Rahmen dieser Methode lesen, bevor alle Replikationsvorgängen angewendet werden. Die <xref href=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\"></xref> Objekt ist nicht mehr gültig, nachdem diese Methode zurückgegeben und kann nicht im Kontext dieser Methode verwendet werden. Die Anwendung muss diesen Rückruf rechtzeitig abgeschlossen, da Replikationsvorgängen sind auf dem sekundären Replikat in die Warteschlange gestellt und erste angewendet, bis dieser Methode werden nicht gestartet werden. achten. Die <xref href=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\"></xref> -Objekt wird in einer einzelnen zugrunde liegenden lokale Transaktion gesichert und ist nicht threadsicher. </p>"
    syntax: &ref_2
      content: protected void onCopyComplete(KeyValueStoreEnumerator enumerator)
      parameters:
        - id: enumerator
          type: system.fabric._key_value_store_enumerator
          description: '<p>Der Enumerator, der zum Lesen von Daten auf dem sekundären Replikat verwendet wird. </p>'
  - uid: system.fabric._key_value_store_replica.onDataLossAsync(CancellationToken)
    id: onDataLossAsync(CancellationToken)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: onDataLossAsync(CancellationToken cancellationToken)
    nameWithType: KeyValueStoreReplica.onDataLossAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Boolean> system.fabric.KeyValueStoreReplica.onDataLossAsync(CancellationToken cancellationToken)
    overload: system.fabric._key_value_store_replica.onDataLossAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1229
    package: system.fabric
    summary: |-
      <p>Signale, die das Replikat festgelegt, können Datenverlust aufgetreten sind. Die Anwendung kann diese Methode, um das Ereignis asynchron zu verarbeiten, oder verwenden Sie entweder überschreiben <xref href="system.fabric._key_value_store_replica.onDatalossReported()" data-throw-if-not-resolved="false"></xref> Ereignis synchron zu verarbeiten. Beide stellen das gleiche Ereignis dar.</p>
      <p></p>
    syntax: &ref_6
      content: protected CompletableFuture<Boolean> onDataLossAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref href=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\"></xref>Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 7e53ac82
        description: "<p>\r\n\r\n  <ref refid=\"\" kindref=\"compound\">CompletableFuture</ref> Zukunft an, dass diese Daten wurde geändert, während der Wiederherstellung, und legen Sie das Replikat muss neu synchronisiert werden. Andernfalls \"false\", um anzugeben, dass die Daten nicht modifiziert wurden. </p>"
  - uid: system.fabric._key_value_store_replica.onDatalossReported()
    id: onDatalossReported()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: onDatalossReported()
    nameWithType: KeyValueStoreReplica.onDatalossReported()
    fullName: void system.fabric.KeyValueStoreReplica.onDatalossReported()
    overload: system.fabric._key_value_store_replica.onDatalossReported*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1239
    package: system.fabric
    summary: '<p>Signale, die das Replikat festgelegt, können Datenverlust aufgetreten sind. Die Anwendung für dieses Ereignis überwacht oder diesen überschreiben kann <xref href="system.fabric._key_value_store_replica.onDataLossAsync(CancellationToken)" data-throw-if-not-resolved="false"></xref> . Beide stellen das gleiche Ereignis dar. </p>'
    syntax: &ref_5
      content: protected void onDatalossReported()
  - uid: system.fabric._key_value_store_replica.onInitialize(StatefulServiceInitializationParameters)
    id: onInitialize(StatefulServiceInitializationParameters)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: onInitialize(StatefulServiceInitializationParameters parameters)
    nameWithType: KeyValueStoreReplica.onInitialize(StatefulServiceInitializationParameters parameters)
    fullName: void system.fabric.KeyValueStoreReplica.onInitialize(StatefulServiceInitializationParameters parameters)
    overload: system.fabric._key_value_store_replica.onInitialize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1295
    package: system.fabric
    syntax:
      content: protected void onInitialize(StatefulServiceInitializationParameters parameters)
      parameters:
        - id: parameters
          type: system.fabric._stateful_service_initialization_parameters
  - uid: 'system.fabric._key_value_store_replica.onOpenAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
    id: 'onOpenAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'onOpenAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    nameWithType: 'KeyValueStoreReplica.onOpenAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Void> system.fabric.KeyValueStoreReplica.onOpenAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    overload: system.fabric._key_value_store_replica.onOpenAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1331
    package: system.fabric
    summary: |-
      <p>Wird aufgerufen, auf einem Replikat initialisierten Dienst, um ihn zu öffnen, sodass zusätzliche Aktionen ausgeführt werden können.</p>
      <p></p>
    syntax:
      content: 'protected CompletableFuture<Void> onOpenAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
      parameters:
        - id: openMode
          type: system.fabric._replica_open_mode
          description: '<p>Ein <xref href="system.fabric._replica_open_mode" data-throw-if-not-resolved="false"></xref> Objekt, das für dieses Replikat angibt, ob es sich um neuen oder wiederhergestellten handelt. </p>'
        - id: partition
          type: system.fabric._stateful_service_partition
          description: '<p>Ein <xref href="system.fabric._stateful_service_partition" data-throw-if-not-resolved="false"></xref> Objekt, das die Partitionsinformationen zustandsbehaftete Dienst für dieses Replikat darstellt. </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref href=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\"></xref>Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: db03ee24
        description: '<p>Ein <ref refid="" kindref="compound">CompletableFuture</ref> Objekt, das den asynchronen Vorgang darstellt. </p>'
  - uid: system.fabric._key_value_store_replica.onReplicationOperation(Enumeration<KeyValueStoreNotification>)
    id: onReplicationOperation(Enumeration<KeyValueStoreNotification>)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: onReplicationOperation(Enumeration<KeyValueStoreNotification> enumerator)
    nameWithType: KeyValueStoreReplica.onReplicationOperation(Enumeration<KeyValueStoreNotification> enumerator)
    fullName: void system.fabric.KeyValueStoreReplica.onReplicationOperation(Enumeration<KeyValueStoreNotification> enumerator)
    overload: system.fabric._key_value_store_replica.onReplicationOperation*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1288
    package: system.fabric
    summary: "<p>Vom System auf sekundären Replikaten für eingehende Replikationsvorgängen aufgerufen. Jede <xref href=\"system.fabric._key_value_store_notification\" data-throw-if-not-resolved=\"false\"></xref> Objekt enthält alle Daten für einen einzelnen atomic Replikationsvorgang.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold> ist der Modus BlockSecondaryAck wurde angegeben, wird der eingehenden Replikationsvorgang ist nicht lokal auf dem sekundären Replikat angewendet und mit dem primären Replikat bestätigt wurde, bis die Methode einen Wert zurückgibt. Dies bedeutet, dass die Anwendung dafür sorgen, dass muss zum Blockieren der replikationsdatenstrom Vermeiden von dieser Methode rechtzeitig zurückgegeben. Da die Bestätigung nicht mit dem primären Replikat gesendet werden, bis diese Methode einen Wert zurückgibt, es kann nicht als gegeben angenommen, dass der beobachteten Replikationsvorgang bereits wurde (oder ist garantiert in der Zukunft) durch ein Quorum der Replikate in der Replikatgruppe angewendet. Wenn der NonBlockingQuorumAcked-Modus festgelegt wurde, wird der beobachteten Replikationsvorgang garantiert, bereits durch ein Quorum der Replikate in der Replikatgruppe angewendet wurden. Darüber hinaus der beobachteten Replikationsvorgang möglicherweise bereits lokal durch diese sekundäre Datenbank angewendet und bestätigt wurden mit dem primären Replikat zu dem Zeitpunkt, den die Methode, die vom System aufgerufen wird. Der Rückruf für die Methode wird nicht verhindert, die replikationsdatenstrom in diesem Modus, aber die Replikation Benachrichtigung vorgangsdatenstrom weiterhin blockiert. D. h. ist es rein eine ausstehende OnReplicationOperation Methode Rückruf zu einem beliebigen Zeitpunkt. </p>"
    syntax:
      content: protected void onReplicationOperation(Enumeration<KeyValueStoreNotification> enumerator)
      parameters:
        - id: enumerator
          type: 29771a6asystem.fabric._key_value_store_notificationa08ddfce
          description: '<p>Der Enumerator, der zum Lesen der Daten in diesen Replikationsvorgang verwendet wird. </p>'
  - uid: 'system.fabric._key_value_store_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
    id: 'openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    nameWithType: 'KeyValueStoreReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Replicator> system.fabric.KeyValueStoreReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    overload: system.fabric._key_value_store_replica.openAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1069
    package: system.fabric
    summary: "<p>Öffnet das Replikat als auch ihre Replikator als Vorbereitung für die in einer Replikatgruppe online geschaltet.</p>\n<p>\r\n\r\n  <bold>Hinweise:</bold>muss diese Methode nicht explizit aufgerufen werden, wenn das Replikat für die Anwendung abgeleitet <ref refid=\"\" kindref=\"compound\">system.fabric.KeyValueStoreReplica</ref>, dies ist das empfohlene Muster. In diesem Fall sollte die anwendungsreplikaten OnOpenAsync stattdessen außer Kraft setzen. </p>"
    syntax:
      content: 'public CompletableFuture<Replicator> openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
      parameters:
        - id: openMode
          type: system.fabric._replica_open_mode
          description: '<p>Gibt an, dass der Kontext, unter dem das Replikat beginnen wird, geöffnet. </p>'
        - id: partition
          type: system.fabric._stateful_service_partition
          description: <p>Enthält Informationen zur Beschreibung der Replikatgruppe zu dem das Replikat gehört. </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref href=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\"></xref>Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 9cdf14d0system.fabric._replicatora08ddfce
        description: '<p>Eine CompletableFuture an, dass der Abschluss der geöffneten <ref refid="" kindref="compound">java.util.concurrent.CompletableFuture</ref>. </p>'
    overridden: 'system.fabric._stateful_service_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
  - uid: 'system.fabric._key_value_store_replica.remove(TransactionBase,String)'
    id: 'remove(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'remove(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.remove(TransactionBase transactionBase, String key)'
    fullName: 'void system.fabric.KeyValueStoreReplica.remove(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.remove*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 404
    package: system.fabric
    summary: |-
      <p>Entfernt den gespeicherten Wert, der dem angegebenen Schlüssel zugeordnet.</p>
      <p></p>
    syntax:
      content: 'public void remove(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: '<p>Der Schlüssel oder Index, der den Wert (als Zeichenfolge) entfernt werden soll. Beschränkt auf 800 Zeichen lang sein. </p>'
  - uid: 'system.fabric._key_value_store_replica.remove(TransactionBase,String,long)'
    id: 'remove(TransactionBase,String,long)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'remove(TransactionBase transactionBase, String key, long checkSequenceNumber)'
    nameWithType: 'KeyValueStoreReplica.remove(TransactionBase transactionBase, String key, long checkSequenceNumber)'
    fullName: 'void system.fabric.KeyValueStoreReplica.remove(TransactionBase transactionBase, String key, long checkSequenceNumber)'
    overload: system.fabric._key_value_store_replica.remove*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 434
    package: system.fabric
    summary: |-
      <p>Versucht, den gespeicherten Wert mit dem angegebenen Schlüssel verknüpfte zu entfernen.</p>
      <p></p>
    syntax:
      content: 'public void remove(TransactionBase transactionBase, String key, long checkSequenceNumber)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: '<p>Der Schlüssel oder Index, der den Wert (als Zeichenfolge) entfernt werden soll. Beschränkt auf 800 Zeichen lang sein. </p>'
        - id: checkSequenceNumber
          type: 0364520f
          description: '<p>Die aktuelle Sequenznummer des Schlüssels, der entfernt werden soll. </p>'
  - uid: system.fabric._key_value_store_replica.restoreAsync(String)
    id: restoreAsync(String)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: restoreAsync(String backupDirectory)
    nameWithType: KeyValueStoreReplica.restoreAsync(String backupDirectory)
    fullName: CompletableFuture<?> system.fabric.KeyValueStoreReplica.restoreAsync(String backupDirectory)
    overload: system.fabric._key_value_store_replica.restoreAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 962
    package: system.fabric
    summary: "<p>Asynchron wiederhergestellt, das Schlüssel / Wert-Speicher-Replikat.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold> es wird empfohlen, die Schreibvorgänge in die Schlüssel / Wert-Speicher nicht ausgeführt werden, während die Wiederherstellung ausgeführt wird, da die aktualisierten Daten verloren gehen würden der Speicher aus der Dateien im Sicherungsverzeichnis wiederhergestellt wird. </p>"
    syntax:
      content: public CompletableFuture<?> restoreAsync(String backupDirectory)
      parameters:
        - id: backupDirectory
          type: '26831127'
          description: '<p>Das Verzeichnis, in dem das Replikat aus wiederhergestellt werden. Dieser Parameter kann nicht null, leer oder enthält nur Leerzeichen. UNC-Pfade können auch angegeben werden. </p>'
      return:
        type: 16409f84
        description: '<p>Eine Aufgabe, die den asynchronen Restore-Vorgang darstellt. </p>'
    exceptions:
      - type: 3c87bd19
        description: <p>BackupDirectory ist <bold>null</bold>. </p>
      - type: 3c87bd19
        description: <p>BackupDirectory ist leer oder enthält nur Leerzeichen. </p>
  - uid: 'system.fabric._key_value_store_replica.restoreAsync(String,RestoreSettings)'
    id: 'restoreAsync(String,RestoreSettings)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'restoreAsync(String backupDirectory, RestoreSettings settings)'
    nameWithType: 'KeyValueStoreReplica.restoreAsync(String backupDirectory, RestoreSettings settings)'
    fullName: 'CompletableFuture<?> system.fabric.KeyValueStoreReplica.restoreAsync(String backupDirectory, RestoreSettings settings)'
    overload: system.fabric._key_value_store_replica.restoreAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 967
    package: system.fabric
    syntax:
      content: 'public CompletableFuture<?> restoreAsync(String backupDirectory, RestoreSettings settings)'
      parameters:
        - id: backupDirectory
          type: '26831127'
        - id: settings
          type: system.fabric._restore_settings
      return:
        type: 16409f84
  - uid: system.fabric._key_value_store_replica.serviceCloseAsync(CancellationToken)
    id: serviceCloseAsync(CancellationToken)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: serviceCloseAsync(CancellationToken cancellationToken)
    nameWithType: KeyValueStoreReplica.serviceCloseAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.serviceCloseAsync(CancellationToken cancellationToken)
    overload: system.fabric._key_value_store_replica.serviceCloseAsync*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1297
    package: system.fabric
    syntax:
      content: protected CompletableFuture<Void> serviceCloseAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
      return:
        type: db03ee24
  - uid: system.fabric._key_value_store_replica.setReplicatorSettings(ReplicatorSettings)
    id: setReplicatorSettings(ReplicatorSettings)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: setReplicatorSettings(ReplicatorSettings replicatorSettings)
    nameWithType: KeyValueStoreReplica.setReplicatorSettings(ReplicatorSettings replicatorSettings)
    fullName: void system.fabric.KeyValueStoreReplica.setReplicatorSettings(ReplicatorSettings replicatorSettings)
    overload: system.fabric._key_value_store_replica.setReplicatorSettings*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 1512
    package: system.fabric
    summary: |-
      <p>Legt die optionseinstellungen für Schlüssel/Wert-Speicher Replikator fest.</p>
      <p></p>
    syntax:
      content: public void setReplicatorSettings(ReplicatorSettings replicatorSettings)
      parameters:
        - id: replicatorSettings
          type: system.fabric._replicator_settings
          description: <p>Die Einstellungen der Store Replikator-Option. </p>
  - uid: 'system.fabric._key_value_store_replica.tryAdd(TransactionBase,String,byte [])'
    id: 'tryAdd(TransactionBase,String,byte [])'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'tryAdd(TransactionBase transactionBase, String key, byte[] value)'
    nameWithType: 'KeyValueStoreReplica.tryAdd(TransactionBase transactionBase, String key, byte[] value)'
    fullName: 'boolean system.fabric.KeyValueStoreReplica.tryAdd(TransactionBase transactionBase, String key, byte[] value)'
    overload: system.fabric._key_value_store_replica.tryAdd*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 384
    package: system.fabric
    summary: |-
      <p>Speichern Versuche, einen Wert, der durch den angegebenen Schlüssel auf den Schlüssel/Wert indiziert hinzuzufügen.</p>
      <p></p>
    syntax:
      content: 'public boolean tryAdd(TransactionBase transactionBase, String key, byte[] value)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: '<p>Der Schlüssel oder Index, der den Wert (als Zeichenfolge) entfernt werden soll. Beschränkt auf 800 Zeichen lang sein. </p>'
        - id: value
          type: ccd9418d
          description: '<p>Der Wert (als Bytearray) gespeichert werden, beschränkt auf 2GB umfassen. </p>'
      return:
        type: 4fc6e284
        description: '<p>"True", wenn der angegebene Schlüssel nicht bereits gefunden und hinzugefügt wurde. "False", wenn der angegebene Schlüssel bereits vorhanden ist. </p>'
  - uid: 'system.fabric._key_value_store_replica.tryGet(TransactionBase,String)'
    id: 'tryGet(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'tryGet(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.tryGet(TransactionBase transactionBase, String key)'
    fullName: 'KeyValueStoreItem system.fabric.KeyValueStoreReplica.tryGet(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.tryGet*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 595
    package: system.fabric
    summary: |-
      <p>Versucht, erhalten den gespeicherten Wert als ein <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> -Objekt, dem angegebenen Schlüssel zugeordnet.</p>
      <p></p>
    syntax:
      content: 'public KeyValueStoreItem tryGet(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: '<p>Der Schlüssel oder Index, der den Wert (als Zeichenfolge) entfernt werden soll. Beschränkt auf 800 Zeichen lang sein. </p>'
      return:
        type: system.fabric._key_value_store_item
        description: '<p>Ein <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> Objekt, das den gespeicherten Wert darstellt, oder null, wenn der angegebene Schlüssel nicht vorhanden ist. </p>'
  - uid: 'system.fabric._key_value_store_replica.tryGetMetadata(TransactionBase,String)'
    id: 'tryGetMetadata(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'tryGetMetadata(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.tryGetMetadata(TransactionBase transactionBase, String key)'
    fullName: 'KeyValueStoreItemMetadata system.fabric.KeyValueStoreReplica.tryGetMetadata(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.tryGetMetadata*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 682
    package: system.fabric
    summary: |-
      <p>Versucht, die Metadaten als Abrufen einer <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> -Objekt für den angegebenen Schlüssel zugeordnete Wert.</p>
      <p></p>
    syntax:
      content: 'public KeyValueStoreItemMetadata tryGetMetadata(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: '<p>Der Schlüssel oder Index, der den Wert (als Zeichenfolge) entfernt werden soll. Beschränkt auf 800 Zeichen lang sein. </p>'
      return:
        type: system.fabric._key_value_store_item_metadata
        description: '<p>Ein <xref href="system.fabric._key_value_store_item_metadata" data-throw-if-not-resolved="false"></xref> -Objekt, das die Metadaten darstellt, die mit dem angegebenen Wert verknüpft sind, oder null, wenn der angegebene Schlüssel nicht vorhanden ist. </p>'
  - uid: 'system.fabric._key_value_store_replica.tryGetValue(TransactionBase,String)'
    id: 'tryGetValue(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'tryGetValue(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.tryGetValue(TransactionBase transactionBase, String key)'
    fullName: 'byte [] system.fabric.KeyValueStoreReplica.tryGetValue(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.tryGetValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 636
    package: system.fabric
    summary: |-
      <p>Versucht, den gespeicherten Wert als ein Bytearray mit dem angegebenen Schlüssel verknüpfte abzurufen.</p>
      <p></p>
    syntax:
      content: 'public byte [] tryGetValue(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: '<p>Der Schlüssel oder Index, der den Wert (als Zeichenfolge) entfernt werden soll. Beschränkt auf 800 Zeichen lang sein. </p>'
      return:
        type: ccd9418d
        description: '<p>Ein Bytearray, das den gespeicherten Wert oder Null darstellt, wenn der angegebene Schlüssel nicht vorhanden ist. </p>'
  - uid: 'system.fabric._key_value_store_replica.tryRemove(TransactionBase,String)'
    id: 'tryRemove(TransactionBase,String)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'tryRemove(TransactionBase transactionBase, String key)'
    nameWithType: 'KeyValueStoreReplica.tryRemove(TransactionBase transactionBase, String key)'
    fullName: 'boolean system.fabric.KeyValueStoreReplica.tryRemove(TransactionBase transactionBase, String key)'
    overload: system.fabric._key_value_store_replica.tryRemove*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 419
    package: system.fabric
    summary: |-
      <p>Versucht, den gespeicherten Wert mit dem angegebenen Schlüssel verknüpfte zu entfernen.</p>
      <p></p>
    syntax:
      content: 'public boolean tryRemove(TransactionBase transactionBase, String key)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: '<p>Der Schlüssel oder Index, der den Wert (als Zeichenfolge) entfernt werden soll. Beschränkt auf 800 Zeichen lang sein. </p>'
      return:
        type: 4fc6e284
        description: '<p>"True", wenn der angegebene Schlüssel gefunden und entfernt wurde. "False", wenn der angegebene Schlüssel nicht vorhanden ist. </p>'
  - uid: 'system.fabric._key_value_store_replica.tryRemove(TransactionBase,String,long)'
    id: 'tryRemove(TransactionBase,String,long)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'tryRemove(TransactionBase transactionBase, String key, long checkSequenceNumber)'
    nameWithType: 'KeyValueStoreReplica.tryRemove(TransactionBase transactionBase, String key, long checkSequenceNumber)'
    fullName: 'boolean system.fabric.KeyValueStoreReplica.tryRemove(TransactionBase transactionBase, String key, long checkSequenceNumber)'
    overload: system.fabric._key_value_store_replica.tryRemove*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 457
    package: system.fabric
    summary: |-
      <p>Versucht, den gespeicherten Wert mit dem angegebenen Schlüssel verknüpfte zu entfernen.</p>
      <p></p>
    syntax:
      content: 'public boolean tryRemove(TransactionBase transactionBase, String key, long checkSequenceNumber)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: '<p>Der Schlüssel oder Index, der den Wert (als Zeichenfolge) entfernt werden soll. Beschränkt auf 800 Zeichen lang sein. </p>'
        - id: checkSequenceNumber
          type: 0364520f
          description: '<p>Die aktuelle Sequenznummer des Schlüssels, der entfernt werden soll. </p>'
      return:
        type: 4fc6e284
        description: '<p>"True", wenn der angegebene Schlüssel gefunden und entfernt wurde. "False", wenn der angegebene Schlüssel nicht vorhanden ist. </p>'
  - uid: 'system.fabric._key_value_store_replica.tryUpdate(TransactionBase,String,byte [])'
    id: 'tryUpdate(TransactionBase,String,byte [])'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'tryUpdate(TransactionBase transactionBase, String key, byte[] value)'
    nameWithType: 'KeyValueStoreReplica.tryUpdate(TransactionBase transactionBase, String key, byte[] value)'
    fullName: 'boolean system.fabric.KeyValueStoreReplica.tryUpdate(TransactionBase transactionBase, String key, byte[] value)'
    overload: system.fabric._key_value_store_replica.tryUpdate*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 526
    package: system.fabric
    summary: |-
      <p>Versucht, den gespeicherten Wert mit dem angegebenen Schlüssel zu aktualisieren.</p>
      <p></p>
    syntax:
      content: 'public boolean tryUpdate(TransactionBase transactionBase, String key, byte[] value)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: '<p>Der Schlüssel oder Index, der den Wert (als Zeichenfolge) entfernt werden soll. Beschränkt auf 800 Zeichen lang sein. </p>'
        - id: value
          type: ccd9418d
          description: '<p>Der Wert (als Bytearray) gespeichert werden, beschränkt auf 2GB umfassen. </p>'
      return:
        type: 4fc6e284
        description: '<p>booleschen True, wenn der angegebene Schlüssel gefunden und aktualisiert wurde. "False", wenn der angegebene Schlüssel nicht vorhanden ist. </p>'
  - uid: 'system.fabric._key_value_store_replica.tryUpdate(TransactionBase,String,byte [],long)'
    id: 'tryUpdate(TransactionBase,String,byte [],long)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'tryUpdate(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)'
    nameWithType: 'KeyValueStoreReplica.tryUpdate(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)'
    fullName: 'boolean system.fabric.KeyValueStoreReplica.tryUpdate(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)'
    overload: system.fabric._key_value_store_replica.tryUpdate*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 545
    package: system.fabric
    summary: |-
      <p>Versucht, den gespeicherten Wert mit dem angegebenen Schlüssel zu aktualisieren.</p>
      <p></p>
    syntax:
      content: 'public boolean tryUpdate(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: '<p>Der Schlüssel oder Index, der den Wert (als Zeichenfolge) entfernt werden soll. Beschränkt auf 800 Zeichen lang sein. </p>'
        - id: value
          type: ccd9418d
          description: '<p>Der Wert (als Bytearray) gespeichert werden, beschränkt auf 2GB umfassen. </p>'
        - id: checkSequenceNumber
          type: 0364520f
          description: '<p>Die aktuelle Sequenznummer des Schlüssels, der entfernt werden soll. </p>'
      return:
        type: 4fc6e284
        description: '<p>"True", wenn der angegebene Schlüssel gefunden und aktualisiert wurde. "False", wenn der angegebene Schlüssel nicht vorhanden ist. </p>'
  - uid: 'system.fabric._key_value_store_replica.update(TransactionBase,String,byte [])'
    id: 'update(TransactionBase,String,byte [])'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'update(TransactionBase transactionBase, String key, byte[] value)'
    nameWithType: 'KeyValueStoreReplica.update(TransactionBase transactionBase, String key, byte[] value)'
    fullName: 'void system.fabric.KeyValueStoreReplica.update(TransactionBase transactionBase, String key, byte[] value)'
    overload: system.fabric._key_value_store_replica.update*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 479
    package: system.fabric
    summary: |-
      <p>Aktualisiert den gespeicherten Wert, der dem angegebenen Schlüssel zugeordnet.</p>
      <p></p>
    syntax:
      content: 'public void update(TransactionBase transactionBase, String key, byte[] value)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: <p>Der Schlüssel oder Index des Werts (als Zeichenfolge) aktualisiert werden. Beschränkt auf 800 Zeichen lang sein. </p>
        - id: value
          type: ccd9418d
          description: '<p>Der Wert (als Bytearray) gespeichert werden, beschränkt auf 2GB umfassen. </p>'
  - uid: 'system.fabric._key_value_store_replica.update(TransactionBase,String,byte [],long)'
    id: 'update(TransactionBase,String,byte [],long)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: 'update(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)'
    nameWithType: 'KeyValueStoreReplica.update(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)'
    fullName: 'void system.fabric.KeyValueStoreReplica.update(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)'
    overload: system.fabric._key_value_store_replica.update*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 496
    package: system.fabric
    summary: |-
      <p>Aktualisiert den gespeicherten Wert, der dem angegebenen Schlüssel zugeordnet.</p>
      <p></p>
    syntax:
      content: 'public void update(TransactionBase transactionBase, String key, byte[] value, long checkSequenceNumber)'
      parameters:
        - id: transactionBase
          type: system.fabric._transaction_base
          description: <p>Die Transaktion-Instanz. </p>
        - id: key
          type: '26831127'
          description: <p>Der Schlüssel oder Index des Werts (als Zeichenfolge) aktualisiert werden. Beschränkt auf 800 Zeichen lang sein. </p>
        - id: value
          type: ccd9418d
          description: '<p>Der Wert (als Bytearray) gespeichert werden, beschränkt auf 2GB umfassen. </p>'
        - id: checkSequenceNumber
          type: 0364520f
          description: <p>Long-Wert </p>
  - uid: system.fabric._key_value_store_replica.updateReplicatorSettings(ReplicatorSettings)
    id: updateReplicatorSettings(ReplicatorSettings)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    langs:
      - java
    name: updateReplicatorSettings(ReplicatorSettings replicatorSettings)
    nameWithType: KeyValueStoreReplica.updateReplicatorSettings(ReplicatorSettings replicatorSettings)
    fullName: void system.fabric.KeyValueStoreReplica.updateReplicatorSettings(ReplicatorSettings replicatorSettings)
    overload: system.fabric._key_value_store_replica.updateReplicatorSettings*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/KeyValueStoreReplica.java
      startLine: 298
    package: system.fabric
    summary: |-
      <p>Aktualisiert die Schlüssel/Wert-Speicher Replicator mit den Einstellungen in der angegebenen <xref href="system.fabric._replicator_settings" data-throw-if-not-resolved="false"></xref> Objekt.</p>
      <p></p>
    syntax:
      content: public void updateReplicatorSettings(ReplicatorSettings replicatorSettings)
      parameters:
        - id: replicatorSettings
          type: system.fabric._replicator_settings
          description: '<p>Die Einstellungen, die zum Aktualisieren der Schlüssel-Wert zu Replikator speichern. </p>'
references:
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric._key_value_store_replica.KeyValueStoreReplica*
    name: KeyValueStoreReplica
    nameWithType: KeyValueStoreReplica.KeyValueStoreReplica
    fullName: system.fabric.KeyValueStoreReplica.KeyValueStoreReplica
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.getDataLossHandler*
    name: getDataLossHandler
    nameWithType: KeyValueStoreReplica.getDataLossHandler
    fullName: Observable system.fabric.KeyValueStoreReplica.getDataLossHandler
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.getCurrentEpoch*
    name: getCurrentEpoch
    nameWithType: KeyValueStoreReplica.getCurrentEpoch
    fullName: Epoch system.fabric.KeyValueStoreReplica.getCurrentEpoch
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.updateReplicatorSettings*
    name: updateReplicatorSettings
    nameWithType: KeyValueStoreReplica.updateReplicatorSettings
    fullName: void system.fabric.KeyValueStoreReplica.updateReplicatorSettings
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.createTransaction*
    name: createTransaction
    nameWithType: KeyValueStoreReplica.createTransaction
    fullName: Transaction system.fabric.KeyValueStoreReplica.createTransaction
    package: system.fabric
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: system.fabric._key_value_store_replica.add*
    name: add
    nameWithType: KeyValueStoreReplica.add
    fullName: void system.fabric.KeyValueStoreReplica.add
    package: system.fabric
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: system.fabric._key_value_store_replica.tryAdd*
    name: tryAdd
    nameWithType: KeyValueStoreReplica.tryAdd
    fullName: boolean system.fabric.KeyValueStoreReplica.tryAdd
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.remove*
    name: remove
    nameWithType: KeyValueStoreReplica.remove
    fullName: void system.fabric.KeyValueStoreReplica.remove
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.tryRemove*
    name: tryRemove
    nameWithType: KeyValueStoreReplica.tryRemove
    fullName: boolean system.fabric.KeyValueStoreReplica.tryRemove
    package: system.fabric
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._key_value_store_replica.update*
    name: update
    nameWithType: KeyValueStoreReplica.update
    fullName: void system.fabric.KeyValueStoreReplica.update
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.tryUpdate*
    name: tryUpdate
    nameWithType: KeyValueStoreReplica.tryUpdate
    fullName: boolean system.fabric.KeyValueStoreReplica.tryUpdate
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.get*
    name: get
    nameWithType: KeyValueStoreReplica.get
    fullName: KeyValueStoreItem system.fabric.KeyValueStoreReplica.get
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.tryGet*
    name: tryGet
    nameWithType: KeyValueStoreReplica.tryGet
    fullName: KeyValueStoreItem system.fabric.KeyValueStoreReplica.tryGet
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.getValue*
    name: getValue
    nameWithType: KeyValueStoreReplica.getValue
    fullName: 'byte [] system.fabric.KeyValueStoreReplica.getValue'
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.tryGetValue*
    name: tryGetValue
    nameWithType: KeyValueStoreReplica.tryGetValue
    fullName: 'byte [] system.fabric.KeyValueStoreReplica.tryGetValue'
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.getMetadata*
    name: getMetadata
    nameWithType: KeyValueStoreReplica.getMetadata
    fullName: KeyValueStoreItemMetadata system.fabric.KeyValueStoreReplica.getMetadata
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.tryGetMetadata*
    name: tryGetMetadata
    nameWithType: KeyValueStoreReplica.tryGetMetadata
    fullName: KeyValueStoreItemMetadata system.fabric.KeyValueStoreReplica.tryGetMetadata
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.contains*
    name: contains
    nameWithType: KeyValueStoreReplica.contains
    fullName: boolean system.fabric.KeyValueStoreReplica.contains
    package: system.fabric
  - uid: 29771a6asystem.fabric._key_value_store_itema08ddfce
    spec.java:
      - name: Enumeration<
        fullName: Enumeration<
      - uid: system.fabric._key_value_store_item
        name: KeyValueStoreItem
        fullName: system.fabric.KeyValueStoreItem
        href: system.fabric._key_value_store_item.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._key_value_store_replica.enumerate*
    name: enumerate
    nameWithType: KeyValueStoreReplica.enumerate
    fullName: Enumeration<KeyValueStoreItem> system.fabric.KeyValueStoreReplica.enumerate
    package: system.fabric
  - uid: 29771a6asystem.fabric._key_value_store_item_metadataa08ddfce
    spec.java:
      - name: Enumeration<
        fullName: Enumeration<
      - uid: system.fabric._key_value_store_item_metadata
        name: KeyValueStoreItemMetadata
        fullName: system.fabric.KeyValueStoreItemMetadata
        href: system.fabric._key_value_store_item_metadata.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._key_value_store_replica.enumerateMetadata*
    name: enumerateMetadata
    nameWithType: KeyValueStoreReplica.enumerateMetadata
    fullName: Enumeration<KeyValueStoreItemMetadata> system.fabric.KeyValueStoreReplica.enumerateMetadata
    package: system.fabric
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: 432ffe41system.fabric._store_backup_info774bd4f0
    spec.java:
      - name: Function<
        fullName: Function<
      - uid: system.fabric._store_backup_info
        name: StoreBackupInfo
        fullName: system.fabric.StoreBackupInfo
        href: system.fabric._store_backup_info.yml
      - name: ', CompletableFuture<Boolean>>'
        fullName: ', CompletableFuture<Boolean>>'
  - uid: 16409f84
    spec.java:
      - name: CompletableFuture<?>
        fullName: CompletableFuture<?>
  - uid: system.fabric._key_value_store_replica.backupAsync*
    name: backupAsync
    nameWithType: KeyValueStoreReplica.backupAsync
    fullName: CompletableFuture<?> system.fabric.KeyValueStoreReplica.backupAsync
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.restoreAsync*
    name: restoreAsync
    nameWithType: KeyValueStoreReplica.restoreAsync
    fullName: CompletableFuture<?> system.fabric.KeyValueStoreReplica.restoreAsync
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.initialize*
    name: initialize
    nameWithType: KeyValueStoreReplica.initialize
    fullName: void system.fabric.KeyValueStoreReplica.initialize
    package: system.fabric
  - uid: 9cdf14d0system.fabric._replicatora08ddfce
    spec.java:
      - name: CompletableFuture<
        fullName: CompletableFuture<
      - uid: system.fabric._replicator
        name: Replicator
        fullName: system.fabric.Replicator
        href: system.fabric._replicator.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._key_value_store_replica.openAsync*
    name: openAsync
    nameWithType: KeyValueStoreReplica.openAsync
    fullName: CompletableFuture<Replicator> system.fabric.KeyValueStoreReplica.openAsync
    package: system.fabric
  - uid: 06be942d
    spec.java:
      - name: CompletableFuture<String>
        fullName: CompletableFuture<String>
  - uid: system.fabric._key_value_store_replica.changeRoleAsync*
    name: changeRoleAsync
    nameWithType: KeyValueStoreReplica.changeRoleAsync
    fullName: CompletableFuture<String> system.fabric.KeyValueStoreReplica.changeRoleAsync
    package: system.fabric
  - uid: db03ee24
    spec.java:
      - name: CompletableFuture<Void>
        fullName: CompletableFuture<Void>
  - uid: system.fabric._key_value_store_replica.closeAsync*
    name: closeAsync
    nameWithType: KeyValueStoreReplica.closeAsync
    fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.closeAsync
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.abort*
    name: abort
    nameWithType: KeyValueStoreReplica.abort
    fullName: void system.fabric.KeyValueStoreReplica.abort
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.getStoreName*
    name: getStoreName
    nameWithType: KeyValueStoreReplica.getStoreName
    fullName: String system.fabric.KeyValueStoreReplica.getStoreName
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.getReplicatorSettings*
    name: getReplicatorSettings
    nameWithType: KeyValueStoreReplica.getReplicatorSettings
    fullName: ReplicatorSettings system.fabric.KeyValueStoreReplica.getReplicatorSettings
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.setReplicatorSettings*
    name: setReplicatorSettings
    nameWithType: KeyValueStoreReplica.setReplicatorSettings
    fullName: void system.fabric.KeyValueStoreReplica.setReplicatorSettings
    package: system.fabric
  - uid: 7e53ac82
    spec.java:
      - name: CompletableFuture<Boolean>
        fullName: CompletableFuture<Boolean>
  - uid: system.fabric._key_value_store_replica.onDataLossAsync*
    name: onDataLossAsync
    nameWithType: KeyValueStoreReplica.onDataLossAsync
    fullName: CompletableFuture<Boolean> system.fabric.KeyValueStoreReplica.onDataLossAsync
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.onDatalossReported*
    name: onDatalossReported
    nameWithType: KeyValueStoreReplica.onDatalossReported
    fullName: void system.fabric.KeyValueStoreReplica.onDatalossReported
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.onCopyComplete*
    name: onCopyComplete
    nameWithType: KeyValueStoreReplica.onCopyComplete
    fullName: void system.fabric.KeyValueStoreReplica.onCopyComplete
    package: system.fabric
  - uid: 29771a6asystem.fabric._key_value_store_notificationa08ddfce
    spec.java:
      - name: Enumeration<
        fullName: Enumeration<
      - uid: system.fabric._key_value_store_notification
        name: KeyValueStoreNotification
        fullName: system.fabric.KeyValueStoreNotification
        href: system.fabric._key_value_store_notification.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._key_value_store_replica.onReplicationOperation*
    name: onReplicationOperation
    nameWithType: KeyValueStoreReplica.onReplicationOperation
    fullName: void system.fabric.KeyValueStoreReplica.onReplicationOperation
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.onAbort*
    name: onAbort
    nameWithType: KeyValueStoreReplica.onAbort
    fullName: void system.fabric.KeyValueStoreReplica.onAbort
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.onInitialize*
    name: onInitialize
    nameWithType: KeyValueStoreReplica.onInitialize
    fullName: void system.fabric.KeyValueStoreReplica.onInitialize
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.serviceCloseAsync*
    name: serviceCloseAsync
    nameWithType: KeyValueStoreReplica.serviceCloseAsync
    fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.serviceCloseAsync
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.onCloseAsync*
    name: onCloseAsync
    nameWithType: KeyValueStoreReplica.onCloseAsync
    fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.onCloseAsync
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.onOpenAsync*
    name: onOpenAsync
    nameWithType: KeyValueStoreReplica.onOpenAsync
    fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.onOpenAsync
    package: system.fabric
  - uid: system.fabric._key_value_store_replica.onChangeRoleAsync*
    name: onChangeRoleAsync
    nameWithType: KeyValueStoreReplica.onChangeRoleAsync
    fullName: CompletableFuture<String> system.fabric.KeyValueStoreReplica.onChangeRoleAsync
    package: system.fabric
  - uid: system.fabric._stateful_service_replica
    parent: system.fabric
    href: system.fabric._stateful_service_replica.yml
    name: StatefulServiceReplica
    nameWithType: StatefulServiceReplica
    fullName: system.fabric.StatefulServiceReplica
    type: Interface
    summary: "<p>Definiert das Verhalten, die den Lebenszyklus eines Replikats, z. B. starten, Initialisierung, rollenänderungen und Herunterfahren bestimmt. </p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>zustandsbehaftete Diensttypen müssen diese Schnittstelle implementieren. Die Logik der einen zustandsbehafteten Diensttyp enthält, die auf primären Replikaten aufgerufen wird und Verhalten, die auf sekundären Replikaten aufgerufen wird. Wenn dienstautor vornehmen möchte mithilfe des bereitgestellten <xref href=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\"></xref>, und klicken Sie dann der Dienst, auch implementieren muss <xref href=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\"></xref> verwenden Sie die Implementierung der <xref href=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\"></xref> , die vom bereitgestellt<xref href=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\"></xref></p>"
    syntax:
      content: public interface StatefulServiceReplica
  - uid: system.fabric._replica_role
    parent: system.fabric
    href: system.fabric._replica_role.yml
    name: ReplicaRole
    nameWithType: ReplicaRole
    fullName: system.fabric.ReplicaRole
    type: Enum
    syntax:
      content: public enum ReplicaRole
  - uid: system.fabric._replicator_settings
    parent: system.fabric
    href: system.fabric._replicator_settings.yml
    name: ReplicatorSettings
    nameWithType: ReplicatorSettings
    fullName: system.fabric.ReplicatorSettings
    type: Class
    syntax:
      content: public class ReplicatorSettings
  - uid: system.fabric._local_store_settings
    parent: system.fabric
    href: system.fabric._local_store_settings.yml
    name: LocalStoreSettings
    nameWithType: LocalStoreSettings
    fullName: system.fabric.LocalStoreSettings
    type: Class
    summary: <p>Stellt die optionseinstellungen für einen lokalen Speicher dar. </p>
    syntax:
      content: public class LocalStoreSettings
  - uid: system.fabric._key_value_store_replica_settings
    parent: system.fabric
    href: system.fabric._key_value_store_replica_settings.yml
    name: KeyValueStoreReplicaSettings
    nameWithType: KeyValueStoreReplicaSettings
    fullName: system.fabric.KeyValueStoreReplicaSettings
    type: Class
    summary: <p>Stellt die Einstellungen für ein Replikat des Schlüssel/Wert-Speicher dar. </p>
    syntax:
      content: public class KeyValueStoreReplicaSettings
  - uid: system.fabric._stateful_service_initialization_parameters
    parent: system.fabric
    href: system.fabric._stateful_service_initialization_parameters.yml
    name: StatefulServiceInitializationParameters
    nameWithType: StatefulServiceInitializationParameters
    fullName: system.fabric.StatefulServiceInitializationParameters
    type: Class
    summary: <p>Definiert die Dienst-Initialisierungsparameter für ein zustandsbehafteter Dienst. </p>
    syntax:
      content: public class StatefulServiceInitializationParameters
  - uid: system.fabric._observable
    parent: system.fabric
    href: system.fabric._observable.yml
    name: Observable<T>
    nameWithType: Observable<T>
    fullName: system.fabric.Observable<T>
    type: Class
    syntax:
      content: public class Observable<T>
      typeParameters:
        - type: 8ce1ecb9
  - uid: system.fabric._key_value_store_replica
    parent: system.fabric
    href: system.fabric._key_value_store_replica.yml
    name: KeyValueStoreReplica
    nameWithType: KeyValueStoreReplica
    fullName: system.fabric.KeyValueStoreReplica
    type: Class
    summary: '<p>Stellt einem Transaktions-, replizierte, assoziative Datenspeicher für Dienst Writer â €"für die Integration in jeder Service Fabric-Dienst bereit. </p>'
    syntax: *ref_1
  - uid: system.fabric.interop._native_async_callback
    parent: system.fabric.interop
    href: system.fabric.interop._native_async_callback.yml
    name: NativeAsyncCallback
    nameWithType: NativeAsyncCallback
    fullName: system.fabric.interop.NativeAsyncCallback
    type: Interface
    syntax:
      content: public interface NativeAsyncCallback
  - uid: system.fabric._epoch
    parent: system.fabric
    href: system.fabric._epoch.yml
    name: Epoch
    nameWithType: Epoch
    fullName: system.fabric.Epoch
    type: Class
    summary: "<p>Stellt die aktuelle Version der Service Fabric-Partition an. </p>\n<p>\r\n\r\n  <bold>Hinweise:</bold>ein <xref href=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\"></xref> ist eine Konfiguration Zahl für die Partition als Ganzes. Beim Festlegen der Konfiguration des Replikats Änderungen, z. B., wenn das primäre Replikat ändert, werden die Vorgänge, die vom neuen primären Replikat repliziert werden als ein neues werden bezeichnet <xref href=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\"></xref> aus. der von dem alten primären Replikat gesendet wurden. Die Tatsache, die dass das primäre geändert hat ist nicht direkt sichtbar auf sekundäre Replikate, die nicht durch einen Fehler in der Regel betroffen sind, die das ursprüngliche primäre Replikat betroffen. Um nachzuverfolgen, dass sich das primäre Replikat geändert wurde, an das sekundäre Replikat übertragen werden. Diese Kommunikation erfolgt über die <xref href=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> Methode. Die meisten Dienste können die Details der inneren Felder ignorieren die <xref href=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\"></xref> wie es in der Regel ausreichend ist zu wissen, dass die <xref href=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\"></xref> wurde geändert und Epochs, um zu bestimmen, relative Reihenfolge der Vorgänge und-Ereignisse im System zu vergleichen. Zu diesem Zweck sind Vergleichsoperationen bereitgestellt. </p>"
    syntax:
      content: public class Epoch
  - uid: system.fabric._key_value_store_item
    parent: system.fabric
    href: system.fabric._key_value_store_item.yml
    name: KeyValueStoreItem
    nameWithType: KeyValueStoreItem
    fullName: system.fabric.KeyValueStoreItem
    type: Class
    summary: <p>Stellt ein Element im Schlüssel/Wert-Speicher. </p>
    syntax:
      content: public class KeyValueStoreItem
  - uid: system.fabric._key_value_store_item_metadata
    parent: system.fabric
    href: system.fabric._key_value_store_item_metadata.yml
    name: KeyValueStoreItemMetadata
    nameWithType: KeyValueStoreItemMetadata
    fullName: system.fabric.KeyValueStoreItemMetadata
    type: Class
    summary: '<p>Stellt die Metadaten, die zugeordnet sind ein <xref href="system.fabric._key_value_store_item" data-throw-if-not-resolved="false"></xref> Objekt im Schlüssel/Wert-Speicher. </p>'
    syntax:
      content: public class KeyValueStoreItemMetadata
  - uid: system.fabric._secondary_notification_mode
    parent: system.fabric
    href: system.fabric._secondary_notification_mode.yml
    name: SecondaryNotificationMode
    nameWithType: SecondaryNotificationMode
    fullName: system.fabric.SecondaryNotificationMode
    type: Enum
    summary: '<p>Gibt die sekundären Benachrichtigungen auf der <xref href="system.fabric._key_value_store_replica" data-throw-if-not-resolved="false"></xref> und beschreibt das gewünschte Verhalten der <ref refid="" kindref="compound">system.fabric.KeyValueStoreReplica#onReplicationOperation(java.util.Enumeration)</ref> aktiviert. </p>'
    syntax:
      content: public enum SecondaryNotificationMode
  - uid: system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    name: onCopyComplete(KeyValueStoreEnumerator enumerator)
    nameWithType: KeyValueStoreReplica.onCopyComplete(KeyValueStoreEnumerator enumerator)
    fullName: void system.fabric.KeyValueStoreReplica.onCopyComplete(KeyValueStoreEnumerator enumerator)
    type: Method
    summary: "<p>Vom System auf sekundären Replikaten aufgerufen, wenn sie erstellen, die vom primären Server abgeschlossen haben und bereit sind, starten Replikationsvorgängen anwenden.</p>\n<p>\r\n\r\n  <bold>Hinweise:</bold>der <xref href=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\"></xref> Objekt kann verwendet werden, um Daten auf dem sekundären Replikat im Rahmen dieser Methode lesen, bevor alle Replikationsvorgängen angewendet werden. Die <xref href=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\"></xref> Objekt ist nicht mehr gültig, nachdem diese Methode zurückgegeben und kann nicht im Kontext dieser Methode verwendet werden. Die Anwendung muss diesen Rückruf rechtzeitig abgeschlossen, da Replikationsvorgängen sind auf dem sekundären Replikat in die Warteschlange gestellt und erste angewendet, bis dieser Methode werden nicht gestartet werden. achten. Die <xref href=\"system.fabric._key_value_store_enumerator\" data-throw-if-not-resolved=\"false\"></xref> -Objekt wird in einer einzelnen zugrunde liegenden lokale Transaktion gesichert und ist nicht threadsicher. </p>"
    syntax: *ref_2
  - uid: system.fabric._transaction
    parent: system.fabric
    href: system.fabric._transaction.yml
    name: Transaction
    nameWithType: Transaction
    fullName: system.fabric.Transaction
    type: Class
    syntax:
      content: public class Transaction
  - uid: system.fabric._key_value_store_transaction_settings
    parent: system.fabric
    href: system.fabric._key_value_store_transaction_settings.yml
    name: KeyValueStoreTransactionSettings
    nameWithType: KeyValueStoreTransactionSettings
    fullName: system.fabric.KeyValueStoreTransactionSettings
    type: Class
    summary: '<p>Gibt an, um das Verhalten von Transaktionen, die von unterstützt beschreiben die optionalen Einstellungen <xref href="system.fabric._key_value_store_replica" data-throw-if-not-resolved="false"></xref>. </p>'
    syntax:
      content: public class KeyValueStoreTransactionSettings
  - uid: system.fabric._transaction_base
    parent: system.fabric
    href: system.fabric._transaction_base.yml
    name: TransactionBase
    nameWithType: TransactionBase
    fullName: system.fabric.TransactionBase
    type: Class
    syntax:
      content: public class TransactionBase
  - uid: system.fabric._store_backup_option
    parent: system.fabric
    href: system.fabric._store_backup_option.yml
    name: StoreBackupOption
    nameWithType: StoreBackupOption
    fullName: system.fabric.StoreBackupOption
    type: Enum
    summary: <p>Die Sicherungsoption für die Schlüssel / Wert-Speicher. </p>
    syntax:
      content: public enum StoreBackupOption
  - uid: system.fabric._store_backup_info
    parent: system.fabric
    href: system.fabric._store_backup_info.yml
    name: StoreBackupInfo
    nameWithType: StoreBackupInfo
    fullName: system.fabric.StoreBackupInfo
    type: Class
    summary: <p>Enthält Informationen über die Sicherung auf die Schlüssel / Wert-Speicher erstellt. </p>
    syntax:
      content: public class StoreBackupInfo
  - uid: system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY()
    parent: system.fabric._store_backup_option
    href: system.fabric._store_backup_option.yml
    name: FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY
    nameWithType: StoreBackupOption.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY
    fullName: system.fabric.StoreBackupOption.FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY
    type: Field
    summary: "<p>Die Option der Transaktionsprotokolle der der Schlüssel / Wert-Speicher abgeschnitten werden, ohne dass alle Sicherungsdateien erstellt. </p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>Dies ist hilfreich bei der Erstellung von Sicherungsdateien im sekundären Replikaten zu vermeiden, wenn die inkrementeller Sicherung aktiviert ist. Wenn die inkrementeller Sicherung aktiviert ist, füllt Speicherplatz einrichten mit Transaktionsprotokollen, der die Schlüssel / Wert-Speicher. Um dies zu verhindern, müssen über häufige Sicherungen erstellt werden. Allerdings erstellen Sicherungen auf sekundären Replikaten nützlich bei einigen Diensten Schlüssel / Wert-Speicher möglicherweise nicht. Diese Dienste müssen auch zurecht, verwerfen das Sicherungsverzeichnis. Wenn diese Option verwendet wird, bereinigt es die Transaktionsprotokolle ohne Sicherungsdateien erstellen. </p>"
    syntax:
      content: public FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY=(3)
  - uid: system.fabric.exception._fabric_backup_directory_not_empty_exception
    parent: system.fabric.exception
    href: system.fabric.exception._fabric_backup_directory_not_empty_exception.yml
    name: FabricBackupDirectoryNotEmptyException
    nameWithType: FabricBackupDirectoryNotEmptyException
    fullName: system.fabric.exception.FabricBackupDirectoryNotEmptyException
    type: Class
    summary: '<p>Die Ausnahme, die ausgelöst wird, wenn das Sicherungsverzeichnis für die angegebenen Benutzer nicht leer ist. </p>'
    syntax:
      content: public class FabricBackupDirectoryNotEmptyException extends FabricException
  - uid: system.fabric._store_backup_option.FABRIC_STORE_BACKUP_OPTION_INCREMENTAL()
    parent: system.fabric._store_backup_option
    href: system.fabric._store_backup_option.yml
    name: FABRIC_STORE_BACKUP_OPTION_INCREMENTAL
    nameWithType: StoreBackupOption.FABRIC_STORE_BACKUP_OPTION_INCREMENTAL
    fullName: system.fabric.StoreBackupOption.FABRIC_STORE_BACKUP_OPTION_INCREMENTAL
    type: Field
    summary: '<p>Inkrementelle Sicherung für den Schlüssel / Wert-Speicher. d. h. nur die Protokolldateien erstellt, da die letzte vollständige oder inkrementelle Sicherung gesichert werden. </p>'
    syntax:
      content: public FABRIC_STORE_BACKUP_OPTION_INCREMENTAL=(2)
  - uid: system.fabric.exception._fabric_backup_in_progress_exception
    parent: system.fabric.exception
    href: system.fabric.exception._fabric_backup_in_progress_exception.yml
    name: FabricBackupInProgressException
    nameWithType: FabricBackupInProgressException
    fullName: system.fabric.exception.FabricBackupInProgressException
    type: Class
    summary: '<p>Die Ausnahme, die ausgelöst wird, bei dem Versuch, eine Sicherung zu erstellen, wenn eine frühere Sicherung ausgeführt wird. </p>'
    syntax:
      content: public class FabricBackupInProgressException extends FabricException
  - uid: system.fabric._restore_settings
    parent: system.fabric
    href: system.fabric._restore_settings.yml
    name: RestoreSettings
    nameWithType: RestoreSettings
    fullName: system.fabric.RestoreSettings
    type: Class
    syntax:
      content: public class RestoreSettings
  - uid: system.fabric._stateful_service_replica.initialize(StatefulServiceInitializationParameters)
    parent: system.fabric._stateful_service_replica
    href: system.fabric._stateful_service_replica.yml
    name: initialize(StatefulServiceInitializationParameters initializationParameters)
    nameWithType: StatefulServiceReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
    fullName: void system.fabric.StatefulServiceReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
    type: Method
    summary: |-
      <p>Initialisiert eine neu erstellte dienstreplikats an.</p>
      <p></p>
    syntax:
      content: public void initialize(StatefulServiceInitializationParameters initializationParameters)
      parameters:
        - id: initializationParameters
          type: system.fabric._stateful_service_initialization_parameters
          description: <p>Die <xref href="system.fabric._stateful_service_initialization_parameters" data-throw-if-not-resolved="false"></xref> für dieses Replikat. </p>
  - uid: system.fabric._replicator
    parent: system.fabric
    href: system.fabric._replicator.yml
    name: Replicator
    nameWithType: Replicator
    fullName: system.fabric.Replicator
    type: Interface
    syntax:
      content: public interface Replicator
  - uid: 'system.fabric._stateful_service_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)'
    parent: system.fabric._stateful_service_replica
    href: system.fabric._stateful_service_replica.yml
    name: 'openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    nameWithType: 'StatefulServiceReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<Replicator> system.fabric.StatefulServiceReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
    type: Method
    summary: |-
      <p>Wird ein initialisierter dienstreplikats geöffnet, sodass zusätzliche Aktionen ausgeführt werden können.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Replicator> openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)'
      parameters:
        - id: openMode
          type: system.fabric._replica_open_mode
          description: '<p>Dies unterstützt die Service Fabric-Infrastruktur und ist nicht vorgesehen, direkt aus Ihrem Code verwendet werden. </p>'
        - id: partition
          type: system.fabric._stateful_service_partition
          description: <p>Die <xref href="system.fabric._stateful_service_partition" data-throw-if-not-resolved="false"></xref> Informationen für dieses Replikat. </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref href=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\"></xref>Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 9cdf14d0system.fabric._replicatora08ddfce
        description: '<p>Gibt <ref refid="" kindref="compound">CompletableFuture</ref>&lt;<xref href="system.fabric._replicator" data-throw-if-not-resolved="false"></xref>&gt;, <xref href="system.fabric._replicator" data-throw-if-not-resolved="false"></xref> , das von der zustandsbehaftete Dienst verwendet wird. Verwenden Sie die Service Fabric-Implementierung in <xref href="system.fabric._stateful_service_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)" data-throw-if-not-resolved="false"></xref> , sollte das Replikat Zurückgeben einer <xref href="system.fabric._fabric_replicator" data-throw-if-not-resolved="false"></xref> abgerufener<xref href="system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)" data-throw-if-not-resolved="false"></xref></p>'
  - uid: system.fabric._replica_open_mode
    parent: system.fabric
    href: system.fabric._replica_open_mode.yml
    name: ReplicaOpenMode
    nameWithType: ReplicaOpenMode
    fullName: system.fabric.ReplicaOpenMode
    type: Enum
    syntax:
      content: public enum ReplicaOpenMode
  - uid: system.fabric._stateful_service_partition
    parent: system.fabric
    href: system.fabric._stateful_service_partition.yml
    name: StatefulServicePartition
    nameWithType: StatefulServicePartition
    fullName: system.fabric.StatefulServicePartition
    type: Interface
    syntax:
      content: public interface StatefulServicePartition
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p>Ein <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> wird verwendet, um die Benachrichtigung verteilt wird, dass Vorgänge abgebrochen werden sollen. Sie erstellen ein Abbruchtoken, das durch die Instanziierung einer <xref href="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false"></xref> -Objekt, das Abbruchtoken verwaltet entnommen seine <xref href="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false"></xref> Methode. Übergeben Sie dann das Abbruchtoken, das auf eine beliebige Anzahl von Vorgängen, die Nachricht vom Abbruch erhalten soll. Das Token kann nicht verwendet werden, um den Abbruch zu initiieren. Wenn das besitzende Objekt aufruft <xref href="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false"></xref>, auf das Abbruchtoken, das die abgebrochene Eigenschaft festgelegt ist auf "true". Die Objekte, die die Benachrichtigung empfangen können Antworten Verfolgungsinformationen geeignet ist. </p>'
    syntax:
      content: public class CancellationToken
  - uid: 'system.fabric._stateful_service_replica.changeRoleAsync(ReplicaRole,CancellationToken)'
    parent: system.fabric._stateful_service_replica
    href: system.fabric._stateful_service_replica.yml
    name: 'changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    nameWithType: 'StatefulServiceReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<String> system.fabric.StatefulServiceReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    type: Method
    summary: "<p>Ändert die Rolle eines primären oder sekundären Replikats an.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>die neue Rolle wird als Parameter angegeben. Wenn die Dienst-Übergänge in die neue Rolle, verfügt der Dienst eine Möglichkeit, ihre aktuellen abhöradresse zu aktualisieren. Die abhöradresse ist die Adresse, in denen Clients herstellen. Dies ermöglicht dem Dienst wird ein primäres Replikat, Anspruch nur einige Ressourcen wie z. B. Ports aus, bei der Kommunikation von Clients erwartet wird. </p>"
    syntax:
      content: 'public CompletableFuture<String> changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
      parameters:
        - id: newRole
          type: system.fabric._replica_role
          description: '<p>Die aktualisierte <xref href="system.fabric._replica_role" data-throw-if-not-resolved="false"></xref> , die dieses Replikat zum übergehen soll. </p>'
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref href=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\"></xref>Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 06be942d
        description: '<p>Gibt <ref refid="" kindref="compound">CompletableFuture</ref> des Typs <ref refid="" kindref="compound">java.lang.String</ref>, das ermittelt€™ s neue Adresse für die Verbindung, die über die Benennung von Service Fabric-Replikat zugeordnet werden soll. </p>'
  - uid: 'system.fabric._key_value_store_replica.onChangeRoleAsync(ReplicaRole,CancellationToken)'
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    name: 'onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    nameWithType: 'KeyValueStoreReplica.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<String> system.fabric.KeyValueStoreReplica.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)'
    type: Method
    summary: "<p>Gibt an, dass dieses Replikat Rollen geändert hat.</p>\n<p>\r\n\r\n  <bold>Hinweise:</bold>der anwendungsreplikaten sollten diese Methode überschreiben, wenn die Ableitung <ref refid=\"\" kindref=\"compound\">system.fabric.KeyValueStoreReplica</ref>, dies ist das empfohlene Muster. Das Replikat für die Anwendung sollte eine Aufgabe zurückgeben, deren Ergebnis die Adresse für dieses Replikat ist. Dieses Replikat-Adresse wird gespeichert, vom System und abgerufen werden können (unverändert) ResolveServiceAsync verwenden. Die Anwendung muss darauf achten, den Rollenwechsel rechtzeitig abgeschlossen werden, da die Neukonfiguration der Replikatgruppe hinter den Abschluss aller ausstehenden Änderung Rolle Aufrufe blockiert werden. </p>"
    syntax: *ref_3
  - uid: system.fabric._stateful_service_replica.closeAsync(CancellationToken)
    parent: system.fabric._stateful_service_replica
    href: system.fabric._stateful_service_replica.yml
    name: closeAsync(CancellationToken cancellationToken)
    nameWithType: StatefulServiceReplica.closeAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Void> system.fabric.StatefulServiceReplica.closeAsync(CancellationToken cancellationToken)
    type: Method
    summary: |-
      <p>Schließt die dienstreplikats an, wenn er heruntergefahren wird. Beachten Sie, dass der Abbruch advisory ist und weiterhin der Vorgang abgeschlossen werden kann, selbst wenn er abgebrochen wird.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> closeAsync(CancellationToken cancellationToken)
      parameters:
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref href=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\"></xref>Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: db03ee24
        description: <p>Gibt <ref refid="" kindref="compound">CompletableFuture</ref>. </p>
  - uid: system.fabric._key_value_store_replica.onCloseAsync(CancellationToken)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    name: onCloseAsync(CancellationToken cancellationToken)
    nameWithType: KeyValueStoreReplica.onCloseAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Void> system.fabric.KeyValueStoreReplica.onCloseAsync(CancellationToken cancellationToken)
    type: Method
    summary: |-
      <p>Wird aufgerufen, wenn dieses Replikat Dienst beendet wird, und muss geschlossen.</p>
      <p></p>
    syntax: *ref_4
  - uid: system.fabric._stateful_service_replica.abort()
    parent: system.fabric._stateful_service_replica
    href: system.fabric._stateful_service_replica.yml
    name: abort()
    nameWithType: StatefulServiceReplica.abort()
    fullName: void system.fabric.StatefulServiceReplica.abort()
    type: Method
    summary: "<p>Nicht ordnungsgemäß beendet eine Instanz ein. </p>\n<p>\r\n\r\n  <bold>Hinweise:</bold>Verlust leasen und als Antwort auf den Dienst, die Verwendung von <xref href=\"system.fabric._service_partition.reportFault(FaultType)\" data-throw-if-not-resolved=\"false\"></xref> Bericht eine <ref refid=\"\" kindref=\"compound\">system.fabric.FaultType#Permanent</ref> Fehler finden Sie Beispiele für geordnete und ungeordnete Abbrüche Beendigung. Wenn diese Methode aufgerufen wird, sollten die Dienstinstanz sofort freigeben und bereinigen Sie alle Verweise und zurückgeben. </p>"
    syntax:
      content: public void abort()
  - uid: system.fabric._key_value_store_replica.onDatalossReported()
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    name: onDatalossReported()
    nameWithType: KeyValueStoreReplica.onDatalossReported()
    fullName: void system.fabric.KeyValueStoreReplica.onDatalossReported()
    type: Method
    summary: '<p>Signale, die das Replikat festgelegt, können Datenverlust aufgetreten sind. Die Anwendung für dieses Ereignis überwacht oder diesen überschreiben kann <xref href="system.fabric._key_value_store_replica.onDataLossAsync(CancellationToken)" data-throw-if-not-resolved="false"></xref> . Beide stellen das gleiche Ereignis dar. </p>'
    syntax: *ref_5
  - uid: system.fabric._key_value_store_replica.onDataLossAsync(CancellationToken)
    parent: system.fabric._key_value_store_replica
    href: system.fabric._key_value_store_replica.yml
    name: onDataLossAsync(CancellationToken cancellationToken)
    nameWithType: KeyValueStoreReplica.onDataLossAsync(CancellationToken cancellationToken)
    fullName: CompletableFuture<Boolean> system.fabric.KeyValueStoreReplica.onDataLossAsync(CancellationToken cancellationToken)
    type: Method
    summary: |-
      <p>Signale, die das Replikat festgelegt, können Datenverlust aufgetreten sind. Die Anwendung kann diese Methode, um das Ereignis asynchron zu verarbeiten, oder verwenden Sie entweder überschreiben <xref href="system.fabric._key_value_store_replica.onDatalossReported()" data-throw-if-not-resolved="false"></xref> Ereignis synchron zu verarbeiten. Beide stellen das gleiche Ereignis dar.</p>
      <p></p>
    syntax: *ref_6
  - uid: system.fabric._key_value_store_enumerator
    parent: system.fabric
    href: system.fabric._key_value_store_enumerator.yml
    name: KeyValueStoreEnumerator
    nameWithType: KeyValueStoreEnumerator
    fullName: system.fabric.KeyValueStoreEnumerator
    type: Class
    summary: '<p>Liest den Inhalt der lokalen Speicher eines sekundären Replikats, innerhalb des Kontexts eines Rückrufs Abschluss kopieren. See <xref href="system.fabric._key_value_store_replica.onCopyComplete(KeyValueStoreEnumerator)" data-throw-if-not-resolved="false"></xref>. </p>'
    syntax:
      content: public class KeyValueStoreEnumerator
  - uid: system.fabric._key_value_store_notification
    parent: system.fabric
    href: system.fabric._key_value_store_notification.yml
    name: KeyValueStoreNotification
    nameWithType: KeyValueStoreNotification
    fullName: system.fabric.KeyValueStoreNotification
    type: Class
    summary: "<p>Enthält alle Informationen für eine replizierte Vorgang von einem sekundären Replikat empfangen. </p>\n<p>\r\n\r\n  <bold>Hinweise:</bold>finden Sie unter <ref refid=\"\" kindref=\"compound\">system.fabric.KeyValueStoreReplica#onReplicationOperation(java.util.Enumeration)</ref>. </p>"
    syntax:
      content: public class KeyValueStoreNotification
  - uid: system.fabric.exception._fabric_exception
    parent: system.fabric.exception
    href: system.fabric.exception._fabric_exception.yml
    name: FabricException
    nameWithType: FabricException
    fullName: system.fabric.exception.FabricException
    type: Class
    syntax:
      content: public class FabricException