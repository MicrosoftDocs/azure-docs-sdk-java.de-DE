### YamlMime:ManagedReference
items:
  - uid: system.fabric._cancellation_token_source
    id: _cancellation_token_source
    parent: system.fabric
    children:
      - system.fabric._cancellation_token_source.cancel()
      - system.fabric._cancellation_token_source.CancellationTokenSource()
      - system.fabric._cancellation_token_source.getToken()
      - system.fabric._cancellation_token_source.isCancellationRequested()
    href: system.fabric._cancellation_token_source.yml
    langs:
      - java
    name: CancellationTokenSource
    nameWithType: CancellationTokenSource
    fullName: system.fabric.CancellationTokenSource
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
      startLine: 6
    package: system.fabric
    summary: <p>Ein <xref href="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false"></xref> dient zum Erstellen <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> Objekt und verwaltet werden. </p>
    syntax: &ref_1
      content: public class CancellationTokenSource
    inheritance:
      - java.lang.Object
  - uid: system.fabric._cancellation_token_source.cancel()
    id: cancel()
    parent: system.fabric._cancellation_token_source
    href: system.fabric._cancellation_token_source.yml
    langs:
      - java
    name: cancel()
    nameWithType: CancellationTokenSource.cancel()
    fullName: void system.fabric.CancellationTokenSource.cancel()
    overload: system.fabric._cancellation_token_source.cancel*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
      startLine: 42
    package: system.fabric
    summary: '<p>Anforderungen auf "Abbrechen", auf die <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> von diesem Objekt verwaltet wird. </p>'
    syntax:
      content: public void cancel()
  - uid: system.fabric._cancellation_token_source.CancellationTokenSource()
    id: CancellationTokenSource()
    parent: system.fabric._cancellation_token_source
    href: system.fabric._cancellation_token_source.yml
    langs:
      - java
    name: CancellationTokenSource()
    nameWithType: CancellationTokenSource.CancellationTokenSource()
    fullName: system.fabric.CancellationTokenSource.CancellationTokenSource()
    overload: system.fabric._cancellation_token_source.CancellationTokenSource*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
      startLine: 13
    package: system.fabric
    summary: <p>Initialisiert eine neue Instanz der dem <ref refid="" kindref="compound">system.fabric.CancellationTokenSource</ref> Klasse. </p>
    syntax:
      content: public CancellationTokenSource()
  - uid: system.fabric._cancellation_token_source.getToken()
    id: getToken()
    parent: system.fabric._cancellation_token_source
    href: system.fabric._cancellation_token_source.yml
    langs:
      - java
    name: getToken()
    nameWithType: CancellationTokenSource.getToken()
    fullName: CancellationToken system.fabric.CancellationTokenSource.getToken()
    overload: system.fabric._cancellation_token_source.getToken*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
      startLine: 34
    package: system.fabric
    summary: |-
      <p>Gibt das Abbruchtoken, das von diesem wird <ref refid="" kindref="compound">system.fabric.CancellationTokenSource</ref> Objekt.</p>
      <p></p>
    syntax:
      content: public CancellationToken getToken()
      return:
        type: system.fabric._cancellation_token
        description: |-
          <p>

            <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref>

          </p>
  - uid: system.fabric._cancellation_token_source.isCancellationRequested()
    id: isCancellationRequested()
    parent: system.fabric._cancellation_token_source
    href: system.fabric._cancellation_token_source.yml
    langs:
      - java
    name: isCancellationRequested()
    nameWithType: CancellationTokenSource.isCancellationRequested()
    fullName: boolean system.fabric.CancellationTokenSource.isCancellationRequested()
    overload: system.fabric._cancellation_token_source.isCancellationRequested*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/CancellationTokenSource.java
      startLine: 23
    package: system.fabric
    summary: |-
      <p>Ruft ab, ob ein Abbruch angefordert wurde, dafür <ref refid="" kindref="compound">system.fabric.CancellationTokenSource</ref>.</p>
      <p></p>
    syntax:
      content: public boolean isCancellationRequested()
      return:
        type: 4fc6e284
        description: '<p>Gibt an, ob dafür ein Abbruch angefordert wurde <ref refid="" kindref="compound">system.fabric.CancellationTokenSource</ref>. </p>'
references:
  - uid: system.fabric._cancellation_token_source.CancellationTokenSource*
    name: CancellationTokenSource
    nameWithType: CancellationTokenSource.CancellationTokenSource
    fullName: system.fabric.CancellationTokenSource.CancellationTokenSource
    package: system.fabric
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: system.fabric._cancellation_token_source.isCancellationRequested*
    name: isCancellationRequested
    nameWithType: CancellationTokenSource.isCancellationRequested
    fullName: boolean system.fabric.CancellationTokenSource.isCancellationRequested
    package: system.fabric
  - uid: system.fabric._cancellation_token_source.getToken*
    name: getToken
    nameWithType: CancellationTokenSource.getToken
    fullName: CancellationToken system.fabric.CancellationTokenSource.getToken
    package: system.fabric
  - uid: system.fabric._cancellation_token_source.cancel*
    name: cancel
    nameWithType: CancellationTokenSource.cancel
    fullName: void system.fabric.CancellationTokenSource.cancel
    package: system.fabric
  - uid: system.fabric._cancellation_token
    parent: system.fabric
    href: system.fabric._cancellation_token.yml
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: system.fabric.CancellationToken
    type: Class
    summary: '<p>Ein <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> wird verwendet, um die Benachrichtigung verteilt wird, dass Vorgänge abgebrochen werden sollen. Sie erstellen ein Abbruchtoken, das durch die Instanziierung einer <xref href="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false"></xref> -Objekt, das Abbruchtoken verwaltet entnommen seine <xref href="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false"></xref> Methode. Übergeben Sie dann das Abbruchtoken, das auf eine beliebige Anzahl von Vorgängen, die Nachricht vom Abbruch erhalten soll. Das Token kann nicht verwendet werden, um den Abbruch zu initiieren. Wenn das besitzende Objekt aufruft <xref href="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false"></xref>, auf das Abbruchtoken, das die abgebrochene Eigenschaft festgelegt ist auf "true". Die Objekte, die die Benachrichtigung empfangen können Antworten Verfolgungsinformationen geeignet ist. </p>'
    syntax:
      content: public class CancellationToken
  - uid: system.fabric._cancellation_token_source
    parent: system.fabric
    href: system.fabric._cancellation_token_source.yml
    name: CancellationTokenSource
    nameWithType: CancellationTokenSource
    fullName: system.fabric.CancellationTokenSource
    type: Class
    summary: <p>Ein <xref href="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false"></xref> dient zum Erstellen <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> Objekt und verwaltet werden. </p>
    syntax: *ref_1