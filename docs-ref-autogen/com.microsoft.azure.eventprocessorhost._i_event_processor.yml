### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.eventprocessorhost._i_event_processor
    id: _i_event_processor
    parent: com.microsoft.azure.eventprocessorhost
    children:
      - 'com.microsoft.azure.eventprocessorhost._i_event_processor.onClose(PartitionContext,CloseReason)'
      - 'com.microsoft.azure.eventprocessorhost._i_event_processor.onError(PartitionContext,Throwable)'
      - 'com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable<EventData>)'
      - com.microsoft.azure.eventprocessorhost._i_event_processor.onOpen(PartitionContext)
    href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
    langs:
      - java
    name: IEventProcessor
    nameWithType: IEventProcessor
    fullName: com.microsoft.azure.eventprocessorhost.IEventProcessor
    type: Interface
    source:
      remote: &ref_0
        path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/IEventProcessor.java
        branch: master
        repo: 'https://github.com/Azure/azure-event-hubs-java'
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/IEventProcessor.java
      startLine: 27
    package: com.microsoft.azure.eventprocessorhost
    summary: "<p>Schnittstelle, die vom Prozessor Ereignisklassen implementiert werden muss.</p>\n<p>Keine Instanz einer Ereignisklasse-Prozessor verarbeitet nur Ereignisse aus einer Partition einen Event Hub. Ein <xref href=\"com.microsoft.azure.eventprocessorhost._partition_context\" data-throw-if-not-resolved=\"false\"></xref> wird mit jedem Aufruf der Ereignisprozessor bereitgestellt, da einige Parameter geändert werden konnte, aber es wird immer die gleiche Partition sein. </p>\n<p>Obwohl <xref href=\"com.microsoft.azure.eventprocessorhost._event_processor_host\" data-throw-if-not-resolved=\"false\"></xref> ist eine Multithreadanwendung, Aufrufe an eine bestimmte Instanz einer Prozessor Ereignisklasse werden serialisiert, mit Ausnahme von <xref href=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onError(PartitionContext,Throwable)\" data-throw-if-not-resolved=\"false\"></xref>. <xref href=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onOpen(PartitionContext)\" data-throw-if-not-resolved=\"false\"></xref>zuerst aufgerufen wird, klicken Sie dann <xref href=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)\" data-throw-if-not-resolved=\"false\"></xref> wird nicht oder mehrmals aufgerufen werden. Wenn der Ereignisprozessor muss, ob heruntergefahren werden, da Fehler an einer Stelle, oder die Lease für die Partition verloren gegangen oder weil der gesamte Prozessor Host heruntergefahren wird <xref href=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onClose(PartitionContext,CloseReason)\" data-throw-if-not-resolved=\"false\"></xref> wird aufgerufen, nachdem der letzte <xref href=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)\" data-throw-if-not-resolved=\"false\"></xref> aufrufen, gibt. </p>\n<p>\r\n\r\n  <xref href=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onError(PartitionContext,Throwable)\" data-throw-if-not-resolved=\"false\"></xref>kann aufgerufen werden, während <xref href=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable&lt;EventData&gt;)\" data-throw-if-not-resolved=\"false\"></xref> oder <xref href=\"com.microsoft.azure.eventprocessorhost._i_event_processor.onClose(PartitionContext,CloseReason)\" data-throw-if-not-resolved=\"false\"></xref> ausgeführt wird. Keine Synchronisierung wird ausgeführt, um zu vermeiden, möglicherweise Deadlocks. </p>"
    syntax:
      content: public interface IEventProcessor
  - uid: 'com.microsoft.azure.eventprocessorhost._i_event_processor.onClose(PartitionContext,CloseReason)'
    id: 'onClose(PartitionContext,CloseReason)'
    parent: com.microsoft.azure.eventprocessorhost._i_event_processor
    href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
    langs:
      - java
    name: 'onClose(PartitionContext context, CloseReason reason)'
    nameWithType: 'IEventProcessor.onClose(PartitionContext context, CloseReason reason)'
    fullName: 'void com.microsoft.azure.eventprocessorhost.IEventProcessor.onClose(PartitionContext context, CloseReason reason)'
    overload: com.microsoft.azure.eventprocessorhost._i_event_processor.onClose*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/IEventProcessor.java
      startLine: 44
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Wird aufgerufen, Prozessor-Host, um anzugeben, dass der Ereignisprozessor beendet wird.</p>
      <p></p>
    syntax: &ref_4
      content: 'public void onClose(PartitionContext context, CloseReason reason)'
      parameters:
        - id: context
          type: com.microsoft.azure.eventprocessorhost._partition_context
          description: <p>Informationen zur Partition. </p>
        - id: reason
          type: com.microsoft.azure.eventprocessorhost._close_reason
          description: '<p>Der Grund, warum der Ereignisprozessor beendet wird. </p>'
    exceptions:
      - type: 8a99d4b0
  - uid: 'com.microsoft.azure.eventprocessorhost._i_event_processor.onError(PartitionContext,Throwable)'
    id: 'onError(PartitionContext,Throwable)'
    parent: com.microsoft.azure.eventprocessorhost._i_event_processor
    href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
    langs:
      - java
    name: 'onError(PartitionContext context, Throwable error)'
    nameWithType: 'IEventProcessor.onError(PartitionContext context, Throwable error)'
    fullName: 'void com.microsoft.azure.eventprocessorhost.IEventProcessor.onError(PartitionContext context, Throwable error)'
    overload: com.microsoft.azure.eventprocessorhost._i_event_processor.onError*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/IEventProcessor.java
      startLine: 69
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Wird aufgerufen, wenn der zugrunde liegenden Client ein Fehlers beim empfangen hat. <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref>übernimmt die des Fehlers wiederhergestellt und fortgesetzt Datapump Nachrichten, sodass keine Aktion aus dem Code erforderlich ist. Diese Methode wird zu Informationszwecken bereitgestellt.</p>
      <p></p>
    syntax: &ref_1
      content: 'public void onError(PartitionContext context, Throwable error)'
      parameters:
        - id: context
          type: com.microsoft.azure.eventprocessorhost._partition_context
          description: <p>Informationen zur Partition. </p>
        - id: error
          type: a04fafd7
          description: '<p>Der Fehler, der aufgetreten sind. </p>'
  - uid: 'com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable<EventData>)'
    id: 'onEvents(PartitionContext,Iterable<EventData>)'
    parent: com.microsoft.azure.eventprocessorhost._i_event_processor
    href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
    langs:
      - java
    name: 'onEvents(PartitionContext context, Iterable<EventData> messages)'
    nameWithType: 'IEventProcessor.onEvents(PartitionContext context, Iterable<EventData> messages)'
    fullName: 'void com.microsoft.azure.eventprocessorhost.IEventProcessor.onEvents(PartitionContext context, Iterable<EventData> messages)'
    overload: com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/IEventProcessor.java
      startLine: 59
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Wird vom Prozessor Host ein, wenn ein Batch von Ereignissen angekommen ist.</p>
      <p>Dies ist, in denen die eigentliche Arbeit der Ereignisprozessor erfolgt. Es wird normalerweise aufgerufen, wenn ein oder mehrere Ereignisse eingetroffen sind. Wenn die <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref> Instanz eingerichtet wurde, mit einem <xref href="com.microsoft.azure.eventprocessorhost._event_processor_options" data-throw-if-not-resolved="false"></xref> auf dem setInvokeProcessorAfterReceiveTimeout(true) aufgerufen wurde, und klicken Sie dann, wenn eine Receive-Anweisung ein Timeout eintritt, aufgerufen wird mit einem leeren iterable. Diese Option ist "false", und Timeouts erhalten standardmäßig führen nicht dazu, dass einen Aufruf dieser Methode.</p>
      <p></p>
    syntax: &ref_3
      content: 'public void onEvents(PartitionContext context, Iterable<EventData> messages)'
      parameters:
        - id: context
          type: com.microsoft.azure.eventprocessorhost._partition_context
          description: <p>Informationen zur Partition. </p>
        - id: messages
          type: 2a13b5a5com.microsoft.azure.eventhubs._event_dataa08ddfce
          description: <p>Die Ereignisse verarbeitet werden. Kann leer sein. </p>
    exceptions:
      - type: 8a99d4b0
  - uid: com.microsoft.azure.eventprocessorhost._i_event_processor.onOpen(PartitionContext)
    id: onOpen(PartitionContext)
    parent: com.microsoft.azure.eventprocessorhost._i_event_processor
    href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
    langs:
      - java
    name: onOpen(PartitionContext context)
    nameWithType: IEventProcessor.onOpen(PartitionContext context)
    fullName: void com.microsoft.azure.eventprocessorhost.IEventProcessor.onOpen(PartitionContext context)
    overload: com.microsoft.azure.eventprocessorhost._i_event_processor.onOpen*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/IEventProcessor.java
      startLine: 35
    package: com.microsoft.azure.eventprocessorhost
    summary: |-
      <p>Wird vom Prozessor Host zum Initialisieren der Ereignisprozessor aufgerufen.</p>
      <p></p>
    syntax: &ref_2
      content: public void onOpen(PartitionContext context)
      parameters:
        - id: context
          type: com.microsoft.azure.eventprocessorhost._partition_context
          description: '<p>Informationen über die Partition, der diese Ereignisprozessor Ereignisse verarbeitet. </p>'
    exceptions:
      - type: 8a99d4b0
references:
  - uid: 8a99d4b0
    spec.java:
      - name: Exception
        fullName: Exception
  - uid: com.microsoft.azure.eventprocessorhost._i_event_processor.onOpen*
    name: onOpen
    nameWithType: IEventProcessor.onOpen
    fullName: void com.microsoft.azure.eventprocessorhost.IEventProcessor.onOpen
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._i_event_processor.onClose*
    name: onClose
    nameWithType: IEventProcessor.onClose
    fullName: void com.microsoft.azure.eventprocessorhost.IEventProcessor.onClose
    package: com.microsoft.azure.eventprocessorhost
  - uid: 2a13b5a5com.microsoft.azure.eventhubs._event_dataa08ddfce
    spec.java:
      - name: Iterable<
        fullName: Iterable<
      - uid: com.microsoft.azure.eventhubs._event_data
        name: EventData
        fullName: com.microsoft.azure.eventhubs.EventData
        href: com.microsoft.azure.eventhubs._event_data.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents*
    name: onEvents
    nameWithType: IEventProcessor.onEvents
    fullName: void com.microsoft.azure.eventprocessorhost.IEventProcessor.onEvents
    package: com.microsoft.azure.eventprocessorhost
  - uid: a04fafd7
    spec.java:
      - name: Throwable
        fullName: Throwable
  - uid: com.microsoft.azure.eventprocessorhost._i_event_processor.onError*
    name: onError
    nameWithType: IEventProcessor.onError
    fullName: void com.microsoft.azure.eventprocessorhost.IEventProcessor.onError
    package: com.microsoft.azure.eventprocessorhost
  - uid: com.microsoft.azure.eventprocessorhost._partition_context
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._partition_context.yml
    name: PartitionContext
    nameWithType: PartitionContext
    fullName: com.microsoft.azure.eventprocessorhost.PartitionContext
    type: Class
    syntax:
      content: public class PartitionContext
  - uid: com.microsoft.azure.eventprocessorhost._close_reason
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._close_reason.yml
    name: CloseReason
    nameWithType: CloseReason
    fullName: com.microsoft.azure.eventprocessorhost.CloseReason
    type: Enum
    syntax:
      content: public enum CloseReason
  - uid: com.microsoft.azure.eventhubs._event_data
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._event_data.yml
    name: EventData
    nameWithType: EventData
    fullName: com.microsoft.azure.eventhubs.EventData
    type: Class
    summary: |-
      <p>Die Datenstruktur, die das Ereignis wird gesendet an und Empfangen von EventHubs kapseln. Jede Partition EventHubs visualisiert werden kann, als Datenstrom von <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
      <p>Serialisieren eines empfangenen <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref> mit AMQP-Abschnitten als ApplicationProperties (mit primitiven Java-Typen) und Daten der Abschnitt wird nicht unterstützt. </p>
      <p>So sieht wie AMQP-Nachricht-Abschnitten zugeordnet <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. Hier wird der Verweis, der für AMQP 1.0-Spezifikation verwendet: <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</ulink> <preformatted> ich.   <xref href="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false"></xref>- AMQPMessage.ApplicationProperties Teil Ii.  <xref href="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false"></xref> - AMQPMessage.Body Daten Abschnitt Iii verfügt. <xref href="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false"></xref> - verfügt AMQPMessage.Body AMQPValue oder AMQPSequence Abschnitte </preformatted> bei der Verwendung von Clientbibliotheken, die von Microsoft Azure EventHubs freigegeben, Abschnitte (i) und (Ii) allein reichen. Abschnitt (Iii) wird verwendet, für erweiterte Szenarien, in denen die sendende Anwendung eines Drittanbieters AMQP-Bibliothek zum Senden der Nachricht an EventHubs verwendet und die empfangende Anwendung verwendet diese Clientbibliothek zum Empfangen von <xref href="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false"></xref>. </p>
    syntax:
      content: public class EventData
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_host
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
    name: EventProcessorHost
    nameWithType: EventProcessorHost
    fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost
    type: Class
    syntax:
      content: public class EventProcessorHost
  - uid: com.microsoft.azure.eventprocessorhost._event_processor_options
    parent: com.microsoft.azure.eventprocessorhost
    href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
    name: EventProcessorOptions
    nameWithType: EventProcessorOptions
    fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
    type: Class
    syntax:
      content: public class EventProcessorOptions
  - uid: 'com.microsoft.azure.eventprocessorhost._i_event_processor.onError(PartitionContext,Throwable)'
    parent: com.microsoft.azure.eventprocessorhost._i_event_processor
    href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
    name: 'onError(PartitionContext context, Throwable error)'
    nameWithType: 'IEventProcessor.onError(PartitionContext context, Throwable error)'
    fullName: 'void com.microsoft.azure.eventprocessorhost.IEventProcessor.onError(PartitionContext context, Throwable error)'
    type: Method
    summary: |-
      <p>Wird aufgerufen, wenn der zugrunde liegenden Client ein Fehlers beim empfangen hat. <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref>übernimmt die des Fehlers wiederhergestellt und fortgesetzt Datapump Nachrichten, sodass keine Aktion aus dem Code erforderlich ist. Diese Methode wird zu Informationszwecken bereitgestellt.</p>
      <p></p>
    syntax: *ref_1
  - uid: com.microsoft.azure.eventprocessorhost._i_event_processor.onOpen(PartitionContext)
    parent: com.microsoft.azure.eventprocessorhost._i_event_processor
    href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
    name: onOpen(PartitionContext context)
    nameWithType: IEventProcessor.onOpen(PartitionContext context)
    fullName: void com.microsoft.azure.eventprocessorhost.IEventProcessor.onOpen(PartitionContext context)
    type: Method
    summary: |-
      <p>Wird vom Prozessor Host zum Initialisieren der Ereignisprozessor aufgerufen.</p>
      <p></p>
    syntax: *ref_2
  - uid: 'com.microsoft.azure.eventprocessorhost._i_event_processor.onEvents(PartitionContext,Iterable<EventData>)'
    parent: com.microsoft.azure.eventprocessorhost._i_event_processor
    href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
    name: 'onEvents(PartitionContext context, Iterable<EventData> messages)'
    nameWithType: 'IEventProcessor.onEvents(PartitionContext context, Iterable<EventData> messages)'
    fullName: 'void com.microsoft.azure.eventprocessorhost.IEventProcessor.onEvents(PartitionContext context, Iterable<EventData> messages)'
    type: Method
    summary: |-
      <p>Wird vom Prozessor Host ein, wenn ein Batch von Ereignissen angekommen ist.</p>
      <p>Dies ist, in denen die eigentliche Arbeit der Ereignisprozessor erfolgt. Es wird normalerweise aufgerufen, wenn ein oder mehrere Ereignisse eingetroffen sind. Wenn die <xref href="com.microsoft.azure.eventprocessorhost._event_processor_host" data-throw-if-not-resolved="false"></xref> Instanz eingerichtet wurde, mit einem <xref href="com.microsoft.azure.eventprocessorhost._event_processor_options" data-throw-if-not-resolved="false"></xref> auf dem setInvokeProcessorAfterReceiveTimeout(true) aufgerufen wurde, und klicken Sie dann, wenn eine Receive-Anweisung ein Timeout eintritt, aufgerufen wird mit einem leeren iterable. Diese Option ist "false", und Timeouts erhalten standardmäßig führen nicht dazu, dass einen Aufruf dieser Methode.</p>
      <p></p>
    syntax: *ref_3
  - uid: 'com.microsoft.azure.eventprocessorhost._i_event_processor.onClose(PartitionContext,CloseReason)'
    parent: com.microsoft.azure.eventprocessorhost._i_event_processor
    href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
    name: 'onClose(PartitionContext context, CloseReason reason)'
    nameWithType: 'IEventProcessor.onClose(PartitionContext context, CloseReason reason)'
    fullName: 'void com.microsoft.azure.eventprocessorhost.IEventProcessor.onClose(PartitionContext context, CloseReason reason)'
    type: Method
    summary: |-
      <p>Wird aufgerufen, Prozessor-Host, um anzugeben, dass der Ereignisprozessor beendet wird.</p>
      <p></p>
    syntax: *ref_4