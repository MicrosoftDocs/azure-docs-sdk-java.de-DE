### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.services.remoting._service_remoting_listener_factory
    id: _service_remoting_listener_factory
    parent: microsoft.servicefabric.services.remoting
    children:
      - 'microsoft.servicefabric.services.remoting._service_remoting_listener_factory.create(T,ServiceContext)'
    href: microsoft.servicefabric.services.remoting._service_remoting_listener_factory.yml
    langs:
      - java
    name: ServiceRemotingListenerFactory
    nameWithType: ServiceRemotingListenerFactory
    fullName: microsoft.servicefabric.services.remoting.ServiceRemotingListenerFactory
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingListenerFactory.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingListenerFactory.java
      startLine: 10
    package: microsoft.servicefabric.services.remoting
    summary: <p>Diese Klasse stellt eine statische Methode zum Erstellen <xref href="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false"></xref> für Remoting-Methoden von der Dienstschnittstellen die von der abgeleiteten <xref href="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false"></xref> Schnittstelle. </p>
    syntax:
      content: public class ServiceRemotingListenerFactory
    inheritance:
      - java.lang.Object
  - uid: 'microsoft.servicefabric.services.remoting._service_remoting_listener_factory.create(T,ServiceContext)'
    id: 'create(T,ServiceContext)'
    parent: microsoft.servicefabric.services.remoting._service_remoting_listener_factory
    href: microsoft.servicefabric.services.remoting._service_remoting_listener_factory.yml
    langs:
      - java
    name: 'create(T serviceImplementation, ServiceContext serviceContext)'
    nameWithType: 'ServiceRemotingListenerFactory.create(T serviceImplementation, ServiceContext serviceContext)'
    fullName: 'static <T extends Service> ServiceRemotingListener microsoft.servicefabric.services.remoting.ServiceRemotingListenerFactory.create(T serviceImplementation, ServiceContext serviceContext)'
    overload: microsoft.servicefabric.services.remoting._service_remoting_listener_factory.create*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/ServiceRemotingListenerFactory.java
      startLine: 31
    package: microsoft.servicefabric.services.remoting
    summary: |-
      <p>Eine statische Methode, erstellt eine <xref href="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false"></xref> für eine zustandsbehaftete dienstimplementierung.</p>
      <p></p>
    syntax:
      content: 'public static static<T extends Service> ServiceRemotingListener create(T serviceImplementation, ServiceContext serviceContext)'
      parameters:
        - id: serviceImplementation
          type: 8ce1ecb9
          description: <p>Eine zustandsbehaftete dienstimplementierung. </p>
        - id: serviceContext
          type: system.fabric._service_context
          description: '<p>Der Kontext, unter dem der Dienst ausgeführt wird. </p>'
      return:
        type: 1e2c6103microsoft.servicefabric.services.remoting._service410a1f1cmicrosoft.servicefabric.services.remoting._service_remoting_listener
        description: '<p>Ein <xref href="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false"></xref> Kommunikation Listener diese Datenbanken die Schnittstellen abgeleitet <xref href="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false"></xref> Schnittstelle.<programlisting> <codeline> <highlight class="normal"> &lt;T&gt; <sp> </sp> </highlight> </codeline> </programlisting> Geben Sie die Einschränkung für die Dienst-Implementierung. Die dienstimplementierung muss abgeleitet <xref href="microsoft.servicefabric.services.runtime._stateful_service_base" data-throw-if-not-resolved="false"></xref> und eine oder mehrere Schnittstellen implementiert, die Ableitung <xref href="microsoft.servicefabric.services.remoting._service" data-throw-if-not-resolved="false"></xref> Schnittstelle. </p>'
references:
  - uid: 8ce1ecb9
    spec.java:
      - name: T
        fullName: T
  - uid: 1e2c6103microsoft.servicefabric.services.remoting._service410a1f1cmicrosoft.servicefabric.services.remoting._service_remoting_listener
    spec.java:
      - name: 'static<T extends '
        fullName: 'static<T extends '
      - uid: microsoft.servicefabric.services.remoting._service
        name: Service
        fullName: microsoft.servicefabric.services.remoting.Service
        href: microsoft.servicefabric.services.remoting._service.yml
      - name: '> '
        fullName: '> '
      - uid: microsoft.servicefabric.services.remoting._service_remoting_listener
        name: ServiceRemotingListener
        fullName: microsoft.servicefabric.services.remoting.ServiceRemotingListener
        href: microsoft.servicefabric.services.remoting._service_remoting_listener.yml
  - uid: microsoft.servicefabric.services.remoting._service_remoting_listener_factory.create*
    name: create
    nameWithType: ServiceRemotingListenerFactory.create
    fullName: static <T extends Service> ServiceRemotingListener microsoft.servicefabric.services.remoting.ServiceRemotingListenerFactory.create
    package: microsoft.servicefabric.services.remoting
  - uid: microsoft.servicefabric.services.remoting._service
    parent: microsoft.servicefabric.services.remoting
    href: microsoft.servicefabric.services.remoting._service.yml
    name: Service
    nameWithType: Service
    fullName: microsoft.servicefabric.services.remoting.Service
    type: Interface
    summary: '<p>Dies ist die Markierungsschnittstelle zum Aktivieren von Remoting-Schnittstelle für Dienste. Ein <xref href="microsoft.servicefabric.services.remoting._service_remoting_listener" data-throw-if-not-resolved="false"></xref> bietet Remoting für alle Schnittstellen vom Dienst implementiert, die von dieser Schnittstelle ableiten. Die Remoteausführung Schnittstellen können über einen Proxyserver auf dem Client zugegriffen werden. </p>'
    syntax:
      content: public interface Service
  - uid: microsoft.servicefabric.services.remoting._service_remoting_listener
    parent: microsoft.servicefabric.services.remoting
    href: microsoft.servicefabric.services.remoting._service_remoting_listener.yml
    name: ServiceRemotingListener
    nameWithType: ServiceRemotingListener
    fullName: microsoft.servicefabric.services.remoting.ServiceRemotingListener
    type: Interface
    summary: '<p>Definiert eine Basisklasse Kommunikationsschnittstelle, die Schnittstelle Remoting für Zustandslose und zustandsbehaftete Dienste ermöglicht. </p>'
    syntax:
      content: public interface ServiceRemotingListener extends CommunicationListener
  - uid: system.fabric._service_context
    parent: system.fabric
    href: system.fabric._service_context.yml
    name: ServiceContext
    nameWithType: ServiceContext
    fullName: system.fabric.ServiceContext
    type: Class
    summary: '<p>Stellt den Kontext, in denen der Dienst unter dar. </p>'
    syntax:
      content: public class ServiceContext
  - uid: microsoft.servicefabric.services.runtime._stateful_service_base
    parent: microsoft.servicefabric.services.runtime
    href: microsoft.servicefabric.services.runtime._stateful_service_base.yml
    name: StatefulServiceBase
    nameWithType: StatefulServiceBase
    fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase
    type: Class
    summary: <p>Stellt die Basisklasse für Microsoft Service Fabric basierend statusbehaftete zuverlässige Dienst. </p>
    syntax:
      content: public class StatefulServiceBase