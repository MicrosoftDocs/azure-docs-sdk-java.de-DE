### YamlMime:ManagedReference
items:
  - uid: system.fabric._transaction_isolation_level
    id: _transaction_isolation_level
    parent: system.fabric
    children:
      - system.fabric._transaction_isolation_level.Default
      - system.fabric._transaction_isolation_level.getValue()
      - system.fabric._transaction_isolation_level.ReadCommitted
      - system.fabric._transaction_isolation_level.ReadUncommitted
      - system.fabric._transaction_isolation_level.RepeatableRead
      - system.fabric._transaction_isolation_level.Serializable
      - system.fabric._transaction_isolation_level.Snapshot
    href: system.fabric._transaction_isolation_level.yml
    langs:
      - java
    name: TransactionIsolationLevel
    nameWithType: TransactionIsolationLevel
    fullName: system.fabric.TransactionIsolationLevel
    type: Enum
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/TransactionIsolationLevel.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/TransactionIsolationLevel.java
      startLine: 5
    package: system.fabric
    summary: <p>Listet den Satz von möglichen Isolationsstufen für eine <xref uid="system.fabric._transaction" data-throw-if-not-resolved="false">system.fabric.Transaction</xref>. </p>
    syntax:
      content: public enum TransactionIsolationLevel
    inheritance:
      - java.lang.Object
      - java.lang.Enum<TransactionIsolationLevel>
  - uid: system.fabric._transaction_isolation_level.Default
    id: Default
    parent: system.fabric._transaction_isolation_level
    href: system.fabric._transaction_isolation_level.yml
    langs:
      - java
    name: Default
    nameWithType: TransactionIsolationLevel.Default
    fullName: system.fabric.TransactionIsolationLevel.Default
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/TransactionIsolationLevel.java
      startLine: 9
    package: system.fabric
    summary: <p>Gibt die Standardisolationsstufe des Speichers an. </p>
    syntax:
      content: public Default=(0)
  - uid: system.fabric._transaction_isolation_level.getValue()
    id: getValue()
    parent: system.fabric._transaction_isolation_level
    href: system.fabric._transaction_isolation_level.yml
    langs:
      - java
    name: getValue()
    nameWithType: TransactionIsolationLevel.getValue()
    fullName: int system.fabric.TransactionIsolationLevel.getValue()
    overload: system.fabric._transaction_isolation_level.getValue*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/TransactionIsolationLevel.java
      startLine: 49
    package: system.fabric
    syntax:
      content: public int getValue()
      return:
        type: f75371fa
  - uid: system.fabric._transaction_isolation_level.ReadCommitted
    id: ReadCommitted
    parent: system.fabric._transaction_isolation_level
    href: system.fabric._transaction_isolation_level.yml
    langs:
      - java
    name: ReadCommitted
    nameWithType: TransactionIsolationLevel.ReadCommitted
    fullName: system.fabric.TransactionIsolationLevel.ReadCommitted
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/TransactionIsolationLevel.java
      startLine: 19
    package: system.fabric
    summary: '<p>Gibt an, dass flüchtige Daten können nicht während der Transaktion gelesen werden, jedoch geändert werden können. Freigegebene Sperren werden aufrechterhalten, während Daten gelesen wird, werden um dirty Reads zu vermeiden, jedoch Daten können vor dem Ende der Transaktion, die zu nicht wiederholbaren Lesevorgängen oder Phantomdaten führt geändert werden. </p>'
    syntax:
      content: public ReadCommitted=(2)
  - uid: system.fabric._transaction_isolation_level.ReadUncommitted
    id: ReadUncommitted
    parent: system.fabric._transaction_isolation_level
    href: system.fabric._transaction_isolation_level.yml
    langs:
      - java
    name: ReadUncommitted
    nameWithType: TransactionIsolationLevel.ReadUncommitted
    fullName: system.fabric.TransactionIsolationLevel.ReadUncommitted
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/TransactionIsolationLevel.java
      startLine: 13
    package: system.fabric
    summary: '<p>Gibt an, dass die flüchtige Daten während der Transaktion gelesen werden können. </p>'
    syntax:
      content: public ReadUncommitted=(1)
  - uid: system.fabric._transaction_isolation_level.RepeatableRead
    id: RepeatableRead
    parent: system.fabric._transaction_isolation_level
    href: system.fabric._transaction_isolation_level.yml
    langs:
      - java
    name: RepeatableRead
    nameWithType: TransactionIsolationLevel.RepeatableRead
    fullName: system.fabric.TransactionIsolationLevel.RepeatableRead
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/TransactionIsolationLevel.java
      startLine: 26
    package: system.fabric
    summary: '<p>Gibt an, dass die flüchtige Daten gelesen, jedoch nicht während der Transaktion geändert werden können. Sperren werden auf alle Daten platziert, die in einer Abfrage verwendet wird, um zu verhindern, dass andere Benutzer aktualisieren von Daten. Neue Zeilen in Datasets eingefügt werden können und in höheren Lesevorgänge in der aktuellen Transaktion enthalten sind. </p>'
    syntax:
      content: public RepeatableRead=(3)
  - uid: system.fabric._transaction_isolation_level.Serializable
    id: Serializable
    parent: system.fabric._transaction_isolation_level
    href: system.fabric._transaction_isolation_level.yml
    langs:
      - java
    name: Serializable
    nameWithType: TransactionIsolationLevel.Serializable
    fullName: system.fabric.TransactionIsolationLevel.Serializable
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/TransactionIsolationLevel.java
      startLine: 38
    package: system.fabric
    summary: '<p>Gibt an, dass flüchtige Daten serialisierbar sind. Flüchtige Daten können gelesen, aber nicht geändert, und während der Transaktions können keine neuen Daten hinzugefügt werden. Gibt dieses Bereichs liegt, die Sperren auf Datasets gelegt werden. Die Sperren verhindern Updates oder einfügungen in Datasets, bis die Transaktion abgeschlossen ist. </p>'
    syntax:
      content: public Serializable=(5)
  - uid: system.fabric._transaction_isolation_level.Snapshot
    id: Snapshot
    parent: system.fabric._transaction_isolation_level
    href: system.fabric._transaction_isolation_level.yml
    langs:
      - java
    name: Snapshot
    nameWithType: TransactionIsolationLevel.Snapshot
    fullName: system.fabric.TransactionIsolationLevel.Snapshot
    type: Field
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/TransactionIsolationLevel.java
      startLine: 31
    package: system.fabric
    summary: '<p>Gibt die Momentaufnahme, in denen flüchtige Daten gelesen werden kann. Alle Daten, die gelesen werden, werden eine Transaktion konsistente Version der Daten, die zu Beginn der Transaktion vorhanden waren. </p>'
    syntax:
      content: public Snapshot=(4)
references:
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: system.fabric._transaction_isolation_level.getValue*
    name: getValue
    nameWithType: TransactionIsolationLevel.getValue
    fullName: int system.fabric.TransactionIsolationLevel.getValue
    package: system.fabric
  - uid: system.fabric._transaction
    parent: system.fabric
    href: system.fabric._transaction.yml
    name: Transaction
    nameWithType: Transaction
    fullName: system.fabric.Transaction
    type: Class
    syntax:
      content: public class Transaction extends TransactionBase