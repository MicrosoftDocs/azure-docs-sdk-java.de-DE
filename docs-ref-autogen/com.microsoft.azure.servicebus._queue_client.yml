### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.servicebus._queue_client
    id: _queue_client
    parent: com.microsoft.azure.servicebus
    children:
      - com.microsoft.azure.servicebus._queue_client.abandon(UUID)
      - 'com.microsoft.azure.servicebus._queue_client.abandon(UUID,Map<String, Object>)'
      - com.microsoft.azure.servicebus._queue_client.abandonAsync(UUID)
      - 'com.microsoft.azure.servicebus._queue_client.abandonAsync(UUID,Map<String, Object>)'
      - com.microsoft.azure.servicebus._queue_client.cancelScheduledMessage(long)
      - com.microsoft.azure.servicebus._queue_client.cancelScheduledMessageAsync(long)
      - com.microsoft.azure.servicebus._queue_client.complete(UUID)
      - com.microsoft.azure.servicebus._queue_client.completeAsync(UUID)
      - com.microsoft.azure.servicebus._queue_client.deadLetter(UUID)
      - 'com.microsoft.azure.servicebus._queue_client.deadLetter(UUID,Map<String, Object>)'
      - 'com.microsoft.azure.servicebus._queue_client.deadLetter(UUID,String,String)'
      - 'com.microsoft.azure.servicebus._queue_client.deadLetter(UUID,String,String,Map<String, Object>)'
      - com.microsoft.azure.servicebus._queue_client.deadLetterAsync(UUID)
      - 'com.microsoft.azure.servicebus._queue_client.deadLetterAsync(UUID,Map<String, Object>)'
      - 'com.microsoft.azure.servicebus._queue_client.deadLetterAsync(UUID,String,String)'
      - 'com.microsoft.azure.servicebus._queue_client.deadLetterAsync(UUID,String,String,Map<String, Object>)'
      - com.microsoft.azure.servicebus._queue_client.getEntityPath()
      - com.microsoft.azure.servicebus._queue_client.getPrefetchCount()
      - com.microsoft.azure.servicebus._queue_client.getQueueName()
      - com.microsoft.azure.servicebus._queue_client.getReceiveMode()
      - com.microsoft.azure.servicebus._queue_client.onClose()
      - 'com.microsoft.azure.servicebus._queue_client.QueueClient(ConnectionStringBuilder,ReceiveMode)'
      - com.microsoft.azure.servicebus._queue_client.registerMessageHandler(IMessageHandler)
      - 'com.microsoft.azure.servicebus._queue_client.registerMessageHandler(IMessageHandler,MessageHandlerOptions)'
      - com.microsoft.azure.servicebus._queue_client.registerSessionHandler(ISessionHandler)
      - 'com.microsoft.azure.servicebus._queue_client.registerSessionHandler(ISessionHandler,SessionHandlerOptions)'
      - 'com.microsoft.azure.servicebus._queue_client.scheduleMessage(IMessage,Instant)'
      - 'com.microsoft.azure.servicebus._queue_client.scheduleMessageAsync(IMessage,Instant)'
      - com.microsoft.azure.servicebus._queue_client.send(IMessage)
      - com.microsoft.azure.servicebus._queue_client.sendAsync(IMessage)
      - com.microsoft.azure.servicebus._queue_client.sendBatch(Collection<? extends IMessage>)
      - com.microsoft.azure.servicebus._queue_client.sendBatchAsync(Collection<? extends IMessage>)
      - com.microsoft.azure.servicebus._queue_client.setPrefetchCount(int)
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: QueueClient
    nameWithType: QueueClient
    fullName: com.microsoft.azure.servicebus.QueueClient
    type: Class
    source:
      remote: &ref_0
        path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
        branch: master
        repo: 'https://github.com/Azure/azure-service-bus-java'
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 22
    package: com.microsoft.azure.servicebus
    syntax:
      content: public class QueueClient implements IQueueClient
    inheritance:
      - java.lang.Object
      - com.microsoft.azure.servicebus.primitives._client_entity
      - com.microsoft.azure.servicebus.InitializableEntity
    inheritedMembers:
      - 'com.microsoft.azure.servicebus.primitives._client_entity.ClientEntity(final String,final ClientEntity)'
      - com.microsoft.azure.servicebus.primitives._client_entity.close()
      - com.microsoft.azure.servicebus._i_closeable.close()
      - com.microsoft.azure.servicebus.primitives._client_entity.closeAsync()
      - com.microsoft.azure.servicebus._i_closeable.closeAsync()
      - com.microsoft.azure.servicebus.primitives._client_entity.finalize()
      - com.microsoft.azure.servicebus.primitives._client_entity.getClientId()
      - com.microsoft.azure.servicebus.primitives._client_entity.getIsClosed()
      - com.microsoft.azure.servicebus.primitives._client_entity.getIsClosingOrClosed()
      - 'com.microsoft.azure.servicebus._initializable_entity.InitializableEntity(String,ClientEntity)'
      - com.microsoft.azure.servicebus.primitives._client_entity.setClosed()
      - com.microsoft.azure.servicebus.primitives._client_entity.throwIfClosed(Throwable)
  - uid: com.microsoft.azure.servicebus._queue_client.abandon(UUID)
    id: abandon(UUID)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: abandon(UUID lockToken)
    nameWithType: QueueClient.abandon(UUID lockToken)
    fullName: void com.microsoft.azure.servicebus.QueueClient.abandon(UUID lockToken)
    overload: com.microsoft.azure.servicebus._queue_client.abandon*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 237
    package: com.microsoft.azure.servicebus
    syntax:
      content: public void abandon(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
  - uid: 'com.microsoft.azure.servicebus._queue_client.abandon(UUID,Map<String, Object>)'
    id: 'abandon(UUID,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'abandon(UUID lockToken, Map<String, Object> propertiesToModify)'
    nameWithType: 'QueueClient.abandon(UUID lockToken, Map<String, Object> propertiesToModify)'
    fullName: 'void com.microsoft.azure.servicebus.QueueClient.abandon(UUID lockToken, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._queue_client.abandon*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 242
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public void abandon(UUID lockToken, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
        - id: propertiesToModify
          type: e7b06046
  - uid: com.microsoft.azure.servicebus._queue_client.abandonAsync(UUID)
    id: abandonAsync(UUID)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: abandonAsync(UUID lockToken)
    nameWithType: QueueClient.abandonAsync(UUID lockToken)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.abandonAsync(UUID lockToken)
    overload: com.microsoft.azure.servicebus._queue_client.abandonAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 247
    package: com.microsoft.azure.servicebus
    syntax:
      content: public CompletableFuture<Void> abandonAsync(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
      return:
        type: db03ee24
  - uid: 'com.microsoft.azure.servicebus._queue_client.abandonAsync(UUID,Map<String, Object>)'
    id: 'abandonAsync(UUID,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    nameWithType: 'QueueClient.abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    fullName: 'CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._queue_client.abandonAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 252
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public CompletableFuture<Void> abandonAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
        - id: propertiesToModify
          type: e7b06046
      return:
        type: db03ee24
  - uid: com.microsoft.azure.servicebus._queue_client.cancelScheduledMessage(long)
    id: cancelScheduledMessage(long)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: cancelScheduledMessage(long sequenceNumber)
    nameWithType: QueueClient.cancelScheduledMessage(long sequenceNumber)
    fullName: void com.microsoft.azure.servicebus.QueueClient.cancelScheduledMessage(long sequenceNumber)
    overload: com.microsoft.azure.servicebus._queue_client.cancelScheduledMessage*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 176
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Bricht das Einreihen einer bereits gesendeten geplante Nachricht ab, wenn es nicht bereits in die Warteschlange eingereihten war. Diese Methode blockiert, bis die Nachricht, auf die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: public void cancelScheduledMessage(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p>Sequenznummer der Nachricht geplante </p>
    overridden: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessage(long)
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn der geplante Nachricht konnte nicht abgebrochen werden </p>
  - uid: com.microsoft.azure.servicebus._queue_client.cancelScheduledMessageAsync(long)
    id: cancelScheduledMessageAsync(long)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: cancelScheduledMessageAsync(long sequenceNumber)
    nameWithType: QueueClient.cancelScheduledMessageAsync(long sequenceNumber)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.cancelScheduledMessageAsync(long sequenceNumber)
    overload: com.microsoft.azure.servicebus._queue_client.cancelScheduledMessageAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 163
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Bricht das Einreihen einer bereits gesendeten geplante Nachricht ab, wenn es nicht bereits in die Warteschlange eingereihten war. Dies ist eine asynchrone Methode, die Rückgabe einer CompletableFuture die abgeschlossen wird, wenn die Nachricht abgebrochen wird.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> cancelScheduledMessageAsync(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p>Sequenznummer der Nachricht geplante </p>
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die den ausstehenden Abbruch darstellt. </p>'
    overridden: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessageAsync(long)
  - uid: com.microsoft.azure.servicebus._queue_client.complete(UUID)
    id: complete(UUID)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: complete(UUID lockToken)
    nameWithType: QueueClient.complete(UUID lockToken)
    fullName: void com.microsoft.azure.servicebus.QueueClient.complete(UUID lockToken)
    overload: com.microsoft.azure.servicebus._queue_client.complete*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 257
    package: com.microsoft.azure.servicebus
    syntax:
      content: public void complete(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
  - uid: com.microsoft.azure.servicebus._queue_client.completeAsync(UUID)
    id: completeAsync(UUID)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: completeAsync(UUID lockToken)
    nameWithType: QueueClient.completeAsync(UUID lockToken)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.completeAsync(UUID lockToken)
    overload: com.microsoft.azure.servicebus._queue_client.completeAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 262
    package: com.microsoft.azure.servicebus
    syntax:
      content: public CompletableFuture<Void> completeAsync(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
      return:
        type: db03ee24
  - uid: com.microsoft.azure.servicebus._queue_client.deadLetter(UUID)
    id: deadLetter(UUID)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: deadLetter(UUID lockToken)
    nameWithType: QueueClient.deadLetter(UUID lockToken)
    fullName: void com.microsoft.azure.servicebus.QueueClient.deadLetter(UUID lockToken)
    overload: com.microsoft.azure.servicebus._queue_client.deadLetter*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 287
    package: com.microsoft.azure.servicebus
    syntax:
      content: public void deadLetter(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
  - uid: 'com.microsoft.azure.servicebus._queue_client.deadLetter(UUID,Map<String, Object>)'
    id: 'deadLetter(UUID,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)'
    nameWithType: 'QueueClient.deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)'
    fullName: 'void com.microsoft.azure.servicebus.QueueClient.deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._queue_client.deadLetter*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 292
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public void deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
        - id: propertiesToModify
          type: e7b06046
  - uid: 'com.microsoft.azure.servicebus._queue_client.deadLetter(UUID,String,String)'
    id: 'deadLetter(UUID,String,String)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    nameWithType: 'QueueClient.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    fullName: 'void com.microsoft.azure.servicebus.QueueClient.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    overload: com.microsoft.azure.servicebus._queue_client.deadLetter*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 297
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
      parameters:
        - id: lockToken
          type: add9545a
        - id: deadLetterReason
          type: '26831127'
        - id: deadLetterErrorDescription
          type: '26831127'
  - uid: 'com.microsoft.azure.servicebus._queue_client.deadLetter(UUID,String,String,Map<String, Object>)'
    id: 'deadLetter(UUID,String,String,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    nameWithType: 'QueueClient.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    fullName: 'void com.microsoft.azure.servicebus.QueueClient.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._queue_client.deadLetter*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 302
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
        - id: deadLetterReason
          type: '26831127'
        - id: deadLetterErrorDescription
          type: '26831127'
        - id: propertiesToModify
          type: e7b06046
  - uid: com.microsoft.azure.servicebus._queue_client.deadLetterAsync(UUID)
    id: deadLetterAsync(UUID)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: deadLetterAsync(UUID lockToken)
    nameWithType: QueueClient.deadLetterAsync(UUID lockToken)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.deadLetterAsync(UUID lockToken)
    overload: com.microsoft.azure.servicebus._queue_client.deadLetterAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 307
    package: com.microsoft.azure.servicebus
    syntax:
      content: public CompletableFuture<Void> deadLetterAsync(UUID lockToken)
      parameters:
        - id: lockToken
          type: add9545a
      return:
        type: db03ee24
  - uid: 'com.microsoft.azure.servicebus._queue_client.deadLetterAsync(UUID,Map<String, Object>)'
    id: 'deadLetterAsync(UUID,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    nameWithType: 'QueueClient.deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    fullName: 'CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._queue_client.deadLetterAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 312
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public CompletableFuture<Void> deadLetterAsync(UUID lockToken, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
        - id: propertiesToModify
          type: e7b06046
      return:
        type: db03ee24
  - uid: 'com.microsoft.azure.servicebus._queue_client.deadLetterAsync(UUID,String,String)'
    id: 'deadLetterAsync(UUID,String,String)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    nameWithType: 'QueueClient.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    fullName: 'CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
    overload: com.microsoft.azure.servicebus._queue_client.deadLetterAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 317
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)'
      parameters:
        - id: lockToken
          type: add9545a
        - id: deadLetterReason
          type: '26831127'
        - id: deadLetterErrorDescription
          type: '26831127'
      return:
        type: db03ee24
  - uid: 'com.microsoft.azure.servicebus._queue_client.deadLetterAsync(UUID,String,String,Map<String, Object>)'
    id: 'deadLetterAsync(UUID,String,String,Map<String, Object>)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    nameWithType: 'QueueClient.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    fullName: 'CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
    overload: com.microsoft.azure.servicebus._queue_client.deadLetterAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 322
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public CompletableFuture<Void> deadLetterAsync(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)'
      parameters:
        - id: lockToken
          type: add9545a
        - id: deadLetterReason
          type: '26831127'
        - id: deadLetterErrorDescription
          type: '26831127'
        - id: propertiesToModify
          type: e7b06046
      return:
        type: db03ee24
  - uid: com.microsoft.azure.servicebus._queue_client.getEntityPath()
    id: getEntityPath()
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: getEntityPath()
    nameWithType: QueueClient.getEntityPath()
    fullName: String com.microsoft.azure.servicebus.QueueClient.getEntityPath()
    overload: com.microsoft.azure.servicebus._queue_client.getEntityPath*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 181
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Ruft den Pfad der Entität, die dieser Client wird ab, Senden von Nachrichten an oder Empfang von Nachrichten aus.</p>
      <p></p>
    syntax:
      content: public String getEntityPath()
      return:
        type: '26831127'
        description: '<p>Pfad der Entität, der diesem Client eine Verbindung herstellt </p>'
    overridden: com.microsoft.azure.servicebus._i_message_entity_client.getEntityPath()
  - uid: com.microsoft.azure.servicebus._queue_client.getPrefetchCount()
    id: getPrefetchCount()
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: getPrefetchCount()
    nameWithType: QueueClient.getPrefetchCount()
    fullName: int com.microsoft.azure.servicebus.QueueClient.getPrefetchCount()
    overload: com.microsoft.azure.servicebus._queue_client.getPrefetchCount*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 327
    package: com.microsoft.azure.servicebus
    syntax:
      content: public int getPrefetchCount()
      return:
        type: f75371fa
  - uid: com.microsoft.azure.servicebus._queue_client.getQueueName()
    id: getQueueName()
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: getQueueName()
    nameWithType: QueueClient.getQueueName()
    fullName: String com.microsoft.azure.servicebus.QueueClient.getQueueName()
    overload: com.microsoft.azure.servicebus._queue_client.getQueueName*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 337
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Ruft den Namen der Warteschlange ab.</p>
      <p></p>
    syntax:
      content: public String getQueueName()
      return:
        type: '26831127'
        description: <p>Der Name der Warteschlange. </p>
    overridden: com.microsoft.azure.servicebus._i_queue_client.getQueueName()
  - uid: com.microsoft.azure.servicebus._queue_client.getReceiveMode()
    id: getReceiveMode()
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: getReceiveMode()
    nameWithType: QueueClient.getReceiveMode()
    fullName: ReceiveMode com.microsoft.azure.servicebus.QueueClient.getReceiveMode()
    overload: com.microsoft.azure.servicebus._queue_client.getReceiveMode*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 124
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Ruft die <xref uid="com.microsoft.azure.servicebus._receive_mode" data-throw-if-not-resolved="false">ReceiveMode</xref> des aktuellen Empfängers</p>
      <p></p>
    syntax:
      content: public ReceiveMode getReceiveMode()
      return:
        type: com.microsoft.azure.servicebus._receive_mode
        description: <p>Der Receive-Modus. </p>
    overridden: com.microsoft.azure.servicebus._i_queue_client.getReceiveMode()
  - uid: com.microsoft.azure.servicebus._queue_client.onClose()
    id: onClose()
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: onClose()
    nameWithType: QueueClient.onClose()
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.onClose()
    overload: com.microsoft.azure.servicebus._queue_client.onClose*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 212
    package: com.microsoft.azure.servicebus
    syntax:
      content: protected CompletableFuture<Void> onClose()
      return:
        type: db03ee24
  - uid: 'com.microsoft.azure.servicebus._queue_client.QueueClient(ConnectionStringBuilder,ReceiveMode)'
    id: 'QueueClient(ConnectionStringBuilder,ReceiveMode)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'QueueClient(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)'
    nameWithType: 'QueueClient.QueueClient(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)'
    fullName: 'com.microsoft.azure.servicebus.QueueClient.QueueClient(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)'
    overload: com.microsoft.azure.servicebus._queue_client.QueueClient*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 42
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public QueueClient(ConnectionStringBuilder amqpConnectionStringBuilder, ReceiveMode receiveMode)'
      parameters:
        - id: amqpConnectionStringBuilder
          type: com.microsoft.azure.servicebus.primitives._connection_string_builder
        - id: receiveMode
          type: com.microsoft.azure.servicebus._receive_mode
  - uid: com.microsoft.azure.servicebus._queue_client.registerMessageHandler(IMessageHandler)
    id: registerMessageHandler(IMessageHandler)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: registerMessageHandler(IMessageHandler handler)
    nameWithType: QueueClient.registerMessageHandler(IMessageHandler handler)
    fullName: void com.microsoft.azure.servicebus.QueueClient.registerMessageHandler(IMessageHandler handler)
    overload: com.microsoft.azure.servicebus._queue_client.registerMessageHandler*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 186
    package: com.microsoft.azure.servicebus
    syntax:
      content: public void registerMessageHandler(IMessageHandler handler)
      parameters:
        - id: handler
          type: com.microsoft.azure.servicebus._i_message_handler
  - uid: 'com.microsoft.azure.servicebus._queue_client.registerMessageHandler(IMessageHandler,MessageHandlerOptions)'
    id: 'registerMessageHandler(IMessageHandler,MessageHandlerOptions)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)'
    nameWithType: 'QueueClient.registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)'
    fullName: 'void com.microsoft.azure.servicebus.QueueClient.registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)'
    overload: com.microsoft.azure.servicebus._queue_client.registerMessageHandler*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 191
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public void registerMessageHandler(IMessageHandler handler, MessageHandlerOptions handlerOptions)'
      parameters:
        - id: handler
          type: com.microsoft.azure.servicebus._i_message_handler
        - id: handlerOptions
          type: com.microsoft.azure.servicebus._message_handler_options
  - uid: com.microsoft.azure.servicebus._queue_client.registerSessionHandler(ISessionHandler)
    id: registerSessionHandler(ISessionHandler)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: registerSessionHandler(ISessionHandler handler)
    nameWithType: QueueClient.registerSessionHandler(ISessionHandler handler)
    fullName: void com.microsoft.azure.servicebus.QueueClient.registerSessionHandler(ISessionHandler handler)
    overload: com.microsoft.azure.servicebus._queue_client.registerSessionHandler*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 196
    package: com.microsoft.azure.servicebus
    syntax:
      content: public void registerSessionHandler(ISessionHandler handler)
      parameters:
        - id: handler
          type: com.microsoft.azure.servicebus._i_session_handler
  - uid: 'com.microsoft.azure.servicebus._queue_client.registerSessionHandler(ISessionHandler,SessionHandlerOptions)'
    id: 'registerSessionHandler(ISessionHandler,SessionHandlerOptions)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)'
    nameWithType: 'QueueClient.registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)'
    fullName: 'void com.microsoft.azure.servicebus.QueueClient.registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)'
    overload: com.microsoft.azure.servicebus._queue_client.registerSessionHandler*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 201
    package: com.microsoft.azure.servicebus
    syntax:
      content: 'public void registerSessionHandler(ISessionHandler handler, SessionHandlerOptions handlerOptions)'
      parameters:
        - id: handler
          type: com.microsoft.azure.servicebus._i_session_handler
        - id: handlerOptions
          type: com.microsoft.azure.servicebus._session_handler_options
  - uid: 'com.microsoft.azure.servicebus._queue_client.scheduleMessage(IMessage,Instant)'
    id: 'scheduleMessage(IMessage,Instant)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    nameWithType: 'QueueClient.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    fullName: 'long com.microsoft.azure.servicebus.QueueClient.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    overload: com.microsoft.azure.servicebus._queue_client.scheduleMessage*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 171
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Sendet eine geplante Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Eine geplante Nachricht in die Warteschlange eingereiht und an Empfänger nur zum Zeitpunkt geplanten Enqueue zur Verfügung gestellt. Diese Methode blockiert, bis die Nachricht, auf die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: 'public long scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
        - id: scheduledEnqueueTimeUtc
          type: 328f8254
          description: '<p>Zeitpunkt, an dem die Nachricht in der Entität in die Warteschlange eingereiht werden sollen </p>'
      return:
        type: 0364520f
        description: <p>Sequenznummer der Nachricht geplante </p>
    overridden: 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessage(IMessage,Instant)'
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Nachricht konnte nicht die Entität gesendet werden </p>
  - uid: 'com.microsoft.azure.servicebus._queue_client.scheduleMessageAsync(IMessage,Instant)'
    id: 'scheduleMessageAsync(IMessage,Instant)'
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: 'scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    nameWithType: 'QueueClient.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    fullName: 'CompletableFuture<Long> com.microsoft.azure.servicebus.QueueClient.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    overload: com.microsoft.azure.servicebus._queue_client.scheduleMessageAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 155
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Sendet eine geplante Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Eine geplante Nachricht in die Warteschlange eingereiht und an Empfänger nur zum Zeitpunkt geplanten Enqueue zur Verfügung gestellt. Dies ist eine asynchrone Methode, die eine CompletableFuture die abgeschlossen wird, wenn die Nachricht, auf die Entität gesendet wird zurückgibt. Die CompletableFuture nach Abschluss gibt die Sequenznummer der geplanten Nachricht die verwendet werden kann, um die Planung der Nachricht abzubrechen.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Long> scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
        - id: scheduledEnqueueTimeUtc
          type: 328f8254
          description: '<p>Zeitpunkt, an dem die Nachricht in der Entität in die Warteschlange eingereiht werden sollen </p>'
      return:
        type: 30822cb1
        description: '<p>eine CompletableFuture, die die ausstehenden senden, das die Sequenznummer der geplanten Nachricht zurückgibt darstellt. Diese Sequenznummer kann verwendet werden, um die Planung der Nachricht abzubrechen. </p>'
    overridden: 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessageAsync(IMessage,Instant)'
  - uid: com.microsoft.azure.servicebus._queue_client.send(IMessage)
    id: send(IMessage)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: send(IMessage message)
    nameWithType: QueueClient.send(IMessage message)
    fullName: void com.microsoft.azure.servicebus.QueueClient.send(IMessage message)
    overload: com.microsoft.azure.servicebus._queue_client.send*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 129
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Sendet eine Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Diese Methode blockiert, bis die Nachricht, auf die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: public void send(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
    overridden: com.microsoft.azure.servicebus._i_message_sender.send(IMessage)
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn Nachricht konnte nicht die Entität gesendet werden </p>
  - uid: com.microsoft.azure.servicebus._queue_client.sendAsync(IMessage)
    id: sendAsync(IMessage)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: sendAsync(IMessage message)
    nameWithType: QueueClient.sendAsync(IMessage message)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.sendAsync(IMessage message)
    overload: com.microsoft.azure.servicebus._queue_client.sendAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 139
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Sendet eine Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Dies ist eine asynchrone Methode, die eine CompletableFuture die abgeschlossen wird, wenn die Nachricht, auf die Entität gesendet wird zurückgibt.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> sendAsync(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden senden darstellt. </p>'
    overridden: com.microsoft.azure.servicebus._i_message_sender.sendAsync(IMessage)
  - uid: com.microsoft.azure.servicebus._queue_client.sendBatch(Collection<? extends IMessage>)
    id: sendBatch(Collection<? extends IMessage>)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: sendBatch(Collection<? extends IMessage> messages)
    nameWithType: QueueClient.sendBatch(Collection<? extends IMessage> messages)
    fullName: void com.microsoft.azure.servicebus.QueueClient.sendBatch(Collection<? extends IMessage> messages)
    overload: com.microsoft.azure.servicebus._queue_client.sendBatch*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 134
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Sendet einen Nachrichtenbatch für die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Diese Methode blockiert, bis der Batch an die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: public void sendBatch(Collection<? extends IMessage> messages)
      parameters:
        - id: messages
          type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
          description: <p>Auflistung von Nachrichten an die Entität gesendet werden </p>
    overridden: com.microsoft.azure.servicebus._i_message_sender.sendBatch(Collection<? extends IMessage>)
    exceptions:
      - type: 8256ba40
        description: <p>Wenn der aktuelle Thread beim Warten unterbrochen wurde </p>
      - type: 73fec9fb
        description: <p>Wenn der Batch für die Entität gesendet werden konnte nicht </p>
  - uid: com.microsoft.azure.servicebus._queue_client.sendBatchAsync(Collection<? extends IMessage>)
    id: sendBatchAsync(Collection<? extends IMessage>)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: sendBatchAsync(Collection<? extends IMessage> messages)
    nameWithType: QueueClient.sendBatchAsync(Collection<? extends IMessage> messages)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.sendBatchAsync(Collection<? extends IMessage> messages)
    overload: com.microsoft.azure.servicebus._queue_client.sendBatchAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 147
    package: com.microsoft.azure.servicebus
    summary: |-
      <p>Sendet einen Nachrichtenbatch für die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Dies ist eine asynchrone Methode, die eine CompletableFuture die abgeschlossen wird, wenn der Batch, auf die Entität gesendet wird zurückgibt.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> sendBatchAsync(Collection<? extends IMessage> messages)
      parameters:
        - id: messages
          type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
          description: <p>Auflistung von Nachrichten an die Entität gesendet werden </p>
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden senden darstellt. </p>'
    overridden: com.microsoft.azure.servicebus._i_message_sender.sendBatchAsync(Collection<? extends IMessage>)
  - uid: com.microsoft.azure.servicebus._queue_client.setPrefetchCount(int)
    id: setPrefetchCount(int)
    parent: com.microsoft.azure.servicebus._queue_client
    href: com.microsoft.azure.servicebus._queue_client.yml
    langs:
      - java
    name: setPrefetchCount(int prefetchCount)
    nameWithType: QueueClient.setPrefetchCount(int prefetchCount)
    fullName: void com.microsoft.azure.servicebus.QueueClient.setPrefetchCount(int prefetchCount)
    overload: com.microsoft.azure.servicebus._queue_client.setPrefetchCount*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/QueueClient.java
      startLine: 332
    package: com.microsoft.azure.servicebus
    syntax:
      content: public void setPrefetchCount(int prefetchCount)
      parameters:
        - id: prefetchCount
          type: f75371fa
references:
  - uid: com.microsoft.azure.servicebus._queue_client.QueueClient*
    name: QueueClient
    nameWithType: QueueClient.QueueClient
    fullName: com.microsoft.azure.servicebus.QueueClient.QueueClient
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.getReceiveMode*
    name: getReceiveMode
    nameWithType: QueueClient.getReceiveMode
    fullName: ReceiveMode com.microsoft.azure.servicebus.QueueClient.getReceiveMode
    package: com.microsoft.azure.servicebus
  - uid: 8256ba40
    spec.java:
      - name: InterruptedException
        fullName: InterruptedException
  - uid: 73fec9fb
    spec.java:
      - name: ServiceBusException
        fullName: ServiceBusException
  - uid: com.microsoft.azure.servicebus._queue_client.send*
    name: send
    nameWithType: QueueClient.send
    fullName: void com.microsoft.azure.servicebus.QueueClient.send
    package: com.microsoft.azure.servicebus
  - uid: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
    spec.java:
      - name: 'Collection<? extends '
        fullName: 'Collection<? extends '
      - uid: com.microsoft.azure.servicebus._i_message
        name: IMessage
        fullName: com.microsoft.azure.servicebus.IMessage
        href: com.microsoft.azure.servicebus._i_message.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.servicebus._queue_client.sendBatch*
    name: sendBatch
    nameWithType: QueueClient.sendBatch
    fullName: void com.microsoft.azure.servicebus.QueueClient.sendBatch
    package: com.microsoft.azure.servicebus
  - uid: db03ee24
    spec.java:
      - name: CompletableFuture<Void>
        fullName: CompletableFuture<Void>
  - uid: com.microsoft.azure.servicebus._queue_client.sendAsync*
    name: sendAsync
    nameWithType: QueueClient.sendAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.sendAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.sendBatchAsync*
    name: sendBatchAsync
    nameWithType: QueueClient.sendBatchAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.sendBatchAsync
    package: com.microsoft.azure.servicebus
  - uid: 328f8254
    spec.java:
      - name: Instant
        fullName: Instant
  - uid: 30822cb1
    spec.java:
      - name: CompletableFuture<Long>
        fullName: CompletableFuture<Long>
  - uid: com.microsoft.azure.servicebus._queue_client.scheduleMessageAsync*
    name: scheduleMessageAsync
    nameWithType: QueueClient.scheduleMessageAsync
    fullName: CompletableFuture<Long> com.microsoft.azure.servicebus.QueueClient.scheduleMessageAsync
    package: com.microsoft.azure.servicebus
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: com.microsoft.azure.servicebus._queue_client.cancelScheduledMessageAsync*
    name: cancelScheduledMessageAsync
    nameWithType: QueueClient.cancelScheduledMessageAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.cancelScheduledMessageAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.scheduleMessage*
    name: scheduleMessage
    nameWithType: QueueClient.scheduleMessage
    fullName: long com.microsoft.azure.servicebus.QueueClient.scheduleMessage
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.cancelScheduledMessage*
    name: cancelScheduledMessage
    nameWithType: QueueClient.cancelScheduledMessage
    fullName: void com.microsoft.azure.servicebus.QueueClient.cancelScheduledMessage
    package: com.microsoft.azure.servicebus
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.servicebus._queue_client.getEntityPath*
    name: getEntityPath
    nameWithType: QueueClient.getEntityPath
    fullName: String com.microsoft.azure.servicebus.QueueClient.getEntityPath
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.registerMessageHandler*
    name: registerMessageHandler
    nameWithType: QueueClient.registerMessageHandler
    fullName: void com.microsoft.azure.servicebus.QueueClient.registerMessageHandler
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.registerSessionHandler*
    name: registerSessionHandler
    nameWithType: QueueClient.registerSessionHandler
    fullName: void com.microsoft.azure.servicebus.QueueClient.registerSessionHandler
    package: com.microsoft.azure.servicebus
  - uid: add9545a
    spec.java:
      - name: UUID
        fullName: UUID
  - uid: com.microsoft.azure.servicebus._queue_client.abandon*
    name: abandon
    nameWithType: QueueClient.abandon
    fullName: void com.microsoft.azure.servicebus.QueueClient.abandon
    package: com.microsoft.azure.servicebus
  - uid: e7b06046
    spec.java:
      - name: 'Map<String, Object>'
        fullName: 'Map<String, Object>'
  - uid: com.microsoft.azure.servicebus._queue_client.abandonAsync*
    name: abandonAsync
    nameWithType: QueueClient.abandonAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.abandonAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.complete*
    name: complete
    nameWithType: QueueClient.complete
    fullName: void com.microsoft.azure.servicebus.QueueClient.complete
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.completeAsync*
    name: completeAsync
    nameWithType: QueueClient.completeAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.completeAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.deadLetter*
    name: deadLetter
    nameWithType: QueueClient.deadLetter
    fullName: void com.microsoft.azure.servicebus.QueueClient.deadLetter
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.deadLetterAsync*
    name: deadLetterAsync
    nameWithType: QueueClient.deadLetterAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.deadLetterAsync
    package: com.microsoft.azure.servicebus
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.servicebus._queue_client.getPrefetchCount*
    name: getPrefetchCount
    nameWithType: QueueClient.getPrefetchCount
    fullName: int com.microsoft.azure.servicebus.QueueClient.getPrefetchCount
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.setPrefetchCount*
    name: setPrefetchCount
    nameWithType: QueueClient.setPrefetchCount
    fullName: void com.microsoft.azure.servicebus.QueueClient.setPrefetchCount
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.getQueueName*
    name: getQueueName
    nameWithType: QueueClient.getQueueName
    fullName: String com.microsoft.azure.servicebus.QueueClient.getQueueName
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._queue_client.onClose*
    name: onClose
    nameWithType: QueueClient.onClose
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.QueueClient.onClose
    package: com.microsoft.azure.servicebus
  - uid: 'com.microsoft.azure.servicebus.primitives._client_entity.ClientEntity(final String,final ClientEntity)'
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: 'ClientEntity(final String clientId, final ClientEntity parent)'
    nameWithType: 'ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)'
    fullName: 'com.microsoft.azure.servicebus.primitives.ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)'
    type: Constructor
    syntax:
      content: 'protected ClientEntity(final String clientId, final ClientEntity parent)'
      parameters:
        - id: clientId
          type: 3d93591e
        - id: parent
          type: 93de0ef9com.microsoft.azure.servicebus.primitives._client_entity
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.close()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: close()
    nameWithType: ClientEntity.close()
    fullName: final void com.microsoft.azure.servicebus.primitives.ClientEntity.close()
    type: Method
    syntax:
      content: public final void close()
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.servicebus._i_closeable.close()
    parent: com.microsoft.azure.servicebus._i_closeable
    href: com.microsoft.azure.servicebus._i_closeable.yml
    name: close()
    nameWithType: ICloseable.close()
    fullName: void com.microsoft.azure.servicebus.ICloseable.close()
    type: Method
    summary: '<p>Synchron wird geschlossen, und gibt diesem Objekt zugeordneten Ressourcen frei. Beim Aufrufen dieser Methode entspricht der aufrufen. Diese Methode blockiert, bis diese wird das Objekt geschlossen. </p>'
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.closeAsync()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: closeAsync()
    nameWithType: ClientEntity.closeAsync()
    fullName: final CompletableFuture<Void> com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()
    type: Method
    syntax:
      content: public final CompletableFuture<Void> closeAsync()
      return:
        type: fc984e6f
  - uid: com.microsoft.azure.servicebus._i_closeable.closeAsync()
    parent: com.microsoft.azure.servicebus._i_closeable
    href: com.microsoft.azure.servicebus._i_closeable.yml
    name: closeAsync()
    nameWithType: ICloseable.closeAsync()
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.ICloseable.closeAsync()
    type: Method
    summary: '<p>Wird geschlossen, und gibt diesem Objekt zugeordneten Ressourcen frei. Ein Objekt kann nicht verwendet werden, nachdem sie geschlossen wurde. Dies ist eine asynchrone Methode, die eine CompletableFuture wird sofort zurückgegeben. Dieses Objekt wird vollständig beendet, wenn die zurückgegebene CompletableFuture abgeschlossen ist. </p>'
    syntax:
      content: public CompletableFuture<Void> closeAsync()
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die das Schließen des dieses Objekt darstellt. </p>'
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.finalize()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: finalize()
    nameWithType: ClientEntity.finalize()
    fullName: void com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()
    type: Method
    syntax:
      content: protected void finalize()
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.getClientId()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: getClientId()
    nameWithType: ClientEntity.getClientId()
    fullName: String com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()
    type: Method
    syntax:
      content: public String getClientId()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.getIsClosed()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: getIsClosed()
    nameWithType: ClientEntity.getIsClosed()
    fullName: boolean com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()
    type: Method
    syntax:
      content: protected boolean getIsClosed()
      return:
        type: 4fc6e284
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.getIsClosingOrClosed()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: getIsClosingOrClosed()
    nameWithType: ClientEntity.getIsClosingOrClosed()
    fullName: boolean com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()
    type: Method
    syntax:
      content: protected boolean getIsClosingOrClosed()
      return:
        type: 4fc6e284
  - uid: 'com.microsoft.azure.servicebus._initializable_entity.InitializableEntity(String,ClientEntity)'
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.setClosed()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: setClosed()
    nameWithType: ClientEntity.setClosed()
    fullName: final void com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()
    type: Method
    syntax:
      content: protected final void setClosed()
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.throwIfClosed(Throwable)
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: throwIfClosed(Throwable cause)
    nameWithType: ClientEntity.throwIfClosed(Throwable cause)
    fullName: final void com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(Throwable cause)
    type: Method
    syntax:
      content: protected final void throwIfClosed(Throwable cause)
      parameters:
        - id: cause
          type: a04fafd7
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.servicebus._i_queue_client
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_queue_client.yml
    name: IQueueClient
    nameWithType: IQueueClient
    fullName: com.microsoft.azure.servicebus.IQueueClient
    type: Interface
    summary: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.servicebus._queue_client\" data-throw-if-not-resolved=\"false\">QueueClient</xref> für alle grundlegenden Interaktionen mit Service Bus-Warteschlange verwendet werden kann. </p>"
    syntax:
      content: 'public interface IQueueClient extends IMessageSender,IMessageEntityClient'
  - uid: com.microsoft.azure.servicebus._receive_mode
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._receive_mode.yml
    name: ReceiveMode
    nameWithType: ReceiveMode
    fullName: com.microsoft.azure.servicebus.ReceiveMode
    type: Enum
    summary: |-
      <p>Enumeration zur Darstellung der beiden empfangsmodi, Azure Service Bus unterstützt.</p>
      <p></p>
    syntax:
      content: public enum ReceiveMode
  - uid: com.microsoft.azure.servicebus.primitives._messaging_factory
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._messaging_factory.yml
    name: MessagingFactory
    nameWithType: MessagingFactory
    fullName: com.microsoft.azure.servicebus.primitives.MessagingFactory
    type: Class
    summary: '<p>Abstrahiert alle AMQP im Zusammenhang details und kapselt eine AMQP-Verbindung und zum Verwalten des Lebenszyklus der Reihe nach. Jede Instanz dieser Klasse stellen eine AMQP-Verbindung mit dem Namespace dar. Wenn eine Anwendung mehrere Absender, Empfänger oder Clients, die mithilfe der gleichen MessagingFacotry-Instanz erstellt, gemeinsam alle diese Absender, Empfänger oder Clients die Verbindung mit dem Namespace. </p>'
    syntax:
      content: public class MessagingFactory extends ClientEntity
  - uid: com.microsoft.azure.servicebus._i_message_sender
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: IMessageSender
    nameWithType: IMessageSender
    fullName: com.microsoft.azure.servicebus.IMessageSender
    type: Interface
    summary: |-
      <p>Stellt den Absender einer Nachricht, die Nachrichten an Azure Service Bus sendet.</p>
      <p></p>
    syntax:
      content: public interface IMessageSender extends IMessageEntityClient
  - uid: com.microsoft.azure.servicebus.primitives._misc_request_response_operation_handler
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._misc_request_response_operation_handler.yml
    name: MiscRequestResponseOperationHandler
    nameWithType: MiscRequestResponseOperationHandler
    fullName: com.microsoft.azure.servicebus.primitives.MiscRequestResponseOperationHandler
    type: Class
    syntax:
      content: public class MiscRequestResponseOperationHandler extends ClientEntity
  - uid: com.microsoft.azure.servicebus.primitives._connection_string_builder
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._connection_string_builder.yml
    name: ConnectionStringBuilder
    nameWithType: ConnectionStringBuilder
    fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
    type: Class
    summary: |-
      <p>Diese Klasse kann verwendet werden, um eine Verbindungszeichenfolge erstellen. diese Kommunikation mit Service Bus-Entitäten herstellen können. Sie können auch die grundlegende Validierung auf eine vorhandene Verbindungszeichenfolge verwendet werden. </p>
      <p>Beispielcode: <pre><code>ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder(

                                                   "ServiceBusNamespaceName", 

                                                   "ServiceBusEntityName", // QueueName or TopicName or SubscriptionPath

                                                   "SharedAccessSignatureKeyName", 

                                                   "SharedAccessSignatureKey");

           

          String connectionString = connectionStringBuilder.toString();

          </code></pre></p>

      <p>Eine Verbindungszeichenfolge ist im Grunde eine Zeichenfolge von Schlüssel-Wert-Paar senkrechter umfasste ";". Grundlegende Format ist {{ &lt;} Schlüssel {&gt;} = { &lt;} Wert {&gt;} [; {} &lt;} Schlüssel {&gt;} = { &lt;} Wert {&gt;}]}, in denen unterstützten Schlüsselname lautet wie folgt:<itemizedlist><listitem><p>Endpunkt - URL, an den Service Bus-Namespace verweist. </p></listitem><listitem><p>EntityPath - Pfad zu der Servicebus-Entität (Warteschlange/Thema/Abonnement /). Für Warteschlangen und Themen ist es nur die Namen der Entität. Für Abonnements Pfad ist &lt;Name_des_themas&gt;/Subscriptions /&lt;SubscriptionName&gt; </p></listitem><listitem><p>SharedAccessKeyName - Key-Name auf den entsprechenden freigegebenen Zugriffsrichtlinie für den Namespace oder Entität. </p></listitem><listitem><p>SharedAccessKey - Schlüssel-Wert für die entsprechenden SAS-Richtlinienregel des Namespace oder der Entität. </p></listitem><listitem><p>SharedAccessSignatureToken - können anstelle einer Schlüsselnamen und einen Schlüsselwert, Clients eine bereits generierte SAS-Token bereitstellen. </p></listitem><listitem><p>OperationTimeout - Standardtimeout für alle Absender, Empfänger und Clients, die aus dieser Verbindungszeichenfolge erstellte verwendet werden. </p></listitem><listitem><p><xref uid="com.microsoft.azure.servicebus.primitives._retry_policy" data-throw-if-not-resolved="false">Die RetryPolicy</xref> - Name der Richtlinie versuchen Sie es erneut. </p></listitem></itemizedlist></p>
    syntax:
      content: public class ConnectionStringBuilder
  - uid: com.microsoft.azure.servicebus.primitives._service_bus_exception
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._service_bus_exception.yml
    name: ServiceBusException
    nameWithType: ServiceBusException
    fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
    type: Class
    summary: '<p>Dies ist die Basis-Ausnahme, die für alle Fehlerfälle Servicebus generiert wird. </p>'
    syntax:
      content: public class ServiceBusException
  - uid: com.microsoft.azure.servicebus._i_queue_client.getReceiveMode()
    parent: com.microsoft.azure.servicebus._i_queue_client
    href: com.microsoft.azure.servicebus._i_queue_client.yml
    name: getReceiveMode()
    nameWithType: IQueueClient.getReceiveMode()
    fullName: ReceiveMode com.microsoft.azure.servicebus.IQueueClient.getReceiveMode()
    type: Method
    summary: |-
      <p>Ruft die <xref uid="com.microsoft.azure.servicebus._receive_mode" data-throw-if-not-resolved="false">ReceiveMode</xref> des aktuellen Empfängers</p>
      <p></p>
    syntax:
      content: public ReceiveMode getReceiveMode()
      return:
        type: com.microsoft.azure.servicebus._receive_mode
        description: <p>Der Receive-Modus. </p>
  - uid: com.microsoft.azure.servicebus._i_message_sender.send(IMessage)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: send(IMessage message)
    nameWithType: IMessageSender.send(IMessage message)
    fullName: void com.microsoft.azure.servicebus.IMessageSender.send(IMessage message)
    type: Method
    summary: |-
      <p>Sendet eine Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Diese Methode blockiert, bis die Nachricht, auf die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: public void send(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
  - uid: com.microsoft.azure.servicebus._i_message
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message.yml
    name: IMessage
    nameWithType: IMessage
    fullName: com.microsoft.azure.servicebus.IMessage
    type: Interface
    summary: |-
      <p>Stellt eine Nachricht, die zwischen Clients und Azure Service Bus ausgetauscht werden.</p>
      <p></p>
    syntax:
      content: public interface IMessage
  - uid: com.microsoft.azure.servicebus._i_message_sender.sendBatch(Collection<? extends IMessage>)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: sendBatch(Collection<? extends IMessage> messages)
    nameWithType: IMessageSender.sendBatch(Collection<? extends IMessage> messages)
    fullName: void com.microsoft.azure.servicebus.IMessageSender.sendBatch(Collection<? extends IMessage> messages)
    type: Method
    summary: |-
      <p>Sendet einen Nachrichtenbatch für die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Diese Methode blockiert, bis der Batch an die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: public void sendBatch(Collection<? extends IMessage> messages)
      parameters:
        - id: messages
          type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
          description: <p>Auflistung von Nachrichten an die Entität gesendet werden </p>
  - uid: com.microsoft.azure.servicebus._i_message_sender.sendAsync(IMessage)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: sendAsync(IMessage message)
    nameWithType: IMessageSender.sendAsync(IMessage message)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSender.sendAsync(IMessage message)
    type: Method
    summary: |-
      <p>Sendet eine Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Dies ist eine asynchrone Methode, die eine CompletableFuture die abgeschlossen wird, wenn die Nachricht, auf die Entität gesendet wird zurückgibt.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> sendAsync(IMessage message)
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden senden darstellt. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_sender.sendBatchAsync(Collection<? extends IMessage>)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: sendBatchAsync(Collection<? extends IMessage> messages)
    nameWithType: IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages)
    type: Method
    summary: |-
      <p>Sendet einen Nachrichtenbatch für die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Dies ist eine asynchrone Methode, die eine CompletableFuture die abgeschlossen wird, wenn der Batch, auf die Entität gesendet wird zurückgibt.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> sendBatchAsync(Collection<? extends IMessage> messages)
      parameters:
        - id: messages
          type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
          description: <p>Auflistung von Nachrichten an die Entität gesendet werden </p>
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die die ausstehenden senden darstellt. </p>'
  - uid: 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessageAsync(IMessage,Instant)'
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: 'scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    nameWithType: 'IMessageSender.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    fullName: 'CompletableFuture<Long> com.microsoft.azure.servicebus.IMessageSender.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
    type: Method
    summary: |-
      <p>Sendet eine geplante Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Eine geplante Nachricht in die Warteschlange eingereiht und an Empfänger nur zum Zeitpunkt geplanten Enqueue zur Verfügung gestellt. Dies ist eine asynchrone Methode, die eine CompletableFuture die abgeschlossen wird, wenn die Nachricht, auf die Entität gesendet wird zurückgibt. Die CompletableFuture nach Abschluss gibt die Sequenznummer der geplanten Nachricht die verwendet werden kann, um die Planung der Nachricht abzubrechen.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Long> scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)'
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
        - id: scheduledEnqueueTimeUtc
          type: 328f8254
          description: '<p>Zeitpunkt, an dem die Nachricht in der Entität in die Warteschlange eingereiht werden sollen </p>'
      return:
        type: 30822cb1
        description: '<p>eine CompletableFuture, die die ausstehenden senden, das die Sequenznummer der geplanten Nachricht zurückgibt darstellt. Diese Sequenznummer kann verwendet werden, um die Planung der Nachricht abzubrechen. </p>'
  - uid: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessageAsync(long)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: cancelScheduledMessageAsync(long sequenceNumber)
    nameWithType: IMessageSender.cancelScheduledMessageAsync(long sequenceNumber)
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessageAsync(long sequenceNumber)
    type: Method
    summary: |-
      <p>Bricht das Einreihen einer bereits gesendeten geplante Nachricht ab, wenn es nicht bereits in die Warteschlange eingereihten war. Dies ist eine asynchrone Methode, die Rückgabe einer CompletableFuture die abgeschlossen wird, wenn die Nachricht abgebrochen wird.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> cancelScheduledMessageAsync(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p>Sequenznummer der Nachricht geplante </p>
      return:
        type: db03ee24
        description: '<p>eine CompletableFuture, die den ausstehenden Abbruch darstellt. </p>'
  - uid: 'com.microsoft.azure.servicebus._i_message_sender.scheduleMessage(IMessage,Instant)'
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: 'scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    nameWithType: 'IMessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    fullName: 'long com.microsoft.azure.servicebus.IMessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
    type: Method
    summary: |-
      <p>Sendet eine geplante Nachricht an die Azure Service Bus-Entität, der mit diesem Absender verbunden ist. Eine geplante Nachricht in die Warteschlange eingereiht und an Empfänger nur zum Zeitpunkt geplanten Enqueue zur Verfügung gestellt. Diese Methode blockiert, bis die Nachricht, auf die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: 'public long scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)'
      parameters:
        - id: message
          type: com.microsoft.azure.servicebus._i_message
          description: <p>Nachricht an die Entität gesendet werden </p>
        - id: scheduledEnqueueTimeUtc
          type: 328f8254
          description: '<p>Zeitpunkt, an dem die Nachricht in der Entität in die Warteschlange eingereiht werden sollen </p>'
      return:
        type: 0364520f
        description: <p>Sequenznummer der Nachricht geplante </p>
  - uid: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessage(long)
    parent: com.microsoft.azure.servicebus._i_message_sender
    href: com.microsoft.azure.servicebus._i_message_sender.yml
    name: cancelScheduledMessage(long sequenceNumber)
    nameWithType: IMessageSender.cancelScheduledMessage(long sequenceNumber)
    fullName: void com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessage(long sequenceNumber)
    type: Method
    summary: |-
      <p>Bricht das Einreihen einer bereits gesendeten geplante Nachricht ab, wenn es nicht bereits in die Warteschlange eingereihten war. Diese Methode blockiert, bis die Nachricht, auf die Entität gesendet wird. Beim Aufrufen dieser Methode entspricht dem Aufruf. Verwenden Sie asynchrone Methoden für eine bessere Leistung.</p>
      <p></p>
    syntax:
      content: public void cancelScheduledMessage(long sequenceNumber)
      parameters:
        - id: sequenceNumber
          type: 0364520f
          description: <p>Sequenznummer der Nachricht geplante </p>
  - uid: com.microsoft.azure.servicebus._i_message_entity_client.getEntityPath()
    parent: com.microsoft.azure.servicebus._i_message_entity_client
    href: com.microsoft.azure.servicebus._i_message_entity_client.yml
    name: getEntityPath()
    nameWithType: IMessageEntityClient.getEntityPath()
    fullName: String com.microsoft.azure.servicebus.IMessageEntityClient.getEntityPath()
    type: Method
    summary: |-
      <p>Ruft den Pfad der Entität, die dieser Client wird ab, Senden von Nachrichten an oder Empfang von Nachrichten aus.</p>
      <p></p>
    syntax:
      content: public String getEntityPath()
      return:
        type: '26831127'
        description: '<p>Pfad der Entität, der diesem Client eine Verbindung herstellt </p>'
  - uid: com.microsoft.azure.servicebus._i_message_handler
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_handler.yml
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: com.microsoft.azure.servicebus.IMessageHandler
    type: Interface
    summary: '<p>Definiert den Vertrag für die Registrierung des Rückrufs <xref uid="" data-throw-if-not-resolved="false">QueueClient#registerMessageHandler(IMessageHandler)</xref> und <xref uid="" data-throw-if-not-resolved="false">SubscriptionClient#registerMessageHandler(IMessageHandler)</xref> für <xref uid="com.microsoft.azure.servicebus._queue_client" data-throw-if-not-resolved="false">QueueClient</xref> und <xref uid="com.microsoft.azure.servicebus._subscription_client" data-throw-if-not-resolved="false">SubscriptionClient</xref>. </p>'
    syntax:
      content: public interface IMessageHandler
  - uid: com.microsoft.azure.servicebus._message_handler_options
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._message_handler_options.yml
    name: MessageHandlerOptions
    nameWithType: MessageHandlerOptions
    fullName: com.microsoft.azure.servicebus.MessageHandlerOptions
    type: Class
    summary: <p>Die Verarbeitungsoptionen der OnMessage-Handler. </p>
    syntax:
      content: public class MessageHandlerOptions
  - uid: com.microsoft.azure.servicebus._i_session_handler
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_session_handler.yml
    name: ISessionHandler
    nameWithType: ISessionHandler
    fullName: com.microsoft.azure.servicebus.ISessionHandler
    type: Interface
    summary: '<p>Definiert den Vertrag für die Registrierung des Rückrufs Nachrichtenverarbeitung Sitzung <xref uid="" data-throw-if-not-resolved="false">QueueClient#registerSessionHandler(ISessionHandler)</xref> oder <xref uid="" data-throw-if-not-resolved="false">SubscriptionClient#registerSessionHandler(ISessionHandler)</xref> für <xref uid="com.microsoft.azure.servicebus._queue_client" data-throw-if-not-resolved="false">QueueClient</xref> und <xref uid="com.microsoft.azure.servicebus._subscription_client" data-throw-if-not-resolved="false">SubscriptionClient</xref>. </p>'
    syntax:
      content: public interface ISessionHandler
  - uid: com.microsoft.azure.servicebus._session_handler_options
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._session_handler_options.yml
    name: SessionHandlerOptions
    nameWithType: SessionHandlerOptions
    fullName: com.microsoft.azure.servicebus.SessionHandlerOptions
    type: Class
    summary: <p>Die Verarbeitungsoptionen für den OnSession Handler. </p>
    syntax:
      content: public class SessionHandlerOptions
  - uid: com.microsoft.azure.servicebus._i_queue_client.getQueueName()
    parent: com.microsoft.azure.servicebus._i_queue_client
    href: com.microsoft.azure.servicebus._i_queue_client.yml
    name: getQueueName()
    nameWithType: IQueueClient.getQueueName()
    fullName: String com.microsoft.azure.servicebus.IQueueClient.getQueueName()
    type: Method
    summary: |-
      <p>Ruft den Namen der Warteschlange ab.</p>
      <p></p>
    syntax:
      content: public String getQueueName()
      return:
        type: '26831127'
        description: <p>Der Name der Warteschlange. </p>
  - uid: com.microsoft.azure.servicebus._i_message_session
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_session.yml
    name: IMessageSession
    nameWithType: IMessageSession
    fullName: com.microsoft.azure.servicebus.IMessageSession
    type: Interface
    summary: |-
      <p>Beschreibt ein Sitzungsobjekt. <xref uid="com.microsoft.azure.servicebus._i_message_session" data-throw-if-not-resolved="false">IMessageSession</xref> kann zum Ausführen von Vorgängen für Sitzungen verwendet werden. </p>
      <p>Service Bus-Sitzungen, so genannte "Gruppen" in das Protokoll AMQP 1.0 sind ungebundenen Ereignisfolgen zusammengehöriger Nachrichten. Service Bus garantiert die Reihenfolge der Nachrichten in einer Sitzung. </p>
      <p>Beliebiger Sender erstellen Sie eine Sitzung beim Senden von Nachrichten in einer Warteschlange oder ein Thema durch Festlegen der <xref uid="" data-throw-if-not-resolved="false">Nachricht #sessionId</xref> Eigenschaft auf <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> zu einer Anwendung definierter Eindeutiger Bezeichner. Auf der Protokollebene AMQP 1.0 wird dieser Wert auf die Gruppen-Id-Eigenschaft zugeordnet. </p>
      <p>Sitzungen sind vorhanden, wenn mindestens eine Nachricht mit der Sitzung SessionId in die Warteschlange oder ein Thema Abonnement vorhanden ist. Sobald eine Sitzung vorhanden ist, gibt es keine definierten Moment oder einer Geste für, wenn die Sitzung abläuft, oder wird nicht mehr angezeigt. </p>
    syntax:
      content: public interface IMessageSession extends IMessageReceiver