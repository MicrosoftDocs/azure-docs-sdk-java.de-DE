### YamlMime:ManagedReference
items:
  - uid: system.fabric._replicator_settings
    id: _replicator_settings
    parent: system.fabric
    children:
      - system.fabric._replicator_settings.getBatchAcknowledgementInterval()
      - system.fabric._replicator_settings.getInitialCopyQueueSize()
      - system.fabric._replicator_settings.getInitialPrimaryReplicationQueueSize()
      - system.fabric._replicator_settings.getInitialReplicationQueueSize()
      - system.fabric._replicator_settings.getInitialSecondaryReplicationQueueSize()
      - system.fabric._replicator_settings.getMaxCopyQueueSize()
      - system.fabric._replicator_settings.getMaxPrimaryReplicationQueueMemorySize()
      - system.fabric._replicator_settings.getMaxPrimaryReplicationQueueSize()
      - system.fabric._replicator_settings.getMaxReplicationMessageSize()
      - system.fabric._replicator_settings.getMaxReplicationQueueMemorySize()
      - system.fabric._replicator_settings.getMaxReplicationQueueSize()
      - system.fabric._replicator_settings.getMaxSecondaryReplicationQueueMemorySize()
      - system.fabric._replicator_settings.getMaxSecondaryReplicationQueueSize()
      - system.fabric._replicator_settings.getPrimaryWaitForPendingQuorumsTimeout()
      - system.fabric._replicator_settings.getReplicatorAddress()
      - system.fabric._replicator_settings.getRetryInterval()
      - system.fabric._replicator_settings.getSecurityCredentials()
      - system.fabric._replicator_settings.isRequireServiceAck()
      - system.fabric._replicator_settings.isSecondaryClearAcknowledgedOperations()
      - system.fabric._replicator_settings.isUseStreamFaultsAndEndOfStreamOperationAck()
      - 'system.fabric._replicator_settings.loadFrom(FabricCodePackageActivationContext,String,String)'
      - system.fabric._replicator_settings.ReplicatorSettings()
      - system.fabric._replicator_settings.setBatchAcknowledgementInterval(Duration)
      - system.fabric._replicator_settings.setInitialCopyQueueSize(long)
      - system.fabric._replicator_settings.setInitialPrimaryReplicationQueueSize(long)
      - system.fabric._replicator_settings.setInitialReplicationQueueSize(long)
      - system.fabric._replicator_settings.setInitialSecondaryReplicationQueueSize(long)
      - system.fabric._replicator_settings.setMaxCopyQueueSize(long)
      - system.fabric._replicator_settings.setMaxPrimaryReplicationQueueMemorySize(long)
      - system.fabric._replicator_settings.setMaxPrimaryReplicationQueueSize(long)
      - system.fabric._replicator_settings.setMaxReplicationMessageSize(long)
      - system.fabric._replicator_settings.setMaxReplicationQueueMemorySize(long)
      - system.fabric._replicator_settings.setMaxReplicationQueueSize(long)
      - system.fabric._replicator_settings.setMaxSecondaryReplicationQueueMemorySize(long)
      - system.fabric._replicator_settings.setMaxSecondaryReplicationQueueSize(long)
      - system.fabric._replicator_settings.setPrimaryWaitForPendingQuorumsTimeout(Duration)
      - system.fabric._replicator_settings.setReplicatorAddress(String)
      - system.fabric._replicator_settings.setRequireServiceAck(boolean)
      - system.fabric._replicator_settings.setRetryInterval(Duration)
      - system.fabric._replicator_settings.setSecondaryClearAcknowledgedOperations(boolean)
      - system.fabric._replicator_settings.setSecurityCredentials(SecurityCredentials)
      - system.fabric._replicator_settings.setUseStreamFaultsAndEndOfStreamOperationAck(boolean)
      - system.fabric._replicator_settings.toNative(PinCollection)
      - system.fabric._replicator_settings.toString()
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: ReplicatorSettings
    nameWithType: ReplicatorSettings
    fullName: system.fabric.ReplicatorSettings
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 8
    package: system.fabric
    syntax: &ref_1
      content: public class ReplicatorSettings
    inheritance:
      - java.lang.Object
  - uid: system.fabric._replicator_settings.getBatchAcknowledgementInterval()
    id: getBatchAcknowledgementInterval()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getBatchAcknowledgementInterval()
    nameWithType: ReplicatorSettings.getBatchAcknowledgementInterval()
    fullName: Duration system.fabric.ReplicatorSettings.getBatchAcknowledgementInterval()
    overload: system.fabric._replicator_settings.getBatchAcknowledgementInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 214
    package: system.fabric
    summary: "<p>Ruft die Zeitspanne, die der Replikator nach dem Empfang eines Vorgangs vor dem Zurücksenden einer Bestätigung wartet.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>andere Vorgänge empfangen und während dieses Zeitraums bestätigt werden ihre Bestätigungen wieder in einer einzelnen Nachricht gesendet haben. Erhöhen der <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings#batchAcknowledgementInterval</xref> Wert verringert die Latenz der einzelnen Replikationsvorgängen jedoch erhöht den Durchsatz der Replikator. Standardwert ist 0,05 Sekunden (50 Millisekunden) </p>"
    syntax:
      content: public Duration getBatchAcknowledgementInterval()
      return:
        type: e02a2de0
        description: '<p>Die Zeitspanne, die der Replikator nach dem Empfang eines Vorgangs vor dem Zurücksenden einer Bestätigung wartet. </p>'
  - uid: system.fabric._replicator_settings.getInitialCopyQueueSize()
    id: getInitialCopyQueueSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getInitialCopyQueueSize()
    nameWithType: ReplicatorSettings.getInitialCopyQueueSize()
    fullName: long system.fabric.ReplicatorSettings.getInitialCopyQueueSize()
    overload: system.fabric._replicator_settings.getInitialCopyQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 340
    package: system.fabric
    summary: "<p>Ruft die Anfangsgröße der Vorgangswarteschlange Kopie innerhalb <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, das Kopie enthält <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s noch nicht gepumpt und vom Dienst verarbeitet.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>der Standardwert ist 64. Beachten Sie, dass die Werte für diesen Parameter eine Potenz von 2 sein müssen. </p>"
    syntax:
      content: public long getInitialCopyQueueSize()
      return:
        type: 0364520f
        description: '<p>Die Anfangsgröße der Vorgangswarteschlange Kopie innerhalb <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, das Kopie enthält <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s noch nicht gepumpt und vom Dienst verarbeitet. </p>'
  - uid: system.fabric._replicator_settings.getInitialPrimaryReplicationQueueSize()
    id: getInitialPrimaryReplicationQueueSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getInitialPrimaryReplicationQueueSize()
    nameWithType: ReplicatorSettings.getInitialPrimaryReplicationQueueSize()
    fullName: long system.fabric.ReplicatorSettings.getInitialPrimaryReplicationQueueSize()
    overload: system.fabric._replicator_settings.getInitialPrimaryReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 561
    package: system.fabric
    summary: "<p>Definiert die anfängliche Größe der primären Replikation Vorgangswarteschlange innerhalb <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s.The Einheit hier ist die Anzahl der Vorgänge in der Warteschlange.</p>\n<p>\r\n\r\n  <b>Hinweise:</b>diese Einstellung bezieht sich auf die <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">Replikator</xref> , wenn die Rolle des Diensts primäre ist der Standardwert ist 64. Beachten Sie, dass die Werte für diesen Parameter eine Potenz von 2 sein müssen. </p>"
    syntax:
      content: public long getInitialPrimaryReplicationQueueSize()
      return:
        type: 0364520f
        description: <p>Die Anfangsgröße der primären Replikation Vorgangswarteschlange innerhalb <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref></p>
  - uid: system.fabric._replicator_settings.getInitialReplicationQueueSize()
    id: getInitialReplicationQueueSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getInitialReplicationQueueSize()
    nameWithType: ReplicatorSettings.getInitialReplicationQueueSize()
    fullName: long system.fabric.ReplicatorSettings.getInitialReplicationQueueSize()
    overload: system.fabric._replicator_settings.getInitialReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 294
    package: system.fabric
    summary: |-
      <p>Ruft die Anfangsgröße der Größe der Replikation ab.</p>
      <p></p>
    syntax:
      content: public long getInitialReplicationQueueSize()
      return:
        type: 0364520f
        description: <p>Die Anfangsgröße der Größe der Replikation. </p>
  - uid: system.fabric._replicator_settings.getInitialSecondaryReplicationQueueSize()
    id: getInitialSecondaryReplicationQueueSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getInitialSecondaryReplicationQueueSize()
    nameWithType: ReplicatorSettings.getInitialSecondaryReplicationQueueSize()
    fullName: long system.fabric.ReplicatorSettings.getInitialSecondaryReplicationQueueSize()
    overload: system.fabric._replicator_settings.getInitialSecondaryReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 676
    package: system.fabric
    summary: "<p>Definiert die anfängliche Größe des sekundären Vorgang Replikationswarteschlange innerhalb <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s</p>\n<p>\r\n\r\n  <b>Hinweise:</b>diese Einstellung bezieht sich auf die <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">Replikator</xref> , wenn die Rolle des Diensts Sekundär/im Leerlauf ist der Standardwert ist 64. Beachten Sie, dass die Werte für diesen Parameter eine Potenz von 2 sein müssen. </p>"
    syntax:
      content: public long getInitialSecondaryReplicationQueueSize()
      return:
        type: 0364520f
        description: '<p>Die Anfangsgröße der sekundären Vorgang Replikationswarteschlange innerhalb <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s noch nicht gepumpt und verarbeitet, indem Sie die -Dienst. Die Einheit hier ist die Anzahl der Vorgänge in der Warteschlange </p>'
  - uid: system.fabric._replicator_settings.getMaxCopyQueueSize()
    id: getMaxCopyQueueSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getMaxCopyQueueSize()
    nameWithType: ReplicatorSettings.getMaxCopyQueueSize()
    fullName: long system.fabric.ReplicatorSettings.getMaxCopyQueueSize()
    overload: system.fabric._replicator_settings.getMaxCopyQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 377
    package: system.fabric
    summary: "<p>Ruft die maximale Größe der Warteschlange Vorgang Kopie innerhalb <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, das Kopie enthält <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s noch nicht gepumpt und vom Dienst verarbeitet.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>, wenn die Größe der Sendewarteschlange auf dem sekundären Server erreicht ist, werden Operations gepuffert werden, in der Primaryâ€™ s Warteschlange. Wenn diese Warteschlange auch voll ist, wird angezeigt, die primäre beginnt <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#ReplicationQueueFull</xref> Ausnahmen. Der Standardwert ist 1024 </p>"
    syntax:
      content: public long getMaxCopyQueueSize()
      return:
        type: 0364520f
        description: '<p>Die maximale Größe der Warteschlange Vorgang Kopie innerhalb <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, das Kopie enthält <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s noch nicht gepumpt und vom Dienst verarbeitet. </p>'
  - uid: system.fabric._replicator_settings.getMaxPrimaryReplicationQueueMemorySize()
    id: getMaxPrimaryReplicationQueueMemorySize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getMaxPrimaryReplicationQueueMemorySize()
    nameWithType: ReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize()
    fullName: long system.fabric.ReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize()
    overload: system.fabric._replicator_settings.getMaxPrimaryReplicationQueueMemorySize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 638
    package: system.fabric
    summary: "<p>Definiert die maximale Größe der primären Replikation Vorgangswarteschlange innerhalb <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s</p>\n<p>\r\n\r\n  <b>Hinweise:</b>diese Einstellung bezieht sich auf die <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">Replikator</xref> Wenn die Rolle des Diensts primäre Dateigruppe ist. Der Standardwert ist 0. Dies bedeutet, dass kein Arbeitsspeicherlimit vorhanden ist </p>"
    syntax:
      content: public long getMaxPrimaryReplicationQueueMemorySize()
      return:
        type: 0364520f
        description: '<p>. Gibt die maximale Größe der primären Replikation Vorgangswarteschlange innerhalb <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s hier die Einheit ist das virtuelle die arbeitsspeichernutzung der Warteschlange. Long-Wert. </p>'
  - uid: system.fabric._replicator_settings.getMaxPrimaryReplicationQueueSize()
    id: getMaxPrimaryReplicationQueueSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getMaxPrimaryReplicationQueueSize()
    nameWithType: ReplicatorSettings.getMaxPrimaryReplicationQueueSize()
    fullName: long system.fabric.ReplicatorSettings.getMaxPrimaryReplicationQueueSize()
    overload: system.fabric._replicator_settings.getMaxPrimaryReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 599
    package: system.fabric
    summary: "<p>Definiert die maximale Größe der primären Replikation Vorgangswarteschlange innerhalb <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s</p>\n<p>\r\n\r\n  <b>Hinweise:</b>Wenn diese Warteschlangengröße erreicht ist, wird angezeigt, die primäre beginnt <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#ReplicationQueueFull</xref> Ausnahmen. Der Standardwert ist 1024 Hinweis, der Werte für diesen Parameter muss eine Potenz von 2 sein. Diese Einstellung bezieht sich auf die <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">Replikator</xref> Wenn die Rolle des Diensts ist primäre </p>"
    syntax:
      content: public long getMaxPrimaryReplicationQueueSize()
      return:
        type: 0364520f
        description: '<p>Die maximale Größe der primären Replikation Vorgangswarteschlange innerhalb <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s. Die Einheit hier ist die Anzahl der Vorgänge in der Warteschlange. </p>'
  - uid: system.fabric._replicator_settings.getMaxReplicationMessageSize()
    id: getMaxReplicationMessageSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getMaxReplicationMessageSize()
    nameWithType: ReplicatorSettings.getMaxReplicationMessageSize()
    fullName: Long system.fabric.ReplicatorSettings.getMaxReplicationMessageSize()
    overload: system.fabric._replicator_settings.getMaxReplicationMessageSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 504
    package: system.fabric
    summary: "<p>Ruft die maximale Größe einer Nachricht, die über die Replicator übertragen werden können. Diese Nachrichten enthalten, kopieren Sie Nachrichten und Kontext Meldungen kopieren. Die Einheit der Darstellung ist Bytes.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>der Standardwert ist 50 MB </p>"
    syntax:
      content: public Long getMaxReplicationMessageSize()
      return:
        type: 34f09483
        description: '<p>Die maximale Größe einer Nachricht, die über die Replicator übertragen werden können. </p>'
  - uid: system.fabric._replicator_settings.getMaxReplicationQueueMemorySize()
    id: getMaxReplicationQueueMemorySize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getMaxReplicationQueueMemorySize()
    nameWithType: ReplicatorSettings.getMaxReplicationQueueMemorySize()
    fullName: long system.fabric.ReplicatorSettings.getMaxReplicationQueueMemorySize()
    overload: system.fabric._replicator_settings.getMaxReplicationQueueMemorySize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 446
    package: system.fabric
    summary: "<p>Ruft die maximale Größe für die Replikation Warteschlange Arbeitsspeicher.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>der Standardwert ist 0. Dies bedeutet, dass kein Arbeitsspeicherlimit vorhanden ist </p>"
    syntax:
      content: public long getMaxReplicationQueueMemorySize()
      return:
        type: 0364520f
        description: <p>Die maximale Größe für die Replikation Warteschlange Arbeitsspeicher. </p>
  - uid: system.fabric._replicator_settings.getMaxReplicationQueueSize()
    id: getMaxReplicationQueueSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getMaxReplicationQueueSize()
    nameWithType: ReplicatorSettings.getMaxReplicationQueueSize()
    fullName: long system.fabric.ReplicatorSettings.getMaxReplicationQueueSize()
    overload: system.fabric._replicator_settings.getMaxReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 313
    package: system.fabric
    summary: |-
      <p>Ruft die maximale Größe für die Replikationswarteschlange an.</p>
      <p></p>
    syntax:
      content: public long getMaxReplicationQueueSize()
      return:
        type: 0364520f
        description: <p>die maximale Größe für die Replikationswarteschlange. </p>
  - uid: system.fabric._replicator_settings.getMaxSecondaryReplicationQueueMemorySize()
    id: getMaxSecondaryReplicationQueueMemorySize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getMaxSecondaryReplicationQueueMemorySize()
    nameWithType: ReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize()
    fullName: long system.fabric.ReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize()
    overload: system.fabric._replicator_settings.getMaxSecondaryReplicationQueueMemorySize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 758
    package: system.fabric
    summary: "<p>Definiert die maximale Größe des sekundären Vorgang Replikationswarteschlange innerhalb <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s.</p>\n<p>\r\n\r\n  <b>Hinweise:</b>diese Einstellung bezieht sich auf die <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">Replikator</xref> Wenn die Rolle des Diensts Sekundär/im Leerlauf ist. Der Standardwert ist 0. Dies bedeutet, dass kein Arbeitsspeicherlimit vorhanden ist </p>"
    syntax:
      content: public long getMaxSecondaryReplicationQueueMemorySize()
      return:
        type: 0364520f
        description: '<p>Gibt die maximale Größe des sekundären Vorgang Replikationswarteschlange innerhalb <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s. Die Einheit hier ist der virtuelle Arbeitsspeicherverbrauch der Warteschlange. </p>'
  - uid: system.fabric._replicator_settings.getMaxSecondaryReplicationQueueSize()
    id: getMaxSecondaryReplicationQueueSize()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getMaxSecondaryReplicationQueueSize()
    nameWithType: ReplicatorSettings.getMaxSecondaryReplicationQueueSize()
    fullName: long system.fabric.ReplicatorSettings.getMaxSecondaryReplicationQueueSize()
    overload: system.fabric._replicator_settings.getMaxSecondaryReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 717
    package: system.fabric
    summary: "<p>Definiert die maximale Größe des sekundären Vorgang Replikationswarteschlange innerhalb <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>, wenn diese Warteschlangengröße erreicht ist, werden Operations gepuffert werden, in der Primaryâ€™ s Replikationswarteschlange. Wenn diese Warteschlange auch voll ist, wird angezeigt, die primäre beginnt <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#ReplicationQueueFull</xref> Ausnahmen. Der Standardwert ist 2048.Note, die Werte für diesen Parameter muss eine Potenz von 2 sein. Diese Einstellung bezieht sich auf die <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">Replikator</xref> Wenn die Rolle des Diensts Sekundär/im Leerlauf ist </p>"
    syntax:
      content: public long getMaxSecondaryReplicationQueueSize()
      return:
        type: 0364520f
        description: '<p>Die maximale Größe des sekundären Vorgang Replikationswarteschlange innerhalb <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s noch nicht gepumpt und verarbeitet, indem Sie die -Dienst. Die Einheit hier ist die Anzahl der Vorgänge in der Warteschlange </p>'
  - uid: system.fabric._replicator_settings.getPrimaryWaitForPendingQuorumsTimeout()
    id: getPrimaryWaitForPendingQuorumsTimeout()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getPrimaryWaitForPendingQuorumsTimeout()
    nameWithType: ReplicatorSettings.getPrimaryWaitForPendingQuorumsTimeout()
    fullName: Duration system.fabric.ReplicatorSettings.getPrimaryWaitForPendingQuorumsTimeout()
    overload: system.fabric._replicator_settings.getPrimaryWaitForPendingQuorumsTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 797
    package: system.fabric
    summary: "<p>Definiert, wie lange der primäre Replikator wartet, für den Empfang von einem Quorum von Bestätigungen für alle ausstehenden Replikationsvorgänge vor der Verarbeitung einer Anforderung, die potenziell führen â €˜cancellingâ dazu € Neukonfiguration™ der ausstehenden Replikationsvorgänge.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>der Standardwert ist 0. Dies bedeutet, dass diese Neukonfigurationen €™ t für den Empfang von Quorum auf die ausstehende Replikationsvorgänge erwartet. Dies hilft beim Abschließen der Neukonfigurationen früher. Beachten Sie, dass größere Werte für diesen Parameter möglicherweise langsamer Neukonfigurationen, Gleichzeichen längere dauern, um einen primären Failover führen können. </p>"
    syntax:
      content: public Duration getPrimaryWaitForPendingQuorumsTimeout()
      return:
        type: e02a2de0
        description: '<p>Wartet, bis der primäre Replikator ein Quorum von Bestätigungen für alle ausstehenden Replikationsvorgängen empfangen, wenn es eine Anforderung für den primären Replikator zum Verarbeiten einer Neukonfiguration liegt Zeitspanne <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref>. </p>'
  - uid: system.fabric._replicator_settings.getReplicatorAddress()
    id: getReplicatorAddress()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getReplicatorAddress()
    nameWithType: ReplicatorSettings.getReplicatorAddress()
    fullName: String system.fabric.ReplicatorSettings.getReplicatorAddress()
    overload: system.fabric._replicator_settings.getReplicatorAddress*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 247
    package: system.fabric
    summary: "<p>Konfiguriert die Adresse, die bei der Kommunikation mit anderen Replikatoren dieser Replikator verwenden.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>formatierte Zeichenfolge als \"Hostname:port\", wobei Hostname FQDN oder IP-Adresse sein kann. Der Standardwert ist localhost:0 </p>"
    syntax:
      content: public String getReplicatorAddress()
      return:
        type: '26831127'
        description: '<p>Die Adresse, die bei der Kommunikation mit anderen Replikatoren dieser Replikator verwenden. </p>'
  - uid: system.fabric._replicator_settings.getRetryInterval()
    id: getRetryInterval()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getRetryInterval()
    nameWithType: ReplicatorSettings.getRetryInterval()
    fullName: Duration system.fabric.ReplicatorSettings.getRetryInterval()
    overload: system.fabric._replicator_settings.getRetryInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 177
    package: system.fabric
    summary: "<p>Definiert, wie lange der <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> wartet, nachdem er überträgt eine Nachricht vom primären auf die sekundäre Datenbank für die sekundäre Datenbank zu bestätigen, dass er die Nachricht empfangen hat.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Empfangen einer Nachricht entspricht nicht unbedingt die Nachricht verarbeitet wurde. Wenn dieser Zeitgeber überschritten wird, wird die Nachricht erneut übertragen. Der Standardwert ist 5 Sekunden. </p>"
    syntax:
      content: public Duration getRetryInterval()
      return:
        type: e02a2de0
        description: '<p>Die benötigte Zeit die <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref> wartet, nachdem er überträgt eine Nachricht vom primären auf die sekundäre Datenbank für die sekundäre Datenbank zu bestätigen, dass er die Nachricht empfangen hat. </p>'
  - uid: system.fabric._replicator_settings.getSecurityCredentials()
    id: getSecurityCredentials()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: getSecurityCredentials()
    nameWithType: ReplicatorSettings.getSecurityCredentials()
    fullName: SecurityCredentials system.fabric.ReplicatorSettings.getSecurityCredentials()
    overload: system.fabric._replicator_settings.getSecurityCredentials*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 273
    package: system.fabric
    summary: |-
      <p>Ermöglicht dem Dienst um Sicherheitsanmeldeinformationen für die Sicherung des Datenverkehrs zwischen Replikatoren zu definieren.</p>
      <p></p>
    syntax:
      content: public SecurityCredentials getSecurityCredentials()
      return:
        type: system.fabric._security_credentials
        description: <p>Der Dienst zum Definieren der Sicherheitsanmeldeinformationen für die Sicherung des Datenverkehrs zwischen Replikatoren. </p>
  - uid: system.fabric._replicator_settings.isRequireServiceAck()
    id: isRequireServiceAck()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: isRequireServiceAck()
    nameWithType: ReplicatorSettings.isRequireServiceAck()
    fullName: boolean system.fabric.ReplicatorSettings.isRequireServiceAck()
    overload: system.fabric._replicator_settings.isRequireServiceAck*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 415
    package: system.fabric
    summary: "<p>Verhindert, dass die optimistische Bestätigung von Vorgängen in nicht persistente Dienste durch das anfordern, die der Dienst ruft <xref uid=\"system.fabric._operation.acknowledge()\" data-throw-if-not-resolved=\"false\">system.fabric.Operation#acknowledge()</xref> , bevor er den nächsten Vorgang ruft.</p>\n<p>\r\n\r\n  <b>Hinweise:</b>nicht persistenter Dienste, die explizite Bestätigung erforderlich ist können diese Eigenschaft auf \"true\" festlegen, um zu verhindern, dass bei der optimistischen Bestätigung der Vorgänge von der <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">Replikator</xref>. Diese Einstellung wirkt sich nicht bei beständigen Diensten aus. Der Standardwert ist „false“. </p>"
    syntax:
      content: public boolean isRequireServiceAck()
      return:
        type: 4fc6e284
        description: '<p>True, wenn die vollständige Bestätigung von Vorgängen in nicht persistente Dienste; andernfalls "false". </p>'
  - uid: system.fabric._replicator_settings.isSecondaryClearAcknowledgedOperations()
    id: isSecondaryClearAcknowledgedOperations()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: isSecondaryClearAcknowledgedOperations()
    nameWithType: ReplicatorSettings.isSecondaryClearAcknowledgedOperations()
    fullName: boolean system.fabric.ReplicatorSettings.isSecondaryClearAcknowledgedOperations()
    overload: system.fabric._replicator_settings.isSecondaryClearAcknowledgedOperations*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 474
    package: system.fabric
    summary: "<p>Vorgänge in der sekundären Replikator bleiben in der Regel in der Warteschlange, Catchup Replikate Lage sein, wenn sie mit einem primären Replikat höher gestuft ist. Dieses Flag aktiviert ist gibt sekundären Replikator den Vorgang frei, sobald es vom Dienst für die bestätigt wird.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>der Standardwert ist \"false\" </p>"
    syntax:
      content: public boolean isSecondaryClearAcknowledgedOperations()
      return:
        type: 4fc6e284
        description: '<p>"true", wenn sekundäre Replikator den Vorgang frei, sobald es vom Dienst für die bestätigt wird; andernfalls "false". </p>'
  - uid: system.fabric._replicator_settings.isUseStreamFaultsAndEndOfStreamOperationAck()
    id: isUseStreamFaultsAndEndOfStreamOperationAck()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: isUseStreamFaultsAndEndOfStreamOperationAck()
    nameWithType: ReplicatorSettings.isUseStreamFaultsAndEndOfStreamOperationAck()
    fullName: boolean system.fabric.ReplicatorSettings.isUseStreamFaultsAndEndOfStreamOperationAck()
    overload: system.fabric._replicator_settings.isUseStreamFaultsAndEndOfStreamOperationAck*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 531
    package: system.fabric
    summary: "<p>Gibt an, ob der Replikator streamingfehlern verwendet.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>der Standardwert ist \"false\" </p>"
    syntax:
      content: public boolean isUseStreamFaultsAndEndOfStreamOperationAck()
      return:
        type: 4fc6e284
        description: '<p>"true", wenn der Replikator streamingfehlern verwendet; andernfalls "false". </p>'
  - uid: 'system.fabric._replicator_settings.loadFrom(FabricCodePackageActivationContext,String,String)'
    id: 'loadFrom(FabricCodePackageActivationContext,String,String)'
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: 'loadFrom(FabricCodePackageActivationContext codePackageActivationContext, String configPackageName, String sectionName)'
    nameWithType: 'ReplicatorSettings.loadFrom(FabricCodePackageActivationContext codePackageActivationContext, String configPackageName, String sectionName)'
    fullName: 'static ReplicatorSettings system.fabric.ReplicatorSettings.loadFrom(FabricCodePackageActivationContext codePackageActivationContext, String configPackageName, String sectionName)'
    overload: system.fabric._replicator_settings.loadFrom*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 1026
    package: system.fabric
    syntax:
      content: 'public static ReplicatorSettings loadFrom(FabricCodePackageActivationContext codePackageActivationContext, String configPackageName, String sectionName)'
      parameters:
        - id: codePackageActivationContext
          type: system.fabric._fabric_code_package_activation_context
        - id: configPackageName
          type: '26831127'
        - id: sectionName
          type: '26831127'
      return:
        type: system.fabric._replicator_settings
  - uid: system.fabric._replicator_settings.ReplicatorSettings()
    id: ReplicatorSettings()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: ReplicatorSettings()
    nameWithType: ReplicatorSettings.ReplicatorSettings()
    fullName: system.fabric.ReplicatorSettings.ReplicatorSettings()
    overload: system.fabric._replicator_settings.ReplicatorSettings*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 77
    package: system.fabric
    syntax:
      content: public ReplicatorSettings()
  - uid: system.fabric._replicator_settings.setBatchAcknowledgementInterval(Duration)
    id: setBatchAcknowledgementInterval(Duration)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setBatchAcknowledgementInterval(Duration batchAcknowledgementInterval)
    nameWithType: ReplicatorSettings.setBatchAcknowledgementInterval(Duration batchAcknowledgementInterval)
    fullName: void system.fabric.ReplicatorSettings.setBatchAcknowledgementInterval(Duration batchAcknowledgementInterval)
    overload: system.fabric._replicator_settings.setBatchAcknowledgementInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 233
    package: system.fabric
    summary: "<p>Legt die Zeitspanne, die der Replikator nach dem Empfang eines Vorgangs vor dem Zurücksenden einer Bestätigung wartet.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>andere Vorgänge empfangen und während dieses Zeitraums bestätigt werden ihre Bestätigungen wieder in einer einzelnen Nachricht gesendet haben. Erhöhen der <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings#batchAcknowledgementInterval</xref> Wert verringert die Latenz der einzelnen Replikationsvorgängen jedoch erhöht den Durchsatz der Replikator. Standardwert ist 0,05 Sekunden (50 Millisekunden) </p>"
    syntax:
      content: public void setBatchAcknowledgementInterval(Duration batchAcknowledgementInterval)
      parameters:
        - id: batchAcknowledgementInterval
          type: e02a2de0
          description: '<p>Die Zeitspanne, die der Replikator nach dem Empfang eines Vorgangs vor dem Zurücksenden einer Bestätigung wartet. </p>'
  - uid: system.fabric._replicator_settings.setInitialCopyQueueSize(long)
    id: setInitialCopyQueueSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setInitialCopyQueueSize(long initialCopyQueueSize)
    nameWithType: ReplicatorSettings.setInitialCopyQueueSize(long initialCopyQueueSize)
    fullName: void system.fabric.ReplicatorSettings.setInitialCopyQueueSize(long initialCopyQueueSize)
    overload: system.fabric._replicator_settings.setInitialCopyQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 358
    package: system.fabric
    summary: "<p>Ruft ab oder legt die Anfangsgröße der Kopie Vorgangswarteschlange innerhalb <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, das Kopie enthält <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s noch nicht gepumpt und vom Dienst verarbeitet.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>der Standardwert ist 64. Beachten Sie, dass die Werte für diesen Parameter eine Potenz von 2 sein müssen. </p>"
    syntax:
      content: public void setInitialCopyQueueSize(long initialCopyQueueSize)
      parameters:
        - id: initialCopyQueueSize
          type: 0364520f
          description: '<p>Die Anfangsgröße der Vorgangswarteschlange Kopie innerhalb <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, das Kopie enthält <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s noch nicht gepumpt und vom Dienst verarbeitet. </p>'
  - uid: system.fabric._replicator_settings.setInitialPrimaryReplicationQueueSize(long)
    id: setInitialPrimaryReplicationQueueSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setInitialPrimaryReplicationQueueSize(long initialPrimaryReplicationQueueSize)
    nameWithType: ReplicatorSettings.setInitialPrimaryReplicationQueueSize(long initialPrimaryReplicationQueueSize)
    fullName: void system.fabric.ReplicatorSettings.setInitialPrimaryReplicationQueueSize(long initialPrimaryReplicationQueueSize)
    overload: system.fabric._replicator_settings.setInitialPrimaryReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 579
    package: system.fabric
    summary: "<p>Definiert die anfängliche Größe der primären Replikation Vorgangswarteschlange innerhalb <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s.The Einheit hier ist die Anzahl der Vorgänge in der Warteschlange.</p>\n<p>\r\n\r\n  <b>Hinweise:</b>diese Einstellung bezieht sich auf die <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">Replikator</xref> , wenn die Rolle des Diensts primäre ist der Standardwert ist 64. Beachten Sie, dass die Werte für diesen Parameter eine Potenz von 2 sein müssen. </p>"
    syntax:
      content: public void setInitialPrimaryReplicationQueueSize(long initialPrimaryReplicationQueueSize)
      parameters:
        - id: initialPrimaryReplicationQueueSize
          type: 0364520f
          description: <p>Die Anfangsgröße der primären Replikation Vorgangswarteschlange innerhalb <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref></p>
  - uid: system.fabric._replicator_settings.setInitialReplicationQueueSize(long)
    id: setInitialReplicationQueueSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setInitialReplicationQueueSize(long initialReplicationQueueSize)
    nameWithType: ReplicatorSettings.setInitialReplicationQueueSize(long initialReplicationQueueSize)
    fullName: void system.fabric.ReplicatorSettings.setInitialReplicationQueueSize(long initialReplicationQueueSize)
    overload: system.fabric._replicator_settings.setInitialReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 304
    package: system.fabric
    summary: |-
      <p>Legt die Anfangsgröße der Größe der Replikation.</p>
      <p></p>
    syntax:
      content: public void setInitialReplicationQueueSize(long initialReplicationQueueSize)
      parameters:
        - id: initialReplicationQueueSize
          type: 0364520f
          description: <p>Die Anfangsgröße der Größe der Replikation. </p>
  - uid: system.fabric._replicator_settings.setInitialSecondaryReplicationQueueSize(long)
    id: setInitialSecondaryReplicationQueueSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setInitialSecondaryReplicationQueueSize(long initialSecondaryReplicationQueueSize)
    nameWithType: ReplicatorSettings.setInitialSecondaryReplicationQueueSize(long initialSecondaryReplicationQueueSize)
    fullName: void system.fabric.ReplicatorSettings.setInitialSecondaryReplicationQueueSize(long initialSecondaryReplicationQueueSize)
    overload: system.fabric._replicator_settings.setInitialSecondaryReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 696
    package: system.fabric
    summary: "<p>Definiert die anfängliche Größe des sekundären Vorgang Replikationswarteschlange innerhalb <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s</p>\n<p>\r\n\r\n  <b>Hinweise:</b>diese Einstellung bezieht sich auf die <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">Replikator</xref> , wenn die Rolle des Diensts Sekundär/im Leerlauf ist der Standardwert ist 64. Beachten Sie, dass die Werte für diesen Parameter eine Potenz von 2 sein müssen. </p>"
    syntax:
      content: public void setInitialSecondaryReplicationQueueSize(long initialSecondaryReplicationQueueSize)
      parameters:
        - id: initialSecondaryReplicationQueueSize
          type: 0364520f
          description: '<p>Die Anfangsgröße der sekundären Vorgang Replikationswarteschlange innerhalb <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s noch nicht gepumpt und verarbeitet, indem Sie die -Dienst. Die Einheit hier ist die Anzahl der Vorgänge in der Warteschlange </p>'
  - uid: system.fabric._replicator_settings.setMaxCopyQueueSize(long)
    id: setMaxCopyQueueSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setMaxCopyQueueSize(long maxCopyQueueSize)
    nameWithType: ReplicatorSettings.setMaxCopyQueueSize(long maxCopyQueueSize)
    fullName: void system.fabric.ReplicatorSettings.setMaxCopyQueueSize(long maxCopyQueueSize)
    overload: system.fabric._replicator_settings.setMaxCopyQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 397
    package: system.fabric
    summary: "<p>Legt die maximale Größe der Warteschlange Kopie Vorgang innerhalb <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, das Kopie enthält <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s noch nicht gepumpt und vom Dienst verarbeitet.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>, wenn die Größe der Sendewarteschlange auf dem sekundären Server erreicht ist, werden Operations gepuffert werden, in der Primaryâ€™ s Warteschlange. Wenn diese Warteschlange auch voll ist, wird angezeigt, die primäre beginnt <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#ReplicationQueueFull</xref> Ausnahmen. Der Standardwert ist 1024 </p>"
    syntax:
      content: public void setMaxCopyQueueSize(long maxCopyQueueSize)
      parameters:
        - id: maxCopyQueueSize
          type: 0364520f
          description: '<p>Die maximale Größe der Warteschlange Vorgang Kopie innerhalb <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, das Kopie enthält <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s noch nicht gepumpt und vom Dienst verarbeitet. </p>'
  - uid: system.fabric._replicator_settings.setMaxPrimaryReplicationQueueMemorySize(long)
    id: setMaxPrimaryReplicationQueueMemorySize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setMaxPrimaryReplicationQueueMemorySize(long maxPrimaryReplicationQueueMemorySize)
    nameWithType: ReplicatorSettings.setMaxPrimaryReplicationQueueMemorySize(long maxPrimaryReplicationQueueMemorySize)
    fullName: void system.fabric.ReplicatorSettings.setMaxPrimaryReplicationQueueMemorySize(long maxPrimaryReplicationQueueMemorySize)
    overload: system.fabric._replicator_settings.setMaxPrimaryReplicationQueueMemorySize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 657
    package: system.fabric
    summary: "<p>Definiert die maximale Größe der primären Replikation Vorgangswarteschlange innerhalb <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s</p>\n<p>\r\n\r\n  <b>Hinweise:</b>diese Einstellung bezieht sich auf die <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">Replikator</xref> Wenn die Rolle des Diensts primäre Dateigruppe ist. Der Standardwert ist 0. Dies bedeutet, dass kein Arbeitsspeicherlimit vorhanden ist </p>"
    syntax:
      content: public void setMaxPrimaryReplicationQueueMemorySize(long maxPrimaryReplicationQueueMemorySize)
      parameters:
        - id: maxPrimaryReplicationQueueMemorySize
          type: 0364520f
          description: '<p>die maximale Größe der primären Replikation Vorgangswarteschlange innerhalb <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s hier die Einheit ist der virtuelle Speicher Nutzung der Warteschlange. Long-Wert. </p>'
  - uid: system.fabric._replicator_settings.setMaxPrimaryReplicationQueueSize(long)
    id: setMaxPrimaryReplicationQueueSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setMaxPrimaryReplicationQueueSize(long maxPrimaryReplicationQueueSize)
    nameWithType: ReplicatorSettings.setMaxPrimaryReplicationQueueSize(long maxPrimaryReplicationQueueSize)
    fullName: void system.fabric.ReplicatorSettings.setMaxPrimaryReplicationQueueSize(long maxPrimaryReplicationQueueSize)
    overload: system.fabric._replicator_settings.setMaxPrimaryReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 620
    package: system.fabric
    summary: "<p>Definiert die maximale Größe der primären Replikation Vorgangswarteschlange innerhalb <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s</p>\n<p>\r\n\r\n  <b>Hinweise:</b>Wenn diese Warteschlangengröße erreicht ist, wird angezeigt, die primäre beginnt <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#ReplicationQueueFull</xref> Ausnahmen. Der Standardwert ist 1024 Hinweis, der Werte für diesen Parameter muss eine Potenz von 2 sein. Diese Einstellung bezieht sich auf die <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">Replikator</xref> Wenn die Rolle des Diensts ist primäre </p>"
    syntax:
      content: public void setMaxPrimaryReplicationQueueSize(long maxPrimaryReplicationQueueSize)
      parameters:
        - id: maxPrimaryReplicationQueueSize
          type: 0364520f
          description: '<p>Die maximale Größe der primären Replikation Vorgangswarteschlange innerhalb <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s. Die Einheit hier ist die Anzahl der Vorgänge in der Warteschlange. </p>'
  - uid: system.fabric._replicator_settings.setMaxReplicationMessageSize(long)
    id: setMaxReplicationMessageSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setMaxReplicationMessageSize(long maxReplicationMessageSize)
    nameWithType: ReplicatorSettings.setMaxReplicationMessageSize(long maxReplicationMessageSize)
    fullName: void system.fabric.ReplicatorSettings.setMaxReplicationMessageSize(long maxReplicationMessageSize)
    overload: system.fabric._replicator_settings.setMaxReplicationMessageSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 519
    package: system.fabric
    summary: "<p>Legt die maximale Größe einer Nachricht, die über die Replicator übertragen werden können. Diese Nachrichten enthalten, kopieren Sie Nachrichten und Kontext Meldungen kopieren. Die Einheit der Darstellung ist Bytes.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>der Standardwert ist 50 MB </p>"
    syntax:
      content: public void setMaxReplicationMessageSize(long maxReplicationMessageSize)
      parameters:
        - id: maxReplicationMessageSize
          type: 0364520f
          description: '<p>Die maximale Größe einer Nachricht, die über die Replicator übertragen werden können. </p>'
  - uid: system.fabric._replicator_settings.setMaxReplicationQueueMemorySize(long)
    id: setMaxReplicationQueueMemorySize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setMaxReplicationQueueMemorySize(long maxReplicationQueueMemorySize)
    nameWithType: ReplicatorSettings.setMaxReplicationQueueMemorySize(long maxReplicationQueueMemorySize)
    fullName: void system.fabric.ReplicatorSettings.setMaxReplicationQueueMemorySize(long maxReplicationQueueMemorySize)
    overload: system.fabric._replicator_settings.setMaxReplicationQueueMemorySize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 459
    package: system.fabric
    summary: "<p>Legt die maximale Größe für die Replikation Warteschlange Speicher fest.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>der Standardwert ist 0. Dies bedeutet, dass kein Arbeitsspeicherlimit vorhanden ist </p>"
    syntax:
      content: public void setMaxReplicationQueueMemorySize(long maxReplicationQueueMemorySize)
      parameters:
        - id: maxReplicationQueueMemorySize
          type: 0364520f
          description: <p>Die maximale Größe für die Replikation Warteschlange Arbeitsspeicher. </p>
  - uid: system.fabric._replicator_settings.setMaxReplicationQueueSize(long)
    id: setMaxReplicationQueueSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setMaxReplicationQueueSize(long maxReplicationQueueSize)
    nameWithType: ReplicatorSettings.setMaxReplicationQueueSize(long maxReplicationQueueSize)
    fullName: void system.fabric.ReplicatorSettings.setMaxReplicationQueueSize(long maxReplicationQueueSize)
    overload: system.fabric._replicator_settings.setMaxReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 323
    package: system.fabric
    summary: |-
      <p>Legt die maximale Größe für die Replikationswarteschlange an.</p>
      <p></p>
    syntax:
      content: public void setMaxReplicationQueueSize(long maxReplicationQueueSize)
      parameters:
        - id: maxReplicationQueueSize
          type: 0364520f
          description: <p>die maximale Größe für die Replikationswarteschlange. </p>
  - uid: system.fabric._replicator_settings.setMaxSecondaryReplicationQueueMemorySize(long)
    id: setMaxSecondaryReplicationQueueMemorySize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setMaxSecondaryReplicationQueueMemorySize(long maxSecondaryReplicationQueueMemorySize)
    nameWithType: ReplicatorSettings.setMaxSecondaryReplicationQueueMemorySize(long maxSecondaryReplicationQueueMemorySize)
    fullName: void system.fabric.ReplicatorSettings.setMaxSecondaryReplicationQueueMemorySize(long maxSecondaryReplicationQueueMemorySize)
    overload: system.fabric._replicator_settings.setMaxSecondaryReplicationQueueMemorySize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 777
    package: system.fabric
    summary: "<p>Definiert die maximale Größe des sekundären Vorgang Replikationswarteschlange innerhalb <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s.</p>\n<p>\r\n\r\n  <b>Hinweise:</b>diese Einstellung bezieht sich auf die <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">Replikator</xref> Wenn die Rolle des Diensts Sekundär/im Leerlauf ist. Der Standardwert ist 0. Dies bedeutet, dass kein Arbeitsspeicherlimit vorhanden ist </p>"
    syntax:
      content: public void setMaxSecondaryReplicationQueueMemorySize(long maxSecondaryReplicationQueueMemorySize)
      parameters:
        - id: maxSecondaryReplicationQueueMemorySize
          type: 0364520f
          description: '<p>Gibt die maximale Größe des sekundären Vorgang Replikationswarteschlange innerhalb <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s. Die Einheit hier ist der virtuelle Arbeitsspeicherverbrauch der Warteschlange. </p>'
  - uid: system.fabric._replicator_settings.setMaxSecondaryReplicationQueueSize(long)
    id: setMaxSecondaryReplicationQueueSize(long)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setMaxSecondaryReplicationQueueSize(long maxSecondaryReplicationQueueSize)
    nameWithType: ReplicatorSettings.setMaxSecondaryReplicationQueueSize(long maxSecondaryReplicationQueueSize)
    fullName: void system.fabric.ReplicatorSettings.setMaxSecondaryReplicationQueueSize(long maxSecondaryReplicationQueueSize)
    overload: system.fabric._replicator_settings.setMaxSecondaryReplicationQueueSize*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 739
    package: system.fabric
    summary: "<p>Definiert die maximale Größe des sekundären Vorgang Replikationswarteschlange innerhalb <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid=\"system.fabric._operation\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>s</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>, wenn diese Warteschlangengröße erreicht ist, werden Operations gepuffert werden, in der Primaryâ€™ s Replikationswarteschlange. Wenn diese Warteschlange auch voll ist, wird angezeigt, die primäre beginnt <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#ReplicationQueueFull</xref> Ausnahmen. Der Standardwert ist 2048.Note, die Werte für diesen Parameter muss eine Potenz von 2 sein. Diese Einstellung bezieht sich auf die <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">Replikator</xref> Wenn die Rolle des Diensts Sekundär/im Leerlauf ist </p>"
    syntax:
      content: public void setMaxSecondaryReplicationQueueSize(long maxSecondaryReplicationQueueSize)
      parameters:
        - id: maxSecondaryReplicationQueueSize
          type: 0364520f
          description: '<p>Die maximale Größe des sekundären Vorgang Replikationswarteschlange innerhalb <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, die Replikation enthält <xref uid="system.fabric._operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s noch nicht gepumpt und verarbeitet, indem Sie die -Dienst. Die Einheit hier ist die Anzahl der Vorgänge in der Warteschlange </p>'
  - uid: system.fabric._replicator_settings.setPrimaryWaitForPendingQuorumsTimeout(Duration)
    id: setPrimaryWaitForPendingQuorumsTimeout(Duration)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setPrimaryWaitForPendingQuorumsTimeout(Duration primaryWaitForPendingQuorumsTimeout)
    nameWithType: ReplicatorSettings.setPrimaryWaitForPendingQuorumsTimeout(Duration primaryWaitForPendingQuorumsTimeout)
    fullName: void system.fabric.ReplicatorSettings.setPrimaryWaitForPendingQuorumsTimeout(Duration primaryWaitForPendingQuorumsTimeout)
    overload: system.fabric._replicator_settings.setPrimaryWaitForPendingQuorumsTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 818
    package: system.fabric
    summary: "<p>Definiert, wie lange der primäre Replikator wartet, für den Empfang von einem Quorum von Bestätigungen für alle ausstehenden Replikationsvorgänge vor der Verarbeitung einer Anforderung, die potenziell führen â €˜cancellingâ dazu € Neukonfiguration™ der ausstehenden Replikationsvorgänge.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>der Standardwert ist 0. Dies bedeutet, dass diese Neukonfigurationen €™ t für den Empfang von Quorum auf die ausstehende Replikationsvorgänge erwartet. Dies hilft beim Abschließen der Neukonfigurationen früher. Beachten Sie, dass größere Werte für diesen Parameter möglicherweise langsamer Neukonfigurationen, Gleichzeichen längere dauern, um einen primären Failover führen können. </p>"
    syntax:
      content: public void setPrimaryWaitForPendingQuorumsTimeout(Duration primaryWaitForPendingQuorumsTimeout)
      parameters:
        - id: primaryWaitForPendingQuorumsTimeout
          type: e02a2de0
          description: '<p>Wartet, bis der primäre Replikator ein Quorum von Bestätigungen für alle ausstehenden Replikationsvorgängen empfangen, wenn es eine Anforderung für den primären Replikator zum Verarbeiten einer Neukonfiguration liegt Zeitspanne <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref>. </p>'
  - uid: system.fabric._replicator_settings.setReplicatorAddress(String)
    id: setReplicatorAddress(String)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setReplicatorAddress(String replicatorAddress)
    nameWithType: ReplicatorSettings.setReplicatorAddress(String replicatorAddress)
    fullName: void system.fabric.ReplicatorSettings.setReplicatorAddress(String replicatorAddress)
    overload: system.fabric._replicator_settings.setReplicatorAddress*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 262
    package: system.fabric
    summary: "<p>Konfiguriert die Adresse, die bei der Kommunikation mit anderen Replikatoren dieser Replikator verwenden.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>formatierte Zeichenfolge als \"Hostname:port\", wobei Hostname FQDN oder IP-Adresse sein kann. Der Standardwert ist localhost:0 </p>"
    syntax:
      content: public void setReplicatorAddress(String replicatorAddress)
      parameters:
        - id: replicatorAddress
          type: '26831127'
          description: '<p>Die Adresse, die bei der Kommunikation mit anderen Replikatoren dieser Replikator verwenden. </p>'
  - uid: system.fabric._replicator_settings.setRequireServiceAck(boolean)
    id: setRequireServiceAck(boolean)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setRequireServiceAck(boolean requireServiceAck)
    nameWithType: ReplicatorSettings.setRequireServiceAck(boolean requireServiceAck)
    fullName: void system.fabric.ReplicatorSettings.setRequireServiceAck(boolean requireServiceAck)
    overload: system.fabric._replicator_settings.setRequireServiceAck*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 434
    package: system.fabric
    summary: "<p>Verhindert, dass die optimistische Bestätigung von Vorgängen in nicht persistente Dienste durch das anfordern, die der Dienst ruft <xref uid=\"system.fabric._operation.acknowledge()\" data-throw-if-not-resolved=\"false\">system.fabric.Operation#acknowledge()</xref> , bevor er den nächsten Vorgang ruft.</p>\n<p>\r\n\r\n  <b>Hinweise:</b>nicht persistenter Dienste, die explizite Bestätigung erforderlich ist können diese Eigenschaft auf \"true\" festlegen, um zu verhindern, dass bei der optimistischen Bestätigung der Vorgänge von der <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">Replikator</xref>. Diese Einstellung wirkt sich nicht bei beständigen Diensten aus. Der Standardwert ist „false“. </p>"
    syntax:
      content: public void setRequireServiceAck(boolean requireServiceAck)
      parameters:
        - id: requireServiceAck
          type: 4fc6e284
          description: '<p>True, wenn die vollständige Bestätigung von Vorgängen in nicht persistente Dienste; andernfalls "false". </p>'
  - uid: system.fabric._replicator_settings.setRetryInterval(Duration)
    id: setRetryInterval(Duration)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setRetryInterval(Duration retryInterval)
    nameWithType: ReplicatorSettings.setRetryInterval(Duration retryInterval)
    fullName: void system.fabric.ReplicatorSettings.setRetryInterval(Duration retryInterval)
    overload: system.fabric._replicator_settings.setRetryInterval*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 196
    package: system.fabric
    summary: "<p>Definiert, wie lange der <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> wartet, nachdem er überträgt eine Nachricht vom primären auf die sekundäre Datenbank für die sekundäre Datenbank zu bestätigen, dass er die Nachricht empfangen hat.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>Empfangen einer Nachricht entspricht nicht unbedingt die Nachricht verarbeitet wurde. Wenn dieser Zeitgeber überschritten wird, wird die Nachricht erneut übertragen. Der Standardwert ist 5 Sekunden. </p>"
    syntax:
      content: public void setRetryInterval(Duration retryInterval)
      parameters:
        - id: retryInterval
          type: e02a2de0
          description: '<p>Die benötigte Zeit die <xref uid="system.fabric._fabric_replicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref> wartet, nachdem er überträgt eine Nachricht vom primären auf die sekundäre Datenbank für die sekundäre Datenbank zu bestätigen, dass er die Nachricht empfangen hat. </p>'
  - uid: system.fabric._replicator_settings.setSecondaryClearAcknowledgedOperations(boolean)
    id: setSecondaryClearAcknowledgedOperations(boolean)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setSecondaryClearAcknowledgedOperations(boolean secondaryClearAcknowledgedOperations)
    nameWithType: ReplicatorSettings.setSecondaryClearAcknowledgedOperations(boolean secondaryClearAcknowledgedOperations)
    fullName: void system.fabric.ReplicatorSettings.setSecondaryClearAcknowledgedOperations(boolean secondaryClearAcknowledgedOperations)
    overload: system.fabric._replicator_settings.setSecondaryClearAcknowledgedOperations*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 490
    package: system.fabric
    summary: "<p>Vorgänge in der sekundären Replikator bleiben in der Regel in der Warteschlange, Catchup Replikate Lage sein, wenn sie mit einem primären Replikat höher gestuft ist. Dieses Flag aktiviert ist gibt sekundären Replikator den Vorgang frei, sobald es vom Dienst für die bestätigt wird.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>der Standardwert ist \"false\" </p>"
    syntax:
      content: public void setSecondaryClearAcknowledgedOperations(boolean secondaryClearAcknowledgedOperations)
      parameters:
        - id: secondaryClearAcknowledgedOperations
          type: 4fc6e284
          description: '<p>"true", wenn sekundäre Replikator den Vorgang frei, sobald es vom Dienst für die bestätigt wird; andernfalls "false". </p>'
  - uid: system.fabric._replicator_settings.setSecurityCredentials(SecurityCredentials)
    id: setSecurityCredentials(SecurityCredentials)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setSecurityCredentials(SecurityCredentials securityCredentials)
    nameWithType: ReplicatorSettings.setSecurityCredentials(SecurityCredentials securityCredentials)
    fullName: void system.fabric.ReplicatorSettings.setSecurityCredentials(SecurityCredentials securityCredentials)
    overload: system.fabric._replicator_settings.setSecurityCredentials*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 285
    package: system.fabric
    summary: |-
      <p>Ermöglicht dem Dienst um Sicherheitsanmeldeinformationen für die Sicherung des Datenverkehrs zwischen Replikatoren zu definieren.</p>
      <p></p>
    syntax:
      content: public void setSecurityCredentials(SecurityCredentials securityCredentials)
      parameters:
        - id: securityCredentials
          type: system.fabric._security_credentials
          description: <p>Der Dienst zum Definieren der Sicherheitsanmeldeinformationen für die Sicherung des Datenverkehrs zwischen Replikatoren. </p>
  - uid: system.fabric._replicator_settings.setUseStreamFaultsAndEndOfStreamOperationAck(boolean)
    id: setUseStreamFaultsAndEndOfStreamOperationAck(boolean)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: setUseStreamFaultsAndEndOfStreamOperationAck(boolean useStreamFaultsAndEndOfStreamOperationAck)
    nameWithType: ReplicatorSettings.setUseStreamFaultsAndEndOfStreamOperationAck(boolean useStreamFaultsAndEndOfStreamOperationAck)
    fullName: void system.fabric.ReplicatorSettings.setUseStreamFaultsAndEndOfStreamOperationAck(boolean useStreamFaultsAndEndOfStreamOperationAck)
    overload: system.fabric._replicator_settings.setUseStreamFaultsAndEndOfStreamOperationAck*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 544
    package: system.fabric
    summary: "<p>Gibt an, ob der Replikator streamingfehlern verwendet.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>der Standardwert ist \"false\" </p>"
    syntax:
      content: public void setUseStreamFaultsAndEndOfStreamOperationAck(boolean useStreamFaultsAndEndOfStreamOperationAck)
      parameters:
        - id: useStreamFaultsAndEndOfStreamOperationAck
          type: 4fc6e284
          description: '<p>"true", wenn der Replikator streamingfehlern verwendet; andernfalls "false". </p>'
  - uid: system.fabric._replicator_settings.toNative(PinCollection)
    id: toNative(PinCollection)
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: toNative(PinCollection pinCollection)
    nameWithType: ReplicatorSettings.toNative(PinCollection pinCollection)
    fullName: long system.fabric.ReplicatorSettings.toNative(PinCollection pinCollection)
    overload: system.fabric._replicator_settings.toNative*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 842
    package: system.fabric
    syntax:
      content: public long toNative(PinCollection pinCollection)
      parameters:
        - id: pinCollection
          type: system.fabric._pin_collection
      return:
        type: 0364520f
  - uid: system.fabric._replicator_settings.toString()
    id: toString()
    parent: system.fabric._replicator_settings
    href: system.fabric._replicator_settings.yml
    langs:
      - java
    name: toString()
    nameWithType: ReplicatorSettings.toString()
    fullName: String system.fabric.ReplicatorSettings.toString()
    overload: system.fabric._replicator_settings.toString*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ReplicatorSettings.java
      startLine: 823
    package: system.fabric
    syntax:
      content: public String toString()
      return:
        type: '26831127'
references:
  - uid: system.fabric._replicator_settings.ReplicatorSettings*
    name: ReplicatorSettings
    nameWithType: ReplicatorSettings.ReplicatorSettings
    fullName: system.fabric.ReplicatorSettings.ReplicatorSettings
    package: system.fabric
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: system.fabric._replicator_settings.getRetryInterval*
    name: getRetryInterval
    nameWithType: ReplicatorSettings.getRetryInterval
    fullName: Duration system.fabric.ReplicatorSettings.getRetryInterval
    package: system.fabric
  - uid: system.fabric._replicator_settings.setRetryInterval*
    name: setRetryInterval
    nameWithType: ReplicatorSettings.setRetryInterval
    fullName: void system.fabric.ReplicatorSettings.setRetryInterval
    package: system.fabric
  - uid: system.fabric._replicator_settings.getBatchAcknowledgementInterval*
    name: getBatchAcknowledgementInterval
    nameWithType: ReplicatorSettings.getBatchAcknowledgementInterval
    fullName: Duration system.fabric.ReplicatorSettings.getBatchAcknowledgementInterval
    package: system.fabric
  - uid: system.fabric._replicator_settings.setBatchAcknowledgementInterval*
    name: setBatchAcknowledgementInterval
    nameWithType: ReplicatorSettings.setBatchAcknowledgementInterval
    fullName: void system.fabric.ReplicatorSettings.setBatchAcknowledgementInterval
    package: system.fabric
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: system.fabric._replicator_settings.getReplicatorAddress*
    name: getReplicatorAddress
    nameWithType: ReplicatorSettings.getReplicatorAddress
    fullName: String system.fabric.ReplicatorSettings.getReplicatorAddress
    package: system.fabric
  - uid: system.fabric._replicator_settings.setReplicatorAddress*
    name: setReplicatorAddress
    nameWithType: ReplicatorSettings.setReplicatorAddress
    fullName: void system.fabric.ReplicatorSettings.setReplicatorAddress
    package: system.fabric
  - uid: system.fabric._replicator_settings.getSecurityCredentials*
    name: getSecurityCredentials
    nameWithType: ReplicatorSettings.getSecurityCredentials
    fullName: SecurityCredentials system.fabric.ReplicatorSettings.getSecurityCredentials
    package: system.fabric
  - uid: system.fabric._replicator_settings.setSecurityCredentials*
    name: setSecurityCredentials
    nameWithType: ReplicatorSettings.setSecurityCredentials
    fullName: void system.fabric.ReplicatorSettings.setSecurityCredentials
    package: system.fabric
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._replicator_settings.getInitialReplicationQueueSize*
    name: getInitialReplicationQueueSize
    nameWithType: ReplicatorSettings.getInitialReplicationQueueSize
    fullName: long system.fabric.ReplicatorSettings.getInitialReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setInitialReplicationQueueSize*
    name: setInitialReplicationQueueSize
    nameWithType: ReplicatorSettings.setInitialReplicationQueueSize
    fullName: void system.fabric.ReplicatorSettings.setInitialReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getMaxReplicationQueueSize*
    name: getMaxReplicationQueueSize
    nameWithType: ReplicatorSettings.getMaxReplicationQueueSize
    fullName: long system.fabric.ReplicatorSettings.getMaxReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setMaxReplicationQueueSize*
    name: setMaxReplicationQueueSize
    nameWithType: ReplicatorSettings.setMaxReplicationQueueSize
    fullName: void system.fabric.ReplicatorSettings.setMaxReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getInitialCopyQueueSize*
    name: getInitialCopyQueueSize
    nameWithType: ReplicatorSettings.getInitialCopyQueueSize
    fullName: long system.fabric.ReplicatorSettings.getInitialCopyQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setInitialCopyQueueSize*
    name: setInitialCopyQueueSize
    nameWithType: ReplicatorSettings.setInitialCopyQueueSize
    fullName: void system.fabric.ReplicatorSettings.setInitialCopyQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getMaxCopyQueueSize*
    name: getMaxCopyQueueSize
    nameWithType: ReplicatorSettings.getMaxCopyQueueSize
    fullName: long system.fabric.ReplicatorSettings.getMaxCopyQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setMaxCopyQueueSize*
    name: setMaxCopyQueueSize
    nameWithType: ReplicatorSettings.setMaxCopyQueueSize
    fullName: void system.fabric.ReplicatorSettings.setMaxCopyQueueSize
    package: system.fabric
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: system.fabric._replicator_settings.isRequireServiceAck*
    name: isRequireServiceAck
    nameWithType: ReplicatorSettings.isRequireServiceAck
    fullName: boolean system.fabric.ReplicatorSettings.isRequireServiceAck
    package: system.fabric
  - uid: system.fabric._replicator_settings.setRequireServiceAck*
    name: setRequireServiceAck
    nameWithType: ReplicatorSettings.setRequireServiceAck
    fullName: void system.fabric.ReplicatorSettings.setRequireServiceAck
    package: system.fabric
  - uid: system.fabric._replicator_settings.getMaxReplicationQueueMemorySize*
    name: getMaxReplicationQueueMemorySize
    nameWithType: ReplicatorSettings.getMaxReplicationQueueMemorySize
    fullName: long system.fabric.ReplicatorSettings.getMaxReplicationQueueMemorySize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setMaxReplicationQueueMemorySize*
    name: setMaxReplicationQueueMemorySize
    nameWithType: ReplicatorSettings.setMaxReplicationQueueMemorySize
    fullName: void system.fabric.ReplicatorSettings.setMaxReplicationQueueMemorySize
    package: system.fabric
  - uid: system.fabric._replicator_settings.isSecondaryClearAcknowledgedOperations*
    name: isSecondaryClearAcknowledgedOperations
    nameWithType: ReplicatorSettings.isSecondaryClearAcknowledgedOperations
    fullName: boolean system.fabric.ReplicatorSettings.isSecondaryClearAcknowledgedOperations
    package: system.fabric
  - uid: system.fabric._replicator_settings.setSecondaryClearAcknowledgedOperations*
    name: setSecondaryClearAcknowledgedOperations
    nameWithType: ReplicatorSettings.setSecondaryClearAcknowledgedOperations
    fullName: void system.fabric.ReplicatorSettings.setSecondaryClearAcknowledgedOperations
    package: system.fabric
  - uid: 34f09483
    spec.java:
      - name: Long
        fullName: Long
  - uid: system.fabric._replicator_settings.getMaxReplicationMessageSize*
    name: getMaxReplicationMessageSize
    nameWithType: ReplicatorSettings.getMaxReplicationMessageSize
    fullName: Long system.fabric.ReplicatorSettings.getMaxReplicationMessageSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setMaxReplicationMessageSize*
    name: setMaxReplicationMessageSize
    nameWithType: ReplicatorSettings.setMaxReplicationMessageSize
    fullName: void system.fabric.ReplicatorSettings.setMaxReplicationMessageSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.isUseStreamFaultsAndEndOfStreamOperationAck*
    name: isUseStreamFaultsAndEndOfStreamOperationAck
    nameWithType: ReplicatorSettings.isUseStreamFaultsAndEndOfStreamOperationAck
    fullName: boolean system.fabric.ReplicatorSettings.isUseStreamFaultsAndEndOfStreamOperationAck
    package: system.fabric
  - uid: system.fabric._replicator_settings.setUseStreamFaultsAndEndOfStreamOperationAck*
    name: setUseStreamFaultsAndEndOfStreamOperationAck
    nameWithType: ReplicatorSettings.setUseStreamFaultsAndEndOfStreamOperationAck
    fullName: void system.fabric.ReplicatorSettings.setUseStreamFaultsAndEndOfStreamOperationAck
    package: system.fabric
  - uid: system.fabric._replicator_settings.getInitialPrimaryReplicationQueueSize*
    name: getInitialPrimaryReplicationQueueSize
    nameWithType: ReplicatorSettings.getInitialPrimaryReplicationQueueSize
    fullName: long system.fabric.ReplicatorSettings.getInitialPrimaryReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setInitialPrimaryReplicationQueueSize*
    name: setInitialPrimaryReplicationQueueSize
    nameWithType: ReplicatorSettings.setInitialPrimaryReplicationQueueSize
    fullName: void system.fabric.ReplicatorSettings.setInitialPrimaryReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getMaxPrimaryReplicationQueueSize*
    name: getMaxPrimaryReplicationQueueSize
    nameWithType: ReplicatorSettings.getMaxPrimaryReplicationQueueSize
    fullName: long system.fabric.ReplicatorSettings.getMaxPrimaryReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setMaxPrimaryReplicationQueueSize*
    name: setMaxPrimaryReplicationQueueSize
    nameWithType: ReplicatorSettings.setMaxPrimaryReplicationQueueSize
    fullName: void system.fabric.ReplicatorSettings.setMaxPrimaryReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getMaxPrimaryReplicationQueueMemorySize*
    name: getMaxPrimaryReplicationQueueMemorySize
    nameWithType: ReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize
    fullName: long system.fabric.ReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setMaxPrimaryReplicationQueueMemorySize*
    name: setMaxPrimaryReplicationQueueMemorySize
    nameWithType: ReplicatorSettings.setMaxPrimaryReplicationQueueMemorySize
    fullName: void system.fabric.ReplicatorSettings.setMaxPrimaryReplicationQueueMemorySize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getInitialSecondaryReplicationQueueSize*
    name: getInitialSecondaryReplicationQueueSize
    nameWithType: ReplicatorSettings.getInitialSecondaryReplicationQueueSize
    fullName: long system.fabric.ReplicatorSettings.getInitialSecondaryReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setInitialSecondaryReplicationQueueSize*
    name: setInitialSecondaryReplicationQueueSize
    nameWithType: ReplicatorSettings.setInitialSecondaryReplicationQueueSize
    fullName: void system.fabric.ReplicatorSettings.setInitialSecondaryReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getMaxSecondaryReplicationQueueSize*
    name: getMaxSecondaryReplicationQueueSize
    nameWithType: ReplicatorSettings.getMaxSecondaryReplicationQueueSize
    fullName: long system.fabric.ReplicatorSettings.getMaxSecondaryReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setMaxSecondaryReplicationQueueSize*
    name: setMaxSecondaryReplicationQueueSize
    nameWithType: ReplicatorSettings.setMaxSecondaryReplicationQueueSize
    fullName: void system.fabric.ReplicatorSettings.setMaxSecondaryReplicationQueueSize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getMaxSecondaryReplicationQueueMemorySize*
    name: getMaxSecondaryReplicationQueueMemorySize
    nameWithType: ReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize
    fullName: long system.fabric.ReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize
    package: system.fabric
  - uid: system.fabric._replicator_settings.setMaxSecondaryReplicationQueueMemorySize*
    name: setMaxSecondaryReplicationQueueMemorySize
    nameWithType: ReplicatorSettings.setMaxSecondaryReplicationQueueMemorySize
    fullName: void system.fabric.ReplicatorSettings.setMaxSecondaryReplicationQueueMemorySize
    package: system.fabric
  - uid: system.fabric._replicator_settings.getPrimaryWaitForPendingQuorumsTimeout*
    name: getPrimaryWaitForPendingQuorumsTimeout
    nameWithType: ReplicatorSettings.getPrimaryWaitForPendingQuorumsTimeout
    fullName: Duration system.fabric.ReplicatorSettings.getPrimaryWaitForPendingQuorumsTimeout
    package: system.fabric
  - uid: system.fabric._replicator_settings.setPrimaryWaitForPendingQuorumsTimeout*
    name: setPrimaryWaitForPendingQuorumsTimeout
    nameWithType: ReplicatorSettings.setPrimaryWaitForPendingQuorumsTimeout
    fullName: void system.fabric.ReplicatorSettings.setPrimaryWaitForPendingQuorumsTimeout
    package: system.fabric
  - uid: system.fabric._replicator_settings.toString*
    name: toString
    nameWithType: ReplicatorSettings.toString
    fullName: String system.fabric.ReplicatorSettings.toString
    package: system.fabric
  - uid: system.fabric._replicator_settings.toNative*
    name: toNative
    nameWithType: ReplicatorSettings.toNative
    fullName: long system.fabric.ReplicatorSettings.toNative
    package: system.fabric
  - uid: system.fabric._replicator_settings.loadFrom*
    name: loadFrom
    nameWithType: ReplicatorSettings.loadFrom
    fullName: static ReplicatorSettings system.fabric.ReplicatorSettings.loadFrom
    package: system.fabric
  - uid: system.fabric._security_credentials
    parent: system.fabric
    href: system.fabric._security_credentials.yml
    name: SecurityCredentials
    nameWithType: SecurityCredentials
    fullName: system.fabric.SecurityCredentials
    type: Class
    summary: '<p>Eine abstrakte Basisklasse für Typen, die Anmeldeinformationen für die Sicherheit darstellen. </p>'
    syntax:
      content: public class SecurityCredentials
  - uid: system.fabric._replicator_settings
    parent: system.fabric
    href: system.fabric._replicator_settings.yml
    name: ReplicatorSettings
    nameWithType: ReplicatorSettings
    fullName: system.fabric.ReplicatorSettings
    type: Class
    syntax: *ref_1
  - uid: system.fabric._fabric_replicator
    parent: system.fabric
    href: system.fabric._fabric_replicator.yml
    name: FabricReplicator
    nameWithType: FabricReplicator
    fullName: system.fabric.FabricReplicator
    type: Class
    summary: "<p>Repliziert den Status für hohe Verfügbarkeit und Zuverlässigkeit. </p>\n<p>\r\n\r\n  <b>Hinweise:</b>stellt die Standardimplementierung von der <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref>, <xref uid=\"system.fabric._replicator\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator</xref>, und <xref uid=\"system.fabric._primary_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.PrimaryReplicator </xref> Schnittstellen, die Benutzerdienste werden, zusammen mit ihrer Implementierung von verwendet können der <xref uid=\"system.fabric._state_provider\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider</xref> Schnittstelle. Eine Instanz von der <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> Klasse abgerufen wird, über die <xref uid=\"system.fabric._stateful_service_partition.createReplicator(StateProvider,ReplicatorSettings)\" data-throw-if-not-resolved=\"false\">system.fabric.StatefulServicePartition#createReplicator (system.fabric.StateProvider, system.fabric.ReplicatorSettings) </xref> -Methode, die in umgewandelt werden kann <xref uid=\"system.fabric._state_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator</xref> für die Verwendung. </p>"
    syntax:
      content: public class FabricReplicator implements Replicator
  - uid: system.fabric._operation
    parent: system.fabric
    href: system.fabric._operation.yml
    name: Operation
    nameWithType: Operation
    fullName: system.fabric.Operation
    type: Interface
    summary: "<p>\r\n\r\n  <b>Hinweise:</b>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> ist die Basisschnittstelle, die Änderungen beschreibt, die an ein sekundäres Replikat übermittelt werden. Sie enthalten die <xref uid=\"system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#replicateAsync (OperationData SequenceNumber, system.fabric.CancellationToken)</xref> und identifizieren Sie die Sequenznummer und andere Informationen. </p>"
    syntax:
      content: public interface Operation
  - uid: system.fabric._operation.acknowledge()
    parent: system.fabric._operation
    href: system.fabric._operation.yml
    name: acknowledge()
    nameWithType: Operation.acknowledge()
    fullName: void system.fabric.Operation.acknowledge()
    type: Method
    summary: "<p>Bestätigt, dass dieser Vorgang erfolgreich auf das sekundäre Replikat angewendet wurde. </p>\n<p>\r\n\r\n  <b>Hinweise:</b>Dienste sollten diese Methode aufrufen, wenn sie gewonnen haben eine <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref> aus dem Replicator und erfolgreich auf ihren lokalen Speicher angewendet. Beim Aufrufen dieser Methode für persistente Dienste obligatorisch ist da die <xref uid=\"system.fabric._fabric_replicator\" data-throw-if-not-resolved=\"false\">system.fabric.FabricReplicator</xref> aufgehoben wird, zusätzliche Objekte, die implementieren <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Operation</xref>. Für Dienste volatile Vorgänge Replikator implizit bestätigt, wenn sie empfangen werden, es sei denn, sie andernfalls konfiguriert sind, durch Festlegen des Werts <xref uid=\"system.fabric._replicator_settings.isRequireServiceAck()\" data-throw-if-not-resolved=\"false\">system.fabric.ReplicatorSettings#isRequireServiceAck()</xref> auf \"true\". Ein Vorgang muss durch ein Quorum der Replikate bestätigt werden, bevor das primäre Replikat empfängt die <xref uid=\"system.fabric._state_replicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateReplicator#replicateAsync (OperationData SequenceNumber, system.fabric.CancellationToken)</xref> Vorgangsantworten abgeschlossen. </p>"
    syntax:
      content: public void acknowledge()
  - uid: system.fabric._replicator
    parent: system.fabric
    href: system.fabric._replicator.yml
    name: Replicator
    nameWithType: Replicator
    fullName: system.fabric.Replicator
    type: Interface
    syntax:
      content: public interface Replicator extends PrimaryReplicator
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection
  - uid: system.fabric._fabric_code_package_activation_context
    parent: system.fabric
    href: system.fabric._fabric_code_package_activation_context.yml
    name: FabricCodePackageActivationContext
    nameWithType: FabricCodePackageActivationContext
    fullName: system.fabric.FabricCodePackageActivationContext
    type: Class
    summary: '<p>Stellt Aktivierungskontext für die Service Fabric-Dienst dar. Dies gilt für nur aktiviert, fabricdienst. </p>'
    syntax:
      content: public class FabricCodePackageActivationContext implements CodePackageActivationContext