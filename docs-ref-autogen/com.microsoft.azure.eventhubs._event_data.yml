### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.eventhubs._event_data
    id: _event_data
    parent: com.microsoft.azure.eventhubs
    children:
      - 'com.microsoft.azure.eventhubs._event_data.EventData(byte [])'
      - 'com.microsoft.azure.eventhubs._event_data.EventData(byte [],final int,final int)'
      - com.microsoft.azure.eventhubs._event_data.EventData(ByteBuffer)
      - com.microsoft.azure.eventhubs._event_data.getBody()
      - com.microsoft.azure.eventhubs._event_data.getBodyLength()
      - com.microsoft.azure.eventhubs._event_data.getBodyOffset()
      - com.microsoft.azure.eventhubs._event_data.getBytes()
      - com.microsoft.azure.eventhubs._event_data.getObject()
      - com.microsoft.azure.eventhubs._event_data.getProperties()
      - com.microsoft.azure.eventhubs._event_data.getSystemProperties()
      - 'com.microsoft.azure.eventhubs._event_data.setProperties(final Map<String, Object>)'
    href: com.microsoft.azure.eventhubs._event_data.yml
    langs:
      - java
    name: EventData
    nameWithType: EventData
    fullName: com.microsoft.azure.eventhubs.EventData
    type: Class
    source:
      remote: &ref_0
        path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventData.java
        branch: master
        repo: 'https://github.com/Azure/azure-event-hubs-java'
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventData.java
      startLine: 47
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Die Datenstruktur, die das Ereignis wird gesendet an und Empfangen von EventHubs kapseln. Jede Partition EventHubs visualisiert werden kann, als Datenstrom von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
      <p>Serialisieren eines empfangenen <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> mit AMQP-Abschnitten als ApplicationProperties (mit primitiven Java-Typen) und Daten der Abschnitt wird nicht unterstützt. </p>
      <p>So sieht wie AMQP-Nachricht-Abschnitten zugeordnet <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. Hier wird der Verweis, der für AMQP 1.0-Spezifikation verwendet: <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</ulink><pre>
      i.   <xref uid="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false">getProperties()</xref> - AMQPMessage.ApplicationProperties section
      ii.  <xref uid="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false">getBytes()</xref> - if AMQPMessage.Body has Data section
      iii. <xref uid="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false">getObject()</xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections
      </pre> Bei der Verwendung von Clientbibliotheken, die von Microsoft Azure EventHubs veröffentlicht wurden, sind die Abschnitte (i) und (Ii) allein ausreichend. Abschnitt (Iii) wird verwendet, für erweiterte Szenarien, in denen die sendende Anwendung eines Drittanbieters AMQP-Bibliothek zum Senden der Nachricht an EventHubs verwendet und die empfangende Anwendung verwendet diese Clientbibliothek zum Empfangen von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
    syntax: &ref_1
      content: public class EventData
    inheritance:
      - java.lang.Object
      - Serializable
  - uid: 'com.microsoft.azure.eventhubs._event_data.EventData(byte [])'
    id: 'EventData(byte [])'
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    langs:
      - java
    name: 'EventData(byte[] data)'
    nameWithType: 'EventData.EventData(byte[] data)'
    fullName: 'com.microsoft.azure.eventhubs.EventData.EventData(byte[] data)'
    overload: com.microsoft.azure.eventhubs._event_data.EventData*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventData.java
      startLine: 141
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Erstellen Sie <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> zu senden, um EventHubs. Typische Muster zum Erstellen einer senden <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> ist: <pre>
      i.  Serialize the sending ApplicationEvent to be sent to EventHubs into bytes.
      ii. If complex serialization logic is involved (for example: multiple types of data) - add a Hint using the <xref uid="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false">getProperties()</xref> for the Consumer.
      </pre></p>
      <p>Beispielcode: <pre><xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> eventData = new EventData(telemetryEventBytes);
      eventData.getProperties().put("eventType", "com.microsoft.azure.monitoring.EtlEvent");
      partitionSender.Send(eventData);
      </pre></p>
      <p></p>
    syntax:
      content: 'public EventData(byte[] data)'
      parameters:
        - id: data
          type: ccd9418d
          description: '<p>die tatsächliche Nutzlast von Daten in Bytes, die an EventHubs gesendet werden. </p>'
    see:
      - type: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)
        description: 'EventHubClient::createFromConnectionString(String)'
  - uid: 'com.microsoft.azure.eventhubs._event_data.EventData(byte [],final int,final int)'
    id: 'EventData(byte [],final int,final int)'
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    langs:
      - java
    name: 'EventData(byte[] data, final int offset, final int length)'
    nameWithType: 'EventData.EventData(byte[] data, final int offset, final int length)'
    fullName: 'com.microsoft.azure.eventhubs.EventData.EventData(byte[] data, final int offset, final int length)'
    overload: com.microsoft.azure.eventhubs._event_data.EventData*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventData.java
      startLine: 170
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Erstellen Sie <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> zu senden, um EventHubs. Typische Muster zum Erstellen einer senden <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> ist: <pre>
      i.  Serialize the sending ApplicationEvent to be sent to EventHubs into bytes.
      ii. If complex serialization logic is involved (for example: multiple types of data) - add a Hint using the <xref uid="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false">getProperties()</xref> for the Consumer.

       </pre></p>

      <p>Abbildung: <pre><code>EventData eventData = new EventData(telemetryEventBytes, offset, length);

          eventData.getProperties().put("eventType", "com.microsoft.azure.monitoring.EtlEvent");

          partitionSender.Send(eventData);

          </code></pre></p>

      <p></p>
    syntax:
      content: 'public EventData(byte[] data, final int offset, final int length)'
      parameters:
        - id: data
          type: ccd9418d
          description: '<p>Das Byte [], in dem die Nutzlast des Ereignisses zu EventHubs sendende vorhanden ist. </p>'
        - id: offset
          type: cd225469
          description: '<p>Offset in der Byte [] zum Auslesen; inklusive index </p>'
        - id: length
          type: cd225469
          description: '<p>Länge der Byte [] gelesen werden, beginnend mit Offset </p>'
    see:
      - type: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)
        description: 'EventHubClient::createFromConnectionString(String)'
  - uid: com.microsoft.azure.eventhubs._event_data.EventData(ByteBuffer)
    id: EventData(ByteBuffer)
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    langs:
      - java
    name: EventData(ByteBuffer buffer)
    nameWithType: EventData.EventData(ByteBuffer buffer)
    fullName: com.microsoft.azure.eventhubs.EventData.EventData(ByteBuffer buffer)
    overload: com.microsoft.azure.eventhubs._event_data.EventData*
    type: Constructor
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventData.java
      startLine: 197
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Erstellen Sie <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> zu senden, um EventHubs. Typische Muster zum Erstellen einer senden <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> ist: <pre>
      i.  Serialize the sending ApplicationEvent to be sent to EventHubs into bytes.
      ii. If complex serialization logic is involved (for example: multiple types of data) - add a Hint using the <xref uid="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false">getProperties()</xref> for the Consumer.

       </pre></p>

      <p>Abbildung: <pre><code>EventData eventData = new EventData(telemetryEventByteBuffer);

          eventData.getProperties().put("eventType", "com.microsoft.azure.monitoring.EtlEvent");

             partitionSender.Send(eventData);

          </code></pre></p>

      <p></p>
    syntax:
      content: public EventData(ByteBuffer buffer)
      parameters:
        - id: buffer
          type: 85310d28
          description: '<p>ByteBuffer, die auf die Nutzlast des Ereignisses an EventHubs gesendet werden </p>'
    see:
      - type: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)
        description: 'EventHubClient::createFromConnectionString(String)'
  - uid: com.microsoft.azure.eventhubs._event_data.getBody()
    id: getBody()
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    langs:
      - java
    name: getBody()
    nameWithType: EventData.getBody()
    fullName: 'byte [] com.microsoft.azure.eventhubs.EventData.getBody()'
    overload: com.microsoft.azure.eventhubs._event_data.getBody*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventData.java
      startLine: 230
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Abrufen der tatsächlichen Nutzlastdaten/umschlossen <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. Dies ist das zugrunde liegende Array und sollte verwendet werden, zusammen mit <xref uid="com.microsoft.azure.eventhubs._event_data.getBodyOffset()" data-throw-if-not-resolved="false">getBodyOffset()</xref> und <xref uid="com.microsoft.azure.eventhubs._event_data.getBodyLength()" data-throw-if-not-resolved="false">getBodyLength()</xref>.</p>
      <p>
      NULL, wenn der Text der Nachricht AMQP Datenabschnitt keine <xrefsect id="deprecated_1_deprecated000015"> <xreftitle>veraltet</xreftitle><xrefdescription><p>Verwenden Sie <xref uid="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false">getBytes()</xref></p></xrefdescription></xrefsect></p>
    syntax: &ref_6
      content: 'public byte [] getBody()'
      return:
        type: ccd9418d
        description: '<p>Byte [] der tatsächlichen Daten </p>'
  - uid: com.microsoft.azure.eventhubs._event_data.getBodyLength()
    id: getBodyLength()
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    langs:
      - java
    name: getBodyLength()
    nameWithType: EventData.getBodyLength()
    fullName: int com.microsoft.azure.eventhubs.EventData.getBodyLength()
    overload: com.microsoft.azure.eventhubs._event_data.getBodyLength*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventData.java
      startLine: 256
    package: com.microsoft.azure.eventhubs
    summary: "<p>Abrufen der Länge des tatsächlichen Nutzlast/Daten im zurückgegebenen Array von Byte <xref uid=\"com.microsoft.azure.eventhubs._event_data.getBody()\" data-throw-if-not-resolved=\"false\">getBody()</xref>.</p>\n<p>\r\n\r\n  <xrefsect id=\"deprecated_1_deprecated000017\">\r\n\r\n    <xreftitle>Als veraltet markiert</xreftitle>\r\n\r\n    <xrefdescription>\r\n\r\n      <p>Verwenden Sie <xref uid=\"com.microsoft.azure.eventhubs._event_data.getBytes()\" data-throw-if-not-resolved=\"false\">getBytes()</xref></p>\n\n    </xrefdescription>\n\n  </xrefsect>\n\n</p>"
    syntax: &ref_5
      content: public int getBodyLength()
      return:
        type: f75371fa
        description: '<p>Gibt das Byte [] der tatsächlichen Daten zurück </p>'
    see:
      - type: com.microsoft.azure.eventhubs._event_data.getBody()
        description: getBody()
      - type: com.microsoft.azure.eventhubs._event_data.getBodyOffset()
        description: getBodyOffset()
  - uid: com.microsoft.azure.eventhubs._event_data.getBodyOffset()
    id: getBodyOffset()
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    langs:
      - java
    name: getBodyOffset()
    nameWithType: EventData.getBodyOffset()
    fullName: int com.microsoft.azure.eventhubs.EventData.getBodyOffset()
    overload: com.microsoft.azure.eventhubs._event_data.getBodyOffset*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventData.java
      startLine: 243
    package: com.microsoft.azure.eventhubs
    summary: "<p>Abrufen das Offset des die aktuelle Nutzlastdaten im Bytearray zurückgegebenes <xref uid=\"com.microsoft.azure.eventhubs._event_data.getBody()\" data-throw-if-not-resolved=\"false\">getBody()</xref>.</p>\n<p>\r\n\r\n  <xrefsect id=\"deprecated_1_deprecated000016\">\r\n\r\n    <xreftitle>Als veraltet markiert</xreftitle>\r\n\r\n    <xrefdescription>\r\n\r\n      <p>Verwenden Sie <xref uid=\"com.microsoft.azure.eventhubs._event_data.getBytes()\" data-throw-if-not-resolved=\"false\">getBytes()</xref></p>\n\n    </xrefdescription>\n\n  </xrefsect>\n\n</p>"
    syntax: &ref_4
      content: public int getBodyOffset()
      return:
        type: f75371fa
        description: '<p>Gibt das Byte [] der tatsächlichen Daten zurück </p>'
    see:
      - type: com.microsoft.azure.eventhubs._event_data.getBodyLength()
        description: getBodyLength()
      - type: com.microsoft.azure.eventhubs._event_data.getBody()
        description: getBody()
  - uid: com.microsoft.azure.eventhubs._event_data.getBytes()
    id: getBytes()
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    langs:
      - java
    name: getBytes()
    nameWithType: EventData.getBytes()
    fullName: 'byte [] com.microsoft.azure.eventhubs.EventData.getBytes()'
    overload: com.microsoft.azure.eventhubs._event_data.getBytes*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventData.java
      startLine: 267
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Abrufen der tatsächlichen Nutzlastdaten/umschlossen <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>.</p>
      <p>
      NULL, wenn der Text der Nachricht andere Kommunikation betriebsbereiten AMQP-Nachrichten hat, dessen Text keine Byte [] darstellt. In diesem Fall <xref uid="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false">getObject()</xref>. </p>
    syntax: &ref_3
      content: 'public byte [] getBytes()'
      return:
        type: ccd9418d
        description: '<p>Byte [] der tatsächlichen Daten </p>'
  - uid: com.microsoft.azure.eventhubs._event_data.getObject()
    id: getObject()
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    langs:
      - java
    name: getObject()
    nameWithType: EventData.getObject()
    fullName: Object com.microsoft.azure.eventhubs.EventData.getObject()
    overload: com.microsoft.azure.eventhubs._event_data.getObject*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventData.java
      startLine: 218
    package: com.microsoft.azure.eventhubs
    summary: "<p>Verwenden Sie diese Methode nur, wenn der Absender Nachrichten mithilfe von AMQP-Bibliotheken von Drittanbietern gesendet werden konnte. </p>\n<p>Wenn die Absender EventHub Clientbibliotheken, die veröffentlicht verwenden und verwaltet von Microsoft Azure EventHubs, <xref uid=\"com.microsoft.azure.eventhubs._event_data.getBytes()\" data-throw-if-not-resolved=\"false\">getBytes()</xref> Methode. </p>\n<p>Rufen Sie den Wert von AMQP Nachrichtenstroms Textabschnitt auf die empfangenen Daten <xref uid=\"com.microsoft.azure.eventhubs._event_data\" data-throw-if-not-resolved=\"false\">EventData</xref>. </p>\n<p>Wenn die AMQP-Nachricht Text immer Datenabschnitt damit gewährleistet ist, verwenden Sie <xref uid=\"com.microsoft.azure.eventhubs._event_data.getBytes()\" data-throw-if-not-resolved=\"false\">getBytes()</xref> Methode.</p>\n<p>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">Binäre</xref> ist der Text Datenabschnitt </p>\n\n<p>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">Liste</xref> ist der Text AmqpSequence </p>\n\n<p>Paket org.apache.qpid.proton.amqp enthält verschiedene AMQP-Typen, die zurückgegeben werden konnte. </p>"
    syntax: &ref_7
      content: public Object getObject()
      return:
        type: '79317049'
        description: <p>Gibt das Objekt die Daten oder AmqpValue oder AmqpSequence darstellen könnte. </p>
  - uid: com.microsoft.azure.eventhubs._event_data.getProperties()
    id: getProperties()
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    langs:
      - java
    name: getProperties()
    nameWithType: EventData.getProperties()
    fullName: 'Map<String, Object> com.microsoft.azure.eventhubs.EventData.getProperties()'
    overload: com.microsoft.azure.eventhubs._event_data.getProperties*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventData.java
      startLine: 280
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Eigenschaftenbehälter für die Anwendung</p>
      <p></p>
    syntax: &ref_2
      content: 'public Map<String, Object> getProperties()'
      return:
        type: e7b06046
        description: <p>Gibt Eigenschaften der Anwendung </p>
  - uid: com.microsoft.azure.eventhubs._event_data.getSystemProperties()
    id: getSystemProperties()
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    langs:
      - java
    name: getSystemProperties()
    nameWithType: EventData.getSystemProperties()
    fullName: SystemProperties com.microsoft.azure.eventhubs.EventData.getSystemProperties()
    overload: com.microsoft.azure.eventhubs._event_data.getSystemProperties*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventData.java
      startLine: 314
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>SystemProperties, die vom EventHubService aufgefüllt werden. </p>
      <p>Wie diese vom Dienst aufgefüllt werden, sind sie nur eine empfangene vorhanden <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
      <p>Syntax:</p>
      <p></p>
      <p></p>
    syntax:
      content: public SystemProperties getSystemProperties()
      return:
        type: a4d677af
        description: '<p>eine Kapselung von allen SystemProperties angefügt EventHubs-Dienst in <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. <code>null</code>Wenn die <xref uid="" data-throw-if-not-resolved="false">EventData()</xref> nicht empfangen wird, und wird erstellt, indem die öffentlichen Konstruktoren. </p>'
  - uid: 'com.microsoft.azure.eventhubs._event_data.setProperties(final Map<String, Object>)'
    id: 'setProperties(final Map<String, Object>)'
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    langs:
      - java
    name: 'setProperties(final Map<String, Object> applicationProperties)'
    nameWithType: 'EventData.setProperties(final Map<String, Object> applicationProperties)'
    fullName: 'void com.microsoft.azure.eventhubs.EventData.setProperties(final Map<String, Object> applicationProperties)'
    overload: com.microsoft.azure.eventhubs._event_data.setProperties*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/EventData.java
      startLine: 295
    package: com.microsoft.azure.eventhubs
    summary: "<p>Festlegen von Anwendungseigenschaften</p>\n<p>\r\n\r\n  <xrefsect id=\"deprecated_1_deprecated000018\">\r\n\r\n    <xreftitle>Als veraltet markiert</xreftitle>\r\n\r\n    <xrefdescription>\r\n\r\n      <p>Verwenden Sie <xref uid=\"com.microsoft.azure.eventhubs._event_data.getProperties()\" data-throw-if-not-resolved=\"false\">getProperties()</xref> und Behälter Eigenschaften hinzufügen. </p>\n\n    </xrefdescription>\n\n  </xrefsect>\n\n</p>"
    syntax:
      content: 'public void setProperties(final Map<String, Object> applicationProperties)'
      parameters:
        - id: applicationProperties
          type: 0ef16036
          description: <p>Anwendungseigenschaften Behälter </p>
references:
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: com.microsoft.azure.eventhubs._event_data.EventData*
    name: EventData
    nameWithType: EventData.EventData
    fullName: com.microsoft.azure.eventhubs.EventData.EventData
    package: com.microsoft.azure.eventhubs
  - uid: cd225469
    spec.java:
      - name: final int
        fullName: final int
  - uid: 85310d28
    spec.java:
      - name: ByteBuffer
        fullName: ByteBuffer
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: com.microsoft.azure.eventhubs._event_data.getObject*
    name: getObject
    nameWithType: EventData.getObject
    fullName: Object com.microsoft.azure.eventhubs.EventData.getObject
    package: com.microsoft.azure.eventhubs
  - uid: com.microsoft.azure.eventhubs._event_data.getBody*
    name: getBody
    nameWithType: EventData.getBody
    fullName: 'byte [] com.microsoft.azure.eventhubs.EventData.getBody'
    package: com.microsoft.azure.eventhubs
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.eventhubs._event_data.getBodyOffset*
    name: getBodyOffset
    nameWithType: EventData.getBodyOffset
    fullName: int com.microsoft.azure.eventhubs.EventData.getBodyOffset
    package: com.microsoft.azure.eventhubs
  - uid: com.microsoft.azure.eventhubs._event_data.getBodyLength*
    name: getBodyLength
    nameWithType: EventData.getBodyLength
    fullName: int com.microsoft.azure.eventhubs.EventData.getBodyLength
    package: com.microsoft.azure.eventhubs
  - uid: com.microsoft.azure.eventhubs._event_data.getBytes*
    name: getBytes
    nameWithType: EventData.getBytes
    fullName: 'byte [] com.microsoft.azure.eventhubs.EventData.getBytes'
    package: com.microsoft.azure.eventhubs
  - uid: e7b06046
    spec.java:
      - name: 'Map<String, Object>'
        fullName: 'Map<String, Object>'
  - uid: com.microsoft.azure.eventhubs._event_data.getProperties*
    name: getProperties
    nameWithType: EventData.getProperties
    fullName: 'Map<String, Object> com.microsoft.azure.eventhubs.EventData.getProperties'
    package: com.microsoft.azure.eventhubs
  - uid: 0ef16036
    spec.java:
      - name: 'final Map<String, Object>'
        fullName: 'final Map<String, Object>'
  - uid: com.microsoft.azure.eventhubs._event_data.setProperties*
    name: setProperties
    nameWithType: EventData.setProperties
    fullName: void com.microsoft.azure.eventhubs.EventData.setProperties
    package: com.microsoft.azure.eventhubs
  - uid: a4d677af
    spec.java:
      - name: SystemProperties
        fullName: SystemProperties
  - uid: com.microsoft.azure.eventhubs._event_data.getSystemProperties*
    name: getSystemProperties
    nameWithType: EventData.getSystemProperties
    fullName: SystemProperties com.microsoft.azure.eventhubs.EventData.getSystemProperties
    package: com.microsoft.azure.eventhubs
  - uid: com.microsoft.azure.eventhubs._partition_receiver
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    name: PartitionReceiver
    nameWithType: PartitionReceiver
    fullName: com.microsoft.azure.eventhubs.PartitionReceiver
    type: Class
    summary: |-
      <p>Dies ist eine logische Darstellung des Empfangs aus einen Event Hub-Partition. </p>
      <p>Ein <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> ist an eine ConsumerGroup + EventHub Partition gebunden Kombination. <itemizedlist><listitem><p>Wenn Sie eine Epoche basiert <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> (d. h. <xref uid="com.microsoft.azure.eventhubs._partition_receiver.getEpoch()" data-throw-if-not-resolved="false">PartitionReceiver.getEpoch</xref> ! = 0) wird erstellt, EventHubs Dienst auch dafür nur 1 aktive Empfänger pro ConsumerGroup + Partition vorhanden ist Kombinationsfeld. Dies ist die empfohlene Vorgehensweise zum Erstellen einer <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>. </p></listitem><listitem><p>Mehrere Empfänger pro ConsumerGroup + Partition kann Kombinationsfeld mit nicht-Epoche Empfänger erstellt werden. </p></listitem></itemizedlist></p>
      <p></p>
    syntax:
      content: public class PartitionReceiver
  - uid: com.microsoft.azure.eventhubs._event_data
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._event_data.yml
    name: EventData
    nameWithType: EventData
    fullName: com.microsoft.azure.eventhubs.EventData
    type: Class
    summary: |-
      <p>Die Datenstruktur, die das Ereignis wird gesendet an und Empfangen von EventHubs kapseln. Jede Partition EventHubs visualisiert werden kann, als Datenstrom von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
      <p>Serialisieren eines empfangenen <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> mit AMQP-Abschnitten als ApplicationProperties (mit primitiven Java-Typen) und Daten der Abschnitt wird nicht unterstützt. </p>
      <p>So sieht wie AMQP-Nachricht-Abschnitten zugeordnet <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. Hier wird der Verweis, der für AMQP 1.0-Spezifikation verwendet: <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</ulink><pre>
      i.   <xref uid="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false">getProperties()</xref> - AMQPMessage.ApplicationProperties section
      ii.  <xref uid="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false">getBytes()</xref> - if AMQPMessage.Body has Data section
      iii. <xref uid="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false">getObject()</xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections
      </pre> Bei der Verwendung von Clientbibliotheken, die von Microsoft Azure EventHubs veröffentlicht wurden, sind die Abschnitte (i) und (Ii) allein ausreichend. Abschnitt (Iii) wird verwendet, für erweiterte Szenarien, in denen die sendende Anwendung eines Drittanbieters AMQP-Bibliothek zum Senden der Nachricht an EventHubs verwendet und die empfangende Anwendung verwendet diese Clientbibliothek zum Empfangen von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
    syntax: *ref_1
  - uid: com.microsoft.azure.eventhubs._event_data.getProperties()
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    name: getProperties()
    nameWithType: EventData.getProperties()
    fullName: 'Map<String, Object> com.microsoft.azure.eventhubs.EventData.getProperties()'
    type: Method
    summary: |-
      <p>Eigenschaftenbehälter für die Anwendung</p>
      <p></p>
    syntax: *ref_2
  - uid: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)
    parent: com.microsoft.azure.eventhubs._event_hub_client
    href: com.microsoft.azure.eventhubs._event_hub_client.yml
    name: createFromConnectionString(final String connectionString)
    nameWithType: EventHubClient.createFromConnectionString(final String connectionString)
    fullName: static CompletableFuture<EventHubClient> com.microsoft.azure.eventhubs.EventHubClient.createFromConnectionString(final String connectionString)
    type: Method
    summary: |-
      <p>Factorymethode zum Erstellen einer Instanz des <xref uid="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false">EventHubClient</xref> unter Verwendung der angegebenen Verbindungszeichenfolge. In einem normalen Szenario (wenn umzuleiten, nicht aktiviert ist) – eine <xref uid="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false">EventHubClient</xref> Instanz zugeordnet wird, um eine Verbindung mit der Azure Service Bus EventHubs-Dienst. </p>
      <p>Die <xref uid="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false">EventHubClient</xref> erstellt, die von dieser Methode erstellt eine Instanz der Absender intern die wird von der <xref uid="com.microsoft.azure.eventhubs._event_hub_client.send(final EventData)" data-throw-if-not-resolved="false">send(EventData)</xref> Methoden.</p>
      <p></p>
    syntax:
      content: public static CompletableFuture<EventHubClient> createFromConnectionString(final String connectionString)
      parameters:
        - id: connectionString
          type: 3d93591e
          description: <p>Die Verbindungszeichenfolge verwendet werden. Finden Sie unter <xref uid="com.microsoft.azure.eventhubs._connection_string_builder" data-throw-if-not-resolved="false">ConnectionStringBuilder</xref> So erstellen Sie eine "ConnectionString". </p>
      return:
        type: 9cdf14d0com.microsoft.azure.eventhubs._event_hub_clienta08ddfce
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.eventhubs._event_hub_client\" data-throw-if-not-resolved=\"false\">EventHubClient</xref> der können verwendet werden, um die Absendern und Empfängern an Event Hub erstellen </p>"
  - uid: com.microsoft.azure.eventhubs._event_data.getBytes()
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    name: getBytes()
    nameWithType: EventData.getBytes()
    fullName: 'byte [] com.microsoft.azure.eventhubs.EventData.getBytes()'
    type: Method
    summary: |-
      <p>Abrufen der tatsächlichen Nutzlastdaten/umschlossen <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>.</p>
      <p>
      NULL, wenn der Text der Nachricht andere Kommunikation betriebsbereiten AMQP-Nachrichten hat, dessen Text keine Byte [] darstellt. In diesem Fall <xref uid="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false">getObject()</xref>. </p>
    syntax: *ref_3
  - uid: com.microsoft.azure.eventhubs._event_data.getBodyOffset()
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    name: getBodyOffset()
    nameWithType: EventData.getBodyOffset()
    fullName: int com.microsoft.azure.eventhubs.EventData.getBodyOffset()
    type: Method
    summary: "<p>Abrufen das Offset des die aktuelle Nutzlastdaten im Bytearray zurückgegebenes <xref uid=\"com.microsoft.azure.eventhubs._event_data.getBody()\" data-throw-if-not-resolved=\"false\">getBody()</xref>.</p>\n<p>\r\n\r\n  <xrefsect id=\"deprecated_1_deprecated000016\">\r\n\r\n    <xreftitle>Als veraltet markiert</xreftitle>\r\n\r\n    <xrefdescription>\r\n\r\n      <p>Verwenden Sie <xref uid=\"com.microsoft.azure.eventhubs._event_data.getBytes()\" data-throw-if-not-resolved=\"false\">getBytes()</xref></p>\n\n    </xrefdescription>\n\n  </xrefsect>\n\n</p>"
    syntax: *ref_4
  - uid: com.microsoft.azure.eventhubs._event_data.getBodyLength()
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    name: getBodyLength()
    nameWithType: EventData.getBodyLength()
    fullName: int com.microsoft.azure.eventhubs.EventData.getBodyLength()
    type: Method
    summary: "<p>Abrufen der Länge des tatsächlichen Nutzlast/Daten im zurückgegebenen Array von Byte <xref uid=\"com.microsoft.azure.eventhubs._event_data.getBody()\" data-throw-if-not-resolved=\"false\">getBody()</xref>.</p>\n<p>\r\n\r\n  <xrefsect id=\"deprecated_1_deprecated000017\">\r\n\r\n    <xreftitle>Als veraltet markiert</xreftitle>\r\n\r\n    <xrefdescription>\r\n\r\n      <p>Verwenden Sie <xref uid=\"com.microsoft.azure.eventhubs._event_data.getBytes()\" data-throw-if-not-resolved=\"false\">getBytes()</xref></p>\n\n    </xrefdescription>\n\n  </xrefsect>\n\n</p>"
    syntax: *ref_5
  - uid: com.microsoft.azure.eventhubs._event_data.getBody()
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    name: getBody()
    nameWithType: EventData.getBody()
    fullName: 'byte [] com.microsoft.azure.eventhubs.EventData.getBody()'
    type: Method
    summary: |-
      <p>Abrufen der tatsächlichen Nutzlastdaten/umschlossen <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. Dies ist das zugrunde liegende Array und sollte verwendet werden, zusammen mit <xref uid="com.microsoft.azure.eventhubs._event_data.getBodyOffset()" data-throw-if-not-resolved="false">getBodyOffset()</xref> und <xref uid="com.microsoft.azure.eventhubs._event_data.getBodyLength()" data-throw-if-not-resolved="false">getBodyLength()</xref>.</p>
      <p>
      NULL, wenn der Text der Nachricht AMQP Datenabschnitt keine <xrefsect id="deprecated_1_deprecated000015"> <xreftitle>veraltet</xreftitle><xrefdescription><p>Verwenden Sie <xref uid="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false">getBytes()</xref></p></xrefdescription></xrefsect></p>
    syntax: *ref_6
  - uid: com.microsoft.azure.eventhubs._event_data.getObject()
    parent: com.microsoft.azure.eventhubs._event_data
    href: com.microsoft.azure.eventhubs._event_data.yml
    name: getObject()
    nameWithType: EventData.getObject()
    fullName: Object com.microsoft.azure.eventhubs.EventData.getObject()
    type: Method
    summary: "<p>Verwenden Sie diese Methode nur, wenn der Absender Nachrichten mithilfe von AMQP-Bibliotheken von Drittanbietern gesendet werden konnte. </p>\n<p>Wenn die Absender EventHub Clientbibliotheken, die veröffentlicht verwenden und verwaltet von Microsoft Azure EventHubs, <xref uid=\"com.microsoft.azure.eventhubs._event_data.getBytes()\" data-throw-if-not-resolved=\"false\">getBytes()</xref> Methode. </p>\n<p>Rufen Sie den Wert von AMQP Nachrichtenstroms Textabschnitt auf die empfangenen Daten <xref uid=\"com.microsoft.azure.eventhubs._event_data\" data-throw-if-not-resolved=\"false\">EventData</xref>. </p>\n<p>Wenn die AMQP-Nachricht Text immer Datenabschnitt damit gewährleistet ist, verwenden Sie <xref uid=\"com.microsoft.azure.eventhubs._event_data.getBytes()\" data-throw-if-not-resolved=\"false\">getBytes()</xref> Methode.</p>\n<p>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">Binäre</xref> ist der Text Datenabschnitt </p>\n\n<p>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">Liste</xref> ist der Text AmqpSequence </p>\n\n<p>Paket org.apache.qpid.proton.amqp enthält verschiedene AMQP-Typen, die zurückgegeben werden konnte. </p>"
    syntax: *ref_7