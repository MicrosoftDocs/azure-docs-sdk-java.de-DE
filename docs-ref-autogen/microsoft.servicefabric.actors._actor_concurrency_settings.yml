### YamlMime:ManagedReference
items:
  - uid: microsoft.servicefabric.actors._actor_concurrency_settings
    id: _actor_concurrency_settings
    parent: microsoft.servicefabric.actors
    children:
      - microsoft.servicefabric.actors._actor_concurrency_settings.ActorConcurrencySettings()
      - microsoft.servicefabric.actors._actor_concurrency_settings.getLockTimeout()
      - microsoft.servicefabric.actors._actor_concurrency_settings.getReentrancyMode()
      - microsoft.servicefabric.actors._actor_concurrency_settings.setLockTimeout(Duration)
      - microsoft.servicefabric.actors._actor_concurrency_settings.setReentrancyMode(ActorReentrancyMode)
    href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
    langs:
      - java
    name: ActorConcurrencySettings
    nameWithType: ActorConcurrencySettings
    fullName: microsoft.servicefabric.actors.ActorConcurrencySettings
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorConcurrencySettings.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorConcurrencySettings.java
      startLine: 9
    package: microsoft.servicefabric.actors
    summary: '<p>Ein Akteur, verteilt über wiederum mit Unterstützung für logische Aufruf Kontext Grundlage Reentranz-Methodenaufrufen. Diese Klasse stellt die Einstellungen zum Konfigurieren von Turn basierend Concurrency Sperre für Akteure. </p>'
    syntax: &ref_1
      content: public class ActorConcurrencySettings
    inheritance:
      - java.lang.Object
  - uid: microsoft.servicefabric.actors._actor_concurrency_settings.ActorConcurrencySettings()
    id: ActorConcurrencySettings()
    parent: microsoft.servicefabric.actors._actor_concurrency_settings
    href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
    langs:
      - java
    name: ActorConcurrencySettings()
    nameWithType: ActorConcurrencySettings.ActorConcurrencySettings()
    fullName: microsoft.servicefabric.actors.ActorConcurrencySettings.ActorConcurrencySettings()
    overload: microsoft.servicefabric.actors._actor_concurrency_settings.ActorConcurrencySettings*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorConcurrencySettings.java
      startLine: 18
    package: microsoft.servicefabric.actors
    summary: <p>Initialisiert eine neue Instanz der dem <xref uid="microsoft.servicefabric.actors._actor_concurrency_settings" data-throw-if-not-resolved="false">ActorConcurrencySettings</xref> Klasse. </p>
    syntax:
      content: public ActorConcurrencySettings()
  - uid: microsoft.servicefabric.actors._actor_concurrency_settings.getLockTimeout()
    id: getLockTimeout()
    parent: microsoft.servicefabric.actors._actor_concurrency_settings
    href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
    langs:
      - java
    name: getLockTimeout()
    nameWithType: ActorConcurrencySettings.getLockTimeout()
    fullName: Duration microsoft.servicefabric.actors.ActorConcurrencySettings.getLockTimeout()
    overload: microsoft.servicefabric.actors._actor_concurrency_settings.getLockTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorConcurrencySettings.java
      startLine: 57
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Legt Timeout für das Einschalten basierend Concurrency Sperre. Wenn die Laufzeit die Sperre zum Verteilen des Methodenaufrufs abrufen kann, löst sie <xref uid="microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorConcurrencyLockTimeoutException</xref> Ausnahme. Diese Ausnahme wird die logische Aufrufkette entladen und der Aufruf wird oben auf eine konfigurierte maximale Häufigkeit wiederholt wird. Der tatsächliche Timeoutwert für die Sperre des Parallelität kann liegen, wie die Common Language Runtime den angegebenen Wert einem zufällig gewählten Zeitpunkt hinzugefügt wird.</p>
      <p></p>
    syntax:
      content: public Duration getLockTimeout()
      return:
        type: e02a2de0
        description: <p>Timeout für die Reihe basierend Concurrency Sperre. </p>
  - uid: microsoft.servicefabric.actors._actor_concurrency_settings.getReentrancyMode()
    id: getReentrancyMode()
    parent: microsoft.servicefabric.actors._actor_concurrency_settings
    href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
    langs:
      - java
    name: getReentrancyMode()
    nameWithType: ActorConcurrencySettings.getReentrancyMode()
    fullName: ActorReentrancyMode microsoft.servicefabric.actors.ActorConcurrencySettings.getReentrancyMode()
    overload: microsoft.servicefabric.actors._actor_concurrency_settings.getReentrancyMode*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorConcurrencySettings.java
      startLine: 33
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Ruft Reentranz-Modus für Akteur Methodenaufrufe ab.</p>
      <p></p>
    syntax:
      content: public ActorReentrancyMode getReentrancyMode()
      return:
        type: microsoft.servicefabric.actors._actor_reentrancy_mode
        description: "<p>\r\n\r\n  <xref uid=\"microsoft.servicefabric.actors._actor_reentrancy_mode\" data-throw-if-not-resolved=\"false\">ActorReentrancyMode</xref> für die Akteur-Methodenaufrufe. </p>"
  - uid: microsoft.servicefabric.actors._actor_concurrency_settings.setLockTimeout(Duration)
    id: setLockTimeout(Duration)
    parent: microsoft.servicefabric.actors._actor_concurrency_settings
    href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
    langs:
      - java
    name: setLockTimeout(Duration timeout)
    nameWithType: ActorConcurrencySettings.setLockTimeout(Duration timeout)
    fullName: void microsoft.servicefabric.actors.ActorConcurrencySettings.setLockTimeout(Duration timeout)
    overload: microsoft.servicefabric.actors._actor_concurrency_settings.setLockTimeout*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorConcurrencySettings.java
      startLine: 71
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Legt Timeout für das Einschalten basierend Concurrency Sperre. Wenn die Laufzeit die Sperre zum Verteilen des Methodenaufrufs abrufen kann, löst sie <xref uid="microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception" data-throw-if-not-resolved="false">microsoft.servicefabric.actors.ActorConcurrencyLockTimeoutException</xref> Ausnahme.</p>
      <p></p>
    syntax:
      content: public void setLockTimeout(Duration timeout)
      parameters:
        - id: timeout
          type: e02a2de0
          description: '<p>Diese Ausnahme wird die logische Aufrufkette entladen und der Aufruf wird oben auf eine konfigurierte maximale Häufigkeit wiederholt wird. Der tatsächliche Timeoutwert für die Sperre des Parallelität kann liegen, wie die Common Language Runtime den angegebenen Wert einem zufällig gewählten Zeitpunkt hinzugefügt wird. </p>'
  - uid: microsoft.servicefabric.actors._actor_concurrency_settings.setReentrancyMode(ActorReentrancyMode)
    id: setReentrancyMode(ActorReentrancyMode)
    parent: microsoft.servicefabric.actors._actor_concurrency_settings
    href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
    langs:
      - java
    name: setReentrancyMode(ActorReentrancyMode mode)
    nameWithType: ActorConcurrencySettings.setReentrancyMode(ActorReentrancyMode mode)
    fullName: void microsoft.servicefabric.actors.ActorConcurrencySettings.setReentrancyMode(ActorReentrancyMode mode)
    overload: microsoft.servicefabric.actors._actor_concurrency_settings.setReentrancyMode*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorConcurrencySettings.java
      startLine: 43
    package: microsoft.servicefabric.actors
    summary: |-
      <p>Legt Reentranz-Modus für Akteur Methodenaufrufe fest.</p>
      <p></p>
    syntax:
      content: public void setReentrancyMode(ActorReentrancyMode mode)
      parameters:
        - id: mode
          type: microsoft.servicefabric.actors._actor_reentrancy_mode
          description: <p>Reentranz-Modus. <xref uid="microsoft.servicefabric.actors._actor_reentrancy_mode" data-throw-if-not-resolved="false">ActorReentrancyMode</xref> für die Akteur-Methodenaufrufe. </p>
references:
  - uid: microsoft.servicefabric.actors._actor_concurrency_settings.ActorConcurrencySettings*
    name: ActorConcurrencySettings
    nameWithType: ActorConcurrencySettings.ActorConcurrencySettings
    fullName: microsoft.servicefabric.actors.ActorConcurrencySettings.ActorConcurrencySettings
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_concurrency_settings.getReentrancyMode*
    name: getReentrancyMode
    nameWithType: ActorConcurrencySettings.getReentrancyMode
    fullName: ActorReentrancyMode microsoft.servicefabric.actors.ActorConcurrencySettings.getReentrancyMode
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_concurrency_settings.setReentrancyMode*
    name: setReentrancyMode
    nameWithType: ActorConcurrencySettings.setReentrancyMode
    fullName: void microsoft.servicefabric.actors.ActorConcurrencySettings.setReentrancyMode
    package: microsoft.servicefabric.actors
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: microsoft.servicefabric.actors._actor_concurrency_settings.getLockTimeout*
    name: getLockTimeout
    nameWithType: ActorConcurrencySettings.getLockTimeout
    fullName: Duration microsoft.servicefabric.actors.ActorConcurrencySettings.getLockTimeout
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_concurrency_settings.setLockTimeout*
    name: setLockTimeout
    nameWithType: ActorConcurrencySettings.setLockTimeout
    fullName: void microsoft.servicefabric.actors.ActorConcurrencySettings.setLockTimeout
    package: microsoft.servicefabric.actors
  - uid: microsoft.servicefabric.actors._actor_reentrancy_mode
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_reentrancy_mode.yml
    name: ActorReentrancyMode
    nameWithType: ActorReentrancyMode
    fullName: microsoft.servicefabric.actors.ActorReentrancyMode
    type: Enum
    summary: <p>Gibt den Reentranz Modus für Akteur Methodenaufrufe. </p>
    syntax:
      content: public enum ActorReentrancyMode
  - uid: microsoft.servicefabric.actors._actor_concurrency_settings
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_concurrency_settings.yml
    name: ActorConcurrencySettings
    nameWithType: ActorConcurrencySettings
    fullName: microsoft.servicefabric.actors.ActorConcurrencySettings
    type: Class
    summary: '<p>Ein Akteur, verteilt über wiederum mit Unterstützung für logische Aufruf Kontext Grundlage Reentranz-Methodenaufrufen. Diese Klasse stellt die Einstellungen zum Konfigurieren von Turn basierend Concurrency Sperre für Akteure. </p>'
    syntax: *ref_1
  - uid: microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception
    parent: microsoft.servicefabric.actors
    href: microsoft.servicefabric.actors._actor_concurrency_lock_timeout_exception.yml
    name: ActorConcurrencyLockTimeoutException
    nameWithType: ActorConcurrencyLockTimeoutException
    fullName: microsoft.servicefabric.actors.ActorConcurrencyLockTimeoutException
    type: Class
    summary: '<p>Ausnahme, die vom Akteur-Laufzeit ausgelöst, wenn der Common Language Runtime die aktivieren abrufen kann basierend Concurrency Sperre dispatch-Methode. </p>'
    syntax:
      content: public class ActorConcurrencyLockTimeoutException extends FabricException