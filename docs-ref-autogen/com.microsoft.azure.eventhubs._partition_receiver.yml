### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.eventhubs._partition_receiver
    id: _partition_receiver
    parent: com.microsoft.azure.eventhubs
    children:
      - com.microsoft.azure.eventhubs._partition_receiver.END_OF_STREAM
      - com.microsoft.azure.eventhubs._partition_receiver.getDesiredCapabilities()
      - com.microsoft.azure.eventhubs._partition_receiver.getEpoch()
      - com.microsoft.azure.eventhubs._partition_receiver.getFilter(final Message)
      - com.microsoft.azure.eventhubs._partition_receiver.getPartitionId()
      - com.microsoft.azure.eventhubs._partition_receiver.getPrefetchCount()
      - com.microsoft.azure.eventhubs._partition_receiver.getProperties()
      - com.microsoft.azure.eventhubs._partition_receiver.getReceiveTimeout()
      - com.microsoft.azure.eventhubs._partition_receiver.getRuntimeInformation()
      - com.microsoft.azure.eventhubs._partition_receiver.onClose()
      - com.microsoft.azure.eventhubs._partition_receiver.receive(final int)
      - com.microsoft.azure.eventhubs._partition_receiver.receiveSync(final int)
      - com.microsoft.azure.eventhubs._partition_receiver.setPrefetchCount(final int)
      - com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler(final PartitionReceiveHandler)
      - 'com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler(final PartitionReceiveHandler,final boolean)'
      - com.microsoft.azure.eventhubs._partition_receiver.setReceiveTimeout(Duration)
      - com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: PartitionReceiver
    nameWithType: PartitionReceiver
    fullName: com.microsoft.azure.eventhubs.PartitionReceiver
    type: Class
    source:
      remote: &ref_0
        path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
        branch: master
        repo: 'https://github.com/Azure/azure-event-hubs-java'
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 42
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Dies ist eine logische Darstellung des Empfangs aus einen Event Hub-Partition. </p>
      <p>Ein <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> ist an eine ConsumerGroup + EventHub Partition gebunden Kombination. <itemizedlist><listitem><p>Wenn Sie eine Epoche basiert <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> (d. h. <xref uid="com.microsoft.azure.eventhubs._partition_receiver.getEpoch()" data-throw-if-not-resolved="false">PartitionReceiver.getEpoch</xref> ! = 0) wird erstellt, EventHubs Dienst auch dafür nur 1 aktive Empfänger pro ConsumerGroup + Partition vorhanden ist Kombinationsfeld. Dies ist die empfohlene Vorgehensweise zum Erstellen einer <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>. </p></listitem><listitem><p>Mehrere Empfänger pro ConsumerGroup + Partition kann Kombinationsfeld mit nicht-Epoche Empfänger erstellt werden. </p></listitem></itemizedlist></p>
      <p></p>
    syntax: &ref_1
      content: public class PartitionReceiver extends ClientEntity implements IReceiverSettingsProvider
    see:
      - type: 'com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String)'
        description: 'EventHubClient::createReceiver'
      - type: 'com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,final long)'
        description: 'EventHubClient::createEpochReceiver'
    inheritance:
      - java.lang.Object
      - com.microsoft.azure.eventhubs._client_entity
    inheritedMembers:
      - 'com.microsoft.azure.eventhubs._client_entity.ClientEntity(final String,final ClientEntity)'
      - com.microsoft.azure.eventhubs._client_entity.close()
      - com.microsoft.azure.eventhubs._client_entity.closeSync()
      - com.microsoft.azure.eventhubs._client_entity.getClientId()
      - com.microsoft.azure.eventhubs._client_entity.getLastKnownError()
      - com.microsoft.azure.eventhubs._client_entity.setClosed()
      - com.microsoft.azure.eventhubs._client_entity.throwIfClosed()
  - uid: com.microsoft.azure.eventhubs._partition_receiver.END_OF_STREAM
    id: END_OF_STREAM
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: END_OF_STREAM
    nameWithType: PartitionReceiver.END_OF_STREAM
    fullName: final String com.microsoft.azure.eventhubs.PartitionReceiver.END_OF_STREAM
    type: Field
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 60
    package: com.microsoft.azure.eventhubs
    summary: '<p>Dies ist eine Konstante, die definiert, um das aktuelle Ende eines Streams Partition im Event Hub darstellen. Dies kann als Argument Offset im Erstellen von remoteereignisempfängern zum Starten aus dem letzten Ereignis, anstelle von einem bestimmten Offset oder Zeitpunkt empfangen verwendet werden. </p>'
    syntax:
      content: public static final String END_OF_STREAM= "@latest"
      return:
        type: 3d93591e
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getDesiredCapabilities()
    id: getDesiredCapabilities()
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: getDesiredCapabilities()
    nameWithType: PartitionReceiver.getDesiredCapabilities()
    fullName: 'Symbol [] com.microsoft.azure.eventhubs.PartitionReceiver.getDesiredCapabilities()'
    overload: com.microsoft.azure.eventhubs._partition_receiver.getDesiredCapabilities*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 469
    package: com.microsoft.azure.eventhubs
    syntax:
      content: 'public Symbol [] getDesiredCapabilities()'
      return:
        type: ddcc4456
    overridden: com.microsoft.azure.eventhubs._i_receiver_settings_provider.getDesiredCapabilities()
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getEpoch()
    id: getEpoch()
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: getEpoch()
    nameWithType: PartitionReceiver.getEpoch()
    fullName: final long com.microsoft.azure.eventhubs.PartitionReceiver.getEpoch()
    overload: com.microsoft.azure.eventhubs._partition_receiver.getEpoch*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 207
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Ruft den Epoche-Wert, den dieser Empfänger derzeit für den Besitz der Partition verwendet wird. </p>
      <p>Der Wert 0 bedeutet dies Empfänger ist nicht mit einer Epoche basierende Empfänger.</p>
      <p></p>
    syntax: &ref_4
      content: public final long getEpoch()
      return:
        type: 4c60ae65
        description: '<p>der Wert der Epoche, den dieser Empfänger derzeit für den Besitz der Partition verwendet wird. </p>'
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getFilter(final Message)
    id: getFilter(final Message)
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: getFilter(final Message lastReceivedMessage)
    nameWithType: PartitionReceiver.getFilter(final Message lastReceivedMessage)
    fullName: 'Map<Symbol, UnknownDescribedType> com.microsoft.azure.eventhubs.PartitionReceiver.getFilter(final Message lastReceivedMessage)'
    overload: com.microsoft.azure.eventhubs._partition_receiver.getFilter*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 398
    package: com.microsoft.azure.eventhubs
    syntax:
      content: 'public Map<Symbol, UnknownDescribedType> getFilter(final Message lastReceivedMessage)'
      parameters:
        - id: lastReceivedMessage
          type: 8d3e47ad
      return:
        type: 39a8ce04
    overridden: com.microsoft.azure.eventhubs._i_receiver_settings_provider.getFilter(final Message)
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getPartitionId()
    id: getPartitionId()
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: getPartitionId()
    nameWithType: PartitionReceiver.getPartitionId()
    fullName: final String com.microsoft.azure.eventhubs.PartitionReceiver.getPartitionId()
    overload: com.microsoft.azure.eventhubs._partition_receiver.getPartitionId*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 162
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>EventHubs Partitions-ID abgerufen.</p>
      <p></p>
    syntax:
      content: public final String getPartitionId()
      return:
        type: 3d93591e
        description: '<p>Der Bezeichner, die die Partition aus der dieser Empfänger Daten abruft darstellt. </p>'
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getPrefetchCount()
    id: getPrefetchCount()
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: getPrefetchCount()
    nameWithType: PartitionReceiver.getPrefetchCount()
    fullName: final int com.microsoft.azure.eventhubs.PartitionReceiver.getPrefetchCount()
    overload: com.microsoft.azure.eventhubs._partition_receiver.getPrefetchCount*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 172
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Abrufen von Vorabrufwert beim Empfänger konfiguriert.</p>
      <p></p>
    syntax:
      content: public final int getPrefetchCount()
      return:
        type: cd225469
        description: '<p>die Obergrenze von Ereignissen wird dieser Empfänger aktiv empfängt, unabhängig davon, ob ein Receive-Vorgang aussteht. </p>'
    see:
      - type: com.microsoft.azure.eventhubs._partition_receiver.setPrefetchCount(final int)
        description: setPrefetchCount
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getProperties()
    id: getProperties()
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: getProperties()
    nameWithType: PartitionReceiver.getProperties()
    fullName: 'Map<Symbol, Object> com.microsoft.azure.eventhubs.PartitionReceiver.getProperties()'
    overload: com.microsoft.azure.eventhubs._partition_receiver.getProperties*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 448
    package: com.microsoft.azure.eventhubs
    syntax:
      content: 'public Map<Symbol, Object> getProperties()'
      return:
        type: 6bd35e50
    overridden: com.microsoft.azure.eventhubs._i_receiver_settings_provider.getProperties()
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getReceiveTimeout()
    id: getReceiveTimeout()
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: getReceiveTimeout()
    nameWithType: PartitionReceiver.getReceiveTimeout()
    fullName: final Duration com.microsoft.azure.eventhubs.PartitionReceiver.getReceiveTimeout()
    overload: com.microsoft.azure.eventhubs._partition_receiver.getReceiveTimeout*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 176
    package: com.microsoft.azure.eventhubs
    syntax:
      content: public final Duration getReceiveTimeout()
      return:
        type: 89ac7c4d
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getRuntimeInformation()
    id: getRuntimeInformation()
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: getRuntimeInformation()
    nameWithType: PartitionReceiver.getRuntimeInformation()
    fullName: final ReceiverRuntimeInformation com.microsoft.azure.eventhubs.PartitionReceiver.getRuntimeInformation()
    overload: com.microsoft.azure.eventhubs._partition_receiver.getRuntimeInformation*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 218
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Ruft die temporale <xref uid="com.microsoft.azure.eventhubs._receiver_runtime_information" data-throw-if-not-resolved="false">ReceiverRuntimeInformation</xref> für diese Event Hub-Partition. Diese Informationen sind im Allgemeinen eine Darstellung, wo dies <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>des Ende des Streams ist, zu dem Zeitpunkt <xref uid="com.microsoft.azure.eventhubs._receiver_runtime_information.getRetrievalTime()" data-throw-if-not-resolved="false">ReceiverRuntimeInformation#getRetrievalTime()</xref>.</p>
      <p></p>
    syntax:
      content: public final ReceiverRuntimeInformation getRuntimeInformation()
      return:
        type: 93de0ef9com.microsoft.azure.eventhubs._receiver_runtime_information
        description: <p>Empfänger-Laufzeitinformationen </p>
  - uid: com.microsoft.azure.eventhubs._partition_receiver.onClose()
    id: onClose()
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: onClose()
    nameWithType: PartitionReceiver.onClose()
    fullName: CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionReceiver.onClose()
    overload: com.microsoft.azure.eventhubs._partition_receiver.onClose*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 381
    package: com.microsoft.azure.eventhubs
    syntax:
      content: public CompletableFuture<Void> onClose()
      return:
        type: db03ee24
  - uid: com.microsoft.azure.eventhubs._partition_receiver.receive(final int)
    id: receive(final int)
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: receive(final int maxEventCount)
    nameWithType: PartitionReceiver.receive(final int maxEventCount)
    fullName: CompletableFuture<Iterable<EventData>> com.microsoft.azure.eventhubs.PartitionReceiver.receive(final int maxEventCount)
    overload: com.microsoft.azure.eventhubs._partition_receiver.receive*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 290
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Empfangen ein Batches von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des aus einem EventHub partitionieren </p>
      <p>Beispielcode (Beispiel verwendet die Synchronisierungsversion der api jedoch Konzept identisch sind): <pre><xref uid="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false">EventHubClient</xref> client = <xref uid="com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync(final String)" data-throw-if-not-resolved="false">EventHubClient.createFromConnectionStringSync</xref>("__connection__");
      <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> receiver = client.createPartitionReceiverSync("ConsumerGroup1", "1");
      Iterable{&lt;}<xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>{&gt;} receivedEvents = receiver.receiveSync();</pre></p>
      <p>

        <pre>while (true)

      {

          int batchSize = 0;

          if (receivedEvents != null)

          {

              for(EventData receivedEvent: receivedEvents)

              {

                  System.out.println(String.format("Message Payload: %s", new String(receivedEvent.getBytes(), Charset.defaultCharset())));

                  System.out.println(String.format("Offset: %s, SeqNo: %s, EnqueueTime: %s",

                      receivedEvent.getSystemProperties().getOffset(),

                      receivedEvent.getSystemProperties().getSequenceNumber(),

                      receivedEvent.getSystemProperties().getEnqueuedTime()));

                  batchSize++;

              }

          }</pre>

      </p>
      <p>

        <pre>    System.out.println(String.format("ReceivedBatch Size: %s", batchSize));

          receivedEvents = receiver.receiveSync();

      }
      </pre>
      </p>
      <p></p>
    syntax: &ref_3
      content: public CompletableFuture<Iterable<EventData>> receive(final int maxEventCount)
      parameters:
        - id: maxEventCount
          type: cd225469
          description: '<p>maximale Anzahl von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des, die dieser Aufruf sollte zurückgeben. </p>'
      return:
        type: 5ae8a14ccom.microsoft.azure.eventhubs._event_datae7daa122
        description: '<p>Eine, die einen Batch von gedachten CompletableFuture <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des aus der Partition, für die dieser Empfänger erstellt wird. Gibt "null" zurück, wenn kein <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> vorhanden ist. </p>'
  - uid: com.microsoft.azure.eventhubs._partition_receiver.receiveSync(final int)
    id: receiveSync(final int)
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: receiveSync(final int maxEventCount)
    nameWithType: PartitionReceiver.receiveSync(final int maxEventCount)
    fullName: final Iterable<EventData> com.microsoft.azure.eventhubs.PartitionReceiver.receiveSync(final int maxEventCount)
    overload: com.microsoft.azure.eventhubs._partition_receiver.receiveSync*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 230
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Die synchrone Version von <xref uid="com.microsoft.azure.eventhubs._partition_receiver.receive(final int)" data-throw-if-not-resolved="false">empfangen</xref>.</p>
      <p></p>
    syntax:
      content: public final Iterable<EventData> receiveSync(final int maxEventCount)
      parameters:
        - id: maxEventCount
          type: cd225469
          description: '<p>maximale Anzahl von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des, die dieser Aufruf sollte zurückgeben. </p>'
      return:
        type: f42d2527com.microsoft.azure.eventhubs._event_dataa08ddfce
        description: '<p>Batch <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des aus der Partition, für die dieser Empfänger erstellt wird. Gibt "null" zurück, wenn kein <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> vorhanden ist. </p>'
    exceptions:
      - type: com.microsoft.azure.eventhubs._event_hub_exception
        description: '<p>Wenn, Service Bus-Client nicht mehr wiederherstellbar/dauerhaften Probleme während der auftreten <xref uid="com.microsoft.azure.eventhubs._partition_receiver.receive(final int)" data-throw-if-not-resolved="false">empfangen</xref></p>'
  - uid: com.microsoft.azure.eventhubs._partition_receiver.setPrefetchCount(final int)
    id: setPrefetchCount(final int)
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: setPrefetchCount(final int prefetchCount)
    nameWithType: PartitionReceiver.setPrefetchCount(final int prefetchCount)
    fullName: final void com.microsoft.azure.eventhubs.PartitionReceiver.setPrefetchCount(final int prefetchCount)
    overload: com.microsoft.azure.eventhubs._partition_receiver.setPrefetchCount*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 191
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Legen Sie die Anzahl der Ereignisse, die vorab abgerufen werden können und die zwischengespeicherten der <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>. </p>
      <p>Standardmäßig ist der Wert 300</p>
      <p></p>
    syntax: &ref_2
      content: public final void setPrefetchCount(final int prefetchCount)
      parameters:
        - id: prefetchCount
          type: cd225469
          description: '<p>die Anzahl der Ereignisse an, vorab abzurufen. Wert muss zwischen 10 und 999 liegen. Standardwert ist 300. </p>'
      return:
        type: 3f6357ce
    exceptions:
      - type: com.microsoft.azure.eventhubs._event_hub_exception
        description: <p>Wenn die fehlerbehaftete PrefetchCount festlegen </p>
  - uid: com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler(final PartitionReceiveHandler)
    id: setReceiveHandler(final PartitionReceiveHandler)
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: setReceiveHandler(final PartitionReceiveHandler receiveHandler)
    nameWithType: PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler)
    fullName: CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler)
    overload: com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 326
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Registrieren Sie einen Empfangshandler, der aufgerufen wird, wenn ein Ereignis verfügbar ist. Ein <xref uid="com.microsoft.azure.eventhubs._partition_receive_handler" data-throw-if-not-resolved="false">PartitionReceiveHandler</xref> wird ein Handler, der Benutzer einen Rückruf für die Verarbeitung von Ereignissen und Fehlerbehandlung in einem Receive Datapump Modell angeben kann.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> setReceiveHandler(final PartitionReceiveHandler receiveHandler)
      parameters:
        - id: receiveHandler
          type: 93de0ef9com.microsoft.azure.eventhubs._partition_receive_handler
          description: <p>Eine Implementierung der <xref uid="com.microsoft.azure.eventhubs._partition_receive_handler" data-throw-if-not-resolved="false">PartitionReceiveHandler</xref>. Wenn dieser Handler auf <code>null</code> hält die Receive-Datapump. </p>
      return:
        type: db03ee24
        description: <p>Eine CompletableFuture die ReceiveHandler festlegt. </p>
  - uid: 'com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler(final PartitionReceiveHandler,final boolean)'
    id: 'setReceiveHandler(final PartitionReceiveHandler,final boolean)'
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: 'setReceiveHandler(final PartitionReceiveHandler receiveHandler, final boolean invokeWhenNoEvents)'
    nameWithType: 'PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler, final boolean invokeWhenNoEvents)'
    fullName: 'CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveHandler(final PartitionReceiveHandler receiveHandler, final boolean invokeWhenNoEvents)'
    overload: com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 339
    package: com.microsoft.azure.eventhubs
    summary: |-
      <p>Registrieren Sie einen Empfangshandler, der aufgerufen wird, wenn ein Ereignis verfügbar ist. Ein <xref uid="com.microsoft.azure.eventhubs._partition_receive_handler" data-throw-if-not-resolved="false">PartitionReceiveHandler</xref> wird ein Handler, der Benutzer einen Rückruf für die Verarbeitung von Ereignissen und Fehlerbehandlung in einem Receive Datapump Modell angeben kann.</p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Void> setReceiveHandler(final PartitionReceiveHandler receiveHandler, final boolean invokeWhenNoEvents)'
      parameters:
        - id: receiveHandler
          type: 93de0ef9com.microsoft.azure.eventhubs._partition_receive_handler
          description: <p>Eine Implementierung von <xref uid="com.microsoft.azure.eventhubs._partition_receive_handler" data-throw-if-not-resolved="false">PartitionReceiveHandler</xref></p>
        - id: invokeWhenNoEvents
          type: 4dda0764
          description: '<p>Kennzeichen, das angibt, ob die <xref uid="" data-throw-if-not-resolved="false">PartitionReceiveHandler#onReceive(Iterable)</xref> aufgerufen werden soll, wenn ein Timeout des Aufrufs empfangen </p>'
      return:
        type: db03ee24
        description: <p>Eine CompletableFuture die ReceiveHandler festlegt. </p>
  - uid: com.microsoft.azure.eventhubs._partition_receiver.setReceiveTimeout(Duration)
    id: setReceiveTimeout(Duration)
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: setReceiveTimeout(Duration value)
    nameWithType: PartitionReceiver.setReceiveTimeout(Duration value)
    fullName: void com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveTimeout(Duration value)
    overload: com.microsoft.azure.eventhubs._partition_receiver.setReceiveTimeout*
    type: Method
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 180
    package: com.microsoft.azure.eventhubs
    syntax:
      content: public void setReceiveTimeout(Duration value)
      parameters:
        - id: value
          type: e02a2de0
  - uid: com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM
    id: START_OF_STREAM
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    langs:
      - java
    name: START_OF_STREAM
    nameWithType: PartitionReceiver.START_OF_STREAM
    fullName: final String com.microsoft.azure.eventhubs.PartitionReceiver.START_OF_STREAM
    type: Field
    source:
      remote: *ref_0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/PartitionReceiver.java
      startLine: 53
    package: com.microsoft.azure.eventhubs
    summary: '<p>Dies ist eine Konstante, die definiert, um den Beginn eines Datenstroms Partition im Event Hub darstellen. </p>'
    syntax:
      content: public static final String START_OF_STREAM= "-1"
      return:
        type: 3d93591e
references:
  - uid: 3d93591e
    spec.java:
      - name: final String
        fullName: final String
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getPartitionId*
    name: getPartitionId
    nameWithType: PartitionReceiver.getPartitionId
    fullName: final String com.microsoft.azure.eventhubs.PartitionReceiver.getPartitionId
    package: com.microsoft.azure.eventhubs
  - uid: cd225469
    spec.java:
      - name: final int
        fullName: final int
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getPrefetchCount*
    name: getPrefetchCount
    nameWithType: PartitionReceiver.getPrefetchCount
    fullName: final int com.microsoft.azure.eventhubs.PartitionReceiver.getPrefetchCount
    package: com.microsoft.azure.eventhubs
  - uid: 89ac7c4d
    spec.java:
      - name: final Duration
        fullName: final Duration
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getReceiveTimeout*
    name: getReceiveTimeout
    nameWithType: PartitionReceiver.getReceiveTimeout
    fullName: final Duration com.microsoft.azure.eventhubs.PartitionReceiver.getReceiveTimeout
    package: com.microsoft.azure.eventhubs
  - uid: e02a2de0
    spec.java:
      - name: Duration
        fullName: Duration
  - uid: com.microsoft.azure.eventhubs._partition_receiver.setReceiveTimeout*
    name: setReceiveTimeout
    nameWithType: PartitionReceiver.setReceiveTimeout
    fullName: void com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveTimeout
    package: com.microsoft.azure.eventhubs
  - uid: 3f6357ce
    spec.java:
      - name: final void
        fullName: final void
  - uid: com.microsoft.azure.eventhubs._partition_receiver.setPrefetchCount*
    name: setPrefetchCount
    nameWithType: PartitionReceiver.setPrefetchCount
    fullName: final void com.microsoft.azure.eventhubs.PartitionReceiver.setPrefetchCount
    package: com.microsoft.azure.eventhubs
  - uid: 4c60ae65
    spec.java:
      - name: final long
        fullName: final long
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getEpoch*
    name: getEpoch
    nameWithType: PartitionReceiver.getEpoch
    fullName: final long com.microsoft.azure.eventhubs.PartitionReceiver.getEpoch
    package: com.microsoft.azure.eventhubs
  - uid: 93de0ef9com.microsoft.azure.eventhubs._receiver_runtime_information
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.eventhubs._receiver_runtime_information
        name: ReceiverRuntimeInformation
        fullName: com.microsoft.azure.eventhubs.ReceiverRuntimeInformation
        href: com.microsoft.azure.eventhubs._receiver_runtime_information.yml
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getRuntimeInformation*
    name: getRuntimeInformation
    nameWithType: PartitionReceiver.getRuntimeInformation
    fullName: final ReceiverRuntimeInformation com.microsoft.azure.eventhubs.PartitionReceiver.getRuntimeInformation
    package: com.microsoft.azure.eventhubs
  - uid: f42d2527com.microsoft.azure.eventhubs._event_dataa08ddfce
    spec.java:
      - name: final Iterable<
        fullName: final Iterable<
      - uid: com.microsoft.azure.eventhubs._event_data
        name: EventData
        fullName: com.microsoft.azure.eventhubs.EventData
        href: com.microsoft.azure.eventhubs._event_data.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.eventhubs._partition_receiver.receiveSync*
    name: receiveSync
    nameWithType: PartitionReceiver.receiveSync
    fullName: final Iterable<EventData> com.microsoft.azure.eventhubs.PartitionReceiver.receiveSync
    package: com.microsoft.azure.eventhubs
  - uid: 5ae8a14ccom.microsoft.azure.eventhubs._event_datae7daa122
    spec.java:
      - name: CompletableFuture<Iterable<
        fullName: CompletableFuture<Iterable<
      - uid: com.microsoft.azure.eventhubs._event_data
        name: EventData
        fullName: com.microsoft.azure.eventhubs.EventData
        href: com.microsoft.azure.eventhubs._event_data.yml
      - name: '>>'
        fullName: '>>'
  - uid: com.microsoft.azure.eventhubs._partition_receiver.receive*
    name: receive
    nameWithType: PartitionReceiver.receive
    fullName: CompletableFuture<Iterable<EventData>> com.microsoft.azure.eventhubs.PartitionReceiver.receive
    package: com.microsoft.azure.eventhubs
  - uid: 93de0ef9com.microsoft.azure.eventhubs._partition_receive_handler
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.eventhubs._partition_receive_handler
        name: PartitionReceiveHandler
        fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler
        href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
  - uid: db03ee24
    spec.java:
      - name: CompletableFuture<Void>
        fullName: CompletableFuture<Void>
  - uid: com.microsoft.azure.eventhubs._partition_receiver.setReceiveHandler*
    name: setReceiveHandler
    nameWithType: PartitionReceiver.setReceiveHandler
    fullName: CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionReceiver.setReceiveHandler
    package: com.microsoft.azure.eventhubs
  - uid: 4dda0764
    spec.java:
      - name: final boolean
        fullName: final boolean
  - uid: com.microsoft.azure.eventhubs._partition_receiver.onClose*
    name: onClose
    nameWithType: PartitionReceiver.onClose
    fullName: CompletableFuture<Void> com.microsoft.azure.eventhubs.PartitionReceiver.onClose
    package: com.microsoft.azure.eventhubs
  - uid: 8d3e47ad
    spec.java:
      - name: final Message
        fullName: final Message
  - uid: 39a8ce04
    spec.java:
      - name: 'Map<Symbol, UnknownDescribedType>'
        fullName: 'Map<Symbol, UnknownDescribedType>'
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getFilter*
    name: getFilter
    nameWithType: PartitionReceiver.getFilter
    fullName: 'Map<Symbol, UnknownDescribedType> com.microsoft.azure.eventhubs.PartitionReceiver.getFilter'
    package: com.microsoft.azure.eventhubs
  - uid: 6bd35e50
    spec.java:
      - name: 'Map<Symbol, Object>'
        fullName: 'Map<Symbol, Object>'
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getProperties*
    name: getProperties
    nameWithType: PartitionReceiver.getProperties
    fullName: 'Map<Symbol, Object> com.microsoft.azure.eventhubs.PartitionReceiver.getProperties'
    package: com.microsoft.azure.eventhubs
  - uid: ddcc4456
    spec.java:
      - name: 'Symbol []'
        fullName: 'Symbol []'
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getDesiredCapabilities*
    name: getDesiredCapabilities
    nameWithType: PartitionReceiver.getDesiredCapabilities
    fullName: 'Symbol [] com.microsoft.azure.eventhubs.PartitionReceiver.getDesiredCapabilities'
    package: com.microsoft.azure.eventhubs
  - uid: 'com.microsoft.azure.eventhubs._client_entity.ClientEntity(final String,final ClientEntity)'
    parent: com.microsoft.azure.eventhubs._client_entity
    href: com.microsoft.azure.eventhubs._client_entity.yml
    name: 'ClientEntity(final String clientId, final ClientEntity parent)'
    nameWithType: 'ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)'
    fullName: 'com.microsoft.azure.eventhubs.ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)'
    type: Constructor
    syntax:
      content: 'protected ClientEntity(final String clientId, final ClientEntity parent)'
      parameters:
        - id: clientId
          type: 3d93591e
        - id: parent
          type: 93de0ef9com.microsoft.azure.eventhubs._client_entity
  - uid: com.microsoft.azure.eventhubs._client_entity.close()
    parent: com.microsoft.azure.eventhubs._client_entity
    href: com.microsoft.azure.eventhubs._client_entity.yml
    name: close()
    nameWithType: ClientEntity.close()
    fullName: final CompletableFuture<Void> com.microsoft.azure.eventhubs.ClientEntity.close()
    type: Method
    syntax:
      content: public final CompletableFuture<Void> close()
      return:
        type: fc984e6f
  - uid: com.microsoft.azure.eventhubs._client_entity.closeSync()
    parent: com.microsoft.azure.eventhubs._client_entity
    href: com.microsoft.azure.eventhubs._client_entity.yml
    name: closeSync()
    nameWithType: ClientEntity.closeSync()
    fullName: final void com.microsoft.azure.eventhubs.ClientEntity.closeSync()
    type: Method
    syntax:
      content: public final void closeSync()
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.eventhubs._client_entity.getClientId()
    parent: com.microsoft.azure.eventhubs._client_entity
    href: com.microsoft.azure.eventhubs._client_entity.yml
    name: getClientId()
    nameWithType: ClientEntity.getClientId()
    fullName: String com.microsoft.azure.eventhubs.ClientEntity.getClientId()
    type: Method
    syntax:
      content: public String getClientId()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.eventhubs._client_entity.getLastKnownError()
    parent: com.microsoft.azure.eventhubs._client_entity
    href: com.microsoft.azure.eventhubs._client_entity.yml
    name: getLastKnownError()
    nameWithType: ClientEntity.getLastKnownError()
    fullName: Exception com.microsoft.azure.eventhubs.ClientEntity.getLastKnownError()
    type: Method
    syntax:
      content: protected Exception getLastKnownError()
      return:
        type: 8a99d4b0
  - uid: com.microsoft.azure.eventhubs._client_entity.setClosed()
    parent: com.microsoft.azure.eventhubs._client_entity
    href: com.microsoft.azure.eventhubs._client_entity.yml
    name: setClosed()
    nameWithType: ClientEntity.setClosed()
    fullName: final void com.microsoft.azure.eventhubs.ClientEntity.setClosed()
    type: Method
    syntax:
      content: protected final void setClosed()
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.eventhubs._client_entity.throwIfClosed()
    parent: com.microsoft.azure.eventhubs._client_entity
    href: com.microsoft.azure.eventhubs._client_entity.yml
    name: throwIfClosed()
    nameWithType: ClientEntity.throwIfClosed()
    fullName: final void com.microsoft.azure.eventhubs.ClientEntity.throwIfClosed()
    type: Method
    syntax:
      content: protected final void throwIfClosed()
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.eventhubs._client_entity
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._client_entity.yml
    name: ClientEntity
    nameWithType: ClientEntity
    fullName: com.microsoft.azure.eventhubs.ClientEntity
    type: Class
    summary: '<p>Vertrag für alle Client-Entitäten mit Open-schließen/Abort Zustand m/c Main Zwecke: CloseAll clusterentitäten intern-Klasse </p>'
    syntax:
      content: public class ClientEntity
  - uid: com.microsoft.azure.eventhubs._i_receiver_settings_provider
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._i_receiver_settings_provider.yml
    name: IReceiverSettingsProvider
    nameWithType: IReceiverSettingsProvider
    fullName: com.microsoft.azure.eventhubs.IReceiverSettingsProvider
    type: Interface
    syntax:
      content: public interface IReceiverSettingsProvider
  - uid: com.microsoft.azure.eventhubs._messaging_factory
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._messaging_factory.yml
    name: MessagingFactory
    nameWithType: MessagingFactory
    fullName: com.microsoft.azure.eventhubs.MessagingFactory
    type: Class
    summary: <p>Abstrahiert alle Amqp bezogene details und macht AmqpConnection Objekt-Management-verbindungslebenszyklus </p>
    syntax:
      content: 'public class MessagingFactory extends ClientEntity implements IAmqpConnection,ISessionProvider'
  - uid: com.microsoft.azure.eventhubs._message_receiver
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._message_receiver.yml
    name: MessageReceiver
    nameWithType: MessageReceiver
    fullName: com.microsoft.azure.eventhubs.MessageReceiver
    type: Class
    summary: '<p>Allgemeine Empfänger, die alle Amqp abstrahiert bezogene Details übersetzt Reaktor ereignisgesteuerten Modell in asynchrone Api zu erhalten </p>'
    syntax:
      content: public class MessageReceiver extends ClientEntity implements IAmqpReceiver
  - uid: com.microsoft.azure.eventhubs._receive_pump
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._receive_pump.yml
    name: ReceivePump
    nameWithType: ReceivePump
    fullName: com.microsoft.azure.eventhubs.ReceivePump
    type: Class
    syntax:
      content: public class ReceivePump
  - uid: com.microsoft.azure.eventhubs._receiver_options
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._receiver_options.yml
    name: ReceiverOptions
    nameWithType: ReceiverOptions
    fullName: com.microsoft.azure.eventhubs.ReceiverOptions
    type: Class
    summary: '<p>Stellt verschiedene optionale Verhaltensweisen, die während der Erstellung der aktiviert oder deaktiviert werden können ein <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>. </p>'
    syntax:
      content: public class ReceiverOptions
  - uid: com.microsoft.azure.eventhubs._receiver_runtime_information
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._receiver_runtime_information.yml
    name: ReceiverRuntimeInformation
    nameWithType: ReceiverRuntimeInformation
    fullName: com.microsoft.azure.eventhubs.ReceiverRuntimeInformation
    type: Class
    summary: <p>Repräsentiert die zeitliche Empfänger Laufzeitinformationen für eine <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>. Aktuelle empfangen <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> und <xref uid="com.microsoft.azure.eventhubs._receiver_runtime_information" data-throw-if-not-resolved="false">ReceiverRuntimeInformation</xref> Näherungswert für ausstehende Ereignisse finden (der noch nicht verarbeitet) verwendet werden können. </p>
    syntax:
      content: public class ReceiverRuntimeInformation
  - uid: com.microsoft.azure.eventhubs._event_hub_exception
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._event_hub_exception.yml
    name: EventHubException
    nameWithType: EventHubException
    fullName: com.microsoft.azure.eventhubs.EventHubException
    type: Class
    summary: '<p>Dies ist die Basis-Ausnahme, die für alle Fehlerfälle Servicebus Sequenzelement erzeugt. </p>'
    syntax:
      content: public class EventHubException
  - uid: com.microsoft.azure.eventhubs._partition_receiver
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    name: PartitionReceiver
    nameWithType: PartitionReceiver
    fullName: com.microsoft.azure.eventhubs.PartitionReceiver
    type: Class
    summary: |-
      <p>Dies ist eine logische Darstellung des Empfangs aus einen Event Hub-Partition. </p>
      <p>Ein <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> ist an eine ConsumerGroup + EventHub Partition gebunden Kombination. <itemizedlist><listitem><p>Wenn Sie eine Epoche basiert <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> (d. h. <xref uid="com.microsoft.azure.eventhubs._partition_receiver.getEpoch()" data-throw-if-not-resolved="false">PartitionReceiver.getEpoch</xref> ! = 0) wird erstellt, EventHubs Dienst auch dafür nur 1 aktive Empfänger pro ConsumerGroup + Partition vorhanden ist Kombinationsfeld. Dies ist die empfohlene Vorgehensweise zum Erstellen einer <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>. </p></listitem><listitem><p>Mehrere Empfänger pro ConsumerGroup + Partition kann Kombinationsfeld mit nicht-Epoche Empfänger erstellt werden. </p></listitem></itemizedlist></p>
      <p></p>
    syntax: *ref_1
  - uid: com.microsoft.azure.eventhubs._partition_receiver.setPrefetchCount(final int)
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    name: setPrefetchCount(final int prefetchCount)
    nameWithType: PartitionReceiver.setPrefetchCount(final int prefetchCount)
    fullName: final void com.microsoft.azure.eventhubs.PartitionReceiver.setPrefetchCount(final int prefetchCount)
    type: Method
    summary: |-
      <p>Legen Sie die Anzahl der Ereignisse, die vorab abgerufen werden können und die zwischengespeicherten der <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>. </p>
      <p>Standardmäßig ist der Wert 300</p>
      <p></p>
    syntax: *ref_2
  - uid: com.microsoft.azure.eventhubs._receiver_runtime_information.getRetrievalTime()
    parent: com.microsoft.azure.eventhubs._receiver_runtime_information
    href: com.microsoft.azure.eventhubs._receiver_runtime_information.yml
    name: getRetrievalTime()
    nameWithType: ReceiverRuntimeInformation.getRetrievalTime()
    fullName: Instant com.microsoft.azure.eventhubs.ReceiverRuntimeInformation.getRetrievalTime()
    type: Method
    summary: |-
      <p>Abrufen den Zeitstempel zu der diese <xref uid="com.microsoft.azure.eventhubs._receiver_runtime_information" data-throw-if-not-resolved="false">ReceiverRuntimeInformation</xref> erstellt wurde.</p>
      <p></p>
    syntax:
      content: public Instant getRetrievalTime()
      return:
        type: 328f8254
        description: <p>Abruf </p>
  - uid: com.microsoft.azure.eventhubs._event_data
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._event_data.yml
    name: EventData
    nameWithType: EventData
    fullName: com.microsoft.azure.eventhubs.EventData
    type: Class
    summary: |-
      <p>Die Datenstruktur, die das Ereignis wird gesendet an und Empfangen von EventHubs kapseln. Jede Partition EventHubs visualisiert werden kann, als Datenstrom von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
      <p>Serialisieren eines empfangenen <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref> mit AMQP-Abschnitten als ApplicationProperties (mit primitiven Java-Typen) und Daten der Abschnitt wird nicht unterstützt. </p>
      <p>So sieht wie AMQP-Nachricht-Abschnitten zugeordnet <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. Hier wird der Verweis, der für AMQP 1.0-Spezifikation verwendet: <ulink url="http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</ulink><pre>
      i.   <xref uid="com.microsoft.azure.eventhubs._event_data.getProperties()" data-throw-if-not-resolved="false">getProperties()</xref> - AMQPMessage.ApplicationProperties section
      ii.  <xref uid="com.microsoft.azure.eventhubs._event_data.getBytes()" data-throw-if-not-resolved="false">getBytes()</xref> - if AMQPMessage.Body has Data section
      iii. <xref uid="com.microsoft.azure.eventhubs._event_data.getObject()" data-throw-if-not-resolved="false">getObject()</xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections
      </pre> Bei der Verwendung von Clientbibliotheken, die von Microsoft Azure EventHubs veröffentlicht wurden, sind die Abschnitte (i) und (Ii) allein ausreichend. Abschnitt (Iii) wird verwendet, für erweiterte Szenarien, in denen die sendende Anwendung eines Drittanbieters AMQP-Bibliothek zum Senden der Nachricht an EventHubs verwendet und die empfangende Anwendung verwendet diese Clientbibliothek zum Empfangen von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>. </p>
    syntax:
      content: public class EventData
  - uid: com.microsoft.azure.eventhubs._partition_receiver.receive(final int)
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    name: receive(final int maxEventCount)
    nameWithType: PartitionReceiver.receive(final int maxEventCount)
    fullName: CompletableFuture<Iterable<EventData>> com.microsoft.azure.eventhubs.PartitionReceiver.receive(final int maxEventCount)
    type: Method
    summary: |-
      <p>Empfangen ein Batches von <xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>des aus einem EventHub partitionieren </p>
      <p>Beispielcode (Beispiel verwendet die Synchronisierungsversion der api jedoch Konzept identisch sind): <pre><xref uid="com.microsoft.azure.eventhubs._event_hub_client" data-throw-if-not-resolved="false">EventHubClient</xref> client = <xref uid="com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync(final String)" data-throw-if-not-resolved="false">EventHubClient.createFromConnectionStringSync</xref>("__connection__");
      <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> receiver = client.createPartitionReceiverSync("ConsumerGroup1", "1");
      Iterable{&lt;}<xref uid="com.microsoft.azure.eventhubs._event_data" data-throw-if-not-resolved="false">EventData</xref>{&gt;} receivedEvents = receiver.receiveSync();</pre></p>
      <p>

        <pre>while (true)

      {

          int batchSize = 0;

          if (receivedEvents != null)

          {

              for(EventData receivedEvent: receivedEvents)

              {

                  System.out.println(String.format("Message Payload: %s", new String(receivedEvent.getBytes(), Charset.defaultCharset())));

                  System.out.println(String.format("Offset: %s, SeqNo: %s, EnqueueTime: %s",

                      receivedEvent.getSystemProperties().getOffset(),

                      receivedEvent.getSystemProperties().getSequenceNumber(),

                      receivedEvent.getSystemProperties().getEnqueuedTime()));

                  batchSize++;

              }

          }</pre>

      </p>
      <p>

        <pre>    System.out.println(String.format("ReceivedBatch Size: %s", batchSize));

          receivedEvents = receiver.receiveSync();

      }
      </pre>
      </p>
      <p></p>
    syntax: *ref_3
  - uid: com.microsoft.azure.eventhubs._event_hub_client
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._event_hub_client.yml
    name: EventHubClient
    nameWithType: EventHubClient
    fullName: com.microsoft.azure.eventhubs.EventHubClient
    type: Class
    summary: |-
      <p>Verankern Sie die Klasse – alle EventHub Clientvorgänge beginnt hier.</p>
      <p></p>
    syntax:
      content: public class EventHubClient extends ClientEntity implements IEventHubClient
  - uid: com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionStringSync(final String)
    parent: com.microsoft.azure.eventhubs._event_hub_client
    href: com.microsoft.azure.eventhubs._event_hub_client.yml
    name: createFromConnectionStringSync(final String connectionString)
    nameWithType: EventHubClient.createFromConnectionStringSync(final String connectionString)
    fullName: static EventHubClient com.microsoft.azure.eventhubs.EventHubClient.createFromConnectionStringSync(final String connectionString)
    type: Method
    summary: |-
      <p>Die synchrone Version von <xref uid="com.microsoft.azure.eventhubs._event_hub_client.createFromConnectionString(final String)" data-throw-if-not-resolved="false">createFromConnectionString(String)</xref>.</p>
      <p></p>
    syntax:
      content: public static EventHubClient createFromConnectionStringSync(final String connectionString)
      parameters:
        - id: connectionString
          type: 3d93591e
          description: <p>Die Verbindungszeichenfolge verwendet werden. Finden Sie unter <xref uid="com.microsoft.azure.eventhubs._connection_string_builder" data-throw-if-not-resolved="false">ConnectionStringBuilder</xref> So erstellen Sie eine "ConnectionString". </p>
      return:
        type: com.microsoft.azure.eventhubs._event_hub_client
        description: "<p>\r\n\r\n  <xref uid=\"com.microsoft.azure.eventhubs._event_hub_client\" data-throw-if-not-resolved=\"false\">EventHubClient</xref> der können verwendet werden, um die Absendern und Empfängern an Event Hub erstellen </p>"
  - uid: com.microsoft.azure.eventhubs._partition_receive_handler
    parent: com.microsoft.azure.eventhubs
    href: com.microsoft.azure.eventhubs._partition_receive_handler.yml
    name: PartitionReceiveHandler
    nameWithType: PartitionReceiveHandler
    fullName: com.microsoft.azure.eventhubs.PartitionReceiveHandler
    type: Class
    summary: |-
      <p>Eine für den Empfangsvorgang Handler-Klasse. Verwenden Sie Implementierung dieser abstrakten Klasse Handlung des Benutzers an, wenn mit <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>des setReceiveHandler().</p>
      <p></p>
    syntax:
      content: public class PartitionReceiveHandler
  - uid: com.microsoft.azure.eventhubs._i_receiver_settings_provider.getFilter(final Message)
    parent: com.microsoft.azure.eventhubs._i_receiver_settings_provider
    href: com.microsoft.azure.eventhubs._i_receiver_settings_provider.yml
    name: getFilter(final Message lastReceivedMessage)
    nameWithType: IReceiverSettingsProvider.getFilter(final Message lastReceivedMessage)
    fullName: 'Map<Symbol, UnknownDescribedType> com.microsoft.azure.eventhubs.IReceiverSettingsProvider.getFilter(final Message lastReceivedMessage)'
    type: Method
    syntax:
      content: 'public Map<Symbol, UnknownDescribedType> getFilter(final Message lastReceivedMessage)'
      parameters:
        - id: lastReceivedMessage
          type: 8d3e47ad
      return:
        type: 39a8ce04
  - uid: com.microsoft.azure.eventhubs._i_receiver_settings_provider.getProperties()
    parent: com.microsoft.azure.eventhubs._i_receiver_settings_provider
    href: com.microsoft.azure.eventhubs._i_receiver_settings_provider.yml
    name: getProperties()
    nameWithType: IReceiverSettingsProvider.getProperties()
    fullName: 'Map<Symbol, Object> com.microsoft.azure.eventhubs.IReceiverSettingsProvider.getProperties()'
    type: Method
    syntax:
      content: 'public Map<Symbol, Object> getProperties()'
      return:
        type: 6bd35e50
  - uid: com.microsoft.azure.eventhubs._i_receiver_settings_provider.getDesiredCapabilities()
    parent: com.microsoft.azure.eventhubs._i_receiver_settings_provider
    href: com.microsoft.azure.eventhubs._i_receiver_settings_provider.yml
    name: getDesiredCapabilities()
    nameWithType: IReceiverSettingsProvider.getDesiredCapabilities()
    fullName: 'Symbol [] com.microsoft.azure.eventhubs.IReceiverSettingsProvider.getDesiredCapabilities()'
    type: Method
    syntax:
      content: 'public Symbol [] getDesiredCapabilities()'
      return:
        type: ddcc4456
  - uid: com.microsoft.azure.eventhubs._partition_receiver.getEpoch()
    parent: com.microsoft.azure.eventhubs._partition_receiver
    href: com.microsoft.azure.eventhubs._partition_receiver.yml
    name: getEpoch()
    nameWithType: PartitionReceiver.getEpoch()
    fullName: final long com.microsoft.azure.eventhubs.PartitionReceiver.getEpoch()
    type: Method
    summary: |-
      <p>Ruft den Epoche-Wert, den dieser Empfänger derzeit für den Besitz der Partition verwendet wird. </p>
      <p>Der Wert 0 bedeutet dies Empfänger ist nicht mit einer Epoche basierende Empfänger.</p>
      <p></p>
    syntax: *ref_4
  - uid: 'com.microsoft.azure.eventhubs._event_hub_client.createReceiver(final String,final String,final String)'
    parent: com.microsoft.azure.eventhubs._event_hub_client
    href: com.microsoft.azure.eventhubs._event_hub_client.yml
    name: 'createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset)'
    nameWithType: 'EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset)'
    fullName: 'final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset)'
    type: Method
    summary: |-
      <p>Der Empfänger ist für eine bestimmte EventHub-Partition aus der bestimmte consumergruppe erstellt. </p>
      <p>Hinweis: Es kann eine maximale Anzahl von Empfängern, die pro ConsumerGroup pro Partition parallel ausgeführt werden kann. Das Limit wird vom Event Hub-Dienst erzwungen,-Aktueller Grenzwert ist 5 Empfänger parallel. Müssen mehrere Empfänger müssen das Lesen aus Offsets, die liegen weit auseinander auf die gleiche consumergruppe / Kombinationsfeld partitionieren erheblich auf die Leistung auswirken.</p>
      <p></p>
    syntax:
      content: 'public final CompletableFuture<PartitionReceiver> createReceiver(final String consumerGroupName, final String partitionId, final String startingOffset)'
      parameters:
        - id: consumerGroupName
          type: 3d93591e
          description: '<p>der Name der consumergruppe, die dieser Empfänger unter gruppiert werden sollen. </p>'
        - id: partitionId
          type: 3d93591e
          description: '<p>Die Partition-Id, der der Empfänger zu gehört. Von dieser Partition nur werden alle Daten empfangen werden. </p>'
        - id: startingOffset
          type: 3d93591e
          description: '<p>der Offset, starten Sie den Empfang von Ereignissen aus. Vom Anfang von Streams verwendet wurde empfangen: <xref uid="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM" data-throw-if-not-resolved="false">PartitionReceiver #START_OF_STREAM</xref></p>'
      return:
        type: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
        description: '<p>eine CompletableFuture, die zur Folge hätte eine <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> -Instanz auf, wenn er abgeschlossen ist. </p>'
  - uid: 'com.microsoft.azure.eventhubs._event_hub_client.createEpochReceiver(final String,final String,final String,final long)'
    parent: com.microsoft.azure.eventhubs._event_hub_client
    href: com.microsoft.azure.eventhubs._event_hub_client.yml
    name: 'createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)'
    nameWithType: 'EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)'
    fullName: 'final CompletableFuture<PartitionReceiver> com.microsoft.azure.eventhubs.EventHubClient.createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)'
    type: Method
    summary: |-
      <p>Erstellen Sie eine Basis Epoche EventHub-Empfänger für die angegebenen Partitions-Id und vom Anfang des Datenstroms Partition empfangen. Der Empfänger ist für einen bestimmten Event Hub-Partition aus der bestimmte consumergruppe erstellt. </p>
      <p>Es ist wichtig, Folgendes beim Erstellen der Basis Epoche Empfänger geachtet werden:<itemizedlist><listitem><p>Besitz Erzwingung - nach der Erstellung eines Empfängers Epoche basierend keine erstellen einen nicht-Epoche-Empfänger für das Kombinationsfeld für den gleichen ConsumerGroup-Partition, bis alle Empfänger dem Kombinationsfeld geschlossen werden. </p></listitem><listitem><p>Besitz stehlen – Wenn ein Empfänger mit höheren Epoche-Wert für ein Kombinationsfeld ConsumerGroup Partition erstellt wird, alle älteren Epoche Empfänger diese Kombinationsfeld Force geschlossen ist. </p></listitem><listitem><p>Alle Empfänger, die aufgrund des Besitzes zu einem Kombinationsfeld ConsumerGroup Partition verloren geschlossen erhalten <xref uid="com.microsoft.azure.eventhubs._receiver_disconnected_exception" data-throw-if-not-resolved="false">ReceiverDisconnectedException</xref> für alle Vorgänge, die von diesem Empfänger. </p></listitem></itemizedlist></p>
      <p></p>
    syntax:
      content: 'public final CompletableFuture<PartitionReceiver> createEpochReceiver(final String consumerGroupName, final String partitionId, final String startingOffset, final long epoch)'
      parameters:
        - id: consumerGroupName
          type: 3d93591e
          description: '<p>der Name der consumergruppe, die dieser Empfänger unter gruppiert werden sollen. </p>'
        - id: partitionId
          type: 3d93591e
          description: '<p>Die Partition-Id, der der Empfänger zu gehört. Von dieser Partition nur werden alle Daten empfangen werden. </p>'
        - id: startingOffset
          type: 3d93591e
          description: '<p>der Offset, starten Sie den Empfang von Ereignissen aus. Vom Anfang von Streams verwendet wurde empfangen: <xref uid="com.microsoft.azure.eventhubs._partition_receiver.START_OF_STREAM" data-throw-if-not-resolved="false">PartitionReceiver #START_OF_STREAM</xref></p>'
        - id: epoch
          type: 4c60ae65
          description: '<p>ein eindeutiger Bezeichner (Epoche Wert), den den Dienst verwendet, um die Partition/Lease des Besitzes zu erzwingen. </p>'
      return:
        type: 9971d449com.microsoft.azure.eventhubs._partition_receivera08ddfce
        description: '<p>eine CompletableFuture, die zur Folge hätte eine <xref uid="com.microsoft.azure.eventhubs._partition_receiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> abgeschlossen ist. </p>'