### YamlMime:ManagedReference
items:
  - uid: system.fabric._application_description
    id: _application_description
    parent: system.fabric
    children:
      - system.fabric._application_description.ApplicationDescription()
      - 'system.fabric._application_description.ApplicationDescription(URI,String,String)'
      - 'system.fabric._application_description.ApplicationDescription(URI,String,String,Map<String, List<String>>)'
      - system.fabric._application_description.getApplicationName()
      - system.fabric._application_description.getApplicationParameters()
      - system.fabric._application_description.getApplicationTypeName()
      - system.fabric._application_description.getApplicationTypeVersion()
      - system.fabric._application_description.getMaximumNodes()
      - system.fabric._application_description.getMetrics()
      - system.fabric._application_description.getMinimumNodes()
      - system.fabric._application_description.setApplicationName(URI)
      - system.fabric._application_description.setApplicationTypeName(String)
      - system.fabric._application_description.setApplicationTypeVersion(String)
      - system.fabric._application_description.setMaximumNodes(long)
      - system.fabric._application_description.setMetrics(List<ApplicationMetricDescription>)
      - system.fabric._application_description.setMinimumNodes(long)
    href: system.fabric._application_description.yml
    langs:
      - java
    name: ApplicationDescription
    nameWithType: ApplicationDescription
    fullName: system.fabric.ApplicationDescription
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 15
    package: system.fabric
    summary: '<p>Beschreibt eine Anwendung mit <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#createApplicationAsync(system.fabric.ApplicationDescription)</xref></p>'
    syntax: &ref_3
      content: public class ApplicationDescription
    inheritance:
      - java.lang.Object
  - uid: system.fabric._application_description.ApplicationDescription()
    id: ApplicationDescription()
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    langs:
      - java
    name: ApplicationDescription()
    nameWithType: ApplicationDescription.ApplicationDescription()
    fullName: system.fabric.ApplicationDescription.ApplicationDescription()
    overload: system.fabric._application_description.ApplicationDescription*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 42
    package: system.fabric
    summary: <p>Instanziiert eine Instanz des <xref uid="" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref> Klasse. </p>
    syntax:
      content: public ApplicationDescription()
  - uid: 'system.fabric._application_description.ApplicationDescription(URI,String,String)'
    id: 'ApplicationDescription(URI,String,String)'
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    langs:
      - java
    name: 'ApplicationDescription(URI applicationName, String applicationTypeName, String applicationTypeVersion)'
    nameWithType: 'ApplicationDescription.ApplicationDescription(URI applicationName, String applicationTypeName, String applicationTypeVersion)'
    fullName: 'system.fabric.ApplicationDescription.ApplicationDescription(URI applicationName, String applicationTypeName, String applicationTypeVersion)'
    overload: system.fabric._application_description.ApplicationDescription*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 57
    package: system.fabric
    summary: |-
      <p>Instanziiert eine Instanz des <xref uid="" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref> mit den Instanznamen für die Anwendung, der Name des Anwendungstyps und die Version der Anwendung.</p>
      <p></p>
    syntax:
      content: 'public ApplicationDescription(URI applicationName, String applicationTypeName, String applicationTypeVersion)'
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p>Der URI des Instanznamens Anwendung. </p>
        - id: applicationTypeName
          type: '26831127'
          description: <p>Der Name des Anwendungstyps. </p>
        - id: applicationTypeVersion
          type: '26831127'
          description: <p>Die Version des Anwendungstyps. </p>
  - uid: 'system.fabric._application_description.ApplicationDescription(URI,String,String,Map<String, List<String>>)'
    id: 'ApplicationDescription(URI,String,String,Map<String, List<String>>)'
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    langs:
      - java
    name: 'ApplicationDescription(URI applicationName, String applicationTypeName, String applicationTypeVersion, Map<String, List<String>> applicationParameters)'
    nameWithType: 'ApplicationDescription.ApplicationDescription(URI applicationName, String applicationTypeName, String applicationTypeVersion, Map<String, List<String>> applicationParameters)'
    fullName: 'system.fabric.ApplicationDescription.ApplicationDescription(URI applicationName, String applicationTypeName, String applicationTypeVersion, Map<String, List<String>> applicationParameters)'
    overload: system.fabric._application_description.ApplicationDescription*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 75
    package: system.fabric
    summary: |-
      <p>Instanziiert eine Instanz des <xref uid="" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref> mit den Instanznamen für die Anwendung, der Name des Anwendungstyps und die Version der Anwendung.</p>
      <p></p>
    syntax:
      content: 'public ApplicationDescription(URI applicationName, String applicationTypeName, String applicationTypeVersion, Map<String, List<String>> applicationParameters)'
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p>Der URI des Instanznamens Anwendung. </p>
        - id: applicationTypeName
          type: '26831127'
          description: <p>Der Name des Anwendungstyps. </p>
        - id: applicationTypeVersion
          type: '26831127'
          description: <p>Die Version des Anwendungstyps. </p>
        - id: applicationParameters
          type: b2319095
          description: '<p>Die Auflistung von Name-Wert-Paare für die Parameter, die in der ApplicationManifest.xml angegeben werden. </p>'
  - uid: system.fabric._application_description.getApplicationName()
    id: getApplicationName()
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    langs:
      - java
    name: getApplicationName()
    nameWithType: ApplicationDescription.getApplicationName()
    fullName: URI system.fabric.ApplicationDescription.getApplicationName()
    overload: system.fabric._application_description.getApplicationName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 196
    package: system.fabric
    summary: |-
      <p>Ruft den URI-Namen der Anwendungsinstanz.</p>
      <p></p>
    syntax:
      content: public URI getApplicationName()
      return:
        type: '62304784'
        description: <p>Der Anwendungsname. </p>
  - uid: system.fabric._application_description.getApplicationParameters()
    id: getApplicationParameters()
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    langs:
      - java
    name: getApplicationParameters()
    nameWithType: ApplicationDescription.getApplicationParameters()
    fullName: 'Map<String, List<String>> system.fabric.ApplicationDescription.getApplicationParameters()'
    overload: system.fabric._application_description.getApplicationParameters*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 218
    package: system.fabric
    syntax:
      content: 'public Map<String, List<String>> getApplicationParameters()'
      return:
        type: b2319095
  - uid: system.fabric._application_description.getApplicationTypeName()
    id: getApplicationTypeName()
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    langs:
      - java
    name: getApplicationTypeName()
    nameWithType: ApplicationDescription.getApplicationTypeName()
    fullName: String system.fabric.ApplicationDescription.getApplicationTypeName()
    overload: system.fabric._application_description.getApplicationTypeName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 205
    package: system.fabric
    summary: |-
      <p>Ruft den Namen des Anwendungstyps Service Fabric.</p>
      <p></p>
    syntax:
      content: public String getApplicationTypeName()
      return:
        type: '26831127'
        description: <p>Der Name des Anwendungstyps. </p>
  - uid: system.fabric._application_description.getApplicationTypeVersion()
    id: getApplicationTypeVersion()
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    langs:
      - java
    name: getApplicationTypeVersion()
    nameWithType: ApplicationDescription.getApplicationTypeVersion()
    fullName: String system.fabric.ApplicationDescription.getApplicationTypeVersion()
    overload: system.fabric._application_description.getApplicationTypeVersion*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 214
    package: system.fabric
    summary: |-
      <p>Ruft die Version des Anwendungstyps.</p>
      <p></p>
    syntax:
      content: public String getApplicationTypeVersion()
      return:
        type: '26831127'
        description: <p>Die Anwendungstypversion. </p>
  - uid: system.fabric._application_description.getMaximumNodes()
    id: getMaximumNodes()
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    langs:
      - java
    name: getMaximumNodes()
    nameWithType: ApplicationDescription.getMaximumNodes()
    fullName: long system.fabric.ApplicationDescription.getMaximumNodes()
    overload: system.fabric._application_description.getMaximumNodes*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 107
    package: system.fabric
    summary: |-
      <p>Ruft die maximale Anzahl von Knoten, in denen diese Anwendung instanziiert werden kann.</p>
      <p></p>
    syntax: &ref_2
      content: public long getMaximumNodes()
      return:
        type: 0364520f
        description: '<p>Anzahl der Knoten, die diese Anwendung zulässig ist, umfassen. Der Standardwert lautet null. Ist er 0 (null), kann die Anwendung eine beliebige Anzahl von Knoten im Cluster umfassen. Wenn dieser Parameter kleiner als <xref uid="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMinimumNodes()</xref> ein <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref> ausgelöst, wenn <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false"> system.fabric.ApplicationManagementClient#createApplicationAsync(ApplicationDescription)</xref> aufgerufen wird. </p>'
  - uid: system.fabric._application_description.getMetrics()
    id: getMetrics()
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    langs:
      - java
    name: getMetrics()
    nameWithType: ApplicationDescription.getMetrics()
    fullName: List<ApplicationMetricDescription> system.fabric.ApplicationDescription.getMetrics()
    overload: system.fabric._application_description.getMetrics*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 89
    package: system.fabric
    syntax:
      content: public List<ApplicationMetricDescription> getMetrics()
      return:
        type: 5618da2dsystem.fabric._application_metric_descriptiona08ddfce
  - uid: system.fabric._application_description.getMinimumNodes()
    id: getMinimumNodes()
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    langs:
      - java
    name: getMinimumNodes()
    nameWithType: ApplicationDescription.getMinimumNodes()
    fullName: long system.fabric.ApplicationDescription.getMinimumNodes()
    overload: system.fabric._application_description.getMinimumNodes*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 139
    package: system.fabric
    summary: |-
      <p>Ruft die minimale Anzahl von Knoten, auf dem Service Fabric-Kapazität für diese Anwendung reserviert wird.</p>
      <p></p>
    syntax: &ref_1
      content: public long getMinimumNodes()
      return:
        type: 0364520f
        description: '<p>Anzahl der Knoten, auf dem Service Fabric Kapazität im Cluster für diese Anwendung platziert werden reservieren. Beachten Sie, dass dies nicht bedeutet, dass die Anwendung unbedingt Replikate für alle diese Knoten verfügen. Wenn dieser Parameter auf NULL gesetzt wird, wird keine Kapazität reserviert werden. Wenn dieser Parameter ist größer als <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> ein <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref> ausgelöst, wenn <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false"> system.fabric.ApplicationManagementClient#createApplicationAsync(ApplicationDescription)</xref> aufgerufen wird. </p>'
  - uid: system.fabric._application_description.setApplicationName(URI)
    id: setApplicationName(URI)
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    langs:
      - java
    name: setApplicationName(URI applicationName)
    nameWithType: ApplicationDescription.setApplicationName(URI applicationName)
    fullName: void system.fabric.ApplicationDescription.setApplicationName(URI applicationName)
    overload: system.fabric._application_description.setApplicationName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 167
    package: system.fabric
    summary: |-
      <p>Legt den URI-Namen der Anwendungsinstanz.</p>
      <p></p>
    syntax:
      content: public void setApplicationName(URI applicationName)
      parameters:
        - id: applicationName
          type: '62304784'
          description: <p>Der Anwendungsname. </p>
  - uid: system.fabric._application_description.setApplicationTypeName(String)
    id: setApplicationTypeName(String)
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    langs:
      - java
    name: setApplicationTypeName(String applicationTypeName)
    nameWithType: ApplicationDescription.setApplicationTypeName(String applicationTypeName)
    fullName: void system.fabric.ApplicationDescription.setApplicationTypeName(String applicationTypeName)
    overload: system.fabric._application_description.setApplicationTypeName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 177
    package: system.fabric
    summary: |-
      <p>Legt den Namen des Anwendungstyps Service Fabric.</p>
      <p></p>
    syntax:
      content: public void setApplicationTypeName(String applicationTypeName)
      parameters:
        - id: applicationTypeName
          type: '26831127'
          description: <p>Der Name des Anwendungstyps. </p>
  - uid: system.fabric._application_description.setApplicationTypeVersion(String)
    id: setApplicationTypeVersion(String)
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    langs:
      - java
    name: setApplicationTypeVersion(String applicationTypeVersion)
    nameWithType: ApplicationDescription.setApplicationTypeVersion(String applicationTypeVersion)
    fullName: void system.fabric.ApplicationDescription.setApplicationTypeVersion(String applicationTypeVersion)
    overload: system.fabric._application_description.setApplicationTypeVersion*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 187
    package: system.fabric
    summary: |-
      <p>Legt die Version des Anwendungstyps.</p>
      <p></p>
    syntax:
      content: public void setApplicationTypeVersion(String applicationTypeVersion)
      parameters:
        - id: applicationTypeVersion
          type: '26831127'
          description: <p>Die Anwendungstypversion. </p>
  - uid: system.fabric._application_description.setMaximumNodes(long)
    id: setMaximumNodes(long)
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    langs:
      - java
    name: setMaximumNodes(long maximumNodes)
    nameWithType: ApplicationDescription.setMaximumNodes(long maximumNodes)
    fullName: void system.fabric.ApplicationDescription.setMaximumNodes(long maximumNodes)
    overload: system.fabric._application_description.setMaximumNodes*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 122
    package: system.fabric
    summary: |-
      <p>Legt die maximale Anzahl von Knoten, in denen diese Anwendung instanziiert werden.</p>
      <p></p>
    syntax:
      content: public void setMaximumNodes(long maximumNodes)
      parameters:
        - id: maximumNodes
          type: 0364520f
          description: '<p>Anzahl der Knoten, die diese Anwendung zulässig ist, umfassen. Der Standardwert lautet null. Ist er 0 (null), kann die Anwendung eine beliebige Anzahl von Knoten im Cluster umfassen. Wenn dieser Parameter kleiner als <xref uid="system.fabric._application_description.getMinimumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMinimumNodes()</xref> ein <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref> ausgelöst, wenn <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false"> system.fabric.ApplicationManagementClient#createApplicationAsync(ApplicationDescription)</xref> aufgerufen wird. </p>'
  - uid: system.fabric._application_description.setMetrics(List<ApplicationMetricDescription>)
    id: setMetrics(List<ApplicationMetricDescription>)
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    langs:
      - java
    name: setMetrics(List<ApplicationMetricDescription> metrics)
    nameWithType: ApplicationDescription.setMetrics(List<ApplicationMetricDescription> metrics)
    fullName: void system.fabric.ApplicationDescription.setMetrics(List<ApplicationMetricDescription> metrics)
    overload: system.fabric._application_description.setMetrics*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 93
    package: system.fabric
    syntax:
      content: public void setMetrics(List<ApplicationMetricDescription> metrics)
      parameters:
        - id: metrics
          type: 5618da2dsystem.fabric._application_metric_descriptiona08ddfce
  - uid: system.fabric._application_description.setMinimumNodes(long)
    id: setMinimumNodes(long)
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    langs:
      - java
    name: setMinimumNodes(long minimumNodes)
    nameWithType: ApplicationDescription.setMinimumNodes(long minimumNodes)
    fullName: void system.fabric.ApplicationDescription.setMinimumNodes(long minimumNodes)
    overload: system.fabric._application_description.setMinimumNodes*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ApplicationDescription.java
      startLine: 157
    package: system.fabric
    summary: |-
      <p>Legt fest, dass die minimale Anzahl von Knoten, auf dem Service Fabric-Kapazität für diese Anwendung reserviert.</p>
      <p></p>
    syntax:
      content: public void setMinimumNodes(long minimumNodes)
      parameters:
        - id: minimumNodes
          type: 0364520f
          description: '<p>Anzahl der Knoten, auf dem Service Fabric Kapazität im Cluster für diese Anwendung platziert werden reservieren. Beachten Sie, dass dies nicht bedeutet, dass die Anwendung unbedingt Replikate für alle diese Knoten verfügen. Wenn dieser Parameter auf NULL gesetzt wird, wird keine Kapazität reserviert werden. Wenn dieser Parameter ist größer als <xref uid="system.fabric._application_description.getMaximumNodes()" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription#getMaximumNodes()</xref> ein <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref> ausgelöst, wenn <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false"> system.fabric.ApplicationManagementClient#createApplicationAsync(ApplicationDescription)</xref> aufgerufen wird. </p>'
references:
  - uid: system.fabric._application_description.ApplicationDescription*
    name: ApplicationDescription
    nameWithType: ApplicationDescription.ApplicationDescription
    fullName: system.fabric.ApplicationDescription.ApplicationDescription
    package: system.fabric
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: b2319095
    spec.java:
      - name: 'Map<String, List<String>>'
        fullName: 'Map<String, List<String>>'
  - uid: 5618da2dsystem.fabric._application_metric_descriptiona08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: system.fabric._application_metric_description
        name: ApplicationMetricDescription
        fullName: system.fabric.ApplicationMetricDescription
        href: system.fabric._application_metric_description.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric._application_description.getMetrics*
    name: getMetrics
    nameWithType: ApplicationDescription.getMetrics
    fullName: List<ApplicationMetricDescription> system.fabric.ApplicationDescription.getMetrics
    package: system.fabric
  - uid: system.fabric._application_description.setMetrics*
    name: setMetrics
    nameWithType: ApplicationDescription.setMetrics
    fullName: void system.fabric.ApplicationDescription.setMetrics
    package: system.fabric
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._application_description.getMaximumNodes*
    name: getMaximumNodes
    nameWithType: ApplicationDescription.getMaximumNodes
    fullName: long system.fabric.ApplicationDescription.getMaximumNodes
    package: system.fabric
  - uid: system.fabric._application_description.setMaximumNodes*
    name: setMaximumNodes
    nameWithType: ApplicationDescription.setMaximumNodes
    fullName: void system.fabric.ApplicationDescription.setMaximumNodes
    package: system.fabric
  - uid: system.fabric._application_description.getMinimumNodes*
    name: getMinimumNodes
    nameWithType: ApplicationDescription.getMinimumNodes
    fullName: long system.fabric.ApplicationDescription.getMinimumNodes
    package: system.fabric
  - uid: system.fabric._application_description.setMinimumNodes*
    name: setMinimumNodes
    nameWithType: ApplicationDescription.setMinimumNodes
    fullName: void system.fabric.ApplicationDescription.setMinimumNodes
    package: system.fabric
  - uid: system.fabric._application_description.setApplicationName*
    name: setApplicationName
    nameWithType: ApplicationDescription.setApplicationName
    fullName: void system.fabric.ApplicationDescription.setApplicationName
    package: system.fabric
  - uid: system.fabric._application_description.setApplicationTypeName*
    name: setApplicationTypeName
    nameWithType: ApplicationDescription.setApplicationTypeName
    fullName: void system.fabric.ApplicationDescription.setApplicationTypeName
    package: system.fabric
  - uid: system.fabric._application_description.setApplicationTypeVersion*
    name: setApplicationTypeVersion
    nameWithType: ApplicationDescription.setApplicationTypeVersion
    fullName: void system.fabric.ApplicationDescription.setApplicationTypeVersion
    package: system.fabric
  - uid: system.fabric._application_description.getApplicationName*
    name: getApplicationName
    nameWithType: ApplicationDescription.getApplicationName
    fullName: URI system.fabric.ApplicationDescription.getApplicationName
    package: system.fabric
  - uid: system.fabric._application_description.getApplicationTypeName*
    name: getApplicationTypeName
    nameWithType: ApplicationDescription.getApplicationTypeName
    fullName: String system.fabric.ApplicationDescription.getApplicationTypeName
    package: system.fabric
  - uid: system.fabric._application_description.getApplicationTypeVersion*
    name: getApplicationTypeVersion
    nameWithType: ApplicationDescription.getApplicationTypeVersion
    fullName: String system.fabric.ApplicationDescription.getApplicationTypeVersion
    package: system.fabric
  - uid: system.fabric._application_description.getApplicationParameters*
    name: getApplicationParameters
    nameWithType: ApplicationDescription.getApplicationParameters
    fullName: 'Map<String, List<String>> system.fabric.ApplicationDescription.getApplicationParameters'
    package: system.fabric
  - uid: system.fabric._application_metric_description
    parent: system.fabric
    href: system.fabric._application_metric_description.yml
    name: ApplicationMetricDescription
    nameWithType: ApplicationMetricDescription
    fullName: system.fabric.ApplicationMetricDescription
    type: Class
    summary: <p>Gibt die Anwendungskapazität für eine Metrik an. <xref uid="system.fabric._application_description" data-throw-if-not-resolved="false">system.fabric.ApplicationDescription</xref><xref uid="system.fabric._application_update_description" data-throw-if-not-resolved="false">system.fabric.ApplicationUpdateDescription</xref></p>
    syntax:
      content: public class ApplicationMetricDescription
  - uid: system.fabric._application_description.getMinimumNodes()
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    name: getMinimumNodes()
    nameWithType: ApplicationDescription.getMinimumNodes()
    fullName: long system.fabric.ApplicationDescription.getMinimumNodes()
    type: Method
    summary: |-
      <p>Ruft die minimale Anzahl von Knoten, auf dem Service Fabric-Kapazität für diese Anwendung reserviert wird.</p>
      <p></p>
    syntax: *ref_1
  - uid: system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)
    parent: system.fabric._application_management_client
    href: system.fabric._application_management_client.yml
    name: createApplicationAsync(ApplicationDescription applicationDescription)
    nameWithType: ApplicationManagementClient.createApplicationAsync(ApplicationDescription applicationDescription)
    fullName: CompletableFuture<Boolean> system.fabric.ApplicationManagementClient.createApplicationAsync(ApplicationDescription applicationDescription)
    type: Method
    summary: "<p>Erstellt und die jeweilige Service Fabric-Anwendung instanziiert.</p>\n<p>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#ImageBuilderValidationError</xref> : die erstellungsanforderung für die Anwendung ist ungültig in Bezug auf die bereitgestellten Bereitstellungsmanifeste für die angeforderte Anwendungstyp. </p>\n\n<p>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#InvalidNameUri</xref> : den Namen der Anwendung ist kein gültiger Naming URI. </p>\n\n<p>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#CorruptedImageStoreObjectFound</xref> : wurde eine beschädigte Datei im ImageStore gefunden. </p>\n\n<p>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#ApplicationAlreadyExists</xref> : die Anwendung bereits erstellt wurde. </p>\n\n<p>\r\n\r\n  <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.FabricErrorCode#ApplicationTypeNotFound</xref> : der Typ für die angeforderte Anwendung wurde nicht bereitgestellt. </p>\n\n<p></p>"
    syntax:
      content: public CompletableFuture<Boolean> createApplicationAsync(ApplicationDescription applicationDescription)
      parameters:
        - id: applicationDescription
          type: system.fabric._application_description
          description: <p>Die Beschreibung der Anwendung. </p>
      return:
        type: 7e53ac82
        description: <p>Die erstellte Service Fabric-Anwendung. </p>
  - uid: system.fabric._application_description.getMaximumNodes()
    parent: system.fabric._application_description
    href: system.fabric._application_description.yml
    name: getMaximumNodes()
    nameWithType: ApplicationDescription.getMaximumNodes()
    fullName: long system.fabric.ApplicationDescription.getMaximumNodes()
    type: Method
    summary: |-
      <p>Ruft die maximale Anzahl von Knoten, in denen diese Anwendung instanziiert werden kann.</p>
      <p></p>
    syntax: *ref_2
  - uid: system.fabric._application_description
    parent: system.fabric
    href: system.fabric._application_description.yml
    name: ApplicationDescription
    nameWithType: ApplicationDescription
    fullName: system.fabric.ApplicationDescription
    type: Class
    summary: '<p>Beschreibt eine Anwendung mit <xref uid="system.fabric._application_management_client.createApplicationAsync(ApplicationDescription)" data-throw-if-not-resolved="false">system.fabric.ApplicationManagementClient#createApplicationAsync(system.fabric.ApplicationDescription)</xref></p>'
    syntax: *ref_3
  - uid: system.fabric._pin_collection
    parent: system.fabric
    href: system.fabric._pin_collection.yml
    name: PinCollection
    nameWithType: PinCollection
    fullName: system.fabric.PinCollection
    type: Class
    syntax:
      content: public class PinCollection