### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o
    id: _device_i_o
    parent: com.microsoft.azure.sdk.iot.device
    children:
      - com.microsoft.azure.sdk.iot.device._device_i_o.close()
      - com.microsoft.azure.sdk.iot.device._device_i_o.getProtocol()
      - com.microsoft.azure.sdk.iot.device._device_i_o.getReceivePeriodInMilliseconds()
      - com.microsoft.azure.sdk.iot.device._device_i_o.getSendPeriodInMilliseconds()
      - com.microsoft.azure.sdk.iot.device._device_i_o.isEmpty()
      - com.microsoft.azure.sdk.iot.device._device_i_o.isOpen()
      - com.microsoft.azure.sdk.iot.device._device_i_o.multiplexClose()
      - com.microsoft.azure.sdk.iot.device._device_i_o.multiplexOpen(List<DeviceClient>)
      - com.microsoft.azure.sdk.iot.device._device_i_o.open()
      - 'com.microsoft.azure.sdk.iot.device._device_i_o.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
      - 'com.microsoft.azure.sdk.iot.device._device_i_o.sendEventAsync(Message,IotHubEventCallback,Object,IotHubConnectionString)'
      - 'com.microsoft.azure.sdk.iot.device._device_i_o.sendEventAsync(Message,IotHubResponseCallback,Object,IotHubConnectionString)'
      - com.microsoft.azure.sdk.iot.device._device_i_o.setReceivePeriodInMilliseconds(long)
      - com.microsoft.azure.sdk.iot.device._device_i_o.setSendPeriodInMilliseconds(long)
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: DeviceIO
    nameWithType: DeviceIO
    fullName: com.microsoft.azure.sdk.iot.device.DeviceIO
    type: Class
    source:
      remote: &ref_0
        path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 67
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p><span data-ttu-id="67e90-101">Implementieren Sie die standard-e/a-Schnittstelle mit dem IoTHub.</span><span class="sxs-lookup"><span data-stu-id="67e90-101">Implement the standard I/O interface with the IoTHub.</span></span> <span data-ttu-id="67e90-102"><verbatim>+-------------------------------------+                  +-----------------------------------+ |                                     |                  |                                   | |             DeviceClient |--- + DeviceClientConfig ||                                     |                  |                                   | +-------------------------------------+                  +-----------------------------------+</span><span class="sxs-lookup"><span data-stu-id="67e90-102"><verbatim>+-------------------------------------+                  +-----------------------------------+ |                                     |                  |                                   | |             DeviceClient            |------------------+        DeviceClientConfig         | |                                     |                  |                                   | +-------------------------------------+                  +-----------------------------------+</span></span>

         <span data-ttu-id="67e90-103">|                        |</span><span class="sxs-lookup"><span data-stu-id="67e90-103">|                        |</span></span>

         |                       \/

         <span data-ttu-id="67e90-104">|  +---------------------------------------------------------------------------------------------+</span><span class="sxs-lookup"><span data-stu-id="67e90-104">|  +---------------------------------------------------------------------------------------------+</span></span>

         <span data-ttu-id="67e90-105">|  | Dienste |</span><span class="sxs-lookup"><span data-stu-id="67e90-105">|  | Services                                                                                    |</span></span>

         <span data-ttu-id="67e90-106">|  |  +-----------+    +------------+    +--------------+                        +------------+  |</span><span class="sxs-lookup"><span data-stu-id="67e90-106">|  |  +-----------+    +------------+    +--------------+                        +------------+  |</span></span>

         <span data-ttu-id="67e90-107">|  |  | Telemetrie |    | DeviceTwin |    | DeviceMethod |                        | FileUpload |  |</span><span class="sxs-lookup"><span data-stu-id="67e90-107">|  |  | Telemetry |    | DeviceTwin |    | DeviceMethod |                        | FileUpload |  |</span></span>

         <span data-ttu-id="67e90-108">|  |  +-----------+    +------------+    +--------------+                        +---------+--+  |</span><span class="sxs-lookup"><span data-stu-id="67e90-108">|  |  +-----------+    +------------+    +--------------+                        +---------+--+  |</span></span>

         <span data-ttu-id="67e90-109">|  +---------------------------------------------------------------------------------------|-----+</span><span class="sxs-lookup"><span data-stu-id="67e90-109">|  +---------------------------------------------------------------------------------------|-----+</span></span>

         <span data-ttu-id="67e90-110">|                                    |                                                     |</span><span class="sxs-lookup"><span data-stu-id="67e90-110">|                                    |                                                     |</span></span>

        <span data-ttu-id="67e90-111">\/                                   \/                                                     |</span><span class="sxs-lookup"><span data-stu-id="67e90-111">\/                                   \/                                                     |</span></span>

      <span data-ttu-id="67e90-112">#####################################################################################         |</span><span class="sxs-lookup"><span data-stu-id="67e90-112">#####################################################################################         |</span></span>
      # <a name="deviceio-----------------------------------------------------------------------------------"></a><span data-ttu-id="67e90-113">DeviceIO # |</span><span class="sxs-lookup"><span data-stu-id="67e90-113">DeviceIO                                                                          #         |</span></span>
      #  <a name="------------------------------------------------------------------------------------"></a><span data-ttu-id="67e90-114">+----------------+    +-------------------------------------+    +------------+  #         |</span><span class="sxs-lookup"><span data-stu-id="67e90-114">+----------------+    +-------------------------------------+    +------------+  #         |</span></span>
      #  <a name="------------------------------------open--------------------------------------------"></a><span data-ttu-id="67e90-115">|                |    |                Öffnen Sie |    |            |  #         |</span><span class="sxs-lookup"><span data-stu-id="67e90-115">|                |    |                open                 |    |            |  #         |</span></span>
      #  <a name="-sendeventasync-----------------------------------------------close---------------"></a><span data-ttu-id="67e90-116">| SendEventAsync |    |                   +---------------+ |    |   Schließen Sie |  #         |</span><span class="sxs-lookup"><span data-stu-id="67e90-116">| sendEventAsync |    |                   +---------------+ |    |   close    |  #         |</span></span>
      #  <a name="----------------------------------------taskscheduler-----------------------------"></a><span data-ttu-id="67e90-117">|                |    |                   | TaskScheduler ||    |            |  #         |</span><span class="sxs-lookup"><span data-stu-id="67e90-117">|                |    |                   | taskScheduler | |    |            |  #         |</span></span>
      #  <a name="-----------------------------------------------------------------------------"></a><span data-ttu-id="67e90-118">+--------+-------+    +--+----------------+--+---------+--+-+    +--------+---+  #         |</span><span class="sxs-lookup"><span data-stu-id="67e90-118">+--------+-------+    +--+----------------+--+---------+--+-+    +--------+---+  #         |</span></span>
      ############<a name="---------"></a><span data-ttu-id="67e90-119">|###############|###################|#########|##################|#######         |</span><span class="sxs-lookup"><span data-stu-id="67e90-119">|###############|###################|#########|##################|#######         |</span></span>

                  |               |                   |         |                  |                |

                  |               |                  \/        \/                  |                |

                  |               |    +----------------+   +-------------------+  |                |

                  |               |    | IoTHubSendTask |   | IoTHubReceiveTask |  |                |

                  |               |    |   +--------+   |   |    +---------+    |  |                |

                  |               |    |   |   Run  |   |   |    |   Run   |    |  |                |

                  |               |    +---+---+----+---+   +----+----+----+----+  |                |

      <span data-ttu-id="67e90-120"></verbatim>IotHubTransport |||||| +------<mdash></mdash>|------------<mdash></mdash>|---------<mdash></mdash>|-------------------<mdash></mdash>|---------<mdash></mdash>|-----<mdash></mdash>+ +-------------------------------------------<mdash></mdash>+ | \/ \/ \/ \/ \/ | | IoTHubTransportManager || +---------<mdash></mdash>+ +---------<mdash></mdash>+ +-----------<mdash></mdash>+ +------------<mdash></mdash>+ +------<mdash></mdash> + | | +---<mdash></mdash>+ +---<mdash></mdash>+ +---<mdash></mdash>+ +---<mdash></mdash>+ ||| AddMessage || Open || SendMessages || HandleMessage || Schließen |||| Open || Schließen || Senden von || Empfangen von || +---------<mdash></mdash>+ +---------<mdash></mdash>+ +-----------<mdash></mdash>+ +------------<mdash></mdash>+ +------<mdash></mdash>+ | | +---<mdash></mdash>+ +----<mdash></mdash>+ +---<mdash></mdash>+ +------<mdash></mdash>+ | +-------<mdash></mdash>+-----------------------------<mdash></mdash>+----------------------<mdash></mdash>+----------<mdash></mdash>+ +<mdash></mdash> +---------------------------------------<mdash></mdash>+ | | | | \/ \/ \/ \/ +----------------------<mdash></mdash>+ +----------------------<mdash></mdash>+ +---------------<mdash> </mdash>+ +--------------------<mdash></mdash>+ | AmqpsTransport || MqttTransport || HttpsTransport || HttpsTransportManager | +----------------------<mdash></mdash>+ +----------------------<mdash></mdash>+ +------------------------------------------<mdash></mdash>+ | AmqpsIotHubConnection || MqttIotHubConnection || HttpsIotHubConnection | +----------------------<mdash></mdash>+ +----------------------<mdash></mdash>+ +------------------------------------------<mdash></mdash>+ </span><span class="sxs-lookup"><span data-stu-id="67e90-120"></verbatim> IotHubTransport | | | | | | +------<mdash></mdash>|------------<mdash></mdash>|---------<mdash></mdash>|-------------------<mdash></mdash>|---------<mdash></mdash>|-----<mdash></mdash>+ +-------------------------------------------<mdash></mdash>+ | \/ \/ \/ \/ \/ | | IoTHubTransportManager | | +---------<mdash></mdash>+ +---------<mdash></mdash>+ +-----------<mdash></mdash>+ +------------<mdash></mdash>+ +------<mdash></mdash>+ | | +---<mdash></mdash>+ +----<mdash></mdash>+ +---<mdash></mdash>+ +------<mdash></mdash>+ | | | addMessage | | Open | | sendMessages | | handleMessage | | Close | | | | Open | | Close | | send | | receive | | | +---------<mdash></mdash>+ +---------<mdash></mdash>+ +-----------<mdash></mdash>+ +------------<mdash></mdash>+ +------<mdash></mdash>+ | | +---<mdash></mdash>+ +----<mdash></mdash>+ +---<mdash></mdash>+ +------<mdash></mdash>+ | +-------<mdash></mdash>+-----------------------------<mdash></mdash>+----------------------<mdash></mdash>+----------<mdash></mdash>+ +<mdash></mdash>+---------------------------------------<mdash></mdash>+ | | | | \/ \/ \/ \/ +----------------------<mdash></mdash>+ +----------------------<mdash></mdash>+ +---------------<mdash></mdash>+ +--------------------<mdash></mdash>+ | AmqpsTransport | | MqttTransport | | HttpsTransport | | HttpsTransportManager | +----------------------<mdash></mdash>+ +----------------------<mdash></mdash>+ +------------------------------------------<mdash></mdash>+ | AmqpsIotHubConnection | | MqttIotHubConnection | | HttpsIotHubConnection | +----------------------<mdash></mdash>+ +----------------------<mdash></mdash>+ +------------------------------------------<mdash></mdash>+ </span></span></p>
    syntax:
      content: public class DeviceIO
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.close()
    id: close()
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: close()
    nameWithType: DeviceIO.close()
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.close()
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.close*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 239
    package: com.microsoft.azure.sdk.iot.device
    summary: "<p><span data-ttu-id=\"67e90-121\">Schließt alle aktuellen ausstehende Anforderungen ab und schließt den IoT Hub-Client.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-121\">Completes all current outstanding requests and closes the IoT Hub client.</span></span> <span data-ttu-id=\"67e90-122\">Muss aufgerufen werden, um den Hintergrundthread zu beenden, der Senden von Daten mit IoT Hub.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-122\">Must be called to terminate the background thread that is sending data to IoT Hub.</span></span> <span data-ttu-id=\"67e90-123\">Nach dem<code>close() \r\n\r\n    </code> aufgerufen wird, wird der IoT Hub Client ist nicht mehr verwendbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-123\">After<code>close() \r\n\r\n    </code> is called, the IoT Hub client is no longer usable.</span></span> <span data-ttu-id=\"67e90-124\">Wenn der Client bereits geschlossen ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-124\">If the client is already closed, the function shall do nothing.</span></span></p>\n\n<p></p>"
    syntax:
      content: public void close()
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="67e90-125">Wenn die Verbindung mit einem IoT Hub kann nicht geschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="67e90-125">if the connection to an IoT Hub cannot be closed.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.getProtocol()
    id: getProtocol()
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: getProtocol()
    nameWithType: DeviceIO.getProtocol()
    fullName: IotHubClientProtocol com.microsoft.azure.sdk.iot.device.DeviceIO.getProtocol()
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.getProtocol*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 450
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p><span data-ttu-id="67e90-126">Der Getter für das Transportprotokoll.</span><span class="sxs-lookup"><span data-stu-id="67e90-126">Getter for the transport protocol.</span></span></p>
      <p></p>
    syntax:
      content: public IotHubClientProtocol getProtocol()
      return:
        type: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol
        description: <p><span data-ttu-id="67e90-127">ein Protokoll für den Transport.</span><span class="sxs-lookup"><span data-stu-id="67e90-127">a protocol for transport.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.getReceivePeriodInMilliseconds()
    id: getReceivePeriodInMilliseconds()
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: getReceivePeriodInMilliseconds()
    nameWithType: DeviceIO.getReceivePeriodInMilliseconds()
    fullName: long com.microsoft.azure.sdk.iot.device.DeviceIO.getReceivePeriodInMilliseconds()
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.getReceivePeriodInMilliseconds*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 364
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p><span data-ttu-id="67e90-128">Der Getter für die Receive-Zeitraum in Millisekunden.</span><span class="sxs-lookup"><span data-stu-id="67e90-128">Getter for the receive period in milliseconds.</span></span></p>
      <p></p>
    syntax:
      content: public long getReceivePeriodInMilliseconds()
      return:
        type: 0364520f
        description: <p><span data-ttu-id="67e90-129">ein Long-Wert mit der Anzahl von Millisekunden zwischen empfängt.</span><span class="sxs-lookup"><span data-stu-id="67e90-129">a long with the number of milliseconds between receives.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.getSendPeriodInMilliseconds()
    id: getSendPeriodInMilliseconds()
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: getSendPeriodInMilliseconds()
    nameWithType: DeviceIO.getSendPeriodInMilliseconds()
    fullName: long com.microsoft.azure.sdk.iot.device.DeviceIO.getSendPeriodInMilliseconds()
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.getSendPeriodInMilliseconds*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 407
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p><span data-ttu-id="67e90-130">Der Getter für den Send-Zeitraum in Millisekunden.</span><span class="sxs-lookup"><span data-stu-id="67e90-130">Getter for the send period in milliseconds.</span></span></p>
      <p></p>
    syntax:
      content: public long getSendPeriodInMilliseconds()
      return:
        type: 0364520f
        description: <p><span data-ttu-id="67e90-131">ein Long-Wert mit der Anzahl von Millisekunden zwischen sendet.</span><span class="sxs-lookup"><span data-stu-id="67e90-131">a long with the number of milliseconds between sends.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.isEmpty()
    id: isEmpty()
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: isEmpty()
    nameWithType: DeviceIO.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.DeviceIO.isEmpty()
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.isEmpty*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 471
    package: com.microsoft.azure.sdk.iot.device
    summary: <p><span data-ttu-id="67e90-132">Der Getter für die leere Transport-Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="67e90-132">Getter for the transport empty queue.</span></span> </p>
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: '<p><span data-ttu-id="67e90-133">Ein boolescher Wert "true" Wenn ist die Transport-Warteschlange leer ist, oder false, wenn die zu sendenden Nachrichten.</span><span class="sxs-lookup"><span data-stu-id="67e90-133">a boolean true if the transport queue is empty, or false if there is messages to send.</span></span> </p>'
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.isOpen()
    id: isOpen()
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: isOpen()
    nameWithType: DeviceIO.isOpen()
    fullName: boolean com.microsoft.azure.sdk.iot.device.DeviceIO.isOpen()
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.isOpen*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 461
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p><span data-ttu-id="67e90-134">Der Getter für den Verbindungsstatus.</span><span class="sxs-lookup"><span data-stu-id="67e90-134">Getter for the connection state.</span></span></p>
      <p></p>
    syntax:
      content: public boolean isOpen()
      return:
        type: 4fc6e284
        description: '<p><span data-ttu-id="67e90-135">Ein boolescher Wert "true" Wenn ist die Verbindung offen ist, oder "false", wenn er geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="67e90-135">a boolean true if the connection is open, or false if it is closed.</span></span> </p>'
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.multiplexClose()
    id: multiplexClose()
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: multiplexClose()
    nameWithType: DeviceIO.multiplexClose()
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.multiplexClose()
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.multiplexClose*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 266
    package: com.microsoft.azure.sdk.iot.device
    summary: "<p><span data-ttu-id=\"67e90-136\">Schließt alle aktuellen ausstehende Anforderungen ab und schließt den IoT Hub-Client.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-136\">Completes all current outstanding requests and closes the IoT Hub client.</span></span> <span data-ttu-id=\"67e90-137\">Muss aufgerufen werden, um den Hintergrundthread zu beenden, der Senden von Daten mit IoT Hub.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-137\">Must be called to terminate the background thread that is sending data to IoT Hub.</span></span> <span data-ttu-id=\"67e90-138\">Nach dem<code>close() \r\n\r\n    </code> aufgerufen wird, wird der IoT Hub Client ist nicht mehr verwendbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-138\">After<code>close() \r\n\r\n    </code> is called, the IoT Hub client is no longer usable.</span></span> <span data-ttu-id=\"67e90-139\">Wenn der Client bereits geschlossen ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-139\">If the client is already closed, the function shall do nothing.</span></span></p>\n\n<p></p>"
    syntax:
      content: public void multiplexClose()
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="67e90-140">Wenn die Verbindung mit einem IoT Hub kann nicht geschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="67e90-140">if the connection to an IoT Hub cannot be closed.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.multiplexOpen(List<DeviceClient>)
    id: multiplexOpen(List<DeviceClient>)
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: multiplexOpen(List<DeviceClient> deviceClientList)
    nameWithType: DeviceIO.multiplexOpen(List<DeviceClient> deviceClientList)
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.multiplexOpen(List<DeviceClient> deviceClientList)
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.multiplexOpen*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 190
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p><span data-ttu-id="67e90-141">Startet asynchron senden und Empfangen von Nachrichten von multiplexing mit IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="67e90-141">Starts asynchronously sending and receiving messages from an IoT Hub using multiplexing.</span></span> <span data-ttu-id="67e90-142">Wenn der Client bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="67e90-142">If the client is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void multiplexOpen(List<DeviceClient> deviceClientList)
      parameters:
        - id: deviceClientList
          type: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
          description: <p><span data-ttu-id="67e90-143">die Liste der Clients von Geräten für den Transport zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="67e90-143">the list of device clients to initialize for the transport.</span></span> </p>
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="67e90-144">Wenn eine Verbindung mit einem IoT Hub hergestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="67e90-144">if a connection to an IoT Hub cannot be established.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.open()
    id: open()
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: open()
    nameWithType: DeviceIO.open()
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.open()
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.open*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 165
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p><span data-ttu-id="67e90-145">Startet asynchron senden und Empfangen von Nachrichten von einem IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="67e90-145">Starts asynchronously sending and receiving messages from an IoT Hub.</span></span> <span data-ttu-id="67e90-146">Wenn der Client bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</span><span class="sxs-lookup"><span data-stu-id="67e90-146">If the client is already open, the function shall do nothing.</span></span></p>
      <p></p>
    syntax:
      content: public void open()
    exceptions:
      - type: cbf33bbe
        description: <p><span data-ttu-id="67e90-147">Wenn eine Verbindung mit einem IoT Hub hergestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="67e90-147">if a connection to an IoT Hub cannot be established.</span></span> </p>
  - uid: 'com.microsoft.azure.sdk.iot.device._device_i_o.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    id: 'registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'DeviceIO.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.DeviceIO.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.registerConnectionStateCallback*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 484
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p><span data-ttu-id="67e90-148">Registriert einen Rückruf mit den konfigurierten Transport ausgeführt werden, wenn die Verbindung zum Gerät verloren geht oder hergestellt wird.</span><span class="sxs-lookup"><span data-stu-id="67e90-148">Registers a callback with the configured transport to be executed whenever the connection to the device is lost or established.</span></span></p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p><span data-ttu-id="67e90-149">der Rückruf aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="67e90-149">the callback to be called.</span></span> </p>
        - id: callbackContext
          type: '79317049'
          description: "<p><span data-ttu-id=\"67e90-150\">Ein Kontext, der an den Rückruf übergeben werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-150\">a context to be passed to the callback.</span></span> <span data-ttu-id=\"67e90-151\">Kann <code>null \r\n\r\n    </code> Wenn kein Rückruf bereitgestellt wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-151\">Can be <code>null \r\n\r\n    </code> if no callback is provided.</span></span> </p>"
  - uid: 'com.microsoft.azure.sdk.iot.device._device_i_o.sendEventAsync(Message,IotHubEventCallback,Object,IotHubConnectionString)'
    id: 'sendEventAsync(Message,IotHubEventCallback,Object,IotHubConnectionString)'
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: 'sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext, IotHubConnectionString iotHubConnectionString)'
    nameWithType: 'DeviceIO.sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext, IotHubConnectionString iotHubConnectionString)'
    fullName: 'synchronized void com.microsoft.azure.sdk.iot.device.DeviceIO.sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext, IotHubConnectionString iotHubConnectionString)'
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.sendEventAsync*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 285
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p><span data-ttu-id="67e90-152">Sendet asynchron eine Meldung an den IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="67e90-152">Asynchronously sends an event message to the IoT Hub.</span></span></p>
      <p></p>
    syntax:
      content: 'public synchronized void sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext, IotHubConnectionString iotHubConnectionString)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="67e90-153">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="67e90-153">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: "<p><span data-ttu-id=\"67e90-154\">der Rückruf aufgerufen, wenn eine Antwort empfangen wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-154\">the callback to be invoked when a response is received.</span></span> <span data-ttu-id=\"67e90-155\">Kann<code>null \r\n\r\n    </code> .</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-155\">Can be<code>null \r\n\r\n    </code> .</span></span> </p>"
        - id: callbackContext
          type: '79317049'
          description: "<p><span data-ttu-id=\"67e90-156\">Ein Kontext, der an den Rückruf übergeben werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-156\">a context to be passed to the callback.</span></span> <span data-ttu-id=\"67e90-157\">Kann <code>null \r\n\r\n    </code> Wenn kein Rückruf bereitgestellt wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-157\">Can be <code>null \r\n\r\n    </code> if no callback is provided.</span></span> </p>"
        - id: iotHubConnectionString
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_string
          description: <p><span data-ttu-id="67e90-158">Verbindungszeichenfolge des Absenders.</span><span class="sxs-lookup"><span data-stu-id="67e90-158">the sender's connection string.</span></span></p>
      return:
        type: 5c0b90ca
    exceptions:
      - type: 3c87bd19
        description: "<p><span data-ttu-id=\"67e90-159\">Wenn die bereitgestellten Nachricht ist<code>null \r\n\r\n    </code> .</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-159\">if the message provided is<code>null \r\n\r\n    </code> .</span></span> </p>"
      - type: 12fe80de
        description: <p><span data-ttu-id="67e90-160">Wenn der Client noch nicht geöffnet wurde oder ist bereits geschlossen.</span><span class="sxs-lookup"><span data-stu-id="67e90-160">if the client has not been opened yet or is already closed.</span></span> </p>
  - uid: 'com.microsoft.azure.sdk.iot.device._device_i_o.sendEventAsync(Message,IotHubResponseCallback,Object,IotHubConnectionString)'
    id: 'sendEventAsync(Message,IotHubResponseCallback,Object,IotHubConnectionString)'
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: 'sendEventAsync(Message message, IotHubResponseCallback callback, Object callbackContext, IotHubConnectionString iotHubConnectionString)'
    nameWithType: 'DeviceIO.sendEventAsync(Message message, IotHubResponseCallback callback, Object callbackContext, IotHubConnectionString iotHubConnectionString)'
    fullName: 'synchronized void com.microsoft.azure.sdk.iot.device.DeviceIO.sendEventAsync(Message message, IotHubResponseCallback callback, Object callbackContext, IotHubConnectionString iotHubConnectionString)'
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.sendEventAsync*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 330
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p><span data-ttu-id="67e90-161">Sendet asynchron eine Meldung an den IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="67e90-161">Asynchronously sends an event message to the IoT Hub.</span></span> <span data-ttu-id="67e90-162">Verwendung <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback" data-throw-if-not-resolved="false">IotHubResponseCallback</xref> sollten Sie die Nutzlast der Nachricht als eine Antwort für eine gesendete Nachricht, zusammen mit dem Status empfangen.</span><span class="sxs-lookup"><span data-stu-id="67e90-162">Use <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback" data-throw-if-not-resolved="false">IotHubResponseCallback</xref> if you need the message payload received as a response for a sent message, together with the status.</span></span></p>
      <p></p>
    syntax:
      content: 'public synchronized void sendEventAsync(Message message, IotHubResponseCallback callback, Object callbackContext, IotHubConnectionString iotHubConnectionString)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p><span data-ttu-id="67e90-163">Die zu sendende Meldung.</span><span class="sxs-lookup"><span data-stu-id="67e90-163">the message to be sent.</span></span> </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: "<p><span data-ttu-id=\"67e90-164\">der Rückruf aufgerufen, wenn eine Antwort empfangen wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-164\">the callback to be invoked when a response is received.</span></span> <span data-ttu-id=\"67e90-165\">Kann<code>null \r\n\r\n    </code> .</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-165\">Can be<code>null \r\n\r\n    </code> .</span></span> </p>"
        - id: callbackContext
          type: '79317049'
          description: "<p><span data-ttu-id=\"67e90-166\">Ein Kontext, der an den Rückruf übergeben werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-166\">a context to be passed to the callback.</span></span> <span data-ttu-id=\"67e90-167\">Kann <code>null \r\n\r\n    </code> Wenn kein Rückruf bereitgestellt wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-167\">Can be <code>null \r\n\r\n    </code> if no callback is provided.</span></span> </p>"
        - id: iotHubConnectionString
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_string
          description: <p><span data-ttu-id="67e90-168">Verbindungszeichenfolge des Absenders.</span><span class="sxs-lookup"><span data-stu-id="67e90-168">the sender's connection string.</span></span></p>
      return:
        type: 5c0b90ca
    exceptions:
      - type: 3c87bd19
        description: "<p><span data-ttu-id=\"67e90-169\">Wenn die bereitgestellten Nachricht ist<code>null \r\n\r\n    </code> .</span><span class=\"sxs-lookup\"><span data-stu-id=\"67e90-169\">if the message provided is<code>null \r\n\r\n    </code> .</span></span> </p>"
      - type: 12fe80de
        description: <p><span data-ttu-id="67e90-170">Wenn der Client noch nicht geöffnet wurde oder ist bereits geschlossen.</span><span class="sxs-lookup"><span data-stu-id="67e90-170">if the client has not been opened yet or is already closed.</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.setReceivePeriodInMilliseconds(long)
    id: setReceivePeriodInMilliseconds(long)
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: setReceivePeriodInMilliseconds(long newIntervalInMilliseconds)
    nameWithType: DeviceIO.setReceivePeriodInMilliseconds(long newIntervalInMilliseconds)
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.setReceivePeriodInMilliseconds(long newIntervalInMilliseconds)
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.setReceivePeriodInMilliseconds*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 377
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p><span data-ttu-id="67e90-171">Der Setter für die Receive-Zeitraum in Millisekunden.</span><span class="sxs-lookup"><span data-stu-id="67e90-171">Setter for the receive period in milliseconds.</span></span></p>
      <p></p>
    syntax:
      content: public void setReceivePeriodInMilliseconds(long newIntervalInMilliseconds)
      parameters:
        - id: newIntervalInMilliseconds
          type: 0364520f
          description: <p><span data-ttu-id="67e90-172">ist das neue Intervall in Millisekunden.</span><span class="sxs-lookup"><span data-stu-id="67e90-172">is the new interval in milliseconds.</span></span> </p>
    exceptions:
      - type: cbf33bbe
        description: '<p><span data-ttu-id="67e90-173">Wenn der Taskzeitplan vorhanden, aber es keine Aufgabe Empfangsfunktion ist aufrufen.</span><span class="sxs-lookup"><span data-stu-id="67e90-173">if the task schedule exist but there is no receive task function to call.</span></span> </p>'
      - type: 3c87bd19
        description: <p><span data-ttu-id="67e90-174">Wenn das angegebene Intervall ungültig ist (null oder negativ).</span><span class="sxs-lookup"><span data-stu-id="67e90-174">if the provided interval is invalid (zero or negative).</span></span> </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.setSendPeriodInMilliseconds(long)
    id: setSendPeriodInMilliseconds(long)
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: setSendPeriodInMilliseconds(long newIntervalInMilliseconds)
    nameWithType: DeviceIO.setSendPeriodInMilliseconds(long newIntervalInMilliseconds)
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.setSendPeriodInMilliseconds(long newIntervalInMilliseconds)
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.setSendPeriodInMilliseconds*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 420
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p><span data-ttu-id="67e90-175">Der Setter für den Send-Zeitraum in Millisekunden.</span><span class="sxs-lookup"><span data-stu-id="67e90-175">Setter for the send period in milliseconds.</span></span></p>
      <p></p>
    syntax:
      content: public void setSendPeriodInMilliseconds(long newIntervalInMilliseconds)
      parameters:
        - id: newIntervalInMilliseconds
          type: 0364520f
          description: <p><span data-ttu-id="67e90-176">ist das neue Intervall in Millisekunden.</span><span class="sxs-lookup"><span data-stu-id="67e90-176">is the new interval in milliseconds.</span></span> </p>
    exceptions:
      - type: cbf33bbe
        description: '<p><span data-ttu-id="67e90-177">Wenn der Taskzeitplan vorhanden, aber es ist keine Send-Aufgabe-Funktion aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="67e90-177">if the task schedule exist but there is no send task function to call.</span></span> </p>'
      - type: 3c87bd19
        description: <p><span data-ttu-id="67e90-178">Wenn das angegebene Intervall ungültig ist (null oder negativ).</span><span class="sxs-lookup"><span data-stu-id="67e90-178">if the provided interval is invalid (zero or negative).</span></span> </p>
references:
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.open*
    name: open
    nameWithType: DeviceIO.open
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.open
    package: com.microsoft.azure.sdk.iot.device
  - uid: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: com.microsoft.azure.sdk.iot.device._device_client
        name: DeviceClient
        fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
        href: com.microsoft.azure.sdk.iot.device._device_client.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.multiplexOpen*
    name: multiplexOpen
    nameWithType: DeviceIO.multiplexOpen
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.multiplexOpen
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.close*
    name: close
    nameWithType: DeviceIO.close
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.close
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.multiplexClose*
    name: multiplexClose
    nameWithType: DeviceIO.multiplexClose
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.multiplexClose
    package: com.microsoft.azure.sdk.iot.device
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: 12fe80de
    spec.java:
      - name: IllegalStateException
        fullName: IllegalStateException
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: 5c0b90ca
    spec.java:
      - name: synchronized void
        fullName: synchronized void
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.sendEventAsync*
    name: sendEventAsync
    nameWithType: DeviceIO.sendEventAsync
    fullName: synchronized void com.microsoft.azure.sdk.iot.device.DeviceIO.sendEventAsync
    package: com.microsoft.azure.sdk.iot.device
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.getReceivePeriodInMilliseconds*
    name: getReceivePeriodInMilliseconds
    nameWithType: DeviceIO.getReceivePeriodInMilliseconds
    fullName: long com.microsoft.azure.sdk.iot.device.DeviceIO.getReceivePeriodInMilliseconds
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.setReceivePeriodInMilliseconds*
    name: setReceivePeriodInMilliseconds
    nameWithType: DeviceIO.setReceivePeriodInMilliseconds
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.setReceivePeriodInMilliseconds
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.getSendPeriodInMilliseconds*
    name: getSendPeriodInMilliseconds
    nameWithType: DeviceIO.getSendPeriodInMilliseconds
    fullName: long com.microsoft.azure.sdk.iot.device.DeviceIO.getSendPeriodInMilliseconds
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.setSendPeriodInMilliseconds*
    name: setSendPeriodInMilliseconds
    nameWithType: DeviceIO.setSendPeriodInMilliseconds
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.setSendPeriodInMilliseconds
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.getProtocol*
    name: getProtocol
    nameWithType: DeviceIO.getProtocol
    fullName: IotHubClientProtocol com.microsoft.azure.sdk.iot.device.DeviceIO.getProtocol
    package: com.microsoft.azure.sdk.iot.device
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.isOpen*
    name: isOpen
    nameWithType: DeviceIO.isOpen
    fullName: boolean com.microsoft.azure.sdk.iot.device.DeviceIO.isOpen
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.isEmpty*
    name: isEmpty
    nameWithType: DeviceIO.isEmpty
    fullName: boolean com.microsoft.azure.sdk.iot.device.DeviceIO.isEmpty
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.registerConnectionStateCallback*
    name: registerConnectionStateCallback
    nameWithType: DeviceIO.registerConnectionStateCallback
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.registerConnectionStateCallback
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._custom_logger
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._custom_logger.yml
    name: CustomLogger
    nameWithType: CustomLogger
    fullName: com.microsoft.azure.sdk.iot.device.CustomLogger
    type: Class
    syntax:
      content: public class CustomLogger
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: IotHubTransport
    nameWithType: IotHubTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
    type: Interface
    summary: <p><span data-ttu-id="67e90-179">Eine Schnittstelle für einen IoT Hub-Transport.</span><span class="sxs-lookup"><span data-stu-id="67e90-179">An interface for an IoT Hub transport.</span></span> </p>
    syntax:
      content: public interface IotHubTransport
  - uid: com.microsoft.azure.sdk.iot.device._device_client_config
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
    name: DeviceClientConfig
    nameWithType: DeviceClientConfig
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
    type: Class
    summary: <p><span data-ttu-id="67e90-180">Konfigurationseinstellungen für einen IoT Hub-Client.</span><span class="sxs-lookup"><span data-stu-id="67e90-180">Configuration settings for an IoT Hub client.</span></span> <span data-ttu-id="67e90-181">Überprüft alle benutzerdefinierten Einstellungen an.</span><span class="sxs-lookup"><span data-stu-id="67e90-181">Validates all user-defined settings.</span></span> </p>
    syntax:
      content: public class DeviceClientConfig
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_send_task
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_send_task.yml
    name: IotHubSendTask
    nameWithType: IotHubSendTask
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubSendTask
    type: Class
    summary: '<p><span data-ttu-id="67e90-182">Sendet Nachrichten im Batchmodus und Rückrufe für abgeschlossene Anforderungen aufruft.</span><span class="sxs-lookup"><span data-stu-id="67e90-182">Sends batched messages and invokes callbacks on completed requests.</span></span> <span data-ttu-id="67e90-183">Zusammen mit einer Executor verwendet werden, die fortlaufend run() aufruft.</span><span class="sxs-lookup"><span data-stu-id="67e90-183">Meant to be used with an executor that continuously calls run().</span></span> </p>'
    syntax:
      content: public class IotHubSendTask
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_receive_task
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_receive_task.yml
    name: IotHubReceiveTask
    nameWithType: IotHubReceiveTask
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubReceiveTask
    type: Class
    summary: '<p><span data-ttu-id="67e90-184">Ein IoT Hub für Nachrichten abruft, und ruft einen Rückruf, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="67e90-184">Polls an IoT Hub for messages and invokes a callback if one is found.</span></span> <span data-ttu-id="67e90-185">Zusammen mit einer Executor verwendet werden, die fortlaufend run() aufruft.</span><span class="sxs-lookup"><span data-stu-id="67e90-185">Meant to be used with an executor that continuously calls run().</span></span> </p>'
    syntax:
      content: public class IotHubReceiveTask
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol.yml
    name: IotHubClientProtocol
    nameWithType: IotHubClientProtocol
    fullName: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
    type: Enum
    summary: '<p><span data-ttu-id="67e90-186">Das Application Layer-Protokoll, das vom Client zur Kommunikation mit IoT Hub verwendet.</span><span class="sxs-lookup"><span data-stu-id="67e90-186">The application-layer protocol used by the client to communicate with an IoT Hub.</span></span> </p>'
    syntax:
      content: public enum IotHubClientProtocol
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o._iot_hub_client_state
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._device_i_o._iot_hub_client_state.yml
    name: DeviceIO.IotHubClientState
    nameWithType: DeviceIO.IotHubClientState
    fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.IotHubClientState
    type: Enum
    summary: <p><span data-ttu-id="67e90-187">Der Status der IoT Hub-Client-Verbindung mit dem IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="67e90-187">The state of the IoT Hub client's connection with the IoT Hub.</span></span> </p>
    syntax:
      content: protected enum IotHubClientState
  - uid: com.microsoft.azure.sdk.iot.device._device_client
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._device_client.yml
    name: DeviceClient
    nameWithType: DeviceClient
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
    type: Class
    summary: |-
      <p><span data-ttu-id="67e90-188">Die öffentliche API.</span><span class="sxs-lookup"><span data-stu-id="67e90-188">The public-facing API.</span></span> <span data-ttu-id="67e90-189">Können ein einzelnes logisches oder physisches Gerät für die Verbindung an einen IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="67e90-189">Allows a single logical or physical device to connect to an IoT Hub.</span></span> <span data-ttu-id="67e90-190">Der IoT Hub-Client unterstützt sendet keine Ereignisse an und Empfangen von Nachrichten von einem IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="67e90-190">The IoT Hub client supports sending events to and receiving messages from an IoT Hub.</span></span> </p>
      <p><span data-ttu-id="67e90-191">Zur Unterstützung dieser Workflows wird die Clientbibliothek Geben Sie die folgenden Abstraktionen: einer Nachricht mit seiner Nutzlast und die zugeordneten Eigenschaften aus. und einen Client, der Nachrichten sendet und empfängt.</span><span class="sxs-lookup"><span data-stu-id="67e90-191">To support these workflows, the client library will provide the following abstractions: a message, with its payload and associated properties; and a client, which sends and receives messages.</span></span> </p>
      <p><span data-ttu-id="67e90-192">Der Client puffert Nachrichten, während das Netzwerk ausgefallen ist und erneut gesendet, wenn das Netzwerk wieder online geschaltet wird.</span><span class="sxs-lookup"><span data-stu-id="67e90-192">The client buffers messages while the network is down, and re-sends them when the network comes back online.</span></span> <span data-ttu-id="67e90-193">Nachrichten zur Verbesserung der Kommunikationseffizienz (nur für HTTPS) als auch batches.</span><span class="sxs-lookup"><span data-stu-id="67e90-193">It also batches messages to improve communication efficiency (HTTPS only).</span></span> </p>
      <p><span data-ttu-id="67e90-194">Der Client unterstützt HTTPS 1.1 und 1.0 AMQPS Transporte.</span><span class="sxs-lookup"><span data-stu-id="67e90-194">The client supports HTTPS 1.1 and AMQPS 1.0 transports.</span></span> </p>
    syntax:
      content: public class DeviceClient
  - uid: com.microsoft.azure.sdk.iot.device._message
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._message.yml
    name: Message
    nameWithType: Message
    fullName: com.microsoft.azure.sdk.iot.device.Message
    type: Class
    syntax:
      content: public class Message
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.yml
    name: IotHubEventCallback
    nameWithType: IotHubEventCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
    type: Interface
    summary: |-
      <p><span data-ttu-id="67e90-195">Eine Schnittstelle für einen Ereignisrückruf IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="67e90-195">An interface for an IoT Hub event callback.</span></span></p>
      <p><span data-ttu-id="67e90-196">Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback #Execute(IotHubStatusCode, Object)</xref> beim Empfang einer Antwort von einem IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="67e90-196">Developers are expected to create an implementation of this interface, and the transport will call <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback#execute(IotHubStatusCode, Object)</xref> upon receiving a response from an IoT Hub.</span></span> </p>
    syntax:
      content: public interface IotHubEventCallback
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_connection_string
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_connection_string.yml
    name: IotHubConnectionString
    nameWithType: IotHubConnectionString
    fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionString
    type: Class
    summary: <p><span data-ttu-id="67e90-197">Der Parser für die Verbindungszeichenfolge Iothub.</span><span class="sxs-lookup"><span data-stu-id="67e90-197">Parser for the Iothub connection string.</span></span> </p>
    syntax:
      content: public class IotHubConnectionString
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.yml
    name: IotHubResponseCallback
    nameWithType: IotHubResponseCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubResponseCallback
    type: Interface
    summary: |-
      <p><span data-ttu-id="67e90-198">Eine Schnittstelle für ein IoT Hub-Antwort-Rückruf.</span><span class="sxs-lookup"><span data-stu-id="67e90-198">An interface for an IoT Hub response callback.</span></span></p>
      <p><span data-ttu-id="67e90-199">Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.execute(ResponseMessage,Object)" data-throw-if-not-resolved="false">IotHubResponseCallback #Execute(ResponseMessage, Object)</xref> beim Empfang einer Antwort von einem IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="67e90-199">Developers are expected to create an implementation of this interface, and the transport will call <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.execute(ResponseMessage,Object)" data-throw-if-not-resolved="false">IotHubResponseCallback#execute(ResponseMessage, Object)</xref> upon receiving a response from an IoT Hub.</span></span> </p>
    syntax:
      content: public interface IotHubResponseCallback
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback.yml
    name: IotHubConnectionStateCallback
    nameWithType: IotHubConnectionStateCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
    type: Interface
    summary: |-
      <p><span data-ttu-id="67e90-200">Eine Schnittstelle für ein IoT Hub-Verbindung-Status-Rückruf.</span><span class="sxs-lookup"><span data-stu-id="67e90-200">An interface for an IoT Hub connection state callback.</span></span></p>
      <p><span data-ttu-id="67e90-201">Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="" data-throw-if-not-resolved="false">IotHubConnectionStateCallback #Execute(IotHubConnectionState, Object)</xref> übergibt den Verbindungsstatus (nach unten, Erfolg usw.).</span><span class="sxs-lookup"><span data-stu-id="67e90-201">Developers are expected to create an implementation of this interface, and the transport will call <xref uid="" data-throw-if-not-resolved="false">IotHubConnectionStateCallback#execute(IotHubConnectionState, Object)</xref> passing in the connection status (down, success, etc.).</span></span> </p>
    syntax:
      content: public interface IotHubConnectionStateCallback