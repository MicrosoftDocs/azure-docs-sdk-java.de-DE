### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o
    id: _device_i_o
    parent: com.microsoft.azure.sdk.iot.device
    children:
      - com.microsoft.azure.sdk.iot.device._device_i_o.close()
      - com.microsoft.azure.sdk.iot.device._device_i_o.getProtocol()
      - com.microsoft.azure.sdk.iot.device._device_i_o.getReceivePeriodInMilliseconds()
      - com.microsoft.azure.sdk.iot.device._device_i_o.getSendPeriodInMilliseconds()
      - com.microsoft.azure.sdk.iot.device._device_i_o.isEmpty()
      - com.microsoft.azure.sdk.iot.device._device_i_o.isOpen()
      - com.microsoft.azure.sdk.iot.device._device_i_o.multiplexClose()
      - com.microsoft.azure.sdk.iot.device._device_i_o.multiplexOpen(List<DeviceClient>)
      - com.microsoft.azure.sdk.iot.device._device_i_o.open()
      - 'com.microsoft.azure.sdk.iot.device._device_i_o.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
      - 'com.microsoft.azure.sdk.iot.device._device_i_o.sendEventAsync(Message,IotHubEventCallback,Object,IotHubConnectionString)'
      - 'com.microsoft.azure.sdk.iot.device._device_i_o.sendEventAsync(Message,IotHubResponseCallback,Object,IotHubConnectionString)'
      - com.microsoft.azure.sdk.iot.device._device_i_o.setReceivePeriodInMilliseconds(long)
      - com.microsoft.azure.sdk.iot.device._device_i_o.setSendPeriodInMilliseconds(long)
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: DeviceIO
    nameWithType: DeviceIO
    fullName: com.microsoft.azure.sdk.iot.device.DeviceIO
    type: Class
    source:
      remote: &ref_0
        path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 67
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p>Implementieren Sie die standard-e/a-Schnittstelle mit dem IoTHub. <verbatim>+-------------------------------------+                  +-----------------------------------+ |                                     |                  |                                   | |             DeviceClient |--- + DeviceClientConfig ||                                     |                  |                                   | +-------------------------------------+                  +-----------------------------------+

         |                        |

         |                       \/

         |  +---------------------------------------------------------------------------------------------+

         |  | Dienste |

         |  |  +-----------+    +------------+    +--------------+                        +------------+  |

         |  |  | Telemetrie |    | DeviceTwin |    | DeviceMethod |                        | FileUpload |  |

         |  |  +-----------+    +------------+    +--------------+                        +---------+--+  |

         |  +---------------------------------------------------------------------------------------|-----+

         |                                    |                                                     |

        \/                                   \/                                                     |

      #####################################################################################         |
      # <a name="deviceio-----------------------------------------------------------------------------------"></a>DeviceIO # |
      #  <a name="------------------------------------------------------------------------------------"></a>+----------------+    +-------------------------------------+    +------------+  #         |
      #  <a name="------------------------------------open--------------------------------------------"></a>|                |    |                Öffnen Sie |    |            |  #         |
      #  <a name="-sendeventasync-----------------------------------------------close---------------"></a>| SendEventAsync |    |                   +---------------+ |    |   Schließen Sie |  #         |
      #  <a name="----------------------------------------taskscheduler-----------------------------"></a>|                |    |                   | TaskScheduler ||    |            |  #         |
      #  <a name="-----------------------------------------------------------------------------"></a>+--------+-------+    +--+----------------+--+---------+--+-+    +--------+---+  #         |
      ############<a name="---------"></a>|###############|###################|#########|##################|#######         |

                  |               |                   |         |                  |                |

                  |               |                  \/        \/                  |                |

                  |               |    +----------------+   +-------------------+  |                |

                  |               |    | IoTHubSendTask |   | IoTHubReceiveTask |  |                |

                  |               |    |   +--------+   |   |    +---------+    |  |                |

                  |               |    |   |   Run  |   |   |    |   Run   |    |  |                |

                  |               |    +---+---+----+---+   +----+----+----+----+  |                |

      </verbatim>IotHubTransport |||||| +------<mdash></mdash>|------------<mdash></mdash>|---------<mdash></mdash>|-------------------<mdash></mdash>|---------<mdash></mdash>|-----<mdash></mdash>+ +-------------------------------------------<mdash></mdash>+ | \/ \/ \/ \/ \/ | | IoTHubTransportManager || +---------<mdash></mdash>+ +---------<mdash></mdash>+ +-----------<mdash></mdash>+ +------------<mdash></mdash>+ +------<mdash></mdash> + | | +---<mdash></mdash>+ +---<mdash></mdash>+ +---<mdash></mdash>+ +---<mdash></mdash>+ ||| AddMessage || Open || SendMessages || HandleMessage || Schließen |||| Open || Schließen || Senden von || Empfangen von || +---------<mdash></mdash>+ +---------<mdash></mdash>+ +-----------<mdash></mdash>+ +------------<mdash></mdash>+ +------<mdash></mdash>+ | | +---<mdash></mdash>+ +----<mdash></mdash>+ +---<mdash></mdash>+ +------<mdash></mdash>+ | +-------<mdash></mdash>+-----------------------------<mdash></mdash>+----------------------<mdash></mdash>+----------<mdash></mdash>+ +<mdash></mdash> +---------------------------------------<mdash></mdash>+ | | | | \/ \/ \/ \/ +----------------------<mdash></mdash>+ +----------------------<mdash></mdash>+ +---------------<mdash> </mdash>+ +--------------------<mdash></mdash>+ | AmqpsTransport || MqttTransport || HttpsTransport || HttpsTransportManager | +----------------------<mdash></mdash>+ +----------------------<mdash></mdash>+ +------------------------------------------<mdash></mdash>+ | AmqpsIotHubConnection || MqttIotHubConnection || HttpsIotHubConnection | +----------------------<mdash></mdash>+ +----------------------<mdash></mdash>+ +------------------------------------------<mdash></mdash>+ </p>
    syntax:
      content: public class DeviceIO
    inheritance:
      - java.lang.Object
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.close()
    id: close()
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: close()
    nameWithType: DeviceIO.close()
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.close()
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.close*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 239
    package: com.microsoft.azure.sdk.iot.device
    summary: "<p>Schließt alle aktuellen ausstehende Anforderungen ab und schließt den IoT Hub-Client. Muss aufgerufen werden, um den Hintergrundthread zu beenden, der Senden von Daten mit IoT Hub. Nach dem<code>close() \r\n\r\n    </code> aufgerufen wird, wird der IoT Hub Client ist nicht mehr verwendbar. Wenn der Client bereits geschlossen ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>\n\n<p></p>"
    syntax:
      content: public void close()
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn die Verbindung mit einem IoT Hub kann nicht geschlossen werden. </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.getProtocol()
    id: getProtocol()
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: getProtocol()
    nameWithType: DeviceIO.getProtocol()
    fullName: IotHubClientProtocol com.microsoft.azure.sdk.iot.device.DeviceIO.getProtocol()
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.getProtocol*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 450
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p>Der Getter für das Transportprotokoll.</p>
      <p></p>
    syntax:
      content: public IotHubClientProtocol getProtocol()
      return:
        type: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol
        description: <p>ein Protokoll für den Transport. </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.getReceivePeriodInMilliseconds()
    id: getReceivePeriodInMilliseconds()
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: getReceivePeriodInMilliseconds()
    nameWithType: DeviceIO.getReceivePeriodInMilliseconds()
    fullName: long com.microsoft.azure.sdk.iot.device.DeviceIO.getReceivePeriodInMilliseconds()
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.getReceivePeriodInMilliseconds*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 364
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p>Der Getter für die Receive-Zeitraum in Millisekunden.</p>
      <p></p>
    syntax:
      content: public long getReceivePeriodInMilliseconds()
      return:
        type: 0364520f
        description: <p>ein Long-Wert mit der Anzahl von Millisekunden zwischen empfängt. </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.getSendPeriodInMilliseconds()
    id: getSendPeriodInMilliseconds()
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: getSendPeriodInMilliseconds()
    nameWithType: DeviceIO.getSendPeriodInMilliseconds()
    fullName: long com.microsoft.azure.sdk.iot.device.DeviceIO.getSendPeriodInMilliseconds()
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.getSendPeriodInMilliseconds*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 407
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p>Der Getter für den Send-Zeitraum in Millisekunden.</p>
      <p></p>
    syntax:
      content: public long getSendPeriodInMilliseconds()
      return:
        type: 0364520f
        description: <p>ein Long-Wert mit der Anzahl von Millisekunden zwischen sendet. </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.isEmpty()
    id: isEmpty()
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: isEmpty()
    nameWithType: DeviceIO.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.DeviceIO.isEmpty()
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.isEmpty*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 471
    package: com.microsoft.azure.sdk.iot.device
    summary: <p>Der Getter für die leere Transport-Warteschlange. </p>
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: '<p>Ein boolescher Wert "true" Wenn ist die Transport-Warteschlange leer ist, oder false, wenn die zu sendenden Nachrichten. </p>'
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.isOpen()
    id: isOpen()
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: isOpen()
    nameWithType: DeviceIO.isOpen()
    fullName: boolean com.microsoft.azure.sdk.iot.device.DeviceIO.isOpen()
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.isOpen*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 461
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p>Der Getter für den Verbindungsstatus.</p>
      <p></p>
    syntax:
      content: public boolean isOpen()
      return:
        type: 4fc6e284
        description: '<p>Ein boolescher Wert "true" Wenn ist die Verbindung offen ist, oder "false", wenn er geschlossen wurde. </p>'
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.multiplexClose()
    id: multiplexClose()
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: multiplexClose()
    nameWithType: DeviceIO.multiplexClose()
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.multiplexClose()
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.multiplexClose*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 266
    package: com.microsoft.azure.sdk.iot.device
    summary: "<p>Schließt alle aktuellen ausstehende Anforderungen ab und schließt den IoT Hub-Client. Muss aufgerufen werden, um den Hintergrundthread zu beenden, der Senden von Daten mit IoT Hub. Nach dem<code>close() \r\n\r\n    </code> aufgerufen wird, wird der IoT Hub Client ist nicht mehr verwendbar. Wenn der Client bereits geschlossen ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>\n\n<p></p>"
    syntax:
      content: public void multiplexClose()
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn die Verbindung mit einem IoT Hub kann nicht geschlossen werden. </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.multiplexOpen(List<DeviceClient>)
    id: multiplexOpen(List<DeviceClient>)
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: multiplexOpen(List<DeviceClient> deviceClientList)
    nameWithType: DeviceIO.multiplexOpen(List<DeviceClient> deviceClientList)
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.multiplexOpen(List<DeviceClient> deviceClientList)
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.multiplexOpen*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 190
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p>Startet asynchron senden und Empfangen von Nachrichten von multiplexing mit IoT Hub. Wenn der Client bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>
      <p></p>
    syntax:
      content: public void multiplexOpen(List<DeviceClient> deviceClientList)
      parameters:
        - id: deviceClientList
          type: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
          description: <p>die Liste der Clients von Geräten für den Transport zu initialisieren. </p>
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn eine Verbindung mit einem IoT Hub hergestellt werden kann. </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.open()
    id: open()
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: open()
    nameWithType: DeviceIO.open()
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.open()
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.open*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 165
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p>Startet asynchron senden und Empfangen von Nachrichten von einem IoT Hub. Wenn der Client bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>
      <p></p>
    syntax:
      content: public void open()
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn eine Verbindung mit einem IoT Hub hergestellt werden kann. </p>
  - uid: 'com.microsoft.azure.sdk.iot.device._device_i_o.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    id: 'registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'DeviceIO.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.DeviceIO.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.registerConnectionStateCallback*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 484
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p>Registriert einen Rückruf mit den konfigurierten Transport ausgeführt werden, wenn die Verbindung zum Gerät verloren geht oder hergestellt wird.</p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p>der Rückruf aufgerufen werden. </p>
        - id: callbackContext
          type: '79317049'
          description: "<p>Ein Kontext, der an den Rückruf übergeben werden. Kann <code>null \r\n\r\n    </code> Wenn kein Rückruf bereitgestellt wird. </p>"
  - uid: 'com.microsoft.azure.sdk.iot.device._device_i_o.sendEventAsync(Message,IotHubEventCallback,Object,IotHubConnectionString)'
    id: 'sendEventAsync(Message,IotHubEventCallback,Object,IotHubConnectionString)'
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: 'sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext, IotHubConnectionString iotHubConnectionString)'
    nameWithType: 'DeviceIO.sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext, IotHubConnectionString iotHubConnectionString)'
    fullName: 'synchronized void com.microsoft.azure.sdk.iot.device.DeviceIO.sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext, IotHubConnectionString iotHubConnectionString)'
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.sendEventAsync*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 285
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p>Sendet asynchron eine Meldung an den IoT Hub.</p>
      <p></p>
    syntax:
      content: 'public synchronized void sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext, IotHubConnectionString iotHubConnectionString)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p>Die zu sendende Meldung. </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: "<p>der Rückruf aufgerufen, wenn eine Antwort empfangen wird. Kann<code>null \r\n\r\n    </code> . </p>"
        - id: callbackContext
          type: '79317049'
          description: "<p>Ein Kontext, der an den Rückruf übergeben werden. Kann <code>null \r\n\r\n    </code> Wenn kein Rückruf bereitgestellt wird. </p>"
        - id: iotHubConnectionString
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_string
          description: <p>Verbindungszeichenfolge des Absenders.</p>
      return:
        type: 5c0b90ca
    exceptions:
      - type: 3c87bd19
        description: "<p>Wenn die bereitgestellten Nachricht ist<code>null \r\n\r\n    </code> . </p>"
      - type: 12fe80de
        description: <p>Wenn der Client noch nicht geöffnet wurde oder ist bereits geschlossen. </p>
  - uid: 'com.microsoft.azure.sdk.iot.device._device_i_o.sendEventAsync(Message,IotHubResponseCallback,Object,IotHubConnectionString)'
    id: 'sendEventAsync(Message,IotHubResponseCallback,Object,IotHubConnectionString)'
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: 'sendEventAsync(Message message, IotHubResponseCallback callback, Object callbackContext, IotHubConnectionString iotHubConnectionString)'
    nameWithType: 'DeviceIO.sendEventAsync(Message message, IotHubResponseCallback callback, Object callbackContext, IotHubConnectionString iotHubConnectionString)'
    fullName: 'synchronized void com.microsoft.azure.sdk.iot.device.DeviceIO.sendEventAsync(Message message, IotHubResponseCallback callback, Object callbackContext, IotHubConnectionString iotHubConnectionString)'
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.sendEventAsync*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 330
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p>Sendet asynchron eine Meldung an den IoT Hub. Verwendung <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback" data-throw-if-not-resolved="false">IotHubResponseCallback</xref> sollten Sie die Nutzlast der Nachricht als eine Antwort für eine gesendete Nachricht, zusammen mit dem Status empfangen.</p>
      <p></p>
    syntax:
      content: 'public synchronized void sendEventAsync(Message message, IotHubResponseCallback callback, Object callbackContext, IotHubConnectionString iotHubConnectionString)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p>Die zu sendende Meldung. </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: "<p>der Rückruf aufgerufen, wenn eine Antwort empfangen wird. Kann<code>null \r\n\r\n    </code> . </p>"
        - id: callbackContext
          type: '79317049'
          description: "<p>Ein Kontext, der an den Rückruf übergeben werden. Kann <code>null \r\n\r\n    </code> Wenn kein Rückruf bereitgestellt wird. </p>"
        - id: iotHubConnectionString
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_string
          description: <p>Verbindungszeichenfolge des Absenders.</p>
      return:
        type: 5c0b90ca
    exceptions:
      - type: 3c87bd19
        description: "<p>Wenn die bereitgestellten Nachricht ist<code>null \r\n\r\n    </code> . </p>"
      - type: 12fe80de
        description: <p>Wenn der Client noch nicht geöffnet wurde oder ist bereits geschlossen. </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.setReceivePeriodInMilliseconds(long)
    id: setReceivePeriodInMilliseconds(long)
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: setReceivePeriodInMilliseconds(long newIntervalInMilliseconds)
    nameWithType: DeviceIO.setReceivePeriodInMilliseconds(long newIntervalInMilliseconds)
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.setReceivePeriodInMilliseconds(long newIntervalInMilliseconds)
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.setReceivePeriodInMilliseconds*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 377
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p>Der Setter für die Receive-Zeitraum in Millisekunden.</p>
      <p></p>
    syntax:
      content: public void setReceivePeriodInMilliseconds(long newIntervalInMilliseconds)
      parameters:
        - id: newIntervalInMilliseconds
          type: 0364520f
          description: <p>ist das neue Intervall in Millisekunden. </p>
    exceptions:
      - type: cbf33bbe
        description: '<p>Wenn der Taskzeitplan vorhanden, aber es keine Aufgabe Empfangsfunktion ist aufrufen. </p>'
      - type: 3c87bd19
        description: <p>Wenn das angegebene Intervall ungültig ist (null oder negativ). </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.setSendPeriodInMilliseconds(long)
    id: setSendPeriodInMilliseconds(long)
    parent: com.microsoft.azure.sdk.iot.device._device_i_o
    href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
    langs:
      - java
    name: setSendPeriodInMilliseconds(long newIntervalInMilliseconds)
    nameWithType: DeviceIO.setSendPeriodInMilliseconds(long newIntervalInMilliseconds)
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.setSendPeriodInMilliseconds(long newIntervalInMilliseconds)
    overload: com.microsoft.azure.sdk.iot.device._device_i_o.setSendPeriodInMilliseconds*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceIO.java
      startLine: 420
    package: com.microsoft.azure.sdk.iot.device
    summary: |-
      <p>Der Setter für den Send-Zeitraum in Millisekunden.</p>
      <p></p>
    syntax:
      content: public void setSendPeriodInMilliseconds(long newIntervalInMilliseconds)
      parameters:
        - id: newIntervalInMilliseconds
          type: 0364520f
          description: <p>ist das neue Intervall in Millisekunden. </p>
    exceptions:
      - type: cbf33bbe
        description: '<p>Wenn der Taskzeitplan vorhanden, aber es ist keine Send-Aufgabe-Funktion aufgerufen werden soll. </p>'
      - type: 3c87bd19
        description: <p>Wenn das angegebene Intervall ungültig ist (null oder negativ). </p>
references:
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.open*
    name: open
    nameWithType: DeviceIO.open
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.open
    package: com.microsoft.azure.sdk.iot.device
  - uid: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: com.microsoft.azure.sdk.iot.device._device_client
        name: DeviceClient
        fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
        href: com.microsoft.azure.sdk.iot.device._device_client.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.multiplexOpen*
    name: multiplexOpen
    nameWithType: DeviceIO.multiplexOpen
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.multiplexOpen
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.close*
    name: close
    nameWithType: DeviceIO.close
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.close
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.multiplexClose*
    name: multiplexClose
    nameWithType: DeviceIO.multiplexClose
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.multiplexClose
    package: com.microsoft.azure.sdk.iot.device
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: 12fe80de
    spec.java:
      - name: IllegalStateException
        fullName: IllegalStateException
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: 5c0b90ca
    spec.java:
      - name: synchronized void
        fullName: synchronized void
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.sendEventAsync*
    name: sendEventAsync
    nameWithType: DeviceIO.sendEventAsync
    fullName: synchronized void com.microsoft.azure.sdk.iot.device.DeviceIO.sendEventAsync
    package: com.microsoft.azure.sdk.iot.device
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.getReceivePeriodInMilliseconds*
    name: getReceivePeriodInMilliseconds
    nameWithType: DeviceIO.getReceivePeriodInMilliseconds
    fullName: long com.microsoft.azure.sdk.iot.device.DeviceIO.getReceivePeriodInMilliseconds
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.setReceivePeriodInMilliseconds*
    name: setReceivePeriodInMilliseconds
    nameWithType: DeviceIO.setReceivePeriodInMilliseconds
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.setReceivePeriodInMilliseconds
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.getSendPeriodInMilliseconds*
    name: getSendPeriodInMilliseconds
    nameWithType: DeviceIO.getSendPeriodInMilliseconds
    fullName: long com.microsoft.azure.sdk.iot.device.DeviceIO.getSendPeriodInMilliseconds
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.setSendPeriodInMilliseconds*
    name: setSendPeriodInMilliseconds
    nameWithType: DeviceIO.setSendPeriodInMilliseconds
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.setSendPeriodInMilliseconds
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.getProtocol*
    name: getProtocol
    nameWithType: DeviceIO.getProtocol
    fullName: IotHubClientProtocol com.microsoft.azure.sdk.iot.device.DeviceIO.getProtocol
    package: com.microsoft.azure.sdk.iot.device
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.isOpen*
    name: isOpen
    nameWithType: DeviceIO.isOpen
    fullName: boolean com.microsoft.azure.sdk.iot.device.DeviceIO.isOpen
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.isEmpty*
    name: isEmpty
    nameWithType: DeviceIO.isEmpty
    fullName: boolean com.microsoft.azure.sdk.iot.device.DeviceIO.isEmpty
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o.registerConnectionStateCallback*
    name: registerConnectionStateCallback
    nameWithType: DeviceIO.registerConnectionStateCallback
    fullName: void com.microsoft.azure.sdk.iot.device.DeviceIO.registerConnectionStateCallback
    package: com.microsoft.azure.sdk.iot.device
  - uid: com.microsoft.azure.sdk.iot.device._custom_logger
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._custom_logger.yml
    name: CustomLogger
    nameWithType: CustomLogger
    fullName: com.microsoft.azure.sdk.iot.device.CustomLogger
    type: Class
    syntax:
      content: public class CustomLogger
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: IotHubTransport
    nameWithType: IotHubTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
    type: Interface
    summary: <p>Eine Schnittstelle für einen IoT Hub-Transport. </p>
    syntax:
      content: public interface IotHubTransport
  - uid: com.microsoft.azure.sdk.iot.device._device_client_config
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
    name: DeviceClientConfig
    nameWithType: DeviceClientConfig
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
    type: Class
    summary: <p>Konfigurationseinstellungen für einen IoT Hub-Client. Überprüft alle benutzerdefinierten Einstellungen an. </p>
    syntax:
      content: public class DeviceClientConfig
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_send_task
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_send_task.yml
    name: IotHubSendTask
    nameWithType: IotHubSendTask
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubSendTask
    type: Class
    summary: '<p>Sendet Nachrichten im Batchmodus und Rückrufe für abgeschlossene Anforderungen aufruft. Zusammen mit einer Executor verwendet werden, die fortlaufend run() aufruft. </p>'
    syntax:
      content: public class IotHubSendTask
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_receive_task
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_receive_task.yml
    name: IotHubReceiveTask
    nameWithType: IotHubReceiveTask
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubReceiveTask
    type: Class
    summary: '<p>Ein IoT Hub für Nachrichten abruft, und ruft einen Rückruf, falls vorhanden. Zusammen mit einer Executor verwendet werden, die fortlaufend run() aufruft. </p>'
    syntax:
      content: public class IotHubReceiveTask
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol.yml
    name: IotHubClientProtocol
    nameWithType: IotHubClientProtocol
    fullName: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
    type: Enum
    summary: '<p>Das Application Layer-Protokoll, das vom Client zur Kommunikation mit IoT Hub verwendet. </p>'
    syntax:
      content: public enum IotHubClientProtocol
  - uid: com.microsoft.azure.sdk.iot.device._device_i_o._iot_hub_client_state
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._device_i_o._iot_hub_client_state.yml
    name: DeviceIO.IotHubClientState
    nameWithType: DeviceIO.IotHubClientState
    fullName: com.microsoft.azure.sdk.iot.device.DeviceIO.IotHubClientState
    type: Enum
    summary: <p>Der Status der IoT Hub-Client-Verbindung mit dem IoT Hub. </p>
    syntax:
      content: protected enum IotHubClientState
  - uid: com.microsoft.azure.sdk.iot.device._device_client
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._device_client.yml
    name: DeviceClient
    nameWithType: DeviceClient
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
    type: Class
    summary: |-
      <p>Die öffentliche API. Können ein einzelnes logisches oder physisches Gerät für die Verbindung an einen IoT Hub. Der IoT Hub-Client unterstützt sendet keine Ereignisse an und Empfangen von Nachrichten von einem IoT Hub. </p>
      <p>Zur Unterstützung dieser Workflows wird die Clientbibliothek Geben Sie die folgenden Abstraktionen: einer Nachricht mit seiner Nutzlast und die zugeordneten Eigenschaften aus. und einen Client, der Nachrichten sendet und empfängt. </p>
      <p>Der Client puffert Nachrichten, während das Netzwerk ausgefallen ist und erneut gesendet, wenn das Netzwerk wieder online geschaltet wird. Nachrichten zur Verbesserung der Kommunikationseffizienz (nur für HTTPS) als auch batches. </p>
      <p>Der Client unterstützt HTTPS 1.1 und 1.0 AMQPS Transporte. </p>
    syntax:
      content: public class DeviceClient
  - uid: com.microsoft.azure.sdk.iot.device._message
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._message.yml
    name: Message
    nameWithType: Message
    fullName: com.microsoft.azure.sdk.iot.device.Message
    type: Class
    syntax:
      content: public class Message
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.yml
    name: IotHubEventCallback
    nameWithType: IotHubEventCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
    type: Interface
    summary: |-
      <p>Eine Schnittstelle für einen Ereignisrückruf IoT Hub.</p>
      <p>Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback #Execute(IotHubStatusCode, Object)</xref> beim Empfang einer Antwort von einem IoT Hub. </p>
    syntax:
      content: public interface IotHubEventCallback
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_connection_string
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_connection_string.yml
    name: IotHubConnectionString
    nameWithType: IotHubConnectionString
    fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionString
    type: Class
    summary: <p>Der Parser für die Verbindungszeichenfolge Iothub. </p>
    syntax:
      content: public class IotHubConnectionString
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.yml
    name: IotHubResponseCallback
    nameWithType: IotHubResponseCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubResponseCallback
    type: Interface
    summary: |-
      <p>Eine Schnittstelle für ein IoT Hub-Antwort-Rückruf.</p>
      <p>Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.execute(ResponseMessage,Object)" data-throw-if-not-resolved="false">IotHubResponseCallback #Execute(ResponseMessage, Object)</xref> beim Empfang einer Antwort von einem IoT Hub. </p>
    syntax:
      content: public interface IotHubResponseCallback
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback.yml
    name: IotHubConnectionStateCallback
    nameWithType: IotHubConnectionStateCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
    type: Interface
    summary: |-
      <p>Eine Schnittstelle für ein IoT Hub-Verbindung-Status-Rückruf.</p>
      <p>Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="" data-throw-if-not-resolved="false">IotHubConnectionStateCallback #Execute(IotHubConnectionState, Object)</xref> übergibt den Verbindungsstatus (nach unten, Erfolg usw.). </p>
    syntax:
      content: public interface IotHubConnectionStateCallback