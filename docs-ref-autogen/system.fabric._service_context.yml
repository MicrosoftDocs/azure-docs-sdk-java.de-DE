### YamlMime:ManagedReference
items:
  - uid: system.fabric._service_context
    id: _service_context
    parent: system.fabric
    children:
      - system.fabric._service_context.getCodePackageActivationContext()
      - system.fabric._service_context.getInitializationData()
      - system.fabric._service_context.getNodeContext()
      - system.fabric._service_context.getPartitionId()
      - system.fabric._service_context.getReplicaOrInstanceId()
      - system.fabric._service_context.getServiceName()
      - system.fabric._service_context.getServiceTypeName()
      - system.fabric._service_context.getTraceId()
      - 'system.fabric._service_context.ServiceContext(NodeContext,CodePackageActivationContext,String,URI,byte [],UUID,long)'
    href: system.fabric._service_context.yml
    langs:
      - java
    name: ServiceContext
    nameWithType: ServiceContext
    fullName: system.fabric.ServiceContext
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/ServiceContext.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceContext.java
      startLine: 10
    package: system.fabric
    summary: '<p>Stellt den Kontext, in denen der Dienst unter dar. </p>'
    syntax:
      content: public class ServiceContext
    inheritance:
      - java.lang.Object
  - uid: system.fabric._service_context.getCodePackageActivationContext()
    id: getCodePackageActivationContext()
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    langs:
      - java
    name: getCodePackageActivationContext()
    nameWithType: ServiceContext.getCodePackageActivationContext()
    fullName: CodePackageActivationContext system.fabric.ServiceContext.getCodePackageActivationContext()
    overload: system.fabric._service_context.getCodePackageActivationContext*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceContext.java
      startLine: 97
    package: system.fabric
    summary: |-
      <p>Ruft das Codepaket-Aktivierungskontext ab.</p>
      <p></p>
    syntax:
      content: public CodePackageActivationContext getCodePackageActivationContext()
      return:
        type: system.fabric._code_package_activation_context
        description: <p>Das Codepaket-Aktivierungskontext. </p>
  - uid: system.fabric._service_context.getInitializationData()
    id: getInitializationData()
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    langs:
      - java
    name: getInitializationData()
    nameWithType: ServiceContext.getInitializationData()
    fullName: 'byte [] system.fabric.ServiceContext.getInitializationData()'
    overload: system.fabric._service_context.getInitializationData*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceContext.java
      startLine: 124
    package: system.fabric
    summary: |-
      <p>Ruft die Initialisierungsdaten des Diensts ab.</p>
      <p></p>
    syntax:
      content: 'public byte [] getInitializationData()'
      return:
        type: ccd9418d
        description: <p>Die Initialisierungsdaten. </p>
  - uid: system.fabric._service_context.getNodeContext()
    id: getNodeContext()
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    langs:
      - java
    name: getNodeContext()
    nameWithType: ServiceContext.getNodeContext()
    fullName: NodeContext system.fabric.ServiceContext.getNodeContext()
    overload: system.fabric._service_context.getNodeContext*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceContext.java
      startLine: 88
    package: system.fabric
    summary: |-
      <p>Ruft den Knotenkontext für den Knoten, in dem das Replikat Dienst instanziiert wird.</p>
      <p></p>
    syntax:
      content: public NodeContext getNodeContext()
      return:
        type: system.fabric._node_context
        description: <p>Der Knotenkontext. </p>
  - uid: system.fabric._service_context.getPartitionId()
    id: getPartitionId()
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    langs:
      - java
    name: getPartitionId()
    nameWithType: ServiceContext.getPartitionId()
    fullName: UUID system.fabric.ServiceContext.getPartitionId()
    overload: system.fabric._service_context.getPartitionId*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceContext.java
      startLine: 133
    package: system.fabric
    summary: |-
      <p>Ruft die Partitions-Id ab.</p>
      <p></p>
    syntax:
      content: public UUID getPartitionId()
      return:
        type: add9545a
        description: <p>Die Partitions-Id. </p>
  - uid: system.fabric._service_context.getReplicaOrInstanceId()
    id: getReplicaOrInstanceId()
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    langs:
      - java
    name: getReplicaOrInstanceId()
    nameWithType: ServiceContext.getReplicaOrInstanceId()
    fullName: long system.fabric.ServiceContext.getReplicaOrInstanceId()
    overload: system.fabric._service_context.getReplicaOrInstanceId*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceContext.java
      startLine: 142
    package: system.fabric
    summary: |-
      <p>Ruft die Replikat-Id mit einem zustandsbehafteten Dienst oder der statusfreien Dienstinstanz-Id ab.</p>
      <p></p>
    syntax:
      content: public long getReplicaOrInstanceId()
      return:
        type: 0364520f
        description: <p>Die Replikat-Id mit einem zustandsbehafteten Dienst oder der statusfreien Dienstinstanz-Id. </p>
  - uid: system.fabric._service_context.getServiceName()
    id: getServiceName()
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    langs:
      - java
    name: getServiceName()
    nameWithType: ServiceContext.getServiceName()
    fullName: URI system.fabric.ServiceContext.getServiceName()
    overload: system.fabric._service_context.getServiceName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceContext.java
      startLine: 115
    package: system.fabric
    summary: |-
      <p>Ruft den Dienstnamen.</p>
      <p></p>
    syntax:
      content: public URI getServiceName()
      return:
        type: '62304784'
        description: <p>Der Name des Diensts. </p>
  - uid: system.fabric._service_context.getServiceTypeName()
    id: getServiceTypeName()
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    langs:
      - java
    name: getServiceTypeName()
    nameWithType: ServiceContext.getServiceTypeName()
    fullName: String system.fabric.ServiceContext.getServiceTypeName()
    overload: system.fabric._service_context.getServiceTypeName*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceContext.java
      startLine: 106
    package: system.fabric
    summary: |-
      <p>Ruft den Typnamen des Dienstes ab.</p>
      <p></p>
    syntax:
      content: public String getServiceTypeName()
      return:
        type: '26831127'
        description: <p>Der Diensttypname. </p>
  - uid: system.fabric._service_context.getTraceId()
    id: getTraceId()
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    langs:
      - java
    name: getTraceId()
    nameWithType: ServiceContext.getTraceId()
    fullName: String system.fabric.ServiceContext.getTraceId()
    overload: system.fabric._service_context.getTraceId*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceContext.java
      startLine: 154
    package: system.fabric
    summary: "<p>Ruft die Ablaufverfolgungs-Id des Diensts ab.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>die Ablaufverfolgungs-Id als Bezeichner für alle generierten ablaufverfolgungen verwendet werden kann. </p>"
    syntax:
      content: public String getTraceId()
      return:
        type: '26831127'
        description: <p>Die Ablaufverfolgungs-Id des Diensts. </p>
  - uid: 'system.fabric._service_context.ServiceContext(NodeContext,CodePackageActivationContext,String,URI,byte [],UUID,long)'
    id: 'ServiceContext(NodeContext,CodePackageActivationContext,String,URI,byte [],UUID,long)'
    parent: system.fabric._service_context
    href: system.fabric._service_context.yml
    langs:
      - java
    name: 'ServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaOrInstanceId)'
    nameWithType: 'ServiceContext.ServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaOrInstanceId)'
    fullName: 'system.fabric.ServiceContext.ServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaOrInstanceId)'
    overload: system.fabric._service_context.ServiceContext*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServiceContext.java
      startLine: 49
    package: system.fabric
    summary: |-
      <p>Initialisiert eine neue Instanz der dem <ref refid="" kindref="compound">system.fabric.ServiceContext</ref> Klasse.</p>
      <p></p>
    syntax:
      content: 'protected ServiceContext(NodeContext nodeContext, CodePackageActivationContext codePackageActivationContext, String serviceTypeName, URI serviceName, byte[] initializationData, UUID partitionId, long replicaOrInstanceId)'
      parameters:
        - id: nodeContext
          type: system.fabric._node_context
          description: <p>Der Knotenkontext. </p>
        - id: codePackageActivationContext
          type: system.fabric._code_package_activation_context
          description: <p>Das Codepaket-Aktivierungskontext. </p>
        - id: serviceTypeName
          type: '26831127'
          description: <p>Der Diensttypname. </p>
        - id: serviceName
          type: '62304784'
          description: <p>Der Name des Diensts. </p>
        - id: initializationData
          type: ccd9418d
          description: <p>Die Initialisierungsdaten. </p>
        - id: partitionId
          type: add9545a
          description: <p>Die Partitions-Id. </p>
        - id: replicaOrInstanceId
          type: 0364520f
          description: <p>Das Replikat oder eine Instanz-ID. </p>
references:
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: '62304784'
    spec.java:
      - name: URI
        fullName: URI
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: add9545a
    spec.java:
      - name: UUID
        fullName: UUID
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._service_context.ServiceContext*
    name: ServiceContext
    nameWithType: ServiceContext.ServiceContext
    fullName: system.fabric.ServiceContext.ServiceContext
    package: system.fabric
  - uid: system.fabric._service_context.getNodeContext*
    name: getNodeContext
    nameWithType: ServiceContext.getNodeContext
    fullName: NodeContext system.fabric.ServiceContext.getNodeContext
    package: system.fabric
  - uid: system.fabric._service_context.getCodePackageActivationContext*
    name: getCodePackageActivationContext
    nameWithType: ServiceContext.getCodePackageActivationContext
    fullName: CodePackageActivationContext system.fabric.ServiceContext.getCodePackageActivationContext
    package: system.fabric
  - uid: system.fabric._service_context.getServiceTypeName*
    name: getServiceTypeName
    nameWithType: ServiceContext.getServiceTypeName
    fullName: String system.fabric.ServiceContext.getServiceTypeName
    package: system.fabric
  - uid: system.fabric._service_context.getServiceName*
    name: getServiceName
    nameWithType: ServiceContext.getServiceName
    fullName: URI system.fabric.ServiceContext.getServiceName
    package: system.fabric
  - uid: system.fabric._service_context.getInitializationData*
    name: getInitializationData
    nameWithType: ServiceContext.getInitializationData
    fullName: 'byte [] system.fabric.ServiceContext.getInitializationData'
    package: system.fabric
  - uid: system.fabric._service_context.getPartitionId*
    name: getPartitionId
    nameWithType: ServiceContext.getPartitionId
    fullName: UUID system.fabric.ServiceContext.getPartitionId
    package: system.fabric
  - uid: system.fabric._service_context.getReplicaOrInstanceId*
    name: getReplicaOrInstanceId
    nameWithType: ServiceContext.getReplicaOrInstanceId
    fullName: long system.fabric.ServiceContext.getReplicaOrInstanceId
    package: system.fabric
  - uid: system.fabric._service_context.getTraceId*
    name: getTraceId
    nameWithType: ServiceContext.getTraceId
    fullName: String system.fabric.ServiceContext.getTraceId
    package: system.fabric
  - uid: microsoft.servicefabric.services.runtime._stateless_service_context
    parent: microsoft.servicefabric.services.runtime
    href: microsoft.servicefabric.services.runtime._stateless_service_context.yml
    name: StatelessServiceContext
    nameWithType: StatelessServiceContext
    fullName: microsoft.servicefabric.services.runtime.StatelessServiceContext
    type: Class
    summary: '<p>Stellt den Kontext, in denen die statusfreie Dienst unter dar. </p>'
    syntax:
      content: public class StatelessServiceContext
  - uid: system.fabric._stateful_service_context
    parent: system.fabric
    href: system.fabric._stateful_service_context.yml
    name: StatefulServiceContext
    nameWithType: StatefulServiceContext
    fullName: system.fabric.StatefulServiceContext
    type: Class
    syntax:
      content: public class StatefulServiceContext
  - uid: system.fabric._node_context
    parent: system.fabric
    href: system.fabric._node_context.yml
    name: NodeContext
    nameWithType: NodeContext
    fullName: system.fabric.NodeContext
    type: Class
    summary: '<p>Klasse, um einen Knotenkontext zu kapseln. </p>'
    syntax:
      content: public class NodeContext
  - uid: system.fabric._code_package_activation_context
    parent: system.fabric
    href: system.fabric._code_package_activation_context.yml
    name: CodePackageActivationContext
    nameWithType: CodePackageActivationContext
    fullName: system.fabric.CodePackageActivationContext
    type: Interface
    summary: '<p>Stellt Aktivierungskontext für die Service Fabric-Dienst dar. Dies gilt für nur aktiviert, fabricdienst. </p>'
    syntax:
      content: public interface CodePackageActivationContext