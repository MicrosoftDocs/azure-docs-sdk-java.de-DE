### YamlMime:ManagedReference
items:
  - uid: system.fabric.health._partition_health
    id: _partition_health
    parent: system.fabric.health
    children:
      - system.fabric.health._partition_health.getPartitionId()
      - system.fabric.health._partition_health.getReplicaHealthState()
    href: system.fabric.health._partition_health.yml
    langs:
      - java
    name: PartitionHealth
    nameWithType: PartitionHealth
    fullName: system.fabric.health.PartitionHealth
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/health/PartitionHealth.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/health/PartitionHealth.java
      startLine: 10
    package: system.fabric.health
    summary: '<p>Integrität einer Partition wird beschrieben, wie vom <xref href="system.fabric._health_client.getPartitionHealthAsync(PartitionHealthQueryDescription)" data-throw-if-not-resolved="false"></xref>. </p>'
    syntax:
      content: public class PartitionHealth extends EntityHealth
    inheritance:
      - java.lang.Object
      - system.fabric.health._entity_health
    inheritedMembers:
      - 'system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)'
      - system.fabric.health._entity_health.getAggregatedHealthState()
      - system.fabric.health._entity_health.getHealthEvents()
      - system.fabric.health._entity_health.getUnhealthyEvaluations()
  - uid: system.fabric.health._partition_health.getPartitionId()
    id: getPartitionId()
    parent: system.fabric.health._partition_health
    href: system.fabric.health._partition_health.yml
    langs:
      - java
    name: getPartitionId()
    nameWithType: PartitionHealth.getPartitionId()
    fullName: UUID system.fabric.health.PartitionHealth.getPartitionId()
    overload: system.fabric.health._partition_health.getPartitionId*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/PartitionHealth.java
      startLine: 36
    package: system.fabric.health
    summary: |-
      <p>Ruft die Partitions-ID, die die Partition eindeutig identifiziert.</p>
      <p></p>
    syntax:
      content: public UUID getPartitionId()
      return:
        type: add9545a
        description: <p>Die Partitions-ID. </p>
  - uid: system.fabric.health._partition_health.getReplicaHealthState()
    id: getReplicaHealthState()
    parent: system.fabric.health._partition_health
    href: system.fabric.health._partition_health.yml
    langs:
      - java
    name: getReplicaHealthState()
    nameWithType: PartitionHealth.getReplicaHealthState()
    fullName: List<ReplicaHealthState> system.fabric.health.PartitionHealth.getReplicaHealthState()
    overload: system.fabric.health._partition_health.getReplicaHealthState*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/PartitionHealth.java
      startLine: 49
    package: system.fabric.health
    summary: |-
      <p>Ruft das Replikat Integritätsstatus für die aktuelle Partition als gefunden wurde im Health Store.</p>
      <p></p>
    syntax:
      content: public List<ReplicaHealthState> getReplicaHealthState()
      return:
        type: 5618da2dsystem.fabric.health._replica_health_statea08ddfce
        description: '<p>Die Replikate der aktuellen Partition als gefunden wurde im Health Store. Nur Replikate, die berücksichtigen die <xref href="system.fabric._partition_health_query_description.getReplicaHealthStatesFilter()" data-throw-if-not-resolved="false"></xref> (falls angegeben) werden zurückgegeben. Wenn der Filter nicht angegeben ist, werden alle Replikate zurückgegeben. Alle Replikate werden ausgewertet, um die aggregiert partitionsintegrität zu ermitteln. </p>'
references:
  - uid: add9545a
    spec.java:
      - name: UUID
        fullName: UUID
  - uid: system.fabric.health._partition_health.getPartitionId*
    name: getPartitionId
    nameWithType: PartitionHealth.getPartitionId
    fullName: UUID system.fabric.health.PartitionHealth.getPartitionId
    package: system.fabric.health
  - uid: 5618da2dsystem.fabric.health._replica_health_statea08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: system.fabric.health._replica_health_state
        name: ReplicaHealthState
        fullName: system.fabric.health.ReplicaHealthState
        href: system.fabric.health._replica_health_state.yml
      - name: '>'
        fullName: '>'
  - uid: system.fabric.health._partition_health.getReplicaHealthState*
    name: getReplicaHealthState
    nameWithType: PartitionHealth.getReplicaHealthState
    fullName: List<ReplicaHealthState> system.fabric.health.PartitionHealth.getReplicaHealthState
    package: system.fabric.health
  - uid: 'system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)'
    parent: system.fabric.health._entity_health
    href: system.fabric.health._entity_health.yml
    name: 'EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)'
    nameWithType: 'EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)'
    fullName: 'system.fabric.health.EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)'
    type: Constructor
    syntax:
      content: 'protected EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)'
      parameters:
        - id: aggregatedHealthState
          type: f75371fa
        - id: healthEvents
          type: 5618da2dsystem.fabric.health._health_eventa08ddfce
        - id: unhealthyEvaluations
          type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
  - uid: system.fabric.health._entity_health.getAggregatedHealthState()
    parent: system.fabric.health._entity_health
    href: system.fabric.health._entity_health.yml
    name: getAggregatedHealthState()
    nameWithType: EntityHealth.getAggregatedHealthState()
    fullName: HealthState system.fabric.health.EntityHealth.getAggregatedHealthState()
    type: Method
    summary: |-
      <p>Ruft den Zustand der Entität, die aggregiert.</p>
      <p></p>
    syntax:
      content: public HealthState getAggregatedHealthState()
      return:
        type: system.fabric.health._health_state
        description: "<p>\r\n\r\n  <xref href=\"system.fabric.health._health_state\" data-throw-if-not-resolved=\"false\"></xref>der aggregierte Integritätszustand berechnet vom Health Manager basierend auf darstellt Ereignisse auf die Entität und seine untergeordneten Elemente gemeldet, (sofern vorhanden) und des gewünschten Integritätsrichtlinie. </p>"
  - uid: system.fabric.health._entity_health.getHealthEvents()
    parent: system.fabric.health._entity_health
    href: system.fabric.health._entity_health.yml
    name: getHealthEvents()
    nameWithType: EntityHealth.getHealthEvents()
    fullName: List<HealthEvent> system.fabric.health.EntityHealth.getHealthEvents()
    type: Method
    summary: "<p>Ruft die integritätsereignisse für die Entität gemeldet.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>die integritätsereignisse werden basierend auf Integritätsberichte gesendet in Health Store erstellt. Diese enthalten zusätzliche Metadaten, die vom Health Store hinzugefügt. </p>"
    syntax:
      content: public List<HealthEvent> getHealthEvents()
      return:
        type: 5618da2dsystem.fabric.health._health_eventa08ddfce
        description: <p>Die integritätsereignisse bei der Entität gemeldet wird. </p>
  - uid: system.fabric.health._entity_health.getUnhealthyEvaluations()
    parent: system.fabric.health._entity_health
    href: system.fabric.health._entity_health.yml
    name: getUnhealthyEvaluations()
    nameWithType: EntityHealth.getUnhealthyEvaluations()
    fullName: List<HealthEvaluation> system.fabric.health.EntityHealth.getUnhealthyEvaluations()
    type: Method
    summary: |-
      <p>Ruft die fehlerhaften auswertungen, die zeigen, warum der aktuellen aggregierte Integritätsstatus vom Integritätsdienst zurückgegeben wurde.</p>
      <p></p>
    syntax:
      content: public List<HealthEvaluation> getUnhealthyEvaluations()
      return:
        type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
        description: '<p>Die fehlerhaften auswertungen, die beschreiben, warum der aktuellen aggregierte Integritätsstatus vom Integritätsdienst zurückgegeben wurde. </p>'
  - uid: system.fabric.health._entity_health
    parent: system.fabric.health
    href: system.fabric.health._entity_health.yml
    name: EntityHealth
    nameWithType: EntityHealth
    fullName: system.fabric.health.EntityHealth
    type: Class
    summary: <p>Stellt die Basisklasse für alle Entitätsintegrität verknüpften Klassen. </p>
    syntax:
      content: public class EntityHealth
  - uid: system.fabric.health._replica_health_state
    parent: system.fabric.health
    href: system.fabric.health._replica_health_state.yml
    name: ReplicaHealthState
    nameWithType: ReplicaHealthState
    fullName: system.fabric.health.ReplicaHealthState
    type: Class
    summary: <p>Stellt eine Basisklasse für statusbehafteten dienstreplikats oder einer zustandslosen Diensts Instanz Integritätsstatus dar. </p>
    syntax:
      content: public class ReplicaHealthState
  - uid: system.fabric.health._health_event
    parent: system.fabric.health
    href: system.fabric.health._health_event.yml
    name: HealthEvent
    nameWithType: HealthEvent
    fullName: system.fabric.health.HealthEvent
    type: Class
    summary: '<p>Ein <xref href="system.fabric.health._health_event" data-throw-if-not-resolved="false"></xref> Objekt ist eine Struktur, die die Zustandsinformationen enthält, die verwendet wird, beim Melden der Integrität für eine Entität über ReportHealth-API </p>'
    syntax:
      content: public class HealthEvent
  - uid: system.fabric.health._health_evaluation
    parent: system.fabric.health
    href: system.fabric.health._health_evaluation.yml
    name: HealthEvaluation
    nameWithType: HealthEvaluation
    fullName: system.fabric.health.HealthEvaluation
    type: Class
    summary: '<p>Stellt eine integritätsauswertung, die die Daten und den Algorithmus, die vom Health Store verwendet werden, um den Zustand einer Entität auszuwerten beschreibt. </p>'
    syntax:
      content: public class HealthEvaluation
  - uid: system.fabric._partition_health_query_description.getReplicaHealthStatesFilter()
    parent: system.fabric._partition_health_query_description
    href: system.fabric._partition_health_query_description.yml
    name: getReplicaHealthStatesFilter()
    nameWithType: PartitionHealthQueryDescription.getReplicaHealthStatesFilter()
    fullName: ReplicaHealthStatesFilter system.fabric.PartitionHealthQueryDescription.getReplicaHealthStatesFilter()
    type: Method
    summary: "<p>Ruft den Filter für <xref href=\"system.fabric.health._replica_health_state\" data-throw-if-not-resolved=\"false\"></xref> untergeordneten Elemente. Nur untergeordnete Elemente, die dem Filter entsprechen, werden zurückgegeben. Alle untergeordneten Elemente dienen zum Auswerten des integritätszustands der Partition aggregiert.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold> nur untergeordnete Elemente, die dem Filter entsprechen zurückgegeben werden. Alle untergeordneten Elemente dienen zum Auswerten des integritätszustands der Partition aggregiert. Wenn der Filter nicht angegeben ist, werden alle untergeordneten Elemente für Partition zurückgegeben. </p>"
    syntax:
      content: public ReplicaHealthStatesFilter getReplicaHealthStatesFilter()
      return:
        type: system.fabric._replica_health_states_filter
        description: <p>Die <xref href="system.fabric._replica_health_states_filter" data-throw-if-not-resolved="false"></xref> zum Filtern der zurückgegebenen Replikate. </p>
  - uid: system.fabric._health_client.getPartitionHealthAsync(PartitionHealthQueryDescription)
    parent: system.fabric._health_client
    href: system.fabric._health_client.yml
    name: getPartitionHealthAsync(PartitionHealthQueryDescription queryDescription)
    nameWithType: HealthClient.getPartitionHealthAsync(PartitionHealthQueryDescription queryDescription)
    fullName: CompletableFuture<PartitionHealth> system.fabric.HealthClient.getPartitionHealthAsync(PartitionHealthQueryDescription queryDescription)
    type: Method
    summary: |-
      <p>Ruft asynchron die Integrität einer Service Fabric-Partition, mithilfe des angegebenen Timeouts.</p>
      <p></p>
    syntax:
      content: public CompletableFuture<PartitionHealth> getPartitionHealthAsync(PartitionHealthQueryDescription queryDescription)
      parameters:
        - id: queryDescription
          type: system.fabric._partition_health_query_description
          description: <p>Die Beschreibung der Abfrage. </p>
      return:
        type: 9cdf14d0system.fabric.health._partition_healtha08ddfce
        description: <p>Die Integrität einer Service Fabric-Partition. </p>