### YamlMime:ManagedReference
items:
  - uid: system.fabric.health._cluster_health_chunk
    id: _cluster_health_chunk
    parent: system.fabric.health
    children:
      - system.fabric.health._cluster_health_chunk.getApplicationHealthStateChunks()
      - system.fabric.health._cluster_health_chunk.getHealthState()
      - system.fabric.health._cluster_health_chunk.getNodeHealthStateChunks()
    href: system.fabric.health._cluster_health_chunk.yml
    langs:
      - java
    name: ClusterHealthChunk
    nameWithType: ClusterHealthChunk
    fullName: system.fabric.health.ClusterHealthChunk
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealthChunk.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealthChunk.java
      startLine: 3
    package: system.fabric.health
    summary: '<p>Stellt das Segment der Cluster-Status, das Zustandsinformationen zur Cluster enthält. </p>'
    syntax:
      content: public class ClusterHealthChunk
    inheritance:
      - java.lang.Object
  - uid: system.fabric.health._cluster_health_chunk.getApplicationHealthStateChunks()
    id: getApplicationHealthStateChunks()
    parent: system.fabric.health._cluster_health_chunk
    href: system.fabric.health._cluster_health_chunk.yml
    langs:
      - java
    name: getApplicationHealthStateChunks()
    nameWithType: ClusterHealthChunk.getApplicationHealthStateChunks()
    fullName: ApplicationHealthStateChunkList system.fabric.health.ClusterHealthChunk.getApplicationHealthStateChunks()
    overload: system.fabric.health._cluster_health_chunk.getApplicationHealthStateChunks*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealthChunk.java
      startLine: 39
    package: system.fabric.health
    summary: "<p>Ruft die Liste der Anwendungsintegrität Status-Segmente, die die Eingabefilter respektieren ab.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold> keine untergeordneten Elemente sind standardmäßig in Ergebnissen enthalten. Benutzer können anfordern, einige untergeordnete Elemente basierend auf den gewünschten Zustand oder andere Informationen einschließen. </p>"
    syntax:
      content: public ApplicationHealthStateChunkList getApplicationHealthStateChunks()
      return:
        type: system.fabric.health._application_health_state_chunk_list
        description: '<p>Die Liste der Anwendung Health Status Blöcke, die die Eingabefilter berücksichtigen. </p>'
  - uid: system.fabric.health._cluster_health_chunk.getHealthState()
    id: getHealthState()
    parent: system.fabric.health._cluster_health_chunk
    href: system.fabric.health._cluster_health_chunk.yml
    langs:
      - java
    name: getHealthState()
    nameWithType: ClusterHealthChunk.getHealthState()
    fullName: HealthState system.fabric.health.ClusterHealthChunk.getHealthState()
    overload: system.fabric.health._cluster_health_chunk.getHealthState*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealthChunk.java
      startLine: 13
    package: system.fabric.health
    summary: |-
      <p>Ruft den Integritätsstatus des Clusters aggregiert.</p>
      <p></p>
    syntax:
      content: public HealthState getHealthState()
      return:
        type: system.fabric.health._health_state
        description: <p>Aggregierter Integritätszustand des Clusters. </p>
  - uid: system.fabric.health._cluster_health_chunk.getNodeHealthStateChunks()
    id: getNodeHealthStateChunks()
    parent: system.fabric.health._cluster_health_chunk
    href: system.fabric.health._cluster_health_chunk.yml
    langs:
      - java
    name: getNodeHealthStateChunks()
    nameWithType: ClusterHealthChunk.getNodeHealthStateChunks()
    fullName: NodeHealthStateChunkList system.fabric.health.ClusterHealthChunk.getNodeHealthStateChunks()
    overload: system.fabric.health._cluster_health_chunk.getNodeHealthStateChunks*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/ClusterHealthChunk.java
      startLine: 26
    package: system.fabric.health
    summary: "<p>Ruft die Liste der Knoten Health-Status-Segmente, die die Eingabefilter respektieren ab.</p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold> keine untergeordneten Elemente sind standardmäßig in Ergebnissen enthalten. Benutzer können anfordern, einige untergeordnete Elemente basierend auf den gewünschten Zustand oder andere Informationen einschließen. </p>"
    syntax:
      content: public NodeHealthStateChunkList getNodeHealthStateChunks()
      return:
        type: system.fabric.health._node_health_state_chunk_list
        description: '<p>Die Liste der Knoten Health Status Blöcke, die die Eingabefilter berücksichtigen. </p>'
references:
  - uid: system.fabric.health._cluster_health_chunk.getHealthState*
    name: getHealthState
    nameWithType: ClusterHealthChunk.getHealthState
    fullName: HealthState system.fabric.health.ClusterHealthChunk.getHealthState
    package: system.fabric.health
  - uid: system.fabric.health._cluster_health_chunk.getNodeHealthStateChunks*
    name: getNodeHealthStateChunks
    nameWithType: ClusterHealthChunk.getNodeHealthStateChunks
    fullName: NodeHealthStateChunkList system.fabric.health.ClusterHealthChunk.getNodeHealthStateChunks
    package: system.fabric.health
  - uid: system.fabric.health._cluster_health_chunk.getApplicationHealthStateChunks*
    name: getApplicationHealthStateChunks
    nameWithType: ClusterHealthChunk.getApplicationHealthStateChunks
    fullName: ApplicationHealthStateChunkList system.fabric.health.ClusterHealthChunk.getApplicationHealthStateChunks
    package: system.fabric.health
  - uid: system.fabric.health._health_state
    parent: system.fabric.health
    href: system.fabric.health._health_state.yml
    name: HealthState
    nameWithType: HealthState
    fullName: system.fabric.health.HealthState
    type: Enum
    syntax:
      content: public enum HealthState
  - uid: system.fabric.health._node_health_state_chunk_list
    parent: system.fabric.health
    href: system.fabric.health._node_health_state_chunk_list.yml
    name: NodeHealthStateChunkList
    nameWithType: NodeHealthStateChunkList
    fullName: system.fabric.health.NodeHealthStateChunkList
    type: Class
    summary: "<p>Stellt eine Liste mit <xref href=\"system.fabric.health._node_health_state_chunk\" data-throw-if-not-resolved=\"false\"></xref> Elemente. </p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>die Liste kann über integritätsabfragen Status-Blocks abgerufen werden. Abfragen können als Ergebnis Segmente aufweisen, die eine Nachricht eingefügt werden kann. In diesem Fall die Liste der Elemente, die die Nachricht wird zurückgegeben, sowie eine Anzahl, die zeigt, wie viele gesamtelemente sind verfügbar. </p>"
    syntax:
      content: public class NodeHealthStateChunkList
  - uid: system.fabric.health._application_health_state_chunk_list
    parent: system.fabric.health
    href: system.fabric.health._application_health_state_chunk_list.yml
    name: ApplicationHealthStateChunkList
    nameWithType: ApplicationHealthStateChunkList
    fullName: system.fabric.health.ApplicationHealthStateChunkList
    type: Class
    summary: "<p>Stellt eine Liste mit <xref href=\"system.fabric.health._application_health_state_chunk\" data-throw-if-not-resolved=\"false\"></xref> Elemente. </p>\n<p>\r\n\r\n  <bold>Beschreibung:</bold>die Liste kann über integritätsabfragen Status-Blocks abgerufen werden. Abfragen können als Ergebnis Segmente aufweisen, die eine Nachricht eingefügt werden kann. In diesem Fall die Liste der Elemente, die die Nachricht wird zurückgegeben, sowie eine Anzahl, die zeigt, wie viele gesamtelemente sind verfügbar. </p>"
    syntax:
      content: public class ApplicationHealthStateChunkList extends HealthStateChunkList<ApplicationHealthStateChunk>