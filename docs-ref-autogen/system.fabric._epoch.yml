### YamlMime:ManagedReference
items:
  - uid: system.fabric._epoch
    id: _epoch
    parent: system.fabric
    children:
      - system.fabric._epoch.compareTo(Epoch)
      - 'system.fabric._epoch.Epoch(long,long)'
      - system.fabric._epoch.equals(Object)
      - system.fabric._epoch.getConfigurationNumber()
      - system.fabric._epoch.getDataLossNumber()
      - system.fabric._epoch.hashCode()
      - system.fabric._epoch.setConfigurationNumber(long)
      - system.fabric._epoch.setDataLossNumber(long)
    href: system.fabric._epoch.yml
    langs:
      - java
    name: Epoch
    nameWithType: Epoch
    fullName: system.fabric.Epoch
    type: Class
    source:
      remote: &ref_0
        path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
        branch: master
        repo: 'https://msazure.visualstudio.com/One/_git/sf-java'
      path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
      startLine: 22
    package: system.fabric
    summary: "<p>Stellt die aktuelle Version der Service Fabric-Partition an. </p>\n<p>\r\n\r\n  <b>Hinweise:</b>ein <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> ist eine Konfiguration Zahl für die Partition als Ganzes. Beim Festlegen der Konfiguration des Replikats Änderungen, z. B., wenn das primäre Replikat ändert, werden die Vorgänge, die vom neuen primären Replikat repliziert werden als ein neues werden bezeichnet <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> aus, die von der alten primären Datenbank gesendet wurden. das Replikat ist. Die Tatsache, die dass das primäre geändert hat ist nicht direkt sichtbar auf sekundäre Replikate, die nicht durch einen Fehler in der Regel betroffen sind, die das ursprüngliche primäre Replikat betroffen. Um nachzuverfolgen, dass sich das primäre Replikat geändert wurde, an das sekundäre Replikat übertragen werden. Diese Kommunikation erfolgt über die <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync (system.fabric.Epoch, system.fabric.SequenceNumber, system.fabric.CancellationToken)</xref> Methode. Die meisten Dienste können die Details der inneren Felder ignorieren die <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> wie es in der Regel ausreichend ist zu wissen, dass die <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> wurde geändert und Epochs, um zu bestimmen, relative Reihenfolge der Vorgänge zu vergleichen und Ereignisse im System. Zu diesem Zweck sind Vergleichsoperationen bereitgestellt. </p>"
    syntax: &ref_1
      content: public class Epoch
    inheritance:
      - java.lang.Object
      - Serializable
  - uid: system.fabric._epoch.compareTo(Epoch)
    id: compareTo(Epoch)
    parent: system.fabric._epoch
    href: system.fabric._epoch.yml
    langs:
      - java
    name: compareTo(Epoch other)
    nameWithType: Epoch.compareTo(Epoch other)
    fullName: int system.fabric.Epoch.compareTo(Epoch other)
    overload: system.fabric._epoch.compareTo*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
      startLine: 144
    package: system.fabric
    syntax:
      content: public int compareTo(Epoch other)
      parameters:
        - id: other
          type: system.fabric._epoch
      return:
        type: f75371fa
  - uid: 'system.fabric._epoch.Epoch(long,long)'
    id: 'Epoch(long,long)'
    parent: system.fabric._epoch
    href: system.fabric._epoch.yml
    langs:
      - java
    name: 'Epoch(long dataLossNumber, long configurationNumber)'
    nameWithType: 'Epoch.Epoch(long dataLossNumber, long configurationNumber)'
    fullName: 'system.fabric.Epoch.Epoch(long dataLossNumber, long configurationNumber)'
    overload: system.fabric._epoch.Epoch*
    type: Constructor
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
      startLine: 44
    package: system.fabric
    summary: |-
      <p>Initialisiert eine neue Instanz der dem <xref uid="" data-throw-if-not-resolved="false">system.fabric.Epoch</xref> Klasse mit dem angegebenen datenverlustnummer und Konfigurationsnummer.</p>
      <p></p>
    syntax:
      content: 'public Epoch(long dataLossNumber, long configurationNumber)'
      parameters:
        - id: dataLossNumber
          type: 0364520f
          description: '<p>Ein Long-Wert, der einem zunehmenden entspricht, das aktualisiert wird, wenn Datenverlust vermutet wird. </p>'
        - id: configurationNumber
          type: 0364520f
          description: '<p>Ein Long-Wert, der einem zunehmenden entspricht, die aktualisiert wird, sobald die Konfiguration dieses Replikats Änderungen festgelegt. </p>'
  - uid: system.fabric._epoch.equals(Object)
    id: equals(Object)
    parent: system.fabric._epoch
    href: system.fabric._epoch.yml
    langs:
      - java
    name: equals(Object obj)
    nameWithType: Epoch.equals(Object obj)
    fullName: boolean system.fabric.Epoch.equals(Object obj)
    overload: system.fabric._epoch.equals*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
      startLine: 123
    package: system.fabric
    syntax:
      content: public boolean equals(Object obj)
      parameters:
        - id: obj
          type: '79317049'
      return:
        type: 4fc6e284
  - uid: system.fabric._epoch.getConfigurationNumber()
    id: getConfigurationNumber()
    parent: system.fabric._epoch
    href: system.fabric._epoch.yml
    langs:
      - java
    name: getConfigurationNumber()
    nameWithType: Epoch.getConfigurationNumber()
    fullName: long system.fabric.Epoch.getConfigurationNumber()
    overload: system.fabric._epoch.getConfigurationNumber*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
      startLine: 91
    package: system.fabric
    summary: "<p>Ruft die aktuelle Konfigurationseigenschaft in dieser <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Epoch</xref>.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>die Konfigurationsnummer ist eine zunehmende Wert, der aktualisiert wird, sobald die Konfiguration dieses Replikats Änderungen festgelegt. Die Dienste werden informiert, wenn der aktuellen Konfiguration Nummer nur, wenn <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator#updateEpochAsync (system.fabric.Epoch, system.fabric.CancellationToken)</xref> Methode wird aufgerufen, als Ergebnis der Versuch, das primäre Replikat der Replikatgruppe ändern. </p>"
    syntax:
      content: public long getConfigurationNumber()
      return:
        type: 0364520f
        description: '<p>Ein Long-Wert, der die Konfigurationsnummer darstellt. </p>'
  - uid: system.fabric._epoch.getDataLossNumber()
    id: getDataLossNumber()
    parent: system.fabric._epoch
    href: system.fabric._epoch.yml
    langs:
      - java
    name: getDataLossNumber()
    nameWithType: Epoch.getDataLossNumber()
    fullName: long system.fabric.Epoch.getDataLossNumber()
    overload: system.fabric._epoch.getDataLossNumber*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
      startLine: 59
    package: system.fabric
    summary: "<p>Ruft die aktuelle datenverlustnummer in dieser <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Epoch</xref>.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>die Daten verloren gehen Number-Eigenschaft ist eine zunehmende Wert, der aktualisiert wird, wenn Datenverlust vermutet wird, als beim Verlust des ein Quorum der Replikate im Replikat festgelegt, die das primäre Replikat enthält. </p>"
    syntax:
      content: public long getDataLossNumber()
      return:
        type: 0364520f
        description: '<p>Ein Long-Wert, der die aktuelle datenverlustnummer darstellt. </p>'
  - uid: system.fabric._epoch.hashCode()
    id: hashCode()
    parent: system.fabric._epoch
    href: system.fabric._epoch.yml
    langs:
      - java
    name: hashCode()
    nameWithType: Epoch.hashCode()
    fullName: int system.fabric.Epoch.hashCode()
    overload: system.fabric._epoch.hashCode*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
      startLine: 114
    package: system.fabric
    syntax:
      content: public int hashCode()
      return:
        type: f75371fa
  - uid: system.fabric._epoch.setConfigurationNumber(long)
    id: setConfigurationNumber(long)
    parent: system.fabric._epoch
    href: system.fabric._epoch.yml
    langs:
      - java
    name: setConfigurationNumber(long configurationNumber)
    nameWithType: Epoch.setConfigurationNumber(long configurationNumber)
    fullName: void system.fabric.Epoch.setConfigurationNumber(long configurationNumber)
    overload: system.fabric._epoch.setConfigurationNumber*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
      startLine: 109
    package: system.fabric
    summary: "<p>Legt die aktuelle Konfigurationseigenschaft in dieser <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Epoch</xref>.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>die Konfigurationsnummer ist eine zunehmende Wert, der aktualisiert wird, sobald die Konfiguration dieses Replikats Änderungen festgelegt. Die Dienste werden informiert, wenn der aktuellen Konfiguration Nummer nur, wenn <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Replicator#updateEpochAsync (system.fabric.Epoch, system.fabric.CancellationToken)</xref> Methode wird aufgerufen, als Ergebnis der Versuch, das primäre Replikat der Replikatgruppe ändern. </p>"
    syntax:
      content: public void setConfigurationNumber(long configurationNumber)
      parameters:
        - id: configurationNumber
          type: 0364520f
          description: '<p>Ein Long-Wert, der die Konfigurationsnummer darstellt. </p>'
  - uid: system.fabric._epoch.setDataLossNumber(long)
    id: setDataLossNumber(long)
    parent: system.fabric._epoch
    href: system.fabric._epoch.yml
    langs:
      - java
    name: setDataLossNumber(long dataLossNumber)
    nameWithType: Epoch.setDataLossNumber(long dataLossNumber)
    fullName: void system.fabric.Epoch.setDataLossNumber(long dataLossNumber)
    overload: system.fabric._epoch.setDataLossNumber*
    type: Method
    source:
      remote: *ref_0
      path: src/prod/src/java/system.fabric/src/system/fabric/Epoch.java
      startLine: 74
    package: system.fabric
    summary: "<p>Legt die aktuelle datenverlustnummer in dieser <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.Epoch</xref>.</p>\n<p>\r\n\r\n  <b>Beschreibung:</b>die Daten verloren gehen Number-Eigenschaft ist ein ansteigender Wert aktualisiert wird, wenn Datenverlust vermutet wird, als beim Verlust des ein Quorum der Replikate im Replikat festgelegt, die das primäre Replikat enthält. </p>"
    syntax:
      content: public void setDataLossNumber(long dataLossNumber)
      parameters:
        - id: dataLossNumber
          type: 0364520f
          description: '<p>Ein Long-Wert, der die aktuelle datenverlustnummer darstellt. </p>'
references:
  - uid: 0364520f
    spec.java:
      - name: long
        fullName: long
  - uid: system.fabric._epoch.Epoch*
    name: Epoch
    nameWithType: Epoch.Epoch
    fullName: system.fabric.Epoch.Epoch
    package: system.fabric
  - uid: system.fabric._epoch.getDataLossNumber*
    name: getDataLossNumber
    nameWithType: Epoch.getDataLossNumber
    fullName: long system.fabric.Epoch.getDataLossNumber
    package: system.fabric
  - uid: system.fabric._epoch.setDataLossNumber*
    name: setDataLossNumber
    nameWithType: Epoch.setDataLossNumber
    fullName: void system.fabric.Epoch.setDataLossNumber
    package: system.fabric
  - uid: system.fabric._epoch.getConfigurationNumber*
    name: getConfigurationNumber
    nameWithType: Epoch.getConfigurationNumber
    fullName: long system.fabric.Epoch.getConfigurationNumber
    package: system.fabric
  - uid: system.fabric._epoch.setConfigurationNumber*
    name: setConfigurationNumber
    nameWithType: Epoch.setConfigurationNumber
    fullName: void system.fabric.Epoch.setConfigurationNumber
    package: system.fabric
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: system.fabric._epoch.hashCode*
    name: hashCode
    nameWithType: Epoch.hashCode
    fullName: int system.fabric.Epoch.hashCode
    package: system.fabric
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: system.fabric._epoch.equals*
    name: equals
    nameWithType: Epoch.equals
    fullName: boolean system.fabric.Epoch.equals
    package: system.fabric
  - uid: system.fabric._epoch.compareTo*
    name: compareTo
    nameWithType: Epoch.compareTo
    fullName: int system.fabric.Epoch.compareTo
    package: system.fabric
  - uid: system.fabric._epoch
    parent: system.fabric
    href: system.fabric._epoch.yml
    name: Epoch
    nameWithType: Epoch
    fullName: system.fabric.Epoch
    type: Class
    summary: "<p>Stellt die aktuelle Version der Service Fabric-Partition an. </p>\n<p>\r\n\r\n  <b>Hinweise:</b>ein <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> ist eine Konfiguration Zahl für die Partition als Ganzes. Beim Festlegen der Konfiguration des Replikats Änderungen, z. B., wenn das primäre Replikat ändert, werden die Vorgänge, die vom neuen primären Replikat repliziert werden als ein neues werden bezeichnet <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> aus, die von der alten primären Datenbank gesendet wurden. das Replikat ist. Die Tatsache, die dass das primäre geändert hat ist nicht direkt sichtbar auf sekundäre Replikate, die nicht durch einen Fehler in der Regel betroffen sind, die das ursprüngliche primäre Replikat betroffen. Um nachzuverfolgen, dass sich das primäre Replikat geändert wurde, an das sekundäre Replikat übertragen werden. Diese Kommunikation erfolgt über die <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync (system.fabric.Epoch, system.fabric.SequenceNumber, system.fabric.CancellationToken)</xref> Methode. Die meisten Dienste können die Details der inneren Felder ignorieren die <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> wie es in der Regel ausreichend ist zu wissen, dass die <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> wurde geändert und Epochs, um zu bestimmen, relative Reihenfolge der Vorgänge zu vergleichen und Ereignisse im System. Zu diesem Zweck sind Vergleichsoperationen bereitgestellt. </p>"
    syntax: *ref_1
  - uid: 'system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)'
    parent: system.fabric._state_provider
    href: system.fabric._state_provider.yml
    name: 'updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    nameWithType: 'StateProvider.updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    fullName: 'CompletableFuture<?> system.fabric.StateProvider.updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
    type: Method
    summary: "<p>Ein Replikat zeigt an, dass die Konfiguration einer Replikatgruppe aufgrund einer Änderung der geändert oder ändern, mit dem primären Replikat versucht. Die Änderung tritt aufgrund eines Fehlers oder Lastenausgleich des vorherigen primären Replikats. <xref uid=\"system.fabric._epoch\" data-throw-if-not-resolved=\"false\">Epoche</xref> Änderungen fungieren als ein Hindernis durch Segmentieren Vorgänge in die genaue Konfiguration Zeiträume, in dem sie von einem bestimmten primären Replikat gesendet wurden.</p>\n<p>\r\n\r\n  <b>Hinweise:</b>die Informationen in den <xref uid=\"system.fabric._state_provider.updateEpochAsync(Epoch,SequenceNumber,CancellationToken)\" data-throw-if-not-resolved=\"false\">system.fabric.StateProvider#updateEpochAsync (Epoche SequenceNumber, CancellationToken)</xref> -Methode ermöglicht dem Dienst um einen Vektor Status aufrecht eine Liste der einzelnen Epoche ist die das Replikat empfangen wurde, und die maximale LSN, die sie enthalten. Die Bearbeitung Vektordaten werden zusammen mit den aktuellen angewendeten maximale LSN eignet sich für ein sekundäres Replikat während des Kopiervorgangs zu senden, um den Status des Replikats zu beschreiben. Vergleichen von Fortschritt Vektoren, die während des Kopiervorgangs von sekundären Replikaten empfangen werden kann primäre Replikaten zu bestimmen, ob das sekundäre Replikat auf dem neuesten Stand ist, welchen Status an das sekundäre Replikat gesendet werden muss und gibt an, ob das sekundäre Replikat \"false\" Fortschritt erzielt hat. \"False\" Status bedeutet, dass ein sekundäres Replikat meldet wurde eine LSN in einer vorherigen Epoche größer als die LSN, die das primäre Replikat in seinen Fortschritt Vektor verfügt. </p>"
    syntax:
      content: 'public CompletableFuture<?> updateEpochAsync(Epoch epoch, SequenceNumber previousEpochLastSequenceNumber, CancellationToken cancellationToken)'
      parameters:
        - id: epoch
          type: system.fabric._epoch
          description: <p>Die neue <xref uid="system.fabric._epoch" data-throw-if-not-resolved="false">system.fabric.Epoch</xref>. </p>
        - id: previousEpochLastSequenceNumber
          type: system.fabric._sequence_number
          description: <p>Die maximale Sequenznummer (LSN) in der vorherigen Epoche. </p>
        - id: cancellationToken
          type: system.fabric._cancellation_token
          description: "<p>\r\n\r\n  <xref uid=\"system.fabric._cancellation_token\" data-throw-if-not-resolved=\"false\">system.fabric.CancellationToken</xref> Objekt, das den Status der Abbruch des Vorgangs anzugeben. </p>"
      return:
        type: 16409f84
        description: <p>Gibt <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref>. </p>