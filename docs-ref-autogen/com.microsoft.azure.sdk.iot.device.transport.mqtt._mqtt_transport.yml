### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    id: _mqtt_transport
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt
    children:
      - 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.addMessage(Message,IotHubEventCallback,Object)'
      - 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.addMessage(Message,IotHubResponseCallback,Object)'
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.close()
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.handleMessage()
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.handleMessageLock
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.invokeCallbacks()
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.isEmpty()
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.MqttTransport(DeviceClientConfig)
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.multiplexOpen(List<DeviceClient>)
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.open()
      - 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.sendMessages()
      - com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.sendMessagesLock
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    langs:
      - java
    name: MqttTransport
    nameWithType: MqttTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport
    type: Class
    source:
      remote: &ref_0
        path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransport.java
        branch: master
        repo: 'https://github.com/Azure/azure-iot-sdk-java'
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransport.java
      startLine: 29
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    summary: |-
      <p>Ein MQTT-Transport. Enthält Funktionen zum Hinzufügen von Nachrichten und Senden von Nachrichten im Batchmodus für einen IoT Hub. Puffer nicht gesendete Nachrichten, bis sie durch einen IoT Hub empfangen werden. Ein Transport bei der Erstellung gebunden ist, den folgenden Parametern: IoT Hub-Namen, Geräte-ID, Geräteschlüssel und Nachricht gültige Sekunden. </p>
      <p>Der Transport kann auch einen IoT Hub für Nachrichten abrufen und einen benutzerdefinierte Meldung Rückruf aufzurufen, wenn eine Nachricht und Rückruf gefunden wird. </p>
    syntax:
      content: public class MqttTransport implements IotHubTransport
    inheritance:
      - java.lang.Object
      - Closeable
      - com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.addMessage(Message,IotHubEventCallback,Object)'
    id: 'addMessage(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    langs:
      - java
    name: 'addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    nameWithType: 'MqttTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.addMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransport.java
      startLine: 139
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    summary: |-
      <p>Fügt eine Nachricht an die Warteschlange Transport.</p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p>Die zu sendende Meldung. </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: '<p>der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird. </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p>der Kontext übergeben werden, wenn der Rückruf aufgerufen wird.</p>'
    overridden: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubEventCallback,Object)'
    exceptions:
      - type: 12fe80de
        description: <p>Wenn der Transport nicht geöffnet wurde oder geschlossen wird </p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.addMessage(Message,IotHubResponseCallback,Object)'
    id: 'addMessage(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    langs:
      - java
    name: 'addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'MqttTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.addMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransport.java
      startLine: 172
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    summary: |-
      <p>Fügt eine Nachricht an die Warteschlange Transport. !!! Diese Funktionalität ist noch nicht unterstützt, Bitte verwenden Sie fehlerhaft sind.</p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p>Die zu sendende Meldung. </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: '<p>der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird. </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p>der Kontext übergeben werden, wenn der Rückruf aufgerufen wird.</p>'
    overridden: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubResponseCallback,Object)'
    exceptions:
      - type: b1c38b44
        description: <p>immer. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.close()
    id: close()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    langs:
      - java
    name: close()
    nameWithType: MqttTransport.close()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.close()
    overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.close*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransport.java
      startLine: 102
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    summary: "<p>Schließt alle Ressourcen, die zur Kommunikation mit IoT Hub verwendet. Einmal<code>close() \r\n\r\n    </code> wird aufgerufen, der Transport ist nicht mehr verwendbar. Wenn der Transport bereits geschlossen ist, wird die Funktion keine weiteren Aktionen erforderlich. </p>"
    syntax:
      content: public void close()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close()
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.handleMessage()
    id: handleMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    langs:
      - java
    name: handleMessage()
    nameWithType: MqttTransport.handleMessage()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.handleMessage()
    overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.handleMessage*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransport.java
      startLine: 290
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    summary: |-
      <p>Ruft den Nachrichtenrückruf auf jedes Mal, wenn eine Nachricht vom Server eingeht. reagiert auf den IoT Hub auf wie die verarbeitete Nachricht durch den IoT Hub behandelt werden sollen. </p>
      <p>Wenn keine Nachrichtenrückruf festgelegt ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>
      <p></p>
    syntax:
      content: public void handleMessage()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage()
    exceptions:
      - type: 12fe80de
        description: <p>Wenn der Transport nicht geöffnet wurde oder geschlossen wird. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.handleMessageLock
    id: handleMessageLock
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    langs:
      - java
    name: handleMessageLock
    nameWithType: MqttTransport.handleMessageLock
    fullName: final Object com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.handleMessageLock
    type: Field
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransport.java
      startLine: 33
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    syntax:
      content: protected final Object handleMessageLock= new Object()
      return:
        type: 1b60ba29
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.invokeCallbacks()
    id: invokeCallbacks()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    langs:
      - java
    name: invokeCallbacks()
    nameWithType: MqttTransport.invokeCallbacks()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.invokeCallbacks()
    overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.invokeCallbacks*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransport.java
      startLine: 253
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    summary: |-
      <p>Ruft die Rückrufe für alle abgeschlossenen Anforderungen.</p>
      <p></p>
    syntax:
      content: public void invokeCallbacks()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks()
    exceptions:
      - type: 12fe80de
        description: <p>Wenn der Transport nicht geöffnet wurde oder geschlossen wird. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.isEmpty()
    id: isEmpty()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    langs:
      - java
    name: isEmpty()
    nameWithType: MqttTransport.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.isEmpty()
    overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.isEmpty*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransport.java
      startLine: 354
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    summary: "<p>Gibt<code>true \r\n\r\n    </code> verfügt der Transport keine weiteren Nachrichten mehr verarbeiten, und<code>false \r\n\r\n    </code> andernfalls.</p>\n\n<p></p>"
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: "<p>\r\n\r\n  <code>true \r\n\r\n    </code>Wenn der Transport keine weiteren Nachrichten mehr verarbeiten, hat und<code>false \r\n\r\n    </code> andernfalls. </p>"
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty()
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.MqttTransport(DeviceClientConfig)
    id: MqttTransport(DeviceClientConfig)
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    langs:
      - java
    name: MqttTransport(DeviceClientConfig config)
    nameWithType: MqttTransport.MqttTransport(DeviceClientConfig config)
    fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.MqttTransport(DeviceClientConfig config)
    overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.MqttTransport*
    type: Constructor
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransport.java
      startLine: 57
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    summary: |-
      <p>Erstellt eine Instanz aus der angegebenen <xref uid="com.microsoft.azure.sdk.iot.device._device_client_config" data-throw-if-not-resolved="false">DeviceClientConfig</xref> Objekt.</p>
      <p></p>
    syntax:
      content: public MqttTransport(DeviceClientConfig config)
      parameters:
        - id: config
          type: com.microsoft.azure.sdk.iot.device._device_client_config
          description: <p>Konfigurationsparameter für die Verbindung. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.multiplexOpen(List<DeviceClient>)
    id: multiplexOpen(List<DeviceClient>)
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    langs:
      - java
    name: multiplexOpen(List<DeviceClient> deviceClientList)
    nameWithType: MqttTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.multiplexOpen*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransport.java
      startLine: 92
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    summary: |-
      <p>Stellt einen Kanal-Usingmultiplexing Kommunikation mit IoT Hub her. Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>
      <p></p>
    syntax:
      content: public void multiplexOpen(List<DeviceClient> deviceClientList)
      parameters:
        - id: deviceClientList
          type: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
          description: <p>die Liste der Clients verwenden denselben Transport. </p>
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.multiplexOpen(List<DeviceClient>)
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn ein Kommunikationskanal hergestellt werden kann. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.open()
    id: open()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    langs:
      - java
    name: open()
    nameWithType: MqttTransport.open()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.open()
    overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.open*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransport.java
      startLine: 75
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    summary: |-
      <p>Stellt einen Kommunikationskanal mit IoT Hub her. Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>
      <p></p>
    syntax:
      content: public void open()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open()
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn ein Kommunikationskanal hergestellt werden kann. </p>
  - uid: 'com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    id: 'registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    langs:
      - java
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'MqttTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.registerConnectionStateCallback*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransport.java
      startLine: 377
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    summary: |-
      <p>Registriert einen Rückruf ausgeführt werden, wenn die Verbindung Mqtt verloren geht oder hergestellt wird.</p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p>der Rückruf aufgerufen werden. </p>
        - id: callbackContext
          type: '79317049'
          description: "<p>Ein Kontext, der an den Rückruf übergeben werden. Kann <code>null \r\n\r\n    </code> Wenn kein Rückruf bereitgestellt wird. </p>"
    overridden: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    exceptions:
      - type: 3c87bd19
        description: <p>Wenn der Rückruf null ist. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.sendMessages()
    id: sendMessages()
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    langs:
      - java
    name: sendMessages()
    nameWithType: MqttTransport.sendMessages()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.sendMessages()
    overload: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.sendMessages*
    type: Method
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransport.java
      startLine: 192
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    summary: |-
      <p>Sendet alle Nachrichten in der Warteschlange Transport, jeweils einzeln an. Wenn eine vorherige Sendeversuch Fehler ist aufgetreten, versucht die Funktion, die Nachrichten in der vorherigen Versuch erneut zu senden. </p>
      <p>Wenn dieser nicht bereits erstellt wurde, wird die Funktion eine MQTT-Verbindung mit dem IoT Hub in der Konfiguration angegebene initialisieren.</p>
      <p></p>
    syntax:
      content: public void sendMessages()
    overridden: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages()
    exceptions:
      - type: 12fe80de
        description: <p>Wenn der Transport nicht geöffnet wurde oder geschlossen wird. </p>
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.sendMessagesLock
    id: sendMessagesLock
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.yml
    langs:
      - java
    name: sendMessagesLock
    nameWithType: MqttTransport.sendMessagesLock
    fullName: final Object com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.sendMessagesLock
    type: Field
    source:
      remote: *ref_0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttTransport.java
      startLine: 32
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
    summary: <p>Die Sperre für den MQTT-Verbindung. </p>
    syntax:
      content: protected final Object sendMessagesLock= new Object()
      return:
        type: 1b60ba29
references:
  - uid: 1b60ba29
    spec.java:
      - name: final Object
        fullName: final Object
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.MqttTransport*
    name: MqttTransport
    nameWithType: MqttTransport.MqttTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.MqttTransport
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.open*
    name: open
    nameWithType: MqttTransport.open
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.open
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  - uid: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
    spec.java:
      - name: List<
        fullName: List<
      - uid: com.microsoft.azure.sdk.iot.device._device_client
        name: DeviceClient
        fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
        href: com.microsoft.azure.sdk.iot.device._device_client.yml
      - name: '>'
        fullName: '>'
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.multiplexOpen*
    name: multiplexOpen
    nameWithType: MqttTransport.multiplexOpen
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.multiplexOpen
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.close*
    name: close
    nameWithType: MqttTransport.close
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.close
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  - uid: 12fe80de
    spec.java:
      - name: IllegalStateException
        fullName: IllegalStateException
  - uid: '79317049'
    spec.java:
      - name: Object
        fullName: Object
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.addMessage*
    name: addMessage
    nameWithType: MqttTransport.addMessage
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.addMessage
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  - uid: b1c38b44
    spec.java:
      - name: UnsupportedOperationException
        fullName: UnsupportedOperationException
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.sendMessages*
    name: sendMessages
    nameWithType: MqttTransport.sendMessages
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.sendMessages
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.invokeCallbacks*
    name: invokeCallbacks
    nameWithType: MqttTransport.invokeCallbacks
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.invokeCallbacks
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.handleMessage*
    name: handleMessage
    nameWithType: MqttTransport.handleMessage
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.handleMessage
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.isEmpty*
    name: isEmpty
    nameWithType: MqttTransport.isEmpty
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.isEmpty
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  - uid: 3c87bd19
    spec.java:
      - name: IllegalArgumentException
        fullName: IllegalArgumentException
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_transport.registerConnectionStateCallback*
    name: registerConnectionStateCallback
    nameWithType: MqttTransport.registerConnectionStateCallback
    fullName: void com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttTransport.registerConnectionStateCallback
    package: com.microsoft.azure.sdk.iot.device.transport.mqtt
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: IotHubTransport
    nameWithType: IotHubTransport
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubTransport
    type: Interface
    summary: <p>Eine Schnittstelle für einen IoT Hub-Transport. </p>
    syntax:
      content: public interface IotHubTransport
  - uid: com.microsoft.azure.sdk.iot.device.transport._state
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._state.yml
    name: State
    nameWithType: State
    fullName: com.microsoft.azure.sdk.iot.device.transport.State
    type: Enum
    syntax:
      content: public enum State
  - uid: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_iot_hub_connection
    parent: com.microsoft.azure.sdk.iot.device.transport.mqtt
    href: com.microsoft.azure.sdk.iot.device.transport.mqtt._mqtt_iot_hub_connection.yml
    name: MqttIotHubConnection
    nameWithType: MqttIotHubConnection
    fullName: com.microsoft.azure.sdk.iot.device.transport.mqtt.MqttIotHubConnection
    type: Class
    syntax:
      content: public class MqttIotHubConnection
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_outbound_packet.yml
    name: IotHubOutboundPacket
    nameWithType: IotHubOutboundPacket
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubOutboundPacket
    type: Class
    summary: <p>Ein Paket mit den Daten für einen IoT Hub-Transport zum Senden einer Nachricht erforderlich sind. </p>
    syntax:
      content: public class IotHubOutboundPacket
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_callback_packet
    parent: com.microsoft.azure.sdk.iot.device.transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_callback_packet.yml
    name: IotHubCallbackPacket
    nameWithType: IotHubCallbackPacket
    fullName: com.microsoft.azure.sdk.iot.device.transport.IotHubCallbackPacket
    type: Class
    summary: '<p>Ein Paket mit der erforderlichen Daten für einen IoT Hub-Transport, einen Rückruf aufzurufen. </p>'
    syntax:
      content: public class IotHubCallbackPacket
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback.yml
    name: IotHubConnectionStateCallback
    nameWithType: IotHubConnectionStateCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
    type: Interface
    summary: |-
      <p>Eine Schnittstelle für ein IoT Hub-Verbindung-Status-Rückruf.</p>
      <p>Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="" data-throw-if-not-resolved="false">IotHubConnectionStateCallback #Execute(IotHubConnectionState, Object)</xref> übergibt den Verbindungsstatus (nach unten, Erfolg usw.). </p>
    syntax:
      content: public interface IotHubConnectionStateCallback
  - uid: com.microsoft.azure.sdk.iot.device._device_client_config
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
    name: DeviceClientConfig
    nameWithType: DeviceClientConfig
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
    type: Class
    summary: <p>Konfigurationseinstellungen für einen IoT Hub-Client. Überprüft alle benutzerdefinierten Einstellungen an. </p>
    syntax:
      content: public class DeviceClientConfig
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.open()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: open()
    nameWithType: IotHubTransport.open()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.open()
    type: Method
    summary: |-
      <p>Stellt einen Kommunikationskanal mit IoT Hub her. Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>
      <p></p>
    syntax:
      content: public void open()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.multiplexOpen(List<DeviceClient>)
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: multiplexOpen(List<DeviceClient> deviceClientList)
    nameWithType: IotHubTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.multiplexOpen(List<DeviceClient> deviceClientList)
    type: Method
    summary: |-
      <p>Stellt einen Kanal-Usingmultiplexing Kommunikation mit IoT Hub her. Wenn ein Kanal bereits geöffnet ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>
      <p></p>
    syntax:
      content: public void multiplexOpen(List<DeviceClient> deviceClientList)
      parameters:
        - id: deviceClientList
          type: 5618da2dcom.microsoft.azure.sdk.iot.device._device_clienta08ddfce
          description: <p>die Liste der Clients verwenden denselben Transport. </p>
  - uid: com.microsoft.azure.sdk.iot.device._device_client
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._device_client.yml
    name: DeviceClient
    nameWithType: DeviceClient
    fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
    type: Class
    summary: |-
      <p>Die öffentliche API. Können ein einzelnes logisches oder physisches Gerät für die Verbindung an einen IoT Hub. Der IoT Hub-Client unterstützt sendet keine Ereignisse an und Empfangen von Nachrichten von einem IoT Hub. </p>
      <p>Zur Unterstützung dieser Workflows wird die Clientbibliothek Geben Sie die folgenden Abstraktionen: einer Nachricht mit seiner Nutzlast und die zugeordneten Eigenschaften aus. und einen Client, der Nachrichten sendet und empfängt. </p>
      <p>Der Client puffert Nachrichten, während das Netzwerk ausgefallen ist und erneut gesendet, wenn das Netzwerk wieder online geschaltet wird. Nachrichten zur Verbesserung der Kommunikationseffizienz (nur für HTTPS) als auch batches. </p>
      <p>Der Client unterstützt HTTPS 1.1 und 1.0 AMQPS Transporte. </p>
    syntax:
      content: public class DeviceClient
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.close()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: close()
    nameWithType: IotHubTransport.close()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.close()
    type: Method
    summary: "<p>Schließt alle Ressourcen, die zur Kommunikation mit IoT Hub verwendet. Einmal<code>close() \r\n\r\n    </code> wird aufgerufen, der Transport ist nicht mehr verwendbar. Wenn der Transport bereits geschlossen ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>\n\n<p></p>"
    syntax:
      content: public void close()
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubEventCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: 'addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p>Fügt eine Nachricht an die Warteschlange Transport.</p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubEventCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p>Die zu sendende Meldung. </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
          description: '<p>der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird. </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p>der Kontext übergeben werden, wenn der Rückruf aufgerufen wird. </p>'
  - uid: com.microsoft.azure.sdk.iot.device._message
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._message.yml
    name: Message
    nameWithType: Message
    fullName: com.microsoft.azure.sdk.iot.device.Message
    type: Class
    syntax:
      content: public class Message
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.yml
    name: IotHubEventCallback
    nameWithType: IotHubEventCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
    type: Interface
    summary: |-
      <p>Eine Schnittstelle für einen Ereignisrückruf IoT Hub.</p>
      <p>Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback #Execute(IotHubStatusCode, Object)</xref> beim Empfang einer Antwort von einem IoT Hub. </p>
    syntax:
      content: public interface IotHubEventCallback
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.addMessage(Message,IotHubResponseCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: 'addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p>Fügt eine Nachricht an die Warteschlange Transport.</p>
      <p></p>
    syntax:
      content: 'public void addMessage(Message message, IotHubResponseCallback callback, Object callbackContext)'
      parameters:
        - id: message
          type: com.microsoft.azure.sdk.iot.device._message
          description: <p>Die zu sendende Meldung. </p>
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
          description: '<p>der Rückruf aufgerufen, wenn eine Antwort für die Nachricht empfangen wird. </p>'
        - id: callbackContext
          type: '79317049'
          description: '<p>der Kontext übergeben werden, wenn der Rückruf aufgerufen wird. </p>'
  - uid: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback
    parent: com.microsoft.azure.sdk.iot.device
    href: com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.yml
    name: IotHubResponseCallback
    nameWithType: IotHubResponseCallback
    fullName: com.microsoft.azure.sdk.iot.device.IotHubResponseCallback
    type: Interface
    summary: |-
      <p>Eine Schnittstelle für ein IoT Hub-Antwort-Rückruf.</p>
      <p>Entwicklern werden erwartet, dass eine Implementierung dieser Schnittstelle zu erstellen und der Transport angerufen <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_response_callback.execute(ResponseMessage,Object)" data-throw-if-not-resolved="false">IotHubResponseCallback #Execute(ResponseMessage, Object)</xref> beim Empfang einer Antwort von einem IoT Hub. </p>
    syntax:
      content: public interface IotHubResponseCallback
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.sendMessages()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: sendMessages()
    nameWithType: IotHubTransport.sendMessages()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.sendMessages()
    type: Method
    summary: |-
      <p>Sendet alle Nachrichten in der Warteschlange Transport. Wenn eine vorherige Sendeversuch Fehler ist aufgetreten, versucht die Funktion, die Nachrichten in der vorherigen Versuch erneut zu senden.</p>
      <p></p>
    syntax:
      content: public void sendMessages()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.invokeCallbacks()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: invokeCallbacks()
    nameWithType: IotHubTransport.invokeCallbacks()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.invokeCallbacks()
    type: Method
    summary: <p>Ruft die Rückrufe für alle abgeschlossenen Anforderungen. </p>
    syntax:
      content: public void invokeCallbacks()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.handleMessage()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: handleMessage()
    nameWithType: IotHubTransport.handleMessage()
    fullName: void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.handleMessage()
    type: Method
    summary: |-
      <p>Ruft die Nachrichtenrückruf auf, wenn eine Nachricht gefunden wird, und antwortet mit dem IoT Hub auf wie die verarbeitete Nachricht durch den IoT Hub behandelt werden sollen. </p>
      <p>Wenn keine Nachrichtenrückruf festgelegt ist, wird die Funktion keine weiteren Aktionen erforderlich.</p>
      <p></p>
    syntax:
      content: public void handleMessage()
  - uid: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.isEmpty()
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: isEmpty()
    nameWithType: IotHubTransport.isEmpty()
    fullName: boolean com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.isEmpty()
    type: Method
    summary: "<p>Gibt<code>true \r\n\r\n    </code> verfügt der Transport keine weiteren Nachrichten mehr verarbeiten, und<code>false \r\n\r\n    </code> andernfalls.</p>\n\n<p></p>"
    syntax:
      content: public boolean isEmpty()
      return:
        type: 4fc6e284
        description: "<p>\r\n\r\n  <code>true \r\n\r\n    </code>Wenn der Transport keine weiteren Nachrichten mehr verarbeiten, hat und<code>false \r\n\r\n    </code> andernfalls. </p>"
  - uid: 'com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)'
    parent: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport
    href: com.microsoft.azure.sdk.iot.device.transport._iot_hub_transport.yml
    name: 'registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    nameWithType: 'IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    fullName: 'void com.microsoft.azure.sdk.iot.device.transport.IotHubTransport.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
    type: Method
    summary: |-
      <p>Registriert einen Rückruf ausgeführt werden, wenn die Verbindung mit dem IoT Hub verloren geht oder hergestellt wird.</p>
      <p></p>
    syntax:
      content: 'public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)'
      parameters:
        - id: callback
          type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
          description: <p>der Rückruf aufgerufen werden. </p>
        - id: callbackContext
          type: '79317049'
          description: "<p>Ein Kontext, der an den Rückruf übergeben werden. Kann <code>null \r\n\r\n    </code> Wenn kein Rückruf bereitgestellt wird. </p>"