### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.servicebus._message_session
    id: _message_session
    parent: com.microsoft.azure.servicebus
    children:
      - com.microsoft.azure.servicebus._message_session.getLockedUntilUtc()
      - com.microsoft.azure.servicebus._message_session.getRequestedSessionId()
      - com.microsoft.azure.servicebus._message_session.getSessionId()
      - com.microsoft.azure.servicebus._message_session.getState()
      - com.microsoft.azure.servicebus._message_session.getStateAsync()
      - com.microsoft.azure.servicebus._message_session.isBrowsableSession()
      - com.microsoft.azure.servicebus._message_session.isSessionReceiver()
      - com.microsoft.azure.servicebus._message_session.renewSessionLock()
      - com.microsoft.azure.servicebus._message_session.renewSessionLockAsync()
      - 'com.microsoft.azure.servicebus._message_session.setState(byte [])'
      - 'com.microsoft.azure.servicebus._message_session.setStateAsync(byte [])'
    href: com.microsoft.azure.servicebus._message_session.yml
    langs:
      - java
    name: MessageSession
    nameWithType: MessageSession
    fullName: com.microsoft.azure.servicebus.MessageSession
    type: Class
    source:
      remote: &ref_0
        path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageSession.java
        branch: master
        repo: 'https://github.com/Azure/azure-service-bus-java'
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageSession.java
      startLine: 16
    package: com.microsoft.azure.servicebus
    syntax:
      content: public class MessageSession implements IMessageSession
    inheritance:
      - java.lang.Object
      - com.microsoft.azure.servicebus.primitives._client_entity
      - com.microsoft.azure.servicebus.InitializableEntity
      - com.microsoft.azure.servicebus.MessageReceiver
    inheritedMembers:
      - com.microsoft.azure.servicebus._message_receiver.abandon(UUID)
      - 'com.microsoft.azure.servicebus._message_receiver.abandon(UUID,Map<String, Object>)'
      - com.microsoft.azure.servicebus._message_receiver.abandonAsync(UUID)
      - 'com.microsoft.azure.servicebus._message_receiver.abandonAsync(UUID,Map<String, Object>)'
      - 'com.microsoft.azure.servicebus.primitives._client_entity.ClientEntity(final String,final ClientEntity)'
      - com.microsoft.azure.servicebus.primitives._client_entity.close()
      - com.microsoft.azure.servicebus._i_closeable.close()
      - com.microsoft.azure.servicebus.primitives._client_entity.closeAsync()
      - com.microsoft.azure.servicebus._i_closeable.closeAsync()
      - com.microsoft.azure.servicebus._message_receiver.complete(UUID)
      - com.microsoft.azure.servicebus._message_receiver.completeAsync(UUID)
      - com.microsoft.azure.servicebus._message_receiver.deadLetter(UUID)
      - 'com.microsoft.azure.servicebus._message_receiver.deadLetter(UUID,Map<String, Object>)'
      - 'com.microsoft.azure.servicebus._message_receiver.deadLetter(UUID,String,String)'
      - 'com.microsoft.azure.servicebus._message_receiver.deadLetter(UUID,String,String,Map<String, Object>)'
      - com.microsoft.azure.servicebus._message_receiver.deadLetterAsync(UUID)
      - 'com.microsoft.azure.servicebus._message_receiver.deadLetterAsync(UUID,Map<String, Object>)'
      - 'com.microsoft.azure.servicebus._message_receiver.deadLetterAsync(UUID,String,String)'
      - 'com.microsoft.azure.servicebus._message_receiver.deadLetterAsync(UUID,String,String,Map<String, Object>)'
      - com.microsoft.azure.servicebus._message_receiver.defer(UUID)
      - 'com.microsoft.azure.servicebus._message_receiver.defer(UUID,Map<String, Object>)'
      - com.microsoft.azure.servicebus._message_receiver.deferAsync(UUID)
      - 'com.microsoft.azure.servicebus._message_receiver.deferAsync(UUID,Map<String, Object>)'
      - com.microsoft.azure.servicebus.primitives._client_entity.finalize()
      - com.microsoft.azure.servicebus.primitives._client_entity.getClientId()
      - com.microsoft.azure.servicebus._message_receiver.getEntityPath()
      - com.microsoft.azure.servicebus._message_receiver.getInternalReceiver()
      - com.microsoft.azure.servicebus.primitives._client_entity.getIsClosed()
      - com.microsoft.azure.servicebus.primitives._client_entity.getIsClosingOrClosed()
      - com.microsoft.azure.servicebus._message_receiver.getPrefetchCount()
      - com.microsoft.azure.servicebus._message_receiver.getReceiveMode()
      - 'com.microsoft.azure.servicebus._initializable_entity.InitializableEntity(String,ClientEntity)'
      - com.microsoft.azure.servicebus._message_receiver.onClose()
      - com.microsoft.azure.servicebus._message_receiver.peek()
      - com.microsoft.azure.servicebus._message_receiver.peek(long)
      - com.microsoft.azure.servicebus._message_receiver.peekAsync()
      - com.microsoft.azure.servicebus._message_receiver.peekAsync(long)
      - com.microsoft.azure.servicebus._message_receiver.peekBatch(int)
      - 'com.microsoft.azure.servicebus._message_receiver.peekBatch(long,int)'
      - com.microsoft.azure.servicebus._message_receiver.peekBatchAsync(int)
      - 'com.microsoft.azure.servicebus._message_receiver.peekBatchAsync(long,int)'
      - com.microsoft.azure.servicebus._message_receiver.receive()
      - com.microsoft.azure.servicebus._message_receiver.receive(Duration)
      - com.microsoft.azure.servicebus._message_receiver.receiveAsync()
      - com.microsoft.azure.servicebus._message_receiver.receiveAsync(Duration)
      - com.microsoft.azure.servicebus._message_receiver.receiveBatch(int)
      - 'com.microsoft.azure.servicebus._message_receiver.receiveBatch(int,Duration)'
      - com.microsoft.azure.servicebus._message_receiver.receiveBatchAsync(int)
      - 'com.microsoft.azure.servicebus._message_receiver.receiveBatchAsync(int,Duration)'
      - com.microsoft.azure.servicebus._message_receiver.receiveDeferredMessage(long)
      - com.microsoft.azure.servicebus._message_receiver.receiveDeferredMessageAsync(long)
      - com.microsoft.azure.servicebus._message_receiver.receiveDeferredMessageBatch(Collection<Long>)
      - com.microsoft.azure.servicebus._message_receiver.receiveDeferredMessageBatchAsync(Collection<Long>)
      - com.microsoft.azure.servicebus._message_receiver.renewMessageLock(IMessage)
      - com.microsoft.azure.servicebus._message_receiver.renewMessageLockAsync(IMessage)
      - com.microsoft.azure.servicebus._message_receiver.renewMessageLockBatch(Collection<? extends IMessage>)
      - com.microsoft.azure.servicebus._message_receiver.renewMessageLockBatchAsync(Collection<? extends IMessage>)
      - com.microsoft.azure.servicebus.primitives._client_entity.setClosed()
      - com.microsoft.azure.servicebus._message_receiver.setPrefetchCount(int)
      - com.microsoft.azure.servicebus.primitives._client_entity.throwIfClosed(Throwable)
  - uid: com.microsoft.azure.servicebus._message_session.getLockedUntilUtc()
    id: getLockedUntilUtc()
    parent: com.microsoft.azure.servicebus._message_session
    href: com.microsoft.azure.servicebus._message_session.yml
    langs:
      - java
    name: getLockedUntilUtc()
    nameWithType: MessageSession.getLockedUntilUtc()
    fullName: Instant com.microsoft.azure.servicebus.MessageSession.getLockedUntilUtc()
    overload: com.microsoft.azure.servicebus._message_session.getLockedUntilUtc*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageSession.java
      startLine: 45
    package: com.microsoft.azure.servicebus
    syntax:
      content: public Instant getLockedUntilUtc()
      return:
        type: 328f8254
        description: '<p><span data-ttu-id="1c6d1-101">Ruft die Zeit ab, die die identifizierte Sitzung <xref uid="com.microsoft.azure.servicebus._i_message_session.getSessionId()" data-throw-if-not-resolved="false">IMessageSession#getSessionId()</xref> erst f√ºr diesen Client gesperrt ist.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-101">Gets the time that the session identified by <xref uid="com.microsoft.azure.servicebus._i_message_session.getSessionId()" data-throw-if-not-resolved="false">IMessageSession#getSessionId()</xref> is locked until for this client.</span></span> </p>'
    overridden: com.microsoft.azure.servicebus._i_message_session.getLockedUntilUtc()
  - uid: com.microsoft.azure.servicebus._message_session.getRequestedSessionId()
    id: getRequestedSessionId()
    parent: com.microsoft.azure.servicebus._message_session
    href: com.microsoft.azure.servicebus._message_session.yml
    langs:
      - java
    name: getRequestedSessionId()
    nameWithType: MessageSession.getRequestedSessionId()
    fullName: String com.microsoft.azure.servicebus.MessageSession.getRequestedSessionId()
    overload: com.microsoft.azure.servicebus._message_session.getRequestedSessionId*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageSession.java
      startLine: 40
    package: com.microsoft.azure.servicebus
    syntax:
      content: protected String getRequestedSessionId()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.servicebus._message_session.getSessionId()
    id: getSessionId()
    parent: com.microsoft.azure.servicebus._message_session
    href: com.microsoft.azure.servicebus._message_session.yml
    langs:
      - java
    name: getSessionId()
    nameWithType: MessageSession.getSessionId()
    fullName: String com.microsoft.azure.servicebus.MessageSession.getSessionId()
    overload: com.microsoft.azure.servicebus._message_session.getSessionId*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageSession.java
      startLine: 80
    package: com.microsoft.azure.servicebus
    syntax:
      content: public String getSessionId()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="1c6d1-102">Ruft die SessionId ab.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-102">Gets the SessionId.</span></span> </p>
    overridden: com.microsoft.azure.servicebus._i_message_session.getSessionId()
  - uid: com.microsoft.azure.servicebus._message_session.getState()
    id: getState()
    parent: com.microsoft.azure.servicebus._message_session
    href: com.microsoft.azure.servicebus._message_session.yml
    langs:
      - java
    name: getState()
    nameWithType: MessageSession.getState()
    fullName: 'byte [] com.microsoft.azure.servicebus.MessageSession.getState()'
    overload: com.microsoft.azure.servicebus._message_session.getState*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageSession.java
      startLine: 70
    package: com.microsoft.azure.servicebus
    summary: |-
      <p><span data-ttu-id="1c6d1-103">Ruft den Sitzungsstatus ab.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-103">Gets the session state.</span></span></p>
      <p></p>
    syntax:
      content: 'public byte [] getState()'
      return:
        type: ccd9418d
        description: <p><span data-ttu-id="1c6d1-104">Der Sitzungsstatus</span><span class="sxs-lookup"><span data-stu-id="1c6d1-104">The session state</span></span> </p>
    overridden: com.microsoft.azure.servicebus._i_message_session.getState()
    exceptions:
      - type: 8256ba40
        description: <p><span data-ttu-id="1c6d1-105">Wenn der aktuelle Thread beim Warten unterbrochen wurde</span><span class="sxs-lookup"><span data-stu-id="1c6d1-105">if the current thread was interrupted while waiting</span></span> </p>
      - type: 73fec9fb
        description: <p><span data-ttu-id="1c6d1-106">Wenn Zustand Fehler abzurufen.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-106">if get state failed.</span></span> </p>
  - uid: com.microsoft.azure.servicebus._message_session.getStateAsync()
    id: getStateAsync()
    parent: com.microsoft.azure.servicebus._message_session
    href: com.microsoft.azure.servicebus._message_session.yml
    langs:
      - java
    name: getStateAsync()
    nameWithType: MessageSession.getStateAsync()
    fullName: 'CompletableFuture<byte[]> com.microsoft.azure.servicebus.MessageSession.getStateAsync()'
    overload: com.microsoft.azure.servicebus._message_session.getStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageSession.java
      startLine: 75
    package: com.microsoft.azure.servicebus
    summary: <p><span data-ttu-id="1c6d1-107">Ruft asynchron den Sitzungsstatus ab.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-107">Asynchronously gets the session state.</span></span> </p>
    syntax:
      content: 'public CompletableFuture<byte[]> getStateAsync()'
      return:
        type: 5fe2dfa4
        description: '<p><span data-ttu-id="1c6d1-108">eine CompletableFuture, die den Status abrufen ausstehenden Sitzungs darstellt.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-108">a CompletableFuture representing the pending session state retrieving.</span></span> </p>'
    overridden: com.microsoft.azure.servicebus._i_message_session.getStateAsync()
    see:
      - type: com.microsoft.azure.servicebus._i_message_session.getState()
        description: '<span data-ttu-id="1c6d1-109">IMessageSession::getState</span><span class="sxs-lookup"><span data-stu-id="1c6d1-109">IMessageSession::getState</span></span>'
  - uid: com.microsoft.azure.servicebus._message_session.isBrowsableSession()
    id: isBrowsableSession()
    parent: com.microsoft.azure.servicebus._message_session
    href: com.microsoft.azure.servicebus._message_session.yml
    langs:
      - java
    name: isBrowsableSession()
    nameWithType: MessageSession.isBrowsableSession()
    fullName: boolean com.microsoft.azure.servicebus.MessageSession.isBrowsableSession()
    overload: com.microsoft.azure.servicebus._message_session.isBrowsableSession*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageSession.java
      startLine: 35
    package: com.microsoft.azure.servicebus
    syntax:
      content: protected boolean isBrowsableSession()
      return:
        type: 4fc6e284
  - uid: com.microsoft.azure.servicebus._message_session.isSessionReceiver()
    id: isSessionReceiver()
    parent: com.microsoft.azure.servicebus._message_session
    href: com.microsoft.azure.servicebus._message_session.yml
    langs:
      - java
    name: isSessionReceiver()
    nameWithType: MessageSession.isSessionReceiver()
    fullName: final boolean com.microsoft.azure.servicebus.MessageSession.isSessionReceiver()
    overload: com.microsoft.azure.servicebus._message_session.isSessionReceiver*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageSession.java
      startLine: 30
    package: com.microsoft.azure.servicebus
    syntax:
      content: protected final boolean isSessionReceiver()
      return:
        type: 4dda0764
  - uid: com.microsoft.azure.servicebus._message_session.renewSessionLock()
    id: renewSessionLock()
    parent: com.microsoft.azure.servicebus._message_session
    href: com.microsoft.azure.servicebus._message_session.yml
    langs:
      - java
    name: renewSessionLock()
    nameWithType: MessageSession.renewSessionLock()
    fullName: void com.microsoft.azure.servicebus.MessageSession.renewSessionLock()
    overload: com.microsoft.azure.servicebus._message_session.renewSessionLock*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageSession.java
      startLine: 50
    package: com.microsoft.azure.servicebus
    summary: |-
      <p><span data-ttu-id="1c6d1-110">Erneuert die Sperre f√ºr die Sitzung, die gem√§√ü der <xref uid="com.microsoft.azure.servicebus._i_message_session.getSessionId()" data-throw-if-not-resolved="false">IMessageSession#getSessionId()</xref>.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-110">Renews the lock on the session specified by the <xref uid="com.microsoft.azure.servicebus._i_message_session.getSessionId()" data-throw-if-not-resolved="false">IMessageSession#getSessionId()</xref>.</span></span> <span data-ttu-id="1c6d1-111">Die Sperre wird basierend auf der Einstellung f√ºr die Entit√§t angegeben erneuert werden.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-111">The lock will be renewed based on the setting specified on the entity.</span></span> </p>
      <p><span data-ttu-id="1c6d1-112">Wenn Sie eine Sitzung annehmen, wird die Sitzung w√§hrend der Erstellung der Warteschlange/Abonnement f√ºr diese Clientinstanz vom Dienst f√ºr eine Dauer entsprechend den Angaben gesperrt.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-112">When you accept a session, the session is locked for this client instance by the service for a duration as specified during the Queue/Subscription creation.</span></span> <span data-ttu-id="1c6d1-113">Wenn l√§nger als diese Dauer der Sitzung Verarbeitung erforderlich ist, muss die Sitzung-Sperre erneuert werden.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-113">If processing of the session requires longer than this duration, the session-lock needs to be renewed.</span></span> <span data-ttu-id="1c6d1-114">Bei jeder Verl√§ngerung wird die Sitzung-Sperre durch die Entit√§t LockDuration erneuert.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-114">For each renewal, the session-lock is renewed by the entity's LockDuration.</span></span> </p>
      <p><span data-ttu-id="1c6d1-115">Erneuerung der Sitzung werden alle Nachrichten in der Sitzung auch erneuert.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-115">Renewal of session renews all the messages in the session as well.</span></span> <span data-ttu-id="1c6d1-116">Jede einzelne Nachricht muss nicht erneuert werden.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-116">Each individual message need not be renewed.</span></span></p>
      <p></p>
    syntax:
      content: public void renewSessionLock()
    overridden: com.microsoft.azure.servicebus._i_message_session.renewSessionLock()
    exceptions:
      - type: 8256ba40
        description: <p><span data-ttu-id="1c6d1-117">Wenn der aktuelle Thread beim Warten unterbrochen wurde</span><span class="sxs-lookup"><span data-stu-id="1c6d1-117">if the current thread was interrupted while waiting</span></span> </p>
      - type: 73fec9fb
        description: <p><span data-ttu-id="1c6d1-118">Wenn die Renew fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-118">if the renew failed.</span></span> </p>
  - uid: com.microsoft.azure.servicebus._message_session.renewSessionLockAsync()
    id: renewSessionLockAsync()
    parent: com.microsoft.azure.servicebus._message_session
    href: com.microsoft.azure.servicebus._message_session.yml
    langs:
      - java
    name: renewSessionLockAsync()
    nameWithType: MessageSession.renewSessionLockAsync()
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.MessageSession.renewSessionLockAsync()
    overload: com.microsoft.azure.servicebus._message_session.renewSessionLockAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageSession.java
      startLine: 55
    package: com.microsoft.azure.servicebus
    summary: |-
      <p><span data-ttu-id="1c6d1-119">Erneuert die Sperre f√ºr die Sitzung, die gem√§√ü der <xref uid="com.microsoft.azure.servicebus._i_message_session.getSessionId()" data-throw-if-not-resolved="false">IMessageSession#getSessionId()</xref>.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-119">Renews the lock on the session specified by the <xref uid="com.microsoft.azure.servicebus._i_message_session.getSessionId()" data-throw-if-not-resolved="false">IMessageSession#getSessionId()</xref>.</span></span> <span data-ttu-id="1c6d1-120">Die Sperre wird basierend auf der Einstellung f√ºr die Entit√§t angegeben erneuert werden.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-120">The lock will be renewed based on the setting specified on the entity.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> renewSessionLockAsync()
      return:
        type: db03ee24
        description: '<p><span data-ttu-id="1c6d1-121">eine CompletableFuture, ausstehende erneuern darstellt.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-121">a CompletableFuture representing the pending renew.</span></span> </p>'
    overridden: com.microsoft.azure.servicebus._i_message_session.renewSessionLockAsync()
    see:
      - type: com.microsoft.azure.servicebus._i_message_session.renewSessionLock()
        description: '<span data-ttu-id="1c6d1-122">IMessageSession::renewSessionLock()</span><span class="sxs-lookup"><span data-stu-id="1c6d1-122">IMessageSession::renewSessionLock()</span></span>'
  - uid: 'com.microsoft.azure.servicebus._message_session.setState(byte [])'
    id: 'setState(byte [])'
    parent: com.microsoft.azure.servicebus._message_session
    href: com.microsoft.azure.servicebus._message_session.yml
    langs:
      - java
    name: 'setState(byte[] sessionState)'
    nameWithType: 'MessageSession.setState(byte[] sessionState)'
    fullName: 'void com.microsoft.azure.servicebus.MessageSession.setState(byte[] sessionState)'
    overload: com.microsoft.azure.servicebus._message_session.setState*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageSession.java
      startLine: 60
    package: com.microsoft.azure.servicebus
    summary: |-
      <p><span data-ttu-id="1c6d1-123">Legen Sie einen benutzerdefinierten Zustand f√ºr die Sitzung mit einem sp√§teren Zeitpunkt abgerufen werden kann <xref uid="com.microsoft.azure.servicebus._i_message_session.getState()" data-throw-if-not-resolved="false">IMessageSession#getState()</xref>.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-123">Set a custom state on the session which can be later retrieved using <xref uid="com.microsoft.azure.servicebus._i_message_session.getState()" data-throw-if-not-resolved="false">IMessageSession#getState()</xref>.</span></span></p>
      <p></p>
    syntax:
      content: 'public void setState(byte[] sessionState)'
      parameters:
        - id: state
          type: ccd9418d
          description: <p><span data-ttu-id="1c6d1-124">der Sitzungsstatus.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-124">The session state.</span></span> </p>
    overridden: 'com.microsoft.azure.servicebus._i_message_session.setState(byte [])'
    exceptions:
      - type: 8256ba40
        description: <p><span data-ttu-id="1c6d1-125">Wenn der aktuelle Thread beim Warten unterbrochen wurde</span><span class="sxs-lookup"><span data-stu-id="1c6d1-125">if the current thread was interrupted while waiting</span></span> </p>
      - type: 73fec9fb
        description: <p><span data-ttu-id="1c6d1-126">Wenn der Satz Status fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-126">if the set state failed.</span></span> </p>
  - uid: 'com.microsoft.azure.servicebus._message_session.setStateAsync(byte [])'
    id: 'setStateAsync(byte [])'
    parent: com.microsoft.azure.servicebus._message_session
    href: com.microsoft.azure.servicebus._message_session.yml
    langs:
      - java
    name: 'setStateAsync(byte[] sessionState)'
    nameWithType: 'MessageSession.setStateAsync(byte[] sessionState)'
    fullName: 'CompletableFuture<Void> com.microsoft.azure.servicebus.MessageSession.setStateAsync(byte[] sessionState)'
    overload: com.microsoft.azure.servicebus._message_session.setStateAsync*
    type: Method
    source:
      remote: *ref_0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/MessageSession.java
      startLine: 65
    package: com.microsoft.azure.servicebus
    summary: |-
      <p><span data-ttu-id="1c6d1-127">Legen Sie einen benutzerdefinierten Zustand asynchron in der Sitzung mit einem sp√§teren Zeitpunkt abgerufen werden kann <xref uid="com.microsoft.azure.servicebus._i_message_session.getState()" data-throw-if-not-resolved="false">IMessageSession#getState()</xref>.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-127">Asynchronously set a custom state on the session which can be later retrieved using <xref uid="com.microsoft.azure.servicebus._i_message_session.getState()" data-throw-if-not-resolved="false">IMessageSession#getState()</xref>.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Void> setStateAsync(byte[] sessionState)'
      parameters:
        - id: state
          type: ccd9418d
          description: <p><span data-ttu-id="1c6d1-128">der Sitzungsstatus.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-128">The session state.</span></span> </p>
      return:
        type: db03ee24
        description: '<p><span data-ttu-id="1c6d1-129">eine CompletableFuture, die die ausstehenden Status sitzungseinstellung darstellt.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-129">a CompletableFuture representing the pending session state setting.</span></span> </p>'
    overridden: 'com.microsoft.azure.servicebus._i_message_session.setStateAsync(byte [])'
    see:
      - type: 'com.microsoft.azure.servicebus._i_message_session.setState(byte [])'
        description: '<span data-ttu-id="1c6d1-130">IMessageSession::setState</span><span class="sxs-lookup"><span data-stu-id="1c6d1-130">IMessageSession::setState</span></span>'
references:
  - uid: 4dda0764
    spec.java:
      - name: final boolean
        fullName: final boolean
  - uid: com.microsoft.azure.servicebus._message_session.isSessionReceiver*
    name: isSessionReceiver
    nameWithType: MessageSession.isSessionReceiver
    fullName: final boolean com.microsoft.azure.servicebus.MessageSession.isSessionReceiver
    package: com.microsoft.azure.servicebus
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.servicebus._message_session.isBrowsableSession*
    name: isBrowsableSession
    nameWithType: MessageSession.isBrowsableSession
    fullName: boolean com.microsoft.azure.servicebus.MessageSession.isBrowsableSession
    package: com.microsoft.azure.servicebus
  - uid: '26831127'
    spec.java:
      - name: String
        fullName: String
  - uid: com.microsoft.azure.servicebus._message_session.getRequestedSessionId*
    name: getRequestedSessionId
    nameWithType: MessageSession.getRequestedSessionId
    fullName: String com.microsoft.azure.servicebus.MessageSession.getRequestedSessionId
    package: com.microsoft.azure.servicebus
  - uid: 328f8254
    spec.java:
      - name: Instant
        fullName: Instant
  - uid: com.microsoft.azure.servicebus._message_session.getLockedUntilUtc*
    name: getLockedUntilUtc
    nameWithType: MessageSession.getLockedUntilUtc
    fullName: Instant com.microsoft.azure.servicebus.MessageSession.getLockedUntilUtc
    package: com.microsoft.azure.servicebus
  - uid: 8256ba40
    spec.java:
      - name: InterruptedException
        fullName: InterruptedException
  - uid: 73fec9fb
    spec.java:
      - name: ServiceBusException
        fullName: ServiceBusException
  - uid: com.microsoft.azure.servicebus._message_session.renewSessionLock*
    name: renewSessionLock
    nameWithType: MessageSession.renewSessionLock
    fullName: void com.microsoft.azure.servicebus.MessageSession.renewSessionLock
    package: com.microsoft.azure.servicebus
  - uid: db03ee24
    spec.java:
      - name: CompletableFuture<Void>
        fullName: CompletableFuture<Void>
  - uid: com.microsoft.azure.servicebus._message_session.renewSessionLockAsync*
    name: renewSessionLockAsync
    nameWithType: MessageSession.renewSessionLockAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.MessageSession.renewSessionLockAsync
    package: com.microsoft.azure.servicebus
  - uid: ccd9418d
    spec.java:
      - name: 'byte []'
        fullName: 'byte []'
  - uid: com.microsoft.azure.servicebus._message_session.setState*
    name: setState
    nameWithType: MessageSession.setState
    fullName: void com.microsoft.azure.servicebus.MessageSession.setState
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._message_session.setStateAsync*
    name: setStateAsync
    nameWithType: MessageSession.setStateAsync
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.MessageSession.setStateAsync
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._message_session.getState*
    name: getState
    nameWithType: MessageSession.getState
    fullName: 'byte [] com.microsoft.azure.servicebus.MessageSession.getState'
    package: com.microsoft.azure.servicebus
  - uid: 5fe2dfa4
    spec.java:
      - name: 'CompletableFuture<byte[]>'
        fullName: 'CompletableFuture<byte[]>'
  - uid: com.microsoft.azure.servicebus._message_session.getStateAsync*
    name: getStateAsync
    nameWithType: MessageSession.getStateAsync
    fullName: 'CompletableFuture<byte[]> com.microsoft.azure.servicebus.MessageSession.getStateAsync'
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._message_session.getSessionId*
    name: getSessionId
    nameWithType: MessageSession.getSessionId
    fullName: String com.microsoft.azure.servicebus.MessageSession.getSessionId
    package: com.microsoft.azure.servicebus
  - uid: com.microsoft.azure.servicebus._message_receiver.abandon(UUID)
  - uid: 'com.microsoft.azure.servicebus._message_receiver.abandon(UUID,Map<String, Object>)'
  - uid: com.microsoft.azure.servicebus._message_receiver.abandonAsync(UUID)
  - uid: 'com.microsoft.azure.servicebus._message_receiver.abandonAsync(UUID,Map<String, Object>)'
  - uid: 'com.microsoft.azure.servicebus.primitives._client_entity.ClientEntity(final String,final ClientEntity)'
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: 'ClientEntity(final String clientId, final ClientEntity parent)'
    nameWithType: 'ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)'
    fullName: 'com.microsoft.azure.servicebus.primitives.ClientEntity.ClientEntity(final String clientId, final ClientEntity parent)'
    type: Constructor
    syntax:
      content: 'protected ClientEntity(final String clientId, final ClientEntity parent)'
      parameters:
        - id: clientId
          type: 3d93591e
        - id: parent
          type: 93de0ef9com.microsoft.azure.servicebus.primitives._client_entity
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.close()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: close()
    nameWithType: ClientEntity.close()
    fullName: final void com.microsoft.azure.servicebus.primitives.ClientEntity.close()
    type: Method
    syntax:
      content: public final void close()
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.servicebus._i_closeable.close()
    parent: com.microsoft.azure.servicebus._i_closeable
    href: com.microsoft.azure.servicebus._i_closeable.yml
    name: close()
    nameWithType: ICloseable.close()
    fullName: void com.microsoft.azure.servicebus.ICloseable.close()
    type: Method
    summary: '<p><span data-ttu-id="1c6d1-131">Synchron wird geschlossen, und gibt diesem Objekt zugeordneten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-131">Synchronously closes and disposes any resources associated with this object.</span></span> <span data-ttu-id="1c6d1-132">Beim Aufrufen dieser Methode entspricht der aufrufen.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-132">Calling this method is equivalent of calling .</span></span> <span data-ttu-id="1c6d1-133">Diese Methode blockiert, bis diese wird das Objekt geschlossen.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-133">This method blocks until this object is closed.</span></span> </p>'
    syntax:
      content: public void close()
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.closeAsync()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: closeAsync()
    nameWithType: ClientEntity.closeAsync()
    fullName: final CompletableFuture<Void> com.microsoft.azure.servicebus.primitives.ClientEntity.closeAsync()
    type: Method
    syntax:
      content: public final CompletableFuture<Void> closeAsync()
      return:
        type: fc984e6f
  - uid: com.microsoft.azure.servicebus._i_closeable.closeAsync()
    parent: com.microsoft.azure.servicebus._i_closeable
    href: com.microsoft.azure.servicebus._i_closeable.yml
    name: closeAsync()
    nameWithType: ICloseable.closeAsync()
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.ICloseable.closeAsync()
    type: Method
    summary: '<p><span data-ttu-id="1c6d1-134">Wird geschlossen, und gibt diesem Objekt zugeordneten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-134">Closes and disposes any resources associated with this object.</span></span> <span data-ttu-id="1c6d1-135">Ein Objekt kann nicht verwendet werden, nachdem sie geschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-135">An object cannot be used after it is closed.</span></span> <span data-ttu-id="1c6d1-136">Dies ist eine asynchrone Methode, die eine CompletableFuture wird sofort zur√ºckgegeben.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-136">This is an asynchronous method that returns a CompletableFuture immediately.</span></span> <span data-ttu-id="1c6d1-137">Dieses Objekt wird vollst√§ndig beendet, wenn die zur√ºckgegebene CompletableFuture abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-137">This object is completely closed when the returned CompletableFuture is completed.</span></span> </p>'
    syntax:
      content: public CompletableFuture<Void> closeAsync()
      return:
        type: db03ee24
        description: '<p><span data-ttu-id="1c6d1-138">eine CompletableFuture, die das Schlie√üen des dieses Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-138">a CompletableFuture representing the closing of this object.</span></span> </p>'
  - uid: com.microsoft.azure.servicebus._message_receiver.complete(UUID)
  - uid: com.microsoft.azure.servicebus._message_receiver.completeAsync(UUID)
  - uid: com.microsoft.azure.servicebus._message_receiver.deadLetter(UUID)
  - uid: 'com.microsoft.azure.servicebus._message_receiver.deadLetter(UUID,Map<String, Object>)'
  - uid: 'com.microsoft.azure.servicebus._message_receiver.deadLetter(UUID,String,String)'
  - uid: 'com.microsoft.azure.servicebus._message_receiver.deadLetter(UUID,String,String,Map<String, Object>)'
  - uid: com.microsoft.azure.servicebus._message_receiver.deadLetterAsync(UUID)
  - uid: 'com.microsoft.azure.servicebus._message_receiver.deadLetterAsync(UUID,Map<String, Object>)'
  - uid: 'com.microsoft.azure.servicebus._message_receiver.deadLetterAsync(UUID,String,String)'
  - uid: 'com.microsoft.azure.servicebus._message_receiver.deadLetterAsync(UUID,String,String,Map<String, Object>)'
  - uid: com.microsoft.azure.servicebus._message_receiver.defer(UUID)
  - uid: 'com.microsoft.azure.servicebus._message_receiver.defer(UUID,Map<String, Object>)'
  - uid: com.microsoft.azure.servicebus._message_receiver.deferAsync(UUID)
  - uid: 'com.microsoft.azure.servicebus._message_receiver.deferAsync(UUID,Map<String, Object>)'
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.finalize()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: finalize()
    nameWithType: ClientEntity.finalize()
    fullName: void com.microsoft.azure.servicebus.primitives.ClientEntity.finalize()
    type: Method
    syntax:
      content: protected void finalize()
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.getClientId()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: getClientId()
    nameWithType: ClientEntity.getClientId()
    fullName: String com.microsoft.azure.servicebus.primitives.ClientEntity.getClientId()
    type: Method
    syntax:
      content: public String getClientId()
      return:
        type: '26831127'
  - uid: com.microsoft.azure.servicebus._message_receiver.getEntityPath()
  - uid: com.microsoft.azure.servicebus._message_receiver.getInternalReceiver()
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.getIsClosed()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: getIsClosed()
    nameWithType: ClientEntity.getIsClosed()
    fullName: boolean com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosed()
    type: Method
    syntax:
      content: protected boolean getIsClosed()
      return:
        type: 4fc6e284
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.getIsClosingOrClosed()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: getIsClosingOrClosed()
    nameWithType: ClientEntity.getIsClosingOrClosed()
    fullName: boolean com.microsoft.azure.servicebus.primitives.ClientEntity.getIsClosingOrClosed()
    type: Method
    syntax:
      content: protected boolean getIsClosingOrClosed()
      return:
        type: 4fc6e284
  - uid: com.microsoft.azure.servicebus._message_receiver.getPrefetchCount()
  - uid: com.microsoft.azure.servicebus._message_receiver.getReceiveMode()
  - uid: 'com.microsoft.azure.servicebus._initializable_entity.InitializableEntity(String,ClientEntity)'
  - uid: com.microsoft.azure.servicebus._message_receiver.onClose()
  - uid: com.microsoft.azure.servicebus._message_receiver.peek()
  - uid: com.microsoft.azure.servicebus._message_receiver.peek(long)
  - uid: com.microsoft.azure.servicebus._message_receiver.peekAsync()
  - uid: com.microsoft.azure.servicebus._message_receiver.peekAsync(long)
  - uid: com.microsoft.azure.servicebus._message_receiver.peekBatch(int)
  - uid: 'com.microsoft.azure.servicebus._message_receiver.peekBatch(long,int)'
  - uid: com.microsoft.azure.servicebus._message_receiver.peekBatchAsync(int)
  - uid: 'com.microsoft.azure.servicebus._message_receiver.peekBatchAsync(long,int)'
  - uid: com.microsoft.azure.servicebus._message_receiver.receive()
  - uid: com.microsoft.azure.servicebus._message_receiver.receive(Duration)
  - uid: com.microsoft.azure.servicebus._message_receiver.receiveAsync()
  - uid: com.microsoft.azure.servicebus._message_receiver.receiveAsync(Duration)
  - uid: com.microsoft.azure.servicebus._message_receiver.receiveBatch(int)
  - uid: 'com.microsoft.azure.servicebus._message_receiver.receiveBatch(int,Duration)'
  - uid: com.microsoft.azure.servicebus._message_receiver.receiveBatchAsync(int)
  - uid: 'com.microsoft.azure.servicebus._message_receiver.receiveBatchAsync(int,Duration)'
  - uid: com.microsoft.azure.servicebus._message_receiver.receiveDeferredMessage(long)
  - uid: com.microsoft.azure.servicebus._message_receiver.receiveDeferredMessageAsync(long)
  - uid: com.microsoft.azure.servicebus._message_receiver.receiveDeferredMessageBatch(Collection<Long>)
  - uid: com.microsoft.azure.servicebus._message_receiver.receiveDeferredMessageBatchAsync(Collection<Long>)
  - uid: com.microsoft.azure.servicebus._message_receiver.renewMessageLock(IMessage)
  - uid: com.microsoft.azure.servicebus._message_receiver.renewMessageLockAsync(IMessage)
  - uid: com.microsoft.azure.servicebus._message_receiver.renewMessageLockBatch(Collection<? extends IMessage>)
  - uid: com.microsoft.azure.servicebus._message_receiver.renewMessageLockBatchAsync(Collection<? extends IMessage>)
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.setClosed()
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: setClosed()
    nameWithType: ClientEntity.setClosed()
    fullName: final void com.microsoft.azure.servicebus.primitives.ClientEntity.setClosed()
    type: Method
    syntax:
      content: protected final void setClosed()
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.servicebus._message_receiver.setPrefetchCount(int)
  - uid: com.microsoft.azure.servicebus.primitives._client_entity.throwIfClosed(Throwable)
    parent: com.microsoft.azure.servicebus.primitives._client_entity
    href: com.microsoft.azure.servicebus.primitives._client_entity.yml
    name: throwIfClosed(Throwable cause)
    nameWithType: ClientEntity.throwIfClosed(Throwable cause)
    fullName: final void com.microsoft.azure.servicebus.primitives.ClientEntity.throwIfClosed(Throwable cause)
    type: Method
    syntax:
      content: protected final void throwIfClosed(Throwable cause)
      parameters:
        - id: cause
          type: a04fafd7
      return:
        type: 3f6357ce
  - uid: com.microsoft.azure.servicebus._i_message_session
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._i_message_session.yml
    name: IMessageSession
    nameWithType: IMessageSession
    fullName: com.microsoft.azure.servicebus.IMessageSession
    type: Interface
    summary: |-
      <p><span data-ttu-id="1c6d1-139">Beschreibt ein Sitzungsobjekt.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-139">Describes a Session object.</span></span> <span data-ttu-id="1c6d1-140"><xref uid="com.microsoft.azure.servicebus._i_message_session" data-throw-if-not-resolved="false">IMessageSession</xref> kann zum Ausf√ºhren von Vorg√§ngen f√ºr Sitzungen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-140"><xref uid="com.microsoft.azure.servicebus._i_message_session" data-throw-if-not-resolved="false">IMessageSession</xref> can be used to perform operations on sessions.</span></span> </p>
      <p><span data-ttu-id="1c6d1-141">Service Bus-Sitzungen, so genannte "Gruppen" in das Protokoll AMQP 1.0 sind ungebundenen Ereignisfolgen zusammengeh√∂riger Nachrichten.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-141">Service Bus Sessions, also called 'Groups' in the AMQP 1.0 protocol, are unbounded sequences of related messages.</span></span> <span data-ttu-id="1c6d1-142">Service Bus garantiert die Reihenfolge der Nachrichten in einer Sitzung.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-142">ServiceBus guarantees ordering of messages in a session.</span></span> </p>
      <p><span data-ttu-id="1c6d1-143">Beliebiger Sender erstellen Sie eine Sitzung beim Senden von Nachrichten in einer Warteschlange oder ein Thema durch Festlegen der <xref uid="" data-throw-if-not-resolved="false">Nachricht #sessionId</xref> Eigenschaft auf <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Nachricht</xref> zu einer Anwendung definierter Eindeutiger Bezeichner.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-143">Any sender can create a session when submitting messages into a Topic or Queue by setting the <xref uid="" data-throw-if-not-resolved="false">Message#sessionId</xref> property on <xref uid="com.microsoft.azure.servicebus._message" data-throw-if-not-resolved="false">Message</xref> to some application defined unique identifier.</span></span> <span data-ttu-id="1c6d1-144">Auf der Protokollebene AMQP 1.0 wird dieser Wert auf die Gruppen-Id-Eigenschaft zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-144">At the AMQP 1.0 protocol level, this value maps to the group-id property.</span></span> </p>
      <p><span data-ttu-id="1c6d1-145">Sitzungen sind vorhanden, wenn mindestens eine Nachricht mit der Sitzung SessionId in die Warteschlange oder ein Thema Abonnement vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-145">Sessions come into existence when there is at least one message with the session's SessionId in the Queue or Topic subscription.</span></span> <span data-ttu-id="1c6d1-146">Sobald eine Sitzung vorhanden ist, gibt es keine definierten Moment oder einer Geste f√ºr, wenn die Sitzung abl√§uft, oder wird nicht mehr angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-146">Once a Session exists, there is no defined moment or gesture for when the session expires or disappears.</span></span> </p>
    syntax:
      content: public interface IMessageSession extends IMessageReceiver
  - uid: com.microsoft.azure.servicebus._browsable_message_session
  - uid: com.microsoft.azure.servicebus.primitives._connection_string_builder
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._connection_string_builder.yml
    name: ConnectionStringBuilder
    nameWithType: ConnectionStringBuilder
    fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
    type: Class
    summary: |-
      <p><span data-ttu-id="1c6d1-147">Diese Klasse kann verwendet werden, um eine Verbindungszeichenfolge erstellen. diese Kommunikation mit Service Bus-Entit√§ten herstellen k√∂nnen.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-147">This class can be used to construct a connection string which can establish communication with ServiceBus entities.</span></span> <span data-ttu-id="1c6d1-148">Sie k√∂nnen auch die grundlegende Validierung auf eine vorhandene Verbindungszeichenfolge verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-148">It can also be used to perform basic validation on an existing connection string.</span></span> </p>
      <p><span data-ttu-id="1c6d1-149">Beispielcode:</span><span class="sxs-lookup"><span data-stu-id="1c6d1-149">Sample Code:</span></span> <pre><code>ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder(

                                                   "ServiceBusNamespaceName", 

                                                   "ServiceBusEntityName", // QueueName or TopicName or SubscriptionPath

                                                   "SharedAccessSignatureKeyName", 

                                                   "SharedAccessSignatureKey");

           

          String connectionString = connectionStringBuilder.toString();

          </code></pre></p>

      <p><span data-ttu-id="1c6d1-150">Eine Verbindungszeichenfolge ist im Grunde eine Zeichenfolge von Schl√ºssel-Wert-Paar senkrechter umfasste ";".</span><span class="sxs-lookup"><span data-stu-id="1c6d1-150">A connection string is basically a string consisted of key-value pair separated by ";".</span></span> <span data-ttu-id="1c6d1-151">Grundlegende Format ist {{ &lt;} Schl√ºssel {&gt;} = { &lt;} Wert {&gt;} [; {} &lt;} Schl√ºssel {&gt;} = { &lt;} Wert {&gt;}]}, in denen unterst√ºtzten Schl√ºsselname lautet wie folgt:<itemizedlist><listitem></span><span class="sxs-lookup"><span data-stu-id="1c6d1-151">Basic format is {{ &lt;}key{&gt;}={ &lt;}value{&gt;}[;{ &lt;}key{&gt;}={ &lt;}value{&gt;}]} where supported key name are as follow: <itemizedlist><listitem></span></span><p><span data-ttu-id="1c6d1-152">Endpunkt - URL, an den Service Bus-Namespace verweist.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-152">Endpoint - URL that points to the servicebus namespace</span></span> </p></listitem><listitem><p><span data-ttu-id="1c6d1-153">EntityPath - Pfad zu der Servicebus-Entit√§t (Warteschlange/Thema/Abonnement /).</span><span class="sxs-lookup"><span data-stu-id="1c6d1-153">EntityPath - Path to the service bus entity (queue/topic/subscription/).</span></span> <span data-ttu-id="1c6d1-154">F√ºr Warteschlangen und Themen ist es nur die Namen der Entit√§t.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-154">For queues and topics, it is just the entity name.</span></span> <span data-ttu-id="1c6d1-155">F√ºr Abonnements Pfad ist &lt;Name_des_themas&gt;/Subscriptions /&lt;SubscriptionName&gt;</span><span class="sxs-lookup"><span data-stu-id="1c6d1-155">For subscriptions, path is &lt;topicName&gt;/subscriptions/&lt;subscriptionName&gt;</span></span> </p></listitem><listitem><p><span data-ttu-id="1c6d1-156">SharedAccessKeyName - Key-Name auf den entsprechenden freigegebenen Zugriffsrichtlinie f√ºr den Namespace oder Entit√§t.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-156">SharedAccessKeyName - Key name to the corresponding shared access policy rule for the namespace, or entity.</span></span> </p></listitem><listitem><p><span data-ttu-id="1c6d1-157">SharedAccessKey - Schl√ºssel-Wert f√ºr die entsprechenden SAS-Richtlinienregel des Namespace oder der Entit√§t.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-157">SharedAccessKey - Key value for the corresponding shared access policy rule of the namespace or entity.</span></span> </p></listitem><listitem><p><span data-ttu-id="1c6d1-158">SharedAccessSignatureToken - k√∂nnen anstelle einer Schl√ºsselnamen und einen Schl√ºsselwert, Clients eine bereits generierte SAS-Token bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-158">SharedAccessSignatureToken - Instead of a key name and key value, clients can provide an already generated SAS Token.</span></span> </p></listitem><listitem><p><span data-ttu-id="1c6d1-159">OperationTimeout - Standardtimeout f√ºr alle Absender, Empf√§nger und Clients, die aus dieser Verbindungszeichenfolge erstellte verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-159">OperationTimeout - Default timeout to be used for all senders, receiver and clients created from this connection string.</span></span> </p></listitem><listitem><p><span data-ttu-id="1c6d1-160"><xref uid="com.microsoft.azure.servicebus.primitives._retry_policy" data-throw-if-not-resolved="false">Die RetryPolicy</xref> - Name der Richtlinie versuchen Sie es erneut.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-160"><xref uid="com.microsoft.azure.servicebus.primitives._retry_policy" data-throw-if-not-resolved="false">RetryPolicy</xref> - Name of the retry policy.</span></span> </p></listitem></itemizedlist></p>
    syntax:
      content: public class ConnectionStringBuilder
  - uid: com.microsoft.azure.servicebus._receive_mode
    parent: com.microsoft.azure.servicebus
    href: com.microsoft.azure.servicebus._receive_mode.yml
    name: ReceiveMode
    nameWithType: ReceiveMode
    fullName: com.microsoft.azure.servicebus.ReceiveMode
    type: Enum
    summary: |-
      <p><span data-ttu-id="1c6d1-161">Enumeration zur Darstellung der beiden empfangsmodi, Azure Service Bus unterst√ºtzt.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-161">Enumeration to represent the two receive modes Azure Service Bus supports.</span></span></p>
      <p></p>
    syntax:
      content: public enum ReceiveMode
  - uid: com.microsoft.azure.servicebus.primitives._messaging_factory
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._messaging_factory.yml
    name: MessagingFactory
    nameWithType: MessagingFactory
    fullName: com.microsoft.azure.servicebus.primitives.MessagingFactory
    type: Class
    summary: '<p><span data-ttu-id="1c6d1-162">Abstrahiert alle AMQP im Zusammenhang details und kapselt eine AMQP-Verbindung und zum Verwalten des Lebenszyklus der Reihe nach.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-162">Abstracts all AMQP related details and encapsulates an AMQP connection and manages its life cycle.</span></span> <span data-ttu-id="1c6d1-163">Jede Instanz dieser Klasse stellen eine AMQP-Verbindung mit dem Namespace dar.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-163">Each instance of this class represent one AMQP connection to the namespace.</span></span> <span data-ttu-id="1c6d1-164">Wenn eine Anwendung mehrere Absender, Empf√§nger oder Clients, die mithilfe der gleichen MessagingFacotry-Instanz erstellt, gemeinsam alle diese Absender, Empf√§nger oder Clients die Verbindung mit dem Namespace.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-164">If an application creates multiple senders, receivers or clients using the same MessagingFacotry instance, all those senders, receivers or clients will share the same connection to the namespace.</span></span> </p>'
    syntax:
      content: public class MessagingFactory
  - uid: com.microsoft.azure.servicebus._i_message_session.getLockedUntilUtc()
    parent: com.microsoft.azure.servicebus._i_message_session
    href: com.microsoft.azure.servicebus._i_message_session.yml
    name: getLockedUntilUtc()
    nameWithType: IMessageSession.getLockedUntilUtc()
    fullName: Instant com.microsoft.azure.servicebus.IMessageSession.getLockedUntilUtc()
    type: Method
    syntax:
      content: public Instant getLockedUntilUtc()
      return:
        type: 328f8254
        description: '<p><span data-ttu-id="1c6d1-165">Ruft die Zeit ab, die die identifizierte Sitzung <xref uid="com.microsoft.azure.servicebus._i_message_session.getSessionId()" data-throw-if-not-resolved="false">IMessageSession#getSessionId()</xref> erst f√ºr diesen Client gesperrt ist.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-165">Gets the time that the session identified by <xref uid="com.microsoft.azure.servicebus._i_message_session.getSessionId()" data-throw-if-not-resolved="false">IMessageSession#getSessionId()</xref> is locked until for this client.</span></span> </p>'
  - uid: com.microsoft.azure.servicebus._i_message_session.getSessionId()
    parent: com.microsoft.azure.servicebus._i_message_session
    href: com.microsoft.azure.servicebus._i_message_session.yml
    name: getSessionId()
    nameWithType: IMessageSession.getSessionId()
    fullName: String com.microsoft.azure.servicebus.IMessageSession.getSessionId()
    type: Method
    syntax:
      content: public String getSessionId()
      return:
        type: '26831127'
        description: <p><span data-ttu-id="1c6d1-166">Ruft die SessionId ab.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-166">Gets the SessionId.</span></span> </p>
  - uid: com.microsoft.azure.servicebus._i_message_session.renewSessionLock()
    parent: com.microsoft.azure.servicebus._i_message_session
    href: com.microsoft.azure.servicebus._i_message_session.yml
    name: renewSessionLock()
    nameWithType: IMessageSession.renewSessionLock()
    fullName: void com.microsoft.azure.servicebus.IMessageSession.renewSessionLock()
    type: Method
    summary: |-
      <p><span data-ttu-id="1c6d1-167">Erneuert die Sperre f√ºr die Sitzung, die gem√§√ü der <xref uid="com.microsoft.azure.servicebus._i_message_session.getSessionId()" data-throw-if-not-resolved="false">IMessageSession#getSessionId()</xref>.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-167">Renews the lock on the session specified by the <xref uid="com.microsoft.azure.servicebus._i_message_session.getSessionId()" data-throw-if-not-resolved="false">IMessageSession#getSessionId()</xref>.</span></span> <span data-ttu-id="1c6d1-168">Die Sperre wird basierend auf der Einstellung f√ºr die Entit√§t angegeben erneuert werden.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-168">The lock will be renewed based on the setting specified on the entity.</span></span> </p>
      <p><span data-ttu-id="1c6d1-169">Wenn Sie eine Sitzung annehmen, wird die Sitzung w√§hrend der Erstellung der Warteschlange/Abonnement f√ºr diese Clientinstanz vom Dienst f√ºr eine Dauer entsprechend den Angaben gesperrt.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-169">When you accept a session, the session is locked for this client instance by the service for a duration as specified during the Queue/Subscription creation.</span></span> <span data-ttu-id="1c6d1-170">Wenn l√§nger als diese Dauer der Sitzung Verarbeitung erforderlich ist, muss die Sitzung-Sperre erneuert werden.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-170">If processing of the session requires longer than this duration, the session-lock needs to be renewed.</span></span> <span data-ttu-id="1c6d1-171">Bei jeder Verl√§ngerung wird die Sitzung-Sperre durch die Entit√§t LockDuration erneuert.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-171">For each renewal, the session-lock is renewed by the entity's LockDuration.</span></span> </p>
      <p><span data-ttu-id="1c6d1-172">Erneuerung der Sitzung werden alle Nachrichten in der Sitzung auch erneuert.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-172">Renewal of session renews all the messages in the session as well.</span></span> <span data-ttu-id="1c6d1-173">Jede einzelne Nachricht muss nicht erneuert werden.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-173">Each individual message need not be renewed.</span></span></p>
      <p></p>
    syntax:
      content: public void renewSessionLock()
  - uid: com.microsoft.azure.servicebus.primitives._service_bus_exception
    parent: com.microsoft.azure.servicebus.primitives
    href: com.microsoft.azure.servicebus.primitives._service_bus_exception.yml
    name: ServiceBusException
    nameWithType: ServiceBusException
    fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
    type: Class
    summary: '<p><span data-ttu-id="1c6d1-174">Dies ist die Basis-Ausnahme, die f√ºr alle Fehlerf√§lle Servicebus generiert wird.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-174">This is the base exception that service bus will generate for all error cases.</span></span> </p>'
    syntax:
      content: public class ServiceBusException
  - uid: com.microsoft.azure.servicebus._i_message_session.renewSessionLockAsync()
    parent: com.microsoft.azure.servicebus._i_message_session
    href: com.microsoft.azure.servicebus._i_message_session.yml
    name: renewSessionLockAsync()
    nameWithType: IMessageSession.renewSessionLockAsync()
    fullName: CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSession.renewSessionLockAsync()
    type: Method
    summary: |-
      <p><span data-ttu-id="1c6d1-175">Erneuert die Sperre f√ºr die Sitzung, die gem√§√ü der <xref uid="com.microsoft.azure.servicebus._i_message_session.getSessionId()" data-throw-if-not-resolved="false">IMessageSession#getSessionId()</xref>.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-175">Renews the lock on the session specified by the <xref uid="com.microsoft.azure.servicebus._i_message_session.getSessionId()" data-throw-if-not-resolved="false">IMessageSession#getSessionId()</xref>.</span></span> <span data-ttu-id="1c6d1-176">Die Sperre wird basierend auf der Einstellung f√ºr die Entit√§t angegeben erneuert werden.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-176">The lock will be renewed based on the setting specified on the entity.</span></span></p>
      <p></p>
    syntax:
      content: public CompletableFuture<Void> renewSessionLockAsync()
      return:
        type: db03ee24
        description: '<p><span data-ttu-id="1c6d1-177">eine CompletableFuture, ausstehende erneuern darstellt.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-177">a CompletableFuture representing the pending renew.</span></span> </p>'
  - uid: 'com.microsoft.azure.servicebus._i_message_session.setState(byte [])'
    parent: com.microsoft.azure.servicebus._i_message_session
    href: com.microsoft.azure.servicebus._i_message_session.yml
    name: 'setState(byte[] state)'
    nameWithType: 'IMessageSession.setState(byte[] state)'
    fullName: 'void com.microsoft.azure.servicebus.IMessageSession.setState(byte[] state)'
    type: Method
    summary: |-
      <p><span data-ttu-id="1c6d1-178">Legen Sie einen benutzerdefinierten Zustand f√ºr die Sitzung mit einem sp√§teren Zeitpunkt abgerufen werden kann <xref uid="com.microsoft.azure.servicebus._i_message_session.getState()" data-throw-if-not-resolved="false">IMessageSession#getState()</xref>.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-178">Set a custom state on the session which can be later retrieved using <xref uid="com.microsoft.azure.servicebus._i_message_session.getState()" data-throw-if-not-resolved="false">IMessageSession#getState()</xref>.</span></span></p>
      <p></p>
    syntax:
      content: 'public void setState(byte[] state)'
      parameters:
        - id: state
          type: ccd9418d
          description: <p><span data-ttu-id="1c6d1-179">der Sitzungsstatus.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-179">The session state.</span></span> </p>
  - uid: com.microsoft.azure.servicebus._i_message_session.getState()
    parent: com.microsoft.azure.servicebus._i_message_session
    href: com.microsoft.azure.servicebus._i_message_session.yml
    name: getState()
    nameWithType: IMessageSession.getState()
    fullName: 'byte [] com.microsoft.azure.servicebus.IMessageSession.getState()'
    type: Method
    summary: |-
      <p><span data-ttu-id="1c6d1-180">Ruft den Sitzungsstatus ab.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-180">Gets the session state.</span></span></p>
      <p></p>
    syntax:
      content: 'public byte [] getState()'
      return:
        type: ccd9418d
        description: <p><span data-ttu-id="1c6d1-181">Der Sitzungsstatus</span><span class="sxs-lookup"><span data-stu-id="1c6d1-181">The session state</span></span> </p>
  - uid: 'com.microsoft.azure.servicebus._i_message_session.setStateAsync(byte [])'
    parent: com.microsoft.azure.servicebus._i_message_session
    href: com.microsoft.azure.servicebus._i_message_session.yml
    name: 'setStateAsync(byte[] state)'
    nameWithType: 'IMessageSession.setStateAsync(byte[] state)'
    fullName: 'CompletableFuture<Void> com.microsoft.azure.servicebus.IMessageSession.setStateAsync(byte[] state)'
    type: Method
    summary: |-
      <p><span data-ttu-id="1c6d1-182">Legen Sie einen benutzerdefinierten Zustand asynchron in der Sitzung mit einem sp√§teren Zeitpunkt abgerufen werden kann <xref uid="com.microsoft.azure.servicebus._i_message_session.getState()" data-throw-if-not-resolved="false">IMessageSession#getState()</xref>.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-182">Asynchronously set a custom state on the session which can be later retrieved using <xref uid="com.microsoft.azure.servicebus._i_message_session.getState()" data-throw-if-not-resolved="false">IMessageSession#getState()</xref>.</span></span></p>
      <p></p>
    syntax:
      content: 'public CompletableFuture<Void> setStateAsync(byte[] state)'
      parameters:
        - id: state
          type: ccd9418d
          description: <p><span data-ttu-id="1c6d1-183">der Sitzungsstatus.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-183">The session state.</span></span> </p>
      return:
        type: db03ee24
        description: '<p><span data-ttu-id="1c6d1-184">eine CompletableFuture, die die ausstehenden Status sitzungseinstellung darstellt.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-184">a CompletableFuture representing the pending session state setting.</span></span> </p>'
  - uid: com.microsoft.azure.servicebus._i_message_session.getStateAsync()
    parent: com.microsoft.azure.servicebus._i_message_session
    href: com.microsoft.azure.servicebus._i_message_session.yml
    name: getStateAsync()
    nameWithType: IMessageSession.getStateAsync()
    fullName: 'CompletableFuture<byte[]> com.microsoft.azure.servicebus.IMessageSession.getStateAsync()'
    type: Method
    summary: <p><span data-ttu-id="1c6d1-185">Ruft asynchron den Sitzungsstatus ab.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-185">Asynchronously gets the session state.</span></span> </p>
    syntax:
      content: 'public CompletableFuture<byte[]> getStateAsync()'
      return:
        type: 5fe2dfa4
        description: '<p><span data-ttu-id="1c6d1-186">eine CompletableFuture, die den Status abrufen ausstehenden Sitzungs darstellt.</span><span class="sxs-lookup"><span data-stu-id="1c6d1-186">a CompletableFuture representing the pending session state retrieving.</span></span> </p>'