### YamlMime:ManagedReference
items:
  - uid: com.microsoft.azure.storage.file._file_input_stream
    id: _file_input_stream
    parent: com.microsoft.azure.storage.file
    children:
      - com.microsoft.azure.storage.file._file_input_stream.available()
      - com.microsoft.azure.storage.file._file_input_stream.close()
      - 'com.microsoft.azure.storage.file._file_input_stream.FileInputStream(final CloudFile,final AccessCondition,final FileRequestOptions,final OperationContext)'
      - com.microsoft.azure.storage.file._file_input_stream.mark(final int)
      - com.microsoft.azure.storage.file._file_input_stream.markSupported()
      - com.microsoft.azure.storage.file._file_input_stream.read()
      - 'com.microsoft.azure.storage.file._file_input_stream.read(final byte [])'
      - 'com.microsoft.azure.storage.file._file_input_stream.read(final byte [],final int,final int)'
      - com.microsoft.azure.storage.file._file_input_stream.reset()
      - com.microsoft.azure.storage.file._file_input_stream.skip(final long)
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: FileInputStream
    nameWithType: FileInputStream
    fullName: com.microsoft.azure.storage.file.FileInputStream
    type: Class
    source:
      remote: &ref_0
        path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
        branch: master
        repo: 'https://github.com/Azure/azure-storage-java'
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 37
    package: com.microsoft.azure.storage.file
    summary: <p>Stellt einen Eingabedatenstrom zum Lesen einer Ressource für die angegebene Datei. </p>
    syntax: &ref_1
      content: public class FileInputStream
    inheritance:
      - java.lang.Object
      - InputStream
  - uid: com.microsoft.azure.storage.file._file_input_stream.available()
    id: available()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: available()
    nameWithType: FileInputStream.available()
    fullName: synchronized int com.microsoft.azure.storage.file.FileInputStream.available()
    overload: com.microsoft.azure.storage.file._file_input_stream.available*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 197
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>Eine Schätzung der Anzahl von Bytes, die gelesen oder werden kann (übersprungen) zurück ohne blockierende durch den nächsten Aufruf einer Methode für diesen Eingabedatenstrom dieser Eingabestream. Der nächste Aufruf möglicherweise im gleichen Thread oder einem anderen Thread. Eine einzelne Lese- oder Überspringen von viele Bytes nicht blockieren, aber möglicherweise lesen oder weniger Bytes zu überspringen.</p>
      <p></p>
    syntax:
      content: public synchronized int available()
      return:
        type: 3d3ee726
        description: '<p>Eine <code>int</code> die eine Schätzung der Anzahl von Bytes, die gelesen (oder übersprungen) werden aus diesen Eingabedatenstrom ohne zu blockieren, oder 0 darstellt, wenn das Ende des Eingabestreams erreicht.</p>'
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn ein e/a-Fehler auftritt. </p>
  - uid: com.microsoft.azure.storage.file._file_input_stream.close()
    id: close()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: close()
    nameWithType: FileInputStream.close()
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.close()
    overload: com.microsoft.azure.storage.file._file_input_stream.close*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 221
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>Schließt diesen Eingabedatenstrom und gibt alle dem Stream zugeordneten Systemressourcen frei.</p>
      <p></p>
    syntax:
      content: public synchronized void close()
      return:
        type: 5c0b90ca
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn ein e/a-Fehler auftritt. </p>
  - uid: 'com.microsoft.azure.storage.file._file_input_stream.FileInputStream(final CloudFile,final AccessCondition,final FileRequestOptions,final OperationContext)'
    id: 'FileInputStream(final CloudFile,final AccessCondition,final FileRequestOptions,final OperationContext)'
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: 'FileInputStream(final CloudFile parentFile, final AccessCondition accessCondition, final FileRequestOptions options, final OperationContext opContext)'
    nameWithType: 'FileInputStream.FileInputStream(final CloudFile parentFile, final AccessCondition accessCondition, final FileRequestOptions options, final OperationContext opContext)'
    fullName: 'com.microsoft.azure.storage.file.FileInputStream.FileInputStream(final CloudFile parentFile, final AccessCondition accessCondition, final FileRequestOptions options, final OperationContext opContext)'
    overload: com.microsoft.azure.storage.file._file_input_stream.FileInputStream*
    type: Constructor
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 140
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>Initialisiert eine neue Instanz der dem <xref uid="com.microsoft.azure.storage.file._file_input_stream" data-throw-if-not-resolved="false">FileInputStream</xref> Klasse.</p>
      <p></p>
    syntax:
      content: 'protected FileInputStream(final CloudFile parentFile, final AccessCondition accessCondition, final FileRequestOptions options, final OperationContext opContext)'
      parameters:
        - id: parentFile
          type: 93de0ef9com.microsoft.azure.storage.file._cloud_file
          description: '<p>Ein <xref uid="com.microsoft.azure.storage.file._cloud_file" data-throw-if-not-resolved="false">CloudFile</xref> Objekt, das die Datei darstellt, die in diesem Datenstrom zugeordnet ist. </p>'
        - id: accessCondition
          type: 93de0ef9com.microsoft.azure.storage._access_condition
          description: '<p>Ein <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> Objekt, das die zugriffsbedingungen für die Datei darstellt. </p>'
        - id: options
          type: 93de0ef9com.microsoft.azure.storage.file._file_request_options
          description: '<p>Ein <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> Objekt dar, der angibt, zusätzlichen Optionen für die Anforderung. </p>'
        - id: opContext
          type: 93de0ef9com.microsoft.azure.storage._operation_context
          description: '<p>Ein <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> Objekt, das verwendet wird, um die Ausführung des Vorgangs nachzuverfolgen.</p>'
    exceptions:
      - type: com.microsoft.azure.storage._storage_exception
        description: '<p>Eine Ausnahme, die alle Fehler während des Vorgangs eingetreten darstellt. </p>'
  - uid: com.microsoft.azure.storage.file._file_input_stream.mark(final int)
    id: mark(final int)
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: mark(final int readlimit)
    nameWithType: FileInputStream.mark(final int readlimit)
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.mark(final int readlimit)
    overload: com.microsoft.azure.storage.file._file_input_stream.mark*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 272
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>Markiert die aktuelle Position in diesen Eingabedatenstrom. Ein nachfolgender Aufruf von der Reset-Methode positioniert diesen Datenstrom an der Position des letzten markiert, damit nachfolgende Lesevorgänge erneut die gleichen Bytes gelesen.</p>
      <p></p>
    syntax:
      content: public synchronized void mark(final int readlimit)
      parameters:
        - id: readlimit
          type: cd225469
          description: '<p>Ein <code>int</code> der darstellt, dass der maximalen Anzahl von Bytes, die gelesen werden können, bevor die Markierung Position ungültig wird. </p>'
      return:
        type: 5c0b90ca
  - uid: com.microsoft.azure.storage.file._file_input_stream.markSupported()
    id: markSupported()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: markSupported()
    nameWithType: FileInputStream.markSupported()
    fullName: boolean com.microsoft.azure.storage.file.FileInputStream.markSupported()
    overload: com.microsoft.azure.storage.file._file_input_stream.markSupported*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 286
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>Testet, ob es sich bei diesen Eingabedatenstrom markieren und Reset-Methoden unterstützt. Markieren und zurücksetzen, und zwar unabhängig davon, ob unterstützt werden, ist eine invariante Eigenschaft einer bestimmten Eingabedatenstrom-Instanz. Die Methode MarkSupported <xref uid="" data-throw-if-not-resolved="false">InputStream</xref> "false" zurückgegeben.</p>
      <p></p>
    syntax:
      content: public boolean markSupported()
      return:
        type: 4fc6e284
        description: "<p>\r\n\r\n  <code>True</code>Wenn diese datenstrominstanz markieren und Reset-Methoden unterstützt. <code>False</code> andernfalls. </p>"
  - uid: com.microsoft.azure.storage.file._file_input_stream.read()
    id: read()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: read()
    nameWithType: FileInputStream.read()
    fullName: int com.microsoft.azure.storage.file.FileInputStream.read()
    overload: com.microsoft.azure.storage.file._file_input_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 303
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>Liest das nächste Byte der Daten aus dem Eingabestream. Das Byte mit dem Wert wird als ein "Int" im Bereich von 0 bis 255 zurückgegeben. Wenn keine Byte verfügbar ist, da das Ende des Streams erreicht wurde, wird der Wert-1 zurückgegeben. Diese Methode blockiert, bis die Eingabedaten verfügbar ist, werden das Ende des Streams wird erkannt, oder eine Ausnahme ausgelöst.</p>
      <p></p>
    syntax: &ref_2
      content: public int read()
      return:
        type: f75371fa
        description: '<p>Ein <code>int</code> stellt dar, die Gesamtanzahl der Bytes in den Puffer oder -1, lesen, wenn keine Daten mehr vorhanden ist, da das Ende des Streams erreicht wurde.</p>'
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn ein e/a-Fehler auftritt. </p>
  - uid: 'com.microsoft.azure.storage.file._file_input_stream.read(final byte [])'
    id: 'read(final byte [])'
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: 'read(final byte[] b)'
    nameWithType: 'FileInputStream.read(final byte[] b)'
    fullName: 'int com.microsoft.azure.storage.file.FileInputStream.read(final byte[] b)'
    overload: com.microsoft.azure.storage.file._file_input_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 346
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>Liest eine Anzahl von Bytes aus dem Eingabestream und speichert sie in den Pufferarray. Die Anzahl der tatsächlich gelesenen Bytes wird als eine ganze Zahl zurückgegeben. Diese Methode blockiert, bis die Eingabedaten verfügbar ist, werden Ende der Datei erkannt wird, oder eine Ausnahme ausgelöst. Wenn die Länge 0 (null) ist, werden keine Bytes gelesen, und 0 zurückgegeben; Andernfalls ist beim Lesen von mindestens 1 Byte. Wenn keine Byte verfügbar ist, da der Stream am ist das Ende der Datei den Wert-1 zurückgegeben. Andernfalls ist mindestens ein Byte gelesen und in gespeichert.</p>
      <p>Das erste gelesene Byte wird in das Element, das nächste Element an usw. gespeichert. Die Anzahl der gelesenen Bytes ist, darf höchstens, gleich der Länge. Lassen Sie die Anzahl der tatsächlich gelesenen Bytes sein. Diese Bytes werden in Elementen, die über diesen Bericht gespeichert verlassen von Elementen durch nicht betroffen.</p>
      <p>Das  </p>
      <p></p>
      <p></p>
    syntax:
      content: 'public int read(final byte[] b)'
      parameters:
        - id: b
          type: f549433f
      return:
        type: f75371fa
  - uid: 'com.microsoft.azure.storage.file._file_input_stream.read(final byte [],final int,final int)'
    id: 'read(final byte [],final int,final int)'
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: 'read(final byte[] b, final int off, final int len)'
    nameWithType: 'FileInputStream.read(final byte[] b, final int off, final int len)'
    fullName: 'int com.microsoft.azure.storage.file.FileInputStream.read(final byte[] b, final int off, final int len)'
    overload: com.microsoft.azure.storage.file._file_input_stream.read*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 399
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>Liest bis zum Bytes an Daten aus dem Eingabestream in ein Array von Bytes. Es wird versucht, lesen Sie beliebig viele Bytes, aber eine geringere Anzahl gelesen werden kann. Die Anzahl der tatsächlich gelesenen Bytes wird als eine ganze Zahl zurückgegeben. Diese Methode blockiert, bis die Eingabedaten verfügbar ist, werden Ende der Datei erkannt wird, oder eine Ausnahme ausgelöst.</p>
      <p>Wenn NULL ist, dann werden keine Bytes gelesen, und 0 zurückgegeben. Andernfalls ist beim Lesen von mindestens 1 Byte. Ende der Datei, die den Wert-1 wird zurückgegeben, wenn keine Byte verfügbar ist, da der Stream am ist; Andernfalls ist mindestens ein Byte gelesen und in gespeichert.</p>
      <p>Das erste gelesene Byte wird in das Element, das nächste Element an usw. gespeichert. Die Anzahl der Bytes gelesen wird, darf höchstens, gleich. Lassen Sie die Anzahl der tatsächlich gelesenen Bytes sein. Diese Bytes werden in Elementen, die über diesen Bericht gespeichert verlassen von Elementen durch nicht betroffen.</p>
      <p>In jedem Fall sind die Elemente durch und Elementen durch nicht betroffen.</p>
      <p>Die Methode für die Klasse <xref uid="" data-throw-if-not-resolved="false">InputStream</xref> ruft einfach die Methode wiederholt. Wenn die ersten solchen Aufruf führt an, dass die Ausnahme, die aus dem Aufruf der Methode zurückgegeben wird. Wenn jeder nachfolgende Aufruf von Ergebnisse in eine, die Ausnahme abgefangen und behandelt, als wäre er Ende der Datei; die Bytes gelesen bis zu dieser Option zeigen Sie in gespeichert und die Anzahl von Bytes lesen, bevor die Ausnahme aufgetreten ist, wird zurückgegeben. Die standardmäßige Implementierung dieser Methode blockiert, bis die angeforderte Menge von Eingabedaten gelesen wurden, Ende der Datei erkannt wird oder eine Ausnahme ausgelöst. Unterklassen werden empfohlen, eine effizientere Implementierung dieser Methode bereitstellen.</p>
      <p></p>
    syntax:
      content: 'public int read(final byte[] b, final int off, final int len)'
      parameters:
        - id: b
          type: f549433f
          description: '<p>Ein <code>byte</code> Array, das den Puffer darstellt, in das die Daten gelesen werden. </p>'
        - id: 'off'
          type: cd225469
          description: '<p>Ein <code>int</code> der Startoffset in der stellt die <code>byte</code> array, an dem die Daten geschrieben werden. </p>'
        - id: len
          type: cd225469
          description: <p>Ein <code>int</code> der die maximale Anzahl der zu lesenden Bytes darstellt.</p>
      return:
        type: f75371fa
        description: '<p>Ein <code>int</code> stellt dar, die Gesamtanzahl der Bytes in den Puffer oder -1, lesen, wenn keine Daten mehr vorhanden ist, da das Ende des Streams erreicht wurde.</p>'
    exceptions:
      - type: cbf33bbe
        description: '<p>Wenn das erste Byte kann nicht aus irgendeinem Grund als dem Ende der Datei gelesen werden, oder der Eingabestreams geschlossen wurde, oder wenn eine andere e/a-Fehler auftritt. </p>'
      - type: 17c54119
        description: <p>Wenn die <code>byte</code> Array <code>b</code> ist null. </p>
      - type: 473ec288
        description: '<p>Wenn <code>off</code> negativ ist, <code>len</code> negativ ist, oder <code>len</code> ist größer als <code>b.length - off</code>. </p>'
  - uid: com.microsoft.azure.storage.file._file_input_stream.reset()
    id: reset()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: reset()
    nameWithType: FileInputStream.reset()
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.reset()
    overload: com.microsoft.azure.storage.file._file_input_stream.reset*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 492
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>Verschiebt dieses Streams auf die Position zum Zeitpunkt der letzten Aufruf die Markierung-Methode für diesen Eingabedatenstrom. Beachten Sie, dass Neupositionieren der das Lesen, dass der Stream, Datei MD5-Überprüfung deaktiviert wird.</p>
      <p></p>
    syntax:
      content: public synchronized void reset()
      return:
        type: 5c0b90ca
    exceptions:
      - type: cbf33bbe
        description: <p>Wenn in diesem Datenstrom nicht markiert wurde oder die Markierung ungültig geworden ist. </p>
  - uid: com.microsoft.azure.storage.file._file_input_stream.skip(final long)
    id: skip(final long)
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    langs:
      - java
    name: skip(final long n)
    nameWithType: FileInputStream.skip(final long n)
    fullName: synchronized long com.microsoft.azure.storage.file.FileInputStream.skip(final long n)
    overload: com.microsoft.azure.storage.file._file_input_stream.skip*
    type: Method
    source:
      remote: *ref_0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/FileInputStream.java
      startLine: 514
    package: com.microsoft.azure.storage.file
    summary: |-
      <p>Überspringt und verwirft n Bytes an Daten aus diesen Eingabedatenstrom. Skip-Methode kann eine Vielzahl von Gründen, annehmen überspringen einige kleinere Anzahl von Bytes, die möglicherweise 0. Dies kann aus einer Reihe von Bedingungen führen. Ende der Datei zu erreichen, bevor n Bytes übersprungen wurden, ist nur eine Möglichkeit. Die tatsächliche Anzahl von Bytes, die übersprungen wird zurückgegeben. Wenn n negativ ist, werden keine Bytes übersprungen.</p>
      <p>Beachten Sie, dass Neupositionieren der das Lesen, dass der Stream, Datei MD5-Überprüfung deaktiviert wird.</p>
      <p></p>
    syntax:
      content: public synchronized long skip(final long n)
      parameters:
        - id: 'n'
          type: 4c60ae65
          description: <p>Ein <code>long</code> der die Anzahl der zu überspringenden Bytes darstellt. </p>
      return:
        type: ab67f27f
references:
  - uid: 93de0ef9com.microsoft.azure.storage.file._cloud_file
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.storage.file._cloud_file
        name: CloudFile
        fullName: com.microsoft.azure.storage.file.CloudFile
        href: com.microsoft.azure.storage.file._cloud_file.yml
  - uid: 93de0ef9com.microsoft.azure.storage._access_condition
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.storage._access_condition
        name: AccessCondition
        fullName: com.microsoft.azure.storage.AccessCondition
        href: com.microsoft.azure.storage._access_condition.yml
  - uid: 93de0ef9com.microsoft.azure.storage.file._file_request_options
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.storage.file._file_request_options
        name: FileRequestOptions
        fullName: com.microsoft.azure.storage.file.FileRequestOptions
        href: com.microsoft.azure.storage.file._file_request_options.yml
  - uid: 93de0ef9com.microsoft.azure.storage._operation_context
    spec.java:
      - name: 'final '
        fullName: 'final '
      - uid: com.microsoft.azure.storage._operation_context
        name: OperationContext
        fullName: com.microsoft.azure.storage.OperationContext
        href: com.microsoft.azure.storage._operation_context.yml
  - uid: com.microsoft.azure.storage.file._file_input_stream.FileInputStream*
    name: FileInputStream
    nameWithType: FileInputStream.FileInputStream
    fullName: com.microsoft.azure.storage.file.FileInputStream.FileInputStream
    package: com.microsoft.azure.storage.file
  - uid: cbf33bbe
    spec.java:
      - name: IOException
        fullName: IOException
  - uid: 3d3ee726
    spec.java:
      - name: synchronized int
        fullName: synchronized int
  - uid: com.microsoft.azure.storage.file._file_input_stream.available*
    name: available
    nameWithType: FileInputStream.available
    fullName: synchronized int com.microsoft.azure.storage.file.FileInputStream.available
    package: com.microsoft.azure.storage.file
  - uid: 5c0b90ca
    spec.java:
      - name: synchronized void
        fullName: synchronized void
  - uid: com.microsoft.azure.storage.file._file_input_stream.close*
    name: close
    nameWithType: FileInputStream.close
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.close
    package: com.microsoft.azure.storage.file
  - uid: cd225469
    spec.java:
      - name: final int
        fullName: final int
  - uid: com.microsoft.azure.storage.file._file_input_stream.mark*
    name: mark
    nameWithType: FileInputStream.mark
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.mark
    package: com.microsoft.azure.storage.file
  - uid: 4fc6e284
    spec.java:
      - name: boolean
        fullName: boolean
  - uid: com.microsoft.azure.storage.file._file_input_stream.markSupported*
    name: markSupported
    nameWithType: FileInputStream.markSupported
    fullName: boolean com.microsoft.azure.storage.file.FileInputStream.markSupported
    package: com.microsoft.azure.storage.file
  - uid: f75371fa
    spec.java:
      - name: int
        fullName: int
  - uid: com.microsoft.azure.storage.file._file_input_stream.read*
    name: read
    nameWithType: FileInputStream.read
    fullName: int com.microsoft.azure.storage.file.FileInputStream.read
    package: com.microsoft.azure.storage.file
  - uid: f549433f
    spec.java:
      - name: 'final byte []'
        fullName: 'final byte []'
  - uid: 17c54119
    spec.java:
      - name: NullPointerException
        fullName: NullPointerException
  - uid: 473ec288
    spec.java:
      - name: IndexOutOfBoundsException
        fullName: IndexOutOfBoundsException
  - uid: com.microsoft.azure.storage.file._file_input_stream.reset*
    name: reset
    nameWithType: FileInputStream.reset
    fullName: synchronized void com.microsoft.azure.storage.file.FileInputStream.reset
    package: com.microsoft.azure.storage.file
  - uid: 4c60ae65
    spec.java:
      - name: final long
        fullName: final long
  - uid: ab67f27f
    spec.java:
      - name: synchronized long
        fullName: synchronized long
  - uid: com.microsoft.azure.storage.file._file_input_stream.skip*
    name: skip
    nameWithType: FileInputStream.skip
    fullName: synchronized long com.microsoft.azure.storage.file.FileInputStream.skip
    package: com.microsoft.azure.storage.file
  - uid: com.microsoft.azure.storage.file._cloud_file
    parent: com.microsoft.azure.storage.file
    href: com.microsoft.azure.storage.file._cloud_file.yml
    name: CloudFile
    nameWithType: CloudFile
    fullName: com.microsoft.azure.storage.file.CloudFile
    type: Class
    summary: <p>Stellt eine Microsoft Azure-Datei dar. </p>
    syntax:
      content: public class CloudFile implements ListFileItem
  - uid: com.microsoft.azure.storage._operation_context
    parent: com.microsoft.azure.storage
    href: com.microsoft.azure.storage._operation_context.yml
    name: OperationContext
    nameWithType: OperationContext
    fullName: com.microsoft.azure.storage.OperationContext
    type: Class
    summary: '<p>Stellt die aktuelle logische Operation dar. Eine logische Operation möglicherweise eine 1: n-Beziehung mit mehreren einzelnen physischen Anforderungen. </p>'
    syntax:
      content: public class OperationContext
  - uid: com.microsoft.azure.storage.file._file_request_options
    parent: com.microsoft.azure.storage.file
    href: com.microsoft.azure.storage.file._file_request_options.yml
    name: FileRequestOptions
    nameWithType: FileRequestOptions
    fullName: com.microsoft.azure.storage.file.FileRequestOptions
    type: Class
    summary: '<p>Stellt eine Reihe von Optionen, die für eine Anforderung angegeben werden kann. </p>'
    syntax:
      content: public class FileRequestOptions
  - uid: com.microsoft.azure.storage._access_condition
    parent: com.microsoft.azure.storage
    href: com.microsoft.azure.storage._access_condition.yml
    name: AccessCondition
    nameWithType: AccessCondition
    fullName: com.microsoft.azure.storage.AccessCondition
    type: Class
    summary: <p>Stellt einen Satz von zugriffsbedingungen für Vorgänge mit den Speicherdiensten verwendet werden soll. </p>
    syntax:
      content: public class AccessCondition
  - uid: com.microsoft.azure.storage._storage_exception
    parent: com.microsoft.azure.storage
    href: com.microsoft.azure.storage._storage_exception.yml
    name: StorageException
    nameWithType: StorageException
    fullName: com.microsoft.azure.storage.StorageException
    type: Class
    summary: <p>Repräsentiert eine Ausnahme für den Microsoft Azure-Speicherdienst. </p>
    syntax:
      content: public class StorageException
  - uid: com.microsoft.azure.storage.file._file_input_stream
    parent: com.microsoft.azure.storage.file
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    name: FileInputStream
    nameWithType: FileInputStream
    fullName: com.microsoft.azure.storage.file.FileInputStream
    type: Class
    summary: <p>Stellt einen Eingabedatenstrom zum Lesen einer Ressource für die angegebene Datei. </p>
    syntax: *ref_1
  - uid: com.microsoft.azure.storage.file._file_input_stream.read()
    parent: com.microsoft.azure.storage.file._file_input_stream
    href: com.microsoft.azure.storage.file._file_input_stream.yml
    name: read()
    nameWithType: FileInputStream.read()
    fullName: int com.microsoft.azure.storage.file.FileInputStream.read()
    type: Method
    summary: |-
      <p>Liest das nächste Byte der Daten aus dem Eingabestream. Das Byte mit dem Wert wird als ein "Int" im Bereich von 0 bis 255 zurückgegeben. Wenn keine Byte verfügbar ist, da das Ende des Streams erreicht wurde, wird der Wert-1 zurückgegeben. Diese Methode blockiert, bis die Eingabedaten verfügbar ist, werden das Ende des Streams wird erkannt, oder eine Ausnahme ausgelöst.</p>
      <p></p>
    syntax: *ref_2